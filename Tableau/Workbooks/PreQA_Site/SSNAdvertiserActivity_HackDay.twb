<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0605.2307                -->
  <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/t/PreQA/workbooks/SSNAdvertiserActivity?rev=1.0' id='SSNAdvertiserActivity' path='/t/PreQA/workbooks' revision='1.0' site='PreQA' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Quarter&quot;' />
        </members>
      </column>
      <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
        <calculation class='tableau' formula='&quot;All Markets&quot;' />
        <members>
          <member value='&quot;All Markets&quot;' />
          <member value='&quot;Global Top 10&quot;' />
          <member value='&quot;Global 11 - 50&quot;' />
          <member value='&quot;Global Top 50&quot;' />
          <member value='&quot;Rest of Asia Pacific&quot;' />
          <member value='&quot;Rest of Europe&quot;' />
          <member value='&quot;Rest of Latin America&quot;' />
          <member value='&quot;Rest of Middle East&quot;' />
          <member value='&quot;Rest of North America&quot;' />
          <member value='&quot;Other&quot;' />
        </members>
      </column>
      <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OTA&quot;' />
          <member value='&quot;GDS&quot;' />
          <member value='&quot;Distinct Hotels&quot;' />
        </members>
      </column>
      <column caption='Graph Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Time&quot;'>
        <calculation class='tableau' formula='&quot;All Time&quot;' />
        <members>
          <member value='&quot;All Time&quot;' />
          <member value='&quot;Year over Year&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='advertisements' inline='true' name='mysql.41534.565411180556' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;a.id as &quot;Advertisement ID&quot;,&#13;&#10;&#9;c.advertiser_id as &quot;Advertiser ID&quot;&#13;&#10;from advertisements a&#13;&#10;left join ad_groups ag on ag.id = a.ad_group_id&#13;&#10;left join campaigns c on c.id = ag.campaign_id&#13;&#10;left join entities e on e.id = c.advertiser_id&#13;&#10;where e.ssn_channel_type = &apos;OTA&apos;&#13;&#10;and a.deleted = 0&#13;&#10;and a.paused = 0</relation>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__advertisements.tde' schema='Extract' tablename='Extract' update-time='9/12/2014 2:47:21 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='31632' timestamp-start='2014-09-12 14:47:21.406000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='budget_changes' inline='true' name='mysql.41534.586332928244' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;count(1) as &quot;Budget Changes&quot;&#13;&#10;from hotel_ssr_advertiser_changes&#13;&#10;where change_type = &apos;Budget Changed&apos; &#13;&#10;and convert_tz(created_at,&apos;UTC&apos;,&apos;America/New_York&apos;) &lt;&lt; convert_tz(CURRENT_DATE(),&apos;UTC&apos;,&apos;America/New_York&apos;)&#13;&#10;group by advertiser_id</relation>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__budget_changes.tde' schema='Extract' tablename='Extract' update-time='9/12/2014 2:47:24 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4736' timestamp-start='2014-09-12 14:47:24.610000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='advertiser_performance' inline='true' name='vertica.41422.531214282404' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;users.&quot;User Name&quot;,&#13;&#10;&#9;users.&quot;User Email&quot;,&#13;&#10;&#9;users.&quot;Is Primary User&quot;,&#13;&#10;&#9;users.&quot;Distinct Hotels&quot;,&#13;&#10;&#9;users.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;users.&quot;Known Rotator Type&quot;,&#13;&#10;&#9;users.&quot;Phone Number&quot;,&#13;&#10;&#9;users.&quot;First Auction Participation&quot;,&#13;&#10;&#9;performance.*&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;entities_to_users.*,&#13;&#10;&#9;&#9;(case when entities_to_users.&quot;User ID&quot; = primary_users.primary_user then 1 else 0 end) as &quot;Is Primary User&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Distinct Hotels&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Known Rotator Type&quot;&#13;&#10;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;e.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;e.telephone as &quot;Phone Number&quot;,&#13;&#10;&#9;&#9;&#9;(u.first_name || &apos; &apos; || u.last_name) as &quot;User Name&quot;,&#13;&#10;&#9;&#9;&#9;u.email as &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;u.id as &quot;User ID&quot;,&#13;&#10;&#9;&#9;&#9;e.first_auction_participation as &quot;First Auction Participation&quot;&#13;&#10;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;right join intent_media_production.memberships m on m.entity_id = e.id&#13;&#10;&#9;&#9;right join intent_media_production.users u on u.id = m.user_id &#13;&#10;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;and m.active = 1) entities_to_users&#13;&#10;&#9;left join &#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;m2.entity_id as entity_id, &#13;&#10;&#9;&#9;&#9;min(user_id) as primary_user &#13;&#10;&#9;&#9;from intent_media_production.memberships m2&#13;&#10;&#9;&#9;where m2.active = 1&#13;&#10;&#9;&#9;group by m2.entity_id) primary_users &#13;&#10;&#9;&#9;on entities_to_users.&quot;Advertiser ID&quot; = primary_users.entity_id&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;u.email &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;count(e.name) as &quot;Distinct Hotels&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;onlinemarketing@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pahler@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;diego@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michael.anthony@orbitz.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Michael.Anthony@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matta@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbarnes@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbayles@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rentalmarketing@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@courtyardsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@hardrockhotelsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@jollyrogerhotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@portofinoinnanaheim.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@ramadaplazasd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sagarb@tarsadia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;santiago.casillas@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brad.chamberlin@rrpartners.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;danushka.chandrasekaram@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mchapur@allinclusivecollection.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;keoni@columbiasussex.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sclough@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;amyd@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tfarber@hvmg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;todd@hiresortlbv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;krista.hallecy@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matthew.harrison@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;carol.helbling@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyndhamvo.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jhope@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;george.hunter@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lhynie@troplv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@hrhaic.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@meridiencancun.com.mx&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seank@investorshm.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seankane@q.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;price.karr@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robyn.kinard@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;fkreitman@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tlabie@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;CLaRosa@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rachel.lerner@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gordon@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Orbitz@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Travelocity@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;angela.lundquist@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;benensonrofar.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;chatham.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smaines@ih-corp.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@caesars.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@lasvegas.harrahs.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susanm@myhospitality.org&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lisa.moore@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eric.ettlin@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;wmitchell@imagehotels.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;liana@antlersvail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jusmoore@hotwire.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dphillips@montereyplazahotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;info@beaconlightguesthouse.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sphillips@himonroeville.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;darren@mhgrp.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;willpowell@myrtlewoodvillas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Paul.Powell@whotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lee@cpfcc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;reservations@rentavilladisney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lirodriguez@bernhotelspanama.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;emily@kayak.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm.dtw@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gm@castlehillresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jertl@wigwamresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sarah.smith@acepllc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nicole.smith2@ihg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brandons@arizonabiltmore.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ssmith2@destinationhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;hiexcapecoral@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jsmith@fhginc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jil@hollywoodbeachgolf.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jason.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pam.smith@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;NSmith@montelucia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;francess@naplesgolfresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Daniel.smith@regenthotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michelle.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tsmith@zimmerman.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;starla.smith@hyattfrenchquarter.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ksmith@highwiremarketing.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ahdream.smith@digitas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ashsmith@hotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;k_smith9@hotmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;generalmanager@baymontew.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lee.Smith@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kristin.spitz@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charlottedyoung@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nyoung@loewshotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Strategic Accounts&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ann@bgsolutions.me&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charles.bido@melia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jalleruzzo@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;laine.mizuno@astonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lmarino@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;madisonwest.wi@americinn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smetovic@rpmadv.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1 else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Known Rotators&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Known Rotator Type&quot;&#13;&#10;&#9;&#9;from intent_media_production.users u&#13;&#10;&#9;&#9;left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;&#9;&#9;left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;and m.active = 1&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;u.first_name || &apos; &apos; || u.last_name,&#13;&#10;&#9;&#9;&#9;u.email) hotel_count&#13;&#10;&#9;on entities_to_users.&quot;User Email&quot; = hotel_count.&quot;User Email&quot;) users&#13;&#10;left join &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;isra.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;e.last_auction_participation as &quot;Last Auction Participation&quot;,&#13;&#10;&#9;&#9;e.name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;&#9;isra.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;imhpm.intent_media_market_id as &quot;Market ID&quot;, &#9;&#13;&#10;&#9;&#9;ifnull(imm.name , &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;&#9;&#9;ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment Name&quot;,&#13;&#10;&#9;&#9;z.can_serve_ads as &quot;Can Serve Ads&quot;,&#13;&#10;&#9;&#9;(case isra.advance_purchase_range_type&#13;&#10;&#9;&#9;&#9;when &apos;WEEKDAY_TRAVEL_LESS_THAN_OR_EQUAL_TO_21_DAYS&apos; then &apos;Weekdays within 21 Days&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKEND_TRAVEL_LESS_THAN_OR_EQUAL_TO_21_DAYS&apos; then &apos;Weekends within 21 Days&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKDAY_TRAVEL_GREATER_THAN_21_DAYS&apos; then &apos;Weekdays 22+ Days Away&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKEND_TRAVEL_GREATER_THAN_21_DAYS&apos; then &apos;Weekends 22+ Days Away&apos;&#13;&#10;&#9;&#9;&#9;when &apos;DATELESS&apos; then &apos;Dateless&apos;&#13;&#10;&#9;&#9;&#9;else isra.advance_purchase_range_type&#13;&#10;&#9;&#9;end) as &quot;Travel Window&quot;,&#13;&#10;&#9;&#9;atwra.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;&#9;atwra.click_conversion_count as &quot;Click Conversions&quot;,&#13;&#10;&#9;&#9;atwra.actual_cpc_sum as Spend,&#13;&#10;&#9;&#9;atwra.click_conversion_value_sum as &quot;Click Conversion Value Sum&quot;,&#13;&#10;&#9;&#9;atwra.exposed_conversion_count as &quot;Exposed Conversion Count&quot;,&#13;&#10;&#9;&#9;atwra.exposed_conversion_value_sum as &quot;Exposed Conversion Value Sum&quot;,&#13;&#10;&#9;&#9;atwra.click_room_nights_sum as &quot;Click Room Nights Sum&quot;,&#13;&#10;&#9;&#9;atwra.exposed_room_nights_sum as &quot;Exposed Room Nights Sum&quot;,&#13;&#10;&#9;&#9;sum(isra.impression_count) as &quot;Impressions&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_count) as &quot;Filtered Ads&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_budget_count) as &quot;Filtered Ads (Budget)&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_bid_count) as &quot;Filtered Ads (Bid)&quot;,&#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_hotel_unavailable_count) as &quot;Filtered Ads (Hotel Unavailable)&quot;&#13;&#10;&#9;from intent_media_production.impression_share_report_aggregations isra&#13;&#10;&#9;left join intent_media_production.entities e on e.id = isra.advertiser_id&#13;&#10;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;left join intent_media_production.intent_media_hotel_properties_markets imhpm on imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;&#9;left join intent_media_production.intent_media_markets imm on imm.id = imhpm.intent_media_market_id&#13;&#10;&#9;left join intent_media_production.z_hotel_ssr_advertiser_status z on isra.advertiser_id = z.advertiser_id&#13;&#10;&#9;left join &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;advance_purchase_range_type,&#13;&#10;&#9;&#9;&#9;sum(impression_count) as impression_count,&#13;&#10;&#9;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;&#9;sum(click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;&#9;sum(actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;&#9;sum(click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;&#9;sum(exposed_conversion_count) as exposed_conversion_count,&#13;&#10;&#9;&#9;&#9;sum(exposed_conversion_value_sum) as exposed_conversion_value_sum,&#13;&#10;&#9;&#9;&#9;sum(click_room_nights_sum) as click_room_nights_sum,&#13;&#10;&#9;&#9;&#9;sum(exposed_room_nights_sum) as exposed_room_nights_sum&#13;&#10;&#9;&#9;from intent_media_production.advertiser_travel_window_report_aggregations&#13;&#10;&#9;&#9;where date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) &lt;&lt;  date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;group by date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id, advance_purchase_range_type) atwra&#13;&#10;&#9;&#9;on atwra.advertiser_id = isra.advertiser_id &#13;&#10;&#9;&#9;&#9;and atwra.advance_purchase_range_type = isra.advance_purchase_range_type&#13;&#10;&#9;&#9;&#9;and  atwra.date_in_et = isra.aggregation_level_date_in_et&#13;&#10;&#9;where isra.aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;group by isra.aggregation_level_date_in_et, &#13;&#10;&#9;&#9;e.name, &#13;&#10;&#9;&#9;e.ssn_channel_type,&#13;&#10;&#9;&#9;e.last_auction_participation,&#13;&#10;&#9;&#9;isra.advertiser_id,&#13;&#10;&#9;&#9;hpa.hotel_property_id,&#13;&#10;&#9;&#9;imhpm.intent_media_market_id,&#13;&#10;&#9;&#9;ifnull(imm.report_segment, &apos;Other&apos;),&#13;&#10;&#9;&#9;ifnull(imm.name , &apos;Other&apos;),&#13;&#10;&#9;&#9;z.can_serve_ads,&#13;&#10;&#9;&#9;isra.advance_purchase_range_type,&#13;&#10;&#9;&#9;atwra.impression_count,&#13;&#10;&#9;&#9;atwra.click_count,&#13;&#10;&#9;&#9;atwra.click_conversion_count,&#13;&#10;&#9;&#9;atwra.actual_cpc_sum,&#13;&#10;&#9;&#9;atwra.click_conversion_value_sum,&#13;&#10;&#9;&#9;atwra.exposed_conversion_count,&#13;&#10;&#9;&#9;atwra.exposed_conversion_value_sum,&#13;&#10;&#9;&#9;atwra.click_room_nights_sum,&#13;&#10;&#9;&#9;atwra.exposed_room_nights_sum) performance&#13;&#10;on users.&quot;Advertiser ID&quot; = performance.&quot;Advertiser ID&quot;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.0%' name='[% Coverage Loss]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Availability]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Hotel Unavailable)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Bid]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Bid)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Budget)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='date' name='[1 Day Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -1, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[30 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -30, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[31 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -31, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[60 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -60, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[7 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -7, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;' value='Number of Active OTA Ads' />
          <alias key='&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;' value='Number of Budget Changes' />
          <alias key='&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;' value='Number of Days Active' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;' value='Clicked Revenue' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;' value='Click Room Nights' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;' value='Exposed Conversions' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;' value='Exposed Revenue' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;' value='Exposed Room Nights' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ad Coverage]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - First of Month])/sum([Clicks - First of Month])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Days Active' datatype='integer' name='[Calculation_0020917140720157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[First Auction Participation], TODAY()-1)' scope-isolation='false' />
      </column>
      <column caption='ID' datatype='integer' name='[Calculation_1151030171422328]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='real' datatype-customized='true' name='[Can Serve Ads]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Click Conversion Value Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Click ROI Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Click ROI] &lt; 2 THEN &quot;1:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 3 THEN &quot;2:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 4 THEN &quot;3:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 5 THEN &quot;4:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 6 THEN &quot;5:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 7 THEN &quot;6:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 8 THEN &quot;7:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 9 THEN &quot;8:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 10 THEN &quot;9:1&quot;&#13;&#10;    ELSE &quot;10+:1&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Click Room Nights Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Clicks - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [First of Month] = [Date] THEN [Clicks] END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Distinct Hotels]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Eligible Ad Count]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Filtered Ads]+[Impressions]' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss Total from Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Bid Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Est. Revenue Loss Total from Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Est. Revenue Loss from Bid Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Exposed Conversion Count]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Exposed Conversion Value Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Exposed Room Nights Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' datatype-customized='true' name='[First Auction Participation]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' name='[First of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Impression Share Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Impression Share] &lt; 0.5 THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF ISNULL([Impression Share]) THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF [Impression Share] &lt; 0.7 THEN &quot;50% to &lt;70%&quot;&#13;&#10;ELSE &quot;Greater than 70%&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Impression Share]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' />
      </column>
      <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' datatype-customized='true' name='[Last Auction Participation]' role='dimension' type='ordinal'>
      </column>
      <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Market ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Past 30 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversions] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 30 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Clicks] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 30 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversion Value Sum] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 30 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 30 Days Conversion Value Sum])/sum([Past 30 Days Spend])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 30 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Spend] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 31 - 60 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 31 - 60 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 31 - 60 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 31 - 60 Days Conversion Value Sum])/sum([Past 31 - 60 Days Spend])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 7 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 7 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 7 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Past 7 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 7 Days Conversion Value Sum])/sum([Past 7 Days Spend])' scope-isolation='false' />
      </column>
      <column caption='Past 7 Days Spend' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 7 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Percent of Budget Spent Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Percent of Budget Spent]) THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.1 THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.2 THEN &quot;10-20%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.3 THEN &quot;20-30%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.4 THEN &quot;30-40%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.5 THEN &quot;40-50%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.6 THEN &quot;50-60%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.7 THEN &quot;60-70%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.8 THEN &quot;70-80%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.9 THEN &quot;80-90%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 1.0 THEN &quot;90-100%&quot;&#13;&#10;ELSE &quot;100%+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Potential Media Revenue Gain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)])+sum([Filtered Ads (Budget)]))*sum([Spend])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[ROI % Difference]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Past 30 Days ROI]-[Past 31 - 60 Days ROI])/[Past 31 - 60 Days ROI]' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Spend - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [First of Month] = [Date] THEN [Spend] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_0020917140720157]' derivation='Max' name='[max:Calculation_0020917140720157:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Click Conversion Value Sum]' derivation='Sum' name='[sum:Click Conversion Value Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Click Room Nights Sum]' derivation='Sum' name='[sum:Click Room Nights Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversion Count]' derivation='Sum' name='[sum:Exposed Conversion Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversion Value Sum]' derivation='Sum' name='[sum:Exposed Conversion Value Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Room Nights Sum]' derivation='Sum' name='[sum:Exposed Room Nights Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads]' derivation='Sum' name='[sum:Filtered Ads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impression Share Bins]' derivation='User' name='[usr:Impression Share Bins:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__advertiser_performance.tde' schema='Extract' tablename='Extract' update-time='9/12/2014 2:47:29 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Eligible Ad Count]' formula='[Filtered Ads]+[Impressions]' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Properties in MPM]' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10455643' timestamp-start='2014-09-12 14:47:29.564000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.446174' measure-ordering='alphabetic' measure-percentage='0.407263' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[tmn:Date:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>#2012-04-01 00:00:00#</bucket>
            </map>
            <map to='#17becf'>
              <bucket>#2012-08-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2012-10-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2013-04-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2013-07-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2011-03-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2013-02-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2011-12-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2011-08-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2011-06-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2011-04-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2013-03-01 00:00:00#</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>#2012-05-01 00:00:00#</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>#2012-09-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2012-11-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2013-05-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2012-02-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2012-06-01 00:00:00#</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>#2011-09-01 00:00:00#</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>#2011-07-01 00:00:00#</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2013-08-01 00:00:00#</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>#2012-03-01 00:00:00#</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>#2012-07-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-10-01 00:00:00#</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>#2011-11-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2012-12-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2013-06-01 00:00:00#</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>#2011-05-01 00:00:00#</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>#2011-02-01 00:00:00#</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </map>
            <map to='#404040'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Budget:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Impression Share Bins:nk]' type='palette'>
            <map to='#309343'>
              <bucket>&quot;Less than 50\%&quot;</bucket>
            </map>
            <map to='#d82526'>
              <bucket>&quot;Greater than 70\%&quot;</bucket>
            </map>
            <map to='#ffc156'>
              <bucket>&quot;50\% to &lt;70\%&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
            <member value='&quot;Distinct Hotels&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='mysql.41534.565411180556'>
        <column datatype='integer' name='[Advertisement ID]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Advertisement ID]' derivation='Count' name='[cnt:Advertisement ID:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='mysql.41534.586332928244'>
        <column datatype='integer' name='[Budget Changes]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Budget Changes]' derivation='Max' name='[max:Budget Changes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41534.409827615738'>
        <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[Aggregated Budget]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IFNULL(SUM([Calculation_5810917111000078]),0)+IFNULL(SUM([Calculation_0211011162411911]),0)+IFNULL(MAX([Calculation_2131011162824636]),0)' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='hotel_status_changes' inline='true' name='vertica.41534.409827615738' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;users.&quot;Advertiser ID&quot;,&#13;&#10;&#9;users.&quot;Phone Number&quot;,&#13;&#10;&#9;users.&quot;User Name&quot;,&#13;&#10;&#9;users.&quot;User Email&quot;,&#13;&#10;&#9;users.&quot;User ID&quot;,&#13;&#10;&#9;users.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;users.&quot;Channel Status&quot;,&#13;&#10;&#9;users.&quot;Is Primary User&quot;,&#13;&#10;&#9;users.&quot;Distinct Hotel Properties&quot;,&#13;&#10;&#9;users.&quot;Distinct Entities&quot;,&#13;&#10;&#9;users.&quot;User First Auction Participation&quot;,&#13;&#10;&#9;users.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;users.&quot;Known Rotator Type&quot;,&#13;&#10;&#9;(case when users.&quot;User First Auction Participation&quot; = status_changes.&quot;First Auction Participation&quot; then 1 else 0 end) as &quot;First Advertiser for User&quot;,&#13;&#10;&#9;(case when users.&quot;User First Auction Participation&quot; = hotel_property_status_changes.&quot;First Auction Participation&quot; then 1 else 0 end) as &quot;First Hotel Property for User&quot;,&#13;&#10;&#9;ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;&#9;ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment Name&quot;,&#13;&#10;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;z.can_serve_ads as &quot;Can Serve Ads&quot;,&#13;&#10;&#9;status_changes.Date,&#13;&#10;&#9;status_changes.&quot;Advertiser Name&quot;,&#13;&#10;&#9;status_changes.&quot;Sold Date&quot;,&#13;&#10;&#9;status_changes.&quot;Is New&quot;,&#13;&#10;&#9;status_changes.&quot;Advertising Status&quot;,&#13;&#10;&#9;status_changes.&quot;Budget Type&quot;,&#13;&#10;&#9;status_changes.&quot;Budget&quot;,&#13;&#10;&#9;status_changes.&quot;Previous Advertising Status&quot;,&#13;&#10;&#9;status_changes.&quot;Previous Budget Type&quot;,&#13;&#10;&#9;status_changes.&quot;Previous Budget&quot;,&#13;&#10;&#9;(case&#13;&#10;&#9;&#9;when &quot;Is New&quot; then&#13;&#10;&#9;&#9;&#9;case&#13;&#10;&#9;&#9;&#9;&#9;when users.&quot;Channel Status&quot; = &apos;Latter Channel&apos; then &apos;New Channel&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Brand New Hotel&apos;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; like &apos;%Active%&apos; and &quot;Previous Advertising Status&quot; like &apos;%Paused%&apos; then&#13;&#10;&#9;&#9;&#9;case&#13;&#10;&#9;&#9;&#9;&#9;when &quot;Change Yesterday or Today&quot; then &apos;Manually Reactivated&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Reactivated No Traffic&apos;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; = &apos;Paused with Zeroed Out Non-Recurring Budget&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Paused for Budget&apos;&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; = &apos;Manually Paused&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Manually Paused&apos;&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; = &apos;Paused No Traffic&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Paused No Traffic&apos;&#13;&#10;&#9;&#9;else &apos;No Change&apos;&#13;&#10;&#9;end) as &quot;Advertising Status Change&quot;,&#13;&#10;&#9;(case &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Value&quot; &gt;&gt; 0 then &apos;Active&apos; &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Value&quot; = 0 then &apos;Paused&apos;&#13;&#10;&#9;end) as &quot;Hotel Property Advertising Status&quot;,&#13;&#10;&#9;(case &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Previous Hotel Property Advertising Status Value&quot; &gt;&gt; 0 then &apos;Active&apos; &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Previous Hotel Property Advertising Status Value&quot; = 0 then &apos;Paused&apos; &#13;&#10;&#9;end) as &quot;Previous Hotel Property Advertising Status&quot;,&#13;&#10;&#9;(case &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Is New Value&quot; &gt;&gt; 0 then &apos;New&apos;&#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Change Value&quot; &lt;&lt; 0 then &apos;Paused&apos;&#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Change Value&quot; &gt;&gt; 0 then &apos;Reactivated&apos;&#13;&#10;&#9;&#9;else &apos;No Change&apos;&#13;&#10;&#9;end) as &quot;Hotel Property Advertising Status Change&quot;&#13;&#10;from&#13;&#10;&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- BEGIN users&#13;&#10;&#9;-- gets all users for each advertiser_id, along with user attributes&#13;&#10;&#9;-------------------------&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;entities_to_users.&quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;Phone Number&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;User Name&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;User Email&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;User ID&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;Channel Status&quot;,&#13;&#10;&#9;&#9;(case when entities_to_users.&quot;User ID&quot; = primary_users.primary_user then 1 else 0 end) as &quot;Is Primary User&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Distinct Hotel Properties&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Distinct Entities&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;User First Auction Participation&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Known Rotator Type&quot;&#13;&#10;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;        -- BEGIN users/entities_to_users&#13;&#10;        -- get all users associated with each advertiser_id&#13;&#10;        -------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;e.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;e.telephone as &quot;Phone Number&quot;,&#13;&#10;&#9;&#9;&#9;(u.first_name || &apos; &apos; || u.last_name) as &quot;User Name&quot;,&#13;&#10;&#9;&#9;&#9;u.email as &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;u.id as &quot;User ID&quot;,&#13;&#10;&#9;&#9;&#9;e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;&#9;channel_types.&quot;Channel Status&quot;&#13;&#10;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;left join&#13;&#10;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;e.id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;&#9;&#9;when multi_channel_hotel_properties.hotel_property_id is null then &apos;Only Channel&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;when multi_channel_hotel_properties.min_first_auction_participation = e.first_auction_participation then &apos;First Channel&apos; &#13;&#10;&#9;&#9;&#9;&#9;&#9;else &apos;Latter Channel&apos; &#13;&#10;&#9;&#9;&#9;&#9;end) as &quot;Channel Status&quot;&#13;&#10;&#9;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;&#9;&#9;left join (select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;hpa.hotel_property_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;min(first_auction_participation) as min_first_auction_participation&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;from intent_media_production.hotel_property_advertisers hpa &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;left join intent_media_production.entities e on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;where e.active = 1 and e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;group by hpa.hotel_property_id&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;having count(e.id) &gt;&gt; 1) as multi_channel_hotel_properties&#13;&#10;&#9;&#9;&#9;on multi_channel_hotel_properties.hotel_property_id = hpa.hotel_property_id&#13;&#10;&#9;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;and e.active = 1) channel_types&#13;&#10;&#9;&#9;on channel_types.advertiser_id = e.id&#13;&#10;&#9;&#9;right join intent_media_production.memberships m on m.entity_id = e.id&#13;&#10;&#9;&#9;right join intent_media_production.users u on u.id = m.user_id &#13;&#10;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;and m.active = 1) entities_to_users&#13;&#10;&#9;&#9;-------------------------&#13;&#10;        -- END users/entities_to_users&#13;&#10;        -------------------------&#13;&#10;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN users/primary_users&#13;&#10;&#9;&#9;-- gets the primary user for each advertiser&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;m.entity_id as entity_id, &#13;&#10;&#9;&#9;&#9;min(user_id) as primary_user &#13;&#10;&#9;&#9;from intent_media_production.memberships m&#13;&#10;&#9;&#9;where m.active = 1&#13;&#10;&#9;&#9;group by m.entity_id) primary_users &#13;&#10;&#9;&#9;on entities_to_users.&quot;Advertiser ID&quot; = primary_users.entity_id&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END users/primary_users&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN users/hotel_count&#13;&#10;&#9;&#9;-- gets the number of hotel properties associated with an account and the account types&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;u.email &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;count(distinct(hpa.hotel_property_id)) as &quot;Distinct Hotel Properties&quot;,&#13;&#10;&#9;&#9;&#9;count(distinct(e.id)) as &quot;Distinct Entities&quot;,&#13;&#10;&#9;&#9;&#9;min(e.first_auction_participation at timezone &apos;America/New_York&apos;) as &quot;User First Auction Participation&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;onlinemarketing@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pahler@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;diego@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michael.anthony@orbitz.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Michael.Anthony@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matta@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbarnes@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbayles@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rentalmarketing@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@courtyardsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@hardrockhotelsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@jollyrogerhotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@portofinoinnanaheim.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@ramadaplazasd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sagarb@tarsadia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;santiago.casillas@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brad.chamberlin@rrpartners.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;danushka.chandrasekaram@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mchapur@allinclusivecollection.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;keoni@columbiasussex.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sclough@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;amyd@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tfarber@hvmg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;todd@hiresortlbv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;krista.hallecy@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matthew.harrison@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;carol.helbling@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyndhamvo.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jhope@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;george.hunter@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lhynie@troplv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@hrhaic.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@meridiencancun.com.mx&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seank@investorshm.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seankane@q.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;price.karr@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robyn.kinard@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;fkreitman@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tlabie@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;CLaRosa@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rachel.lerner@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gordon@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Orbitz@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Travelocity@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;angela.lundquist@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;benensonrofar.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;chatham.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smaines@ih-corp.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@caesars.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@lasvegas.harrahs.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susanm@myhospitality.org&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lisa.moore@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eric.ettlin@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;wmitchell@imagehotels.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;liana@antlersvail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jusmoore@hotwire.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dphillips@montereyplazahotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;info@beaconlightguesthouse.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sphillips@himonroeville.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;darren@mhgrp.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;willpowell@myrtlewoodvillas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Paul.Powell@whotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lee@cpfcc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;reservations@rentavilladisney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lirodriguez@bernhotelspanama.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;emily@kayak.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm.dtw@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gm@castlehillresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jertl@wigwamresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sarah.smith@acepllc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nicole.smith2@ihg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brandons@arizonabiltmore.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ssmith2@destinationhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;hiexcapecoral@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jsmith@fhginc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jil@hollywoodbeachgolf.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jason.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pam.smith@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;NSmith@montelucia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;francess@naplesgolfresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Daniel.smith@regenthotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michelle.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tsmith@zimmerman.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;starla.smith@hyattfrenchquarter.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ksmith@highwiremarketing.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ahdream.smith@digitas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ashsmith@hotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;k_smith9@hotmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;generalmanager@baymontew.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lee.Smith@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kristin.spitz@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charlottedyoung@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nyoung@loewshotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Strategic Accounts&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ann@bgsolutions.me&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charles.bido@melia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jalleruzzo@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;laine.mizuno@astonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lmarino@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;madisonwest.wi@americinn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smetovic@rpmadv.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1 else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Known Rotators&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Known Rotator Type&quot;&#13;&#10;&#9;&#9;from intent_media_production.users u&#13;&#10;&#9;&#9;left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;&#9;&#9;left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;&#9;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and m.active = 1&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;u.first_name || &apos; &apos; || u.last_name,&#13;&#10;&#9;&#9;&#9;u.email) hotel_count&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END users/hotel_count&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;on entities_to_users.&quot;User Email&quot; = hotel_count.&quot;User Email&quot;) users&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- END users&#13;&#10;&#9;-------------------------&#13;&#10;&#9;&#13;&#10;left join&#13;&#10;&#9;&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- BEGIN status_changes&#13;&#10;&#9;-- gets current and previous advertiser status&#13;&#10;&#9;-------------------------&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;sold.date_in_et as Date,&#13;&#10;&#9;&#9;sold.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;sold.advertiser_name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;sold.first_auction_participation_in_et as &quot;First Auction Participation&quot;,&#13;&#10;&#9;&#9;sold.sold_date_in_et as &quot;Sold Date&quot;,&#13;&#10;&#9;&#9;(case when sold.date_in_et = sold.sold_date_in_et then 1 else 0 end) as &quot;Is New&quot;,&#13;&#10;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is not null then &apos;Active&apos;&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type = &apos;MONTHLY&apos;) then &apos;Active with Zeroed Out Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then &apos;Paused with Zeroed Out Non-Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is null and budgets.effective_budget &gt;&gt;= 0.25 then &#13;&#10;&#9;&#9;&#9;&#9;(case &#13;&#10;&#9;&#9;&#9;&#9;&#9;when sold.max_change_date &gt;&gt;= sold.max_participation_date then &apos;Manually Paused&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;else &apos;Paused No Traffic&apos;&#13;&#10;&#9;&#9;&#9;&#9;end)&#13;&#10;&#9;&#9;end) as &quot;Advertising Status&quot;,&#13;&#10;&#9;&#9;budgets.budget_type as &quot;Budget Type&quot;,&#13;&#10;&#9;&#9;budgets.effective_budget as &quot;Budget&quot;,&#13;&#10;&#9;&#9;(sold.max_change_date = sold.date_in_et or sold.previous_max_change_date = (sold.date_in_et - interval &apos;1 day&apos;)) as &quot;Change Yesterday or Today&quot;,&#13;&#10;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is not null then &apos;Active&apos;&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type = &apos;MONTHLY&apos;) then &apos;Active with Zeroed Out Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then &apos;Paused with Zeroed Out Non-Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is null and previous_budgets.effective_budget &gt;&gt;= 0.25 then &#13;&#10;&#9;&#9;&#9;&#9;(case &#13;&#10;&#9;&#9;&#9;&#9;&#9;when sold.previous_max_change_date &gt;&gt;= sold.previous_max_participation_date then &apos;Manually Paused&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;else &apos;Paused No Traffic&apos;&#13;&#10;&#9;&#9;&#9;&#9;end)&#13;&#10;&#9;&#9;end) as &quot;Previous Advertising Status&quot;,&#13;&#10;&#9;&#9;previous_budgets.budget_type as &quot;Previous Budget Type&quot;,&#13;&#10;&#9;&#9;previous_budgets.effective_budget as &quot;Previous Budget&quot;&#13;&#10;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/sold&#13;&#10;&#9;&#9;-- gets max change dates, max participation dates, and sold dates for each advertiser&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.max_change_date,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.previous_max_change_date,&#13;&#10;&#9;&#9;&#9;max(case when pa.date_in_et &lt;&lt;= dates_sold_hotels_changes.date_in_et then pa.date_in_et end) as max_participation_date,&#13;&#10;&#9;&#9;&#9;max(case when pa.date_in_et &lt;&lt; dates_sold_hotels_changes.date_in_et then pa.date_in_et end) as previous_max_participation_date&#13;&#10;&#9;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN status_changes/sold/dates_sold_hotels_changes&#13;&#10;&#9;&#9;&#9;-- gets cross join of all dates and sold hotels with their max changes&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;((select&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;max(case when hsac.date_in_et &lt;&lt;= dates_sold_hotels.date_in_et then hsac.date_in_et end) as max_change_date,&#13;&#10;&#9;&#9;&#9;&#9;max(case when hsac.date_in_et &lt;&lt; dates_sold_hotels.date_in_et then hsac.date_in_et end) as previous_max_change_date&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;dates.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- dates&#13;&#10;&#9;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;&#9;distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.participating_advertisers) dates,&#13;&#10;&#9;&#9;&#9;&#9;-- sold_hotels&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;name as advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;(first_auction_participation at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;date(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities&#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and active = 1 &#13;&#10;&#9;&#9;&#9;&#9;&#9;and first_auction_participation is not null) sold_hotels&#13;&#10;&#9;&#9;&#9;where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et) dates_sold_hotels,&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- changes&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.hotel_ssr_advertiser_changes &#13;&#10;&#9;&#9;&#9;where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Campaign Status&apos;&#13;&#10;&#9;&#9;&#9;group by date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id) hsac&#13;&#10;&#9;&#9;where hsac.advertiser_id = dates_sold_hotels.advertiser_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et)&#13;&#10;&#13;&#10;&#9;&#9;union&#13;&#10;&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;cast(null as Date) as max_change_date,&#13;&#10;&#9;&#9;&#9;cast(null as Date) as previous_max_change_date&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;dates.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.sold_date_in_et&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;-- dates&#13;&#10;&#9;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;&#9;distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.participating_advertisers) dates,&#13;&#10;&#9;&#9;&#9;&#9;-- sold_hotels&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;name as advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;(first_auction_participation at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;date(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities&#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and active = 1 &#13;&#10;&#9;&#9;&#9;&#9;&#9;and first_auction_participation is not null) sold_hotels&#13;&#10;&#9;&#9;&#9;where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et) dates_sold_hotels,&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- changes&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.hotel_ssr_advertiser_changes &#13;&#10;&#9;&#9;&#9;where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Campaign Status&apos;&#13;&#10;&#9;&#9;&#9;group by date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id) hsac&#13;&#10;&#9;&#9;where dates_sold_hotels.advertiser_id not in &#13;&#10;&#9;&#9;&#9;(select distinct advertiser_id &#13;&#10;&#9;&#9;&#9;from (select&#13;&#10;&#9;&#9;&#9;&#9;date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.hotel_ssr_advertiser_changes &#13;&#10;&#9;&#9;&#9;where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Campaign Status&apos;&#13;&#10;&#9;&#9;&#9;group by date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id) null_advertiser_id)&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et)) dates_sold_hotels_changes,&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END status_changes/sold/dates_sold_hotels_changes&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN status_changes/sold/pa&#13;&#10;&#9;&#9;&#9;-- gets participating_advertisers&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;aggregation_level_date_in_et as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.participating_advertisers&#13;&#10;&#9;&#9;&#9;group by aggregation_level_date_in_et, advertiser_id) pa&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END status_changes/sold/pa&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;where pa.advertiser_id = dates_sold_hotels_changes.advertiser_id&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.max_change_date,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.previous_max_change_date) sold&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/sold&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = sold.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/pas&#13;&#10;&#9;&#9;-- gets participating advertisers for that day&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id) pas&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/pas&#13;&#10;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = pas.aggregation_level_date_in_et&#13;&#10;&#9;&#9;and sold.advertiser_id = pas.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/previous_pas&#13;&#10;&#9;&#9;-- gets participating advertisers for the previous day&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id) previous_pas&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/previous_pas&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = date(previous_pas.aggregation_level_date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;and sold.advertiser_id = previous_pas.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/budgets&#13;&#10;&#9;&#9;-- gets budgets for that day&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;and latest.latest_id = hb.id) budgets&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/budgets&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = budgets.date_in_et&#13;&#10;&#9;&#9;and budgets.advertiser_id = sold.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#9;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/previous_budgets&#13;&#10;&#9;&#9;-- gets budgets for the previous day&#13;&#10;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;and latest.latest_id = hb.id) previous_budgets&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/previous_budgets&#13;&#10;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = date(previous_budgets.date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;and previous_budgets.advertiser_id = sold.advertiser_id) status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- END status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#13;&#10;on users.&quot;Advertiser ID&quot; = status_changes.&quot;Advertiser ID&quot;&#13;&#10;&#13;&#10;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = users.&quot;Advertiser ID&quot;&#13;&#10;left join intent_media_production.intent_media_hotel_properties_markets imhpm on imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;left join intent_media_production.intent_media_markets imm on imm.id = imhpm.intent_media_market_id&#13;&#10;left join intent_media_production.z_hotel_ssr_advertiser_status z on z.advertiser_id = users.&quot;Advertiser ID&quot;&#13;&#10;left join&#13;&#10;&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- BEGIN hotel_property_status_changes&#13;&#10;&#9;-- gets current and previous hotel property status&#13;&#10;&#9;-------------------------&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;Date,&#13;&#10;&#9;&#9;&quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;min(&quot;First Auction Participation&quot;) as &quot;First Auction Participation&quot;,&#13;&#10;&#9;&#9;min(&quot;Is New Value&quot;) as &quot;Hotel Property Is New Value&quot;,&#13;&#10;&#9;&#9;max(&quot;Advertising Status Value&quot;) as &quot;Hotel Property Advertising Status Value&quot;,&#13;&#10;&#9;&#9;max(&quot;Previous Advertising Status Value&quot;) as &quot;Previous Hotel Property Advertising Status Value&quot;,&#13;&#10;&#9;&#9;sum(&quot;Advertising Status Value&quot; - &quot;Previous Advertising Status Value&quot;) as &quot;Hotel Property Advertising Status Change Value&quot;&#13;&#10;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property&#13;&#10;&#9;&#9;-- gets current and previous advertiser status with hotel property&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;sold.date_in_et as Date,&#13;&#10;&#9;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;&#9;sold.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;sold.first_auction_participation_in_et as &quot;First Auction Participation&quot;,&#13;&#10;&#9;&#9;&#9;(case when sold.date_in_et = sold.sold_date_in_et then 1 else 0 end) as &quot;Is New Value&quot;,&#13;&#10;&#9;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is not null then 1&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type = &apos;MONTHLY&apos;) then 1&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then 0&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is null and budgets.effective_budget &gt;&gt;= 0.25 then 0&#13;&#10;&#9;&#9;&#9;end) as &quot;Advertising Status Value&quot;,&#13;&#10;&#9;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is not null then 1&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type = &apos;MONTHLY&apos;) then 1&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then 0&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is null and previous_budgets.effective_budget &gt;&gt;= 0.25 then 0&#13;&#10;&#9;&#9;&#9;end) as &quot;Previous Advertising Status Value&quot;&#13;&#10;&#9;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/sold&#13;&#10;&#9;&#9;&#9;-- gets cross join of all dates and sold hotels with their max changes&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;dates.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.sold_date_in_et&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;-- dates&#13;&#10;&#9;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;&#9;distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.participating_advertisers) dates,&#13;&#10;&#9;&#9;&#9;&#9;-- sold_hotels&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;name as advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;(first_auction_participation at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;date(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities&#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and active = 1 &#13;&#10;&#9;&#9;&#9;&#9;&#9;and first_auction_participation is not null) sold_hotels&#13;&#10;&#9;&#9;&#9;where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et) sold&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/sold&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = sold.advertiser_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/pas&#13;&#10;&#9;&#9;&#9;-- gets participating advertisers for that day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id) pas&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/pas&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = pas.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and sold.advertiser_id = pas.advertiser_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/previous_pas&#13;&#10;&#9;&#9;&#9;-- gets participating advertisers for the previous day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id) previous_pas&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/previous_pas&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = date(previous_pas.aggregation_level_date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;&#9;and sold.advertiser_id = previous_pas.advertiser_id&#9;&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/budgets&#13;&#10;&#9;&#9;&#9;-- gets budgets for that day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;&#9;and latest.latest_id = hb.id) budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = budgets.date_in_et&#13;&#10;&#9;&#9;&#9;and budgets.advertiser_id = sold.advertiser_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/previous_budgets&#13;&#10;&#9;&#9;&#9;-- gets budgets for the previous day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;&#9;and latest.latest_id = hb.id) previous_budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/previous_budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = date(previous_budgets.date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;&#9;and previous_budgets.advertiser_id = sold.advertiser_id) hotel_status_changes_with_property&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;group by Date, &quot;Hotel Property ID&quot;) hotel_property_status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- END hotel_property_status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#13;&#10;on status_changes.Date = hotel_property_status_changes.Date&#13;&#10;&#9;and status_changes.&quot;Hotel Property ID&quot; = hotel_property_status_changes.&quot;Hotel Property ID&quot;&#13;&#10;&#9;and (users.&quot;Channel Status&quot; = &apos;Only Channel&apos; or users.&quot;Channel Status&quot; = &apos;First Channel&apos;)&#13;&#10;&#13;&#10;where status_changes.Date &lt;&lt; date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;' value='Avg. CPC' />
          <alias key='&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;' value='Number of Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;' value='Net Hotels' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;' value='Paused Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;' value='Active Advertisers' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
      </column>
      <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Aggregated Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Calculation_5810917111000078]),0)+IFNULL(SUM([Calculation_0211011162411911]),0)+IFNULL(MAX([Calculation_2131011162824636]),0)' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
      </column>
      <column caption='Aggregated Monthly Budget' datatype='real' name='[Calculation_0211011162411911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = [Date] AND LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Advertiser ID Dimension' datatype='integer' name='[Calculation_0681002145521444]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Advertiser ID]' scope-isolation='false' />
      </column>
      <column caption='Current Month' datatype='string' name='[Calculation_1990917143850584]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(TODAY()-1)&#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;February&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Aggregated ASAP Budget' datatype='real' name='[Calculation_2131011162824636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;asap&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='Advertising Status Value' datatype='integer' name='[Calculation_2381030155234572]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status],&apos;Active&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Paused Advertising Status Count' datatype='integer' name='[Calculation_2491002135715177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status], &apos;Paused&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Paused&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
      </column>
      <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Aggregated Daily Budget' datatype='real' name='[Calculation_5810917111000078]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;daily&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='Aggregated Monthly/ASAP Budget' datatype='real' name='[Calculation_6870917111031156]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;asap&apos; OR LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
      </column>
      <column caption='Sold Advertiser Count' datatype='integer' name='[Calculation_7421002135957628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD([Hotel Property ID])&#13;&#10;    ELSE COUNTD([Advertiser ID])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Current Advertising Status' datatype='string' name='[Current Advertiser Status]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Advertising Status] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Current Budget Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget Type] END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;DAILY&quot;' value='Daily' />
          <alias key='&quot;MONTHLY&quot;' value='Monthly' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[Current Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Month Name]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;    WHEN &quot;Quarter&quot; THEN &quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter Status Change Not Null]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[First Hotel Property for User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' name='[First of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is New]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Month Name]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Months Active]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Sold Date],TODAY())' scope-isolation='false' />
      </column>
      <column caption='Net Hotels' datatype='integer' name='[Net Hotels]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Advertiser Value])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Show Spend With Budget]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[User ID]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hotel Property ID]' derivation='CountD' name='[ctd:Hotel Property ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
      <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2491002135715177]' derivation='User' name='[usr:Calculation_2491002135715177:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7421002135957628]' derivation='User' name='[usr:Calculation_7421002135957628:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Hotels]' derivation='User' name='[usr:Net Hotels:qk]' pivot='key' type='quantitative' />
      <group name='[Inclusions (Change in Advertising Status,Segment Name,SSN Channel Type)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
          <groupfilter function='level-members' level='[none:Segment Name:nk]' />
          <groupfilter function='level-members' level='[none:SSN Channel Type:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Segment Hierarchy'>
          <field>[Segment Name]</field>
          <field>[Market Name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report_hotel_status_changes.tde' schema='Extract' tablename='Extract' update-time='9/12/2014 3:15:51 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Adjusted Budget]' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' />
            <calculation column='[Calculation_0211011162411911]' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = [Date] AND LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' />
            <calculation column='[Calculation_0681002145521444]' formula='[Advertiser ID]' />
            <calculation column='[Calculation_2131011162824636]' formula='IF LOWER([Budget Type]) = &apos;asap&apos; THEN [Budget] END' />
            <calculation column='[Calculation_5810917111000078]' formula='IF LOWER([Budget Type]) = &apos;daily&apos; THEN [Budget] END' />
            <calculation column='[Calculation_6870917111031156]' formula='IF LOWER([Budget Type]) = &apos;asap&apos; OR LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' />
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[Filter Status Change Not Null]' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Month Name]' formula='CASE MONTH(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Properties in MPM]' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
            <calculation column='[Show Spend With Budget]' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5526092' timestamp-start='2014-09-12 15:15:51.839000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.477885' group-percentage='0.0682692' measure-ordering='alphabetic' measure-percentage='0.334615' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SSN Channel Type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GDS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5631031142200138:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Reactivated&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Reactivated No Traffic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Manually Reactivated&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Paused for Budget&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;No Change&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Manually Paused&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New Channel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4991009173550856:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010 OTA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;OTA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2012 OTA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2014 GDS&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2013 GDS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2013 OTA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2014 OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2011 OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GDS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Net Hotels:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;</bucket>
            </map>
            <map to='#a5acaf'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41534.409827615738].[ctd:Hotel Property ID:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Advertising Status Change:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Paused for Budget&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Account Paused&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Reactivated&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Manually Paused&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Paused&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
            <member value='&quot;Distinct Hotels&quot;' />
          </members>
        </column>
        <column caption='Graph Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Time&quot;'>
          <calculation class='tableau' formula='&quot;All Time&quot;' />
          <members>
            <member value='&quot;All Time&quot;' />
            <member value='&quot;Year over Year&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41422.531214282404'>
        <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
        </column>
        <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
        </column>
        <column-instance column='[Calculation_9480917143657464]' derivation='User' name='[usr:Calculation_9480917143657464:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.41422.531214282404'>
      <datasources>
        <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
      </datasources>
      <datasource-dependencies datasource='vertica.41422.531214282404'>
        <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Filter for Channel Type:nk]'>
        <groupfilter function='member' level='[none:Filter for Channel Type:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Known Rotator Type:nk]'>
        <groupfilter function='level-members' level='[none:Known Rotator Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Properties in MPM:nk]'>
        <groupfilter function='level-members' level='[none:Properties in MPM:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:User Name:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:User Name:nk]' />
          <groupfilter function='empty-level' member='[none:User Name:nk]' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='vertica.41534.409827615738'>
      <datasources>
        <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
      </datasources>
      <datasource-dependencies datasource='vertica.41534.409827615738'>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Known Rotator Type:nk]'>
        <groupfilter function='level-members' level='[none:Known Rotator Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Properties in MPM:nk]'>
        <groupfilter from='&quot;1&quot;' function='range' level='[none:Properties in MPM:nk]' to='&quot;7-10&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:User Name:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:User Name:nk]' />
          <groupfilter function='empty-level' member='[none:User Name:nk]' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Active Advertisers Last Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold, Active, and Paused Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' first-period='-7' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' direction='DESC' />
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:SSN Channel Type:nk] * [vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk])</rows>
        <cols>[vertica.41534.409827615738].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Active Hotels'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold, Active, and Paused Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Paused Advertising Status Count' datatype='integer' name='[Calculation_2491002135715177]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status], &apos;Paused&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Paused&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Sold Advertiser Count' datatype='integer' name='[Calculation_7421002135957628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD([Hotel Property ID])&#13;&#10;    ELSE COUNTD([Advertiser ID])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2491002135715177]' derivation='User' name='[usr:Calculation_2491002135715177:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7421002135957628]' derivation='User' name='[usr:Calculation_7421002135957628:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[none:Hotel Property ID:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='Number of Hotels' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41534.409827615738].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[Multiple Values]</rows>
        <cols>[vertica.41534.409827615738].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Activity Report by Hotel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekly Activity Report by Hotel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Past 30 Days Click Conversions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversions] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 30 Days Clicks]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Clicks] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 30 Days Conversion Value Sum]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversion Value Sum] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 30 Days ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Past 30 Days Conversion Value Sum])/sum([Past 30 Days Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 30 Days Spend]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Spend] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 31 - 60 Days Click Conversions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 31 - 60 Days Clicks]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Conversion Value Sum]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 31 - 60 Days ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Past 31 - 60 Days Conversion Value Sum])/sum([Past 31 - 60 Days Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Spend]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[ROI % Difference]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Past 30 Days ROI]-[Past 31 - 60 Days ROI])/[Past 31 - 60 Days ROI]' scope-isolation='false' />
            </column>
            <column-instance column='[Past 30 Days Click Conversions]' derivation='Sum' name='[sum:Past 30 Days Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Clicks]' derivation='Sum' name='[sum:Past 30 Days Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Conversion Value Sum]' derivation='Sum' name='[sum:Past 30 Days Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Spend]' derivation='Sum' name='[sum:Past 30 Days Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Click Conversions]' derivation='Sum' name='[sum:Past 31 - 60 Days Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Clicks]' derivation='Sum' name='[sum:Past 31 - 60 Days Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Conversion Value Sum]' derivation='Sum' name='[sum:Past 31 - 60 Days Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Spend]' derivation='Sum' name='[sum:Past 31 - 60 Days Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days ROI]' derivation='User' name='[usr:Past 30 Days ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days ROI]' derivation='User' name='[usr:Past 31 - 60 Days ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ROI % Difference]' derivation='User' name='[usr:ROI % Difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter Status Change Not Null]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[First Hotel Property for User]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter Status Change Not Null]' derivation='None' name='[none:Filter Status Change Not Null:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Primary User]' derivation='None' name='[none:Filter for Primary User:nk]' pivot='key' type='nominal' />
            <column-instance column='[First Hotel Property for User]' derivation='None' name='[none:First Hotel Property for User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Past 30 Days ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Past 31 - 60 Days ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:ROI \% Difference:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Past 30 Days ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Past 31 - 60 Days ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:ROI \% Difference:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter from='&quot;Brand New Hotel&quot;' function='range' level='[none:Advertising Status Change:nk]' to='&quot;Reactivated No Traffic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41534.409827615738].[none:Date:ok]' direction='DESC' />
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' first-period='-7' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Filter Status Change Not Null:nk]'>
            <groupfilter function='member' level='[none:Filter Status Change Not Null:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Filter for Primary User:nk]'>
            <groupfilter function='member' level='[none:Filter for Primary User:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Filter Status Change Not Null:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Filter for Primary User:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41534.409827615738].[:Measure Names]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41534.409827615738].[none:User Email:nk]' value='168' />
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='58' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Advertiser Name:nk]' value='376' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Hotel Property ID:ok]' value='96' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41534.409827615738].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:Date:ok] / ([vertica.41534.409827615738].[none:Advertising Status Change:nk] / ([vertica.41534.409827615738].[none:Advertiser Name:nk] / ([vertica.41534.409827615738].[none:Hotel Property ID:ok] / ([vertica.41534.409827615738].[none:SSN Channel Type:nk] / ([vertica.41534.409827615738].[none:Market Name:nk] / ([vertica.41534.409827615738].[none:Segment Name:nk] / ([vertica.41534.409827615738].[none:User Name:nk] / ([vertica.41534.409827615738].[none:User Email:nk] / [vertica.41534.409827615738].[none:First Hotel Property for User:ok])))))))))</rows>
        <cols>[vertica.41534.409827615738].[:Measure Names]</cols>
        <join-lod-exclude-overrides>
          <column>[vertica.41422.531214282404].[Date]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Average Budget by Market Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Average Budget by Market - </run>
            <run>&lt;</run>
            <run>[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - First of Month]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend - First of Month])/sum([Clicks - First of Month])' scope-isolation='false' />
            </column>
            <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[CPC - First of Month]' derivation='User' name='[usr:CPC - First of Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9480917143657464]' derivation='User' name='[usr:Calculation_9480917143657464:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Advertising Status]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Budget Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
            </column>
            <column caption='Current Month' datatype='string' name='[Calculation_1990917143850584]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(TODAY()-1)&#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;February&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status]' derivation='None' name='[none:Advertising Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Budget Type]' derivation='None' name='[none:Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1990917143850584]' derivation='None' name='[none:Calculation_1990917143850584:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[avg:Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CPC - First of Month:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CPC - First of Month:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status:nk]'>
            <groupfilter function='member' level='[none:Advertising Status:nk]' member='&quot;Active&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Budget Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Budget Type:nk]' />
              <groupfilter function='member' level='[none:Budget Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2013-12-04#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[vertica.41534.409827615738].[none:Market Name:nk]' direction='ASC' />
          <sort class='manual' column='[vertica.41534.409827615738].[none:Segment Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41534.409827615738].[none:Advertising Status:nk]</column>
            <column>[vertica.41534.409827615738].[none:Budget Type:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:ok]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='width' field='[vertica.41534.409827615738].[:Measure Names]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='28' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Market Name:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[vertica.41534.409827615738].[:Measure Names]' value='bold' />
            <format attr='text-decoration' field='[vertica.41534.409827615738].[none:Budget Type:nk]' value='underline' />
            <format attr='font-weight' field='[vertica.41534.409827615738].[none:Budget Type:nk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[Multiple Values]' />
              <lod column='[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([vertica.41534.409827615738].[none:Segment Name:nk] / [vertica.41534.409827615738].[none:Market Name:nk])</rows>
        <cols>([vertica.41534.409827615738].[none:Budget Type:nk] / [vertica.41534.409827615738].[:Measure Names])</cols>
        <join-lod-include-overrides>
          <column>[vertica.41422.531214282404].[Advertiser Name]</column>
          <column>[vertica.41422.531214282404].[Known Rotator Type]</column>
          <column>[vertica.41422.531214282404].[Strategic Account Type]</column>
          <column>[vertica.41422.531214282404].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Budget and Ad Coverage by Hotel Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Budget and Ad Coverage by Hotel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource caption='budget_changes' name='mysql.41534.586332928244' />
            <datasource name='Parameters' />
            <datasource caption='advertisements' name='mysql.41534.565411180556' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='mysql.41534.565411180556'>
            <column datatype='integer' name='[Advertisement ID]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertisement ID]' derivation='Count' name='[cnt:Advertisement ID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='mysql.41534.586332928244'>
            <column datatype='integer' name='[Budget Changes]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Budget Changes]' derivation='Max' name='[max:Budget Changes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='p0.0%' name='[% Coverage Loss]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Availability]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Hotel Unavailable)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Bid]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Bid)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Budget)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Ad Coverage]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Days Active' datatype='integer' name='[Calculation_0020917140720157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[First Auction Participation], TODAY()-1)' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='real' datatype-customized='true' name='[Can Serve Ads]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Click Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Click Room Nights Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Distinct Hotels]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Eligible Ad Count]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Filtered Ads]+[Impressions]' scope-isolation='false' />
            </column>
            <column caption='Est. Revenue Loss Total from Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Est. Revenue Loss from Bid Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Budget)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Exposed Conversion Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Exposed Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Exposed Room Nights Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' datatype-customized='true' name='[Last Auction Participation]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Phone Number]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Potential Media Revenue Gain]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Bid)])+sum([Filtered Ads (Budget)]))*sum([Spend])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0020917140720157]' derivation='Max' name='[max:Calculation_0020917140720157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Can Serve Ads]' derivation='None' name='[none:Can Serve Ads:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distinct Hotels]' derivation='None' name='[none:Distinct Hotels:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Primary User]' derivation='None' name='[none:Filter for Primary User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Auction Participation]' derivation='None' name='[none:Last Auction Participation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Phone Number]' derivation='None' name='[none:Phone Number:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversion Value Sum]' derivation='Sum' name='[sum:Click Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Room Nights Sum]' derivation='Sum' name='[sum:Click Room Nights Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Count]' derivation='Sum' name='[sum:Eligible Ad Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Conversion Count]' derivation='Sum' name='[sum:Exposed Conversion Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Conversion Value Sum]' derivation='Sum' name='[sum:Exposed Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Room Nights Sum]' derivation='Sum' name='[sum:Exposed Room Nights Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads]' derivation='Sum' name='[sum:Filtered Ads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Coverage Loss]' derivation='User' name='[usr:% Coverage Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Availability]' derivation='User' name='[usr:% Filtered for Availability:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Bid]' derivation='User' name='[usr:% Filtered for Bid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Budget]' derivation='User' name='[usr:% Filtered for Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Coverage]' derivation='User' name='[usr:Ad Coverage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering (copy 2)]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering (copy)]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Budget Spent]' derivation='User' name='[usr:Percent of Budget Spent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Potential Media Revenue Gain]' derivation='User' name='[usr:Potential Media Revenue Gain:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Current Advertising Status' datatype='string' name='[Current Advertiser Status]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Advertising Status] END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Current Budget Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget Type] END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;DAILY&quot;' value='Daily' />
                <alias key='&quot;MONTHLY&quot;' value='Monthly' />
              </aliases>
            </column>
            <column datatype='real' default-format='C1033%' name='[Current Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget] END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Current Advertiser Status]' derivation='None' name='[none:Current Advertiser Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Budget Type]' derivation='None' name='[none:Current Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Budget]' derivation='Sum' name='[sum:Current Budget:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41422.531214282404].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[sum:Current Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Eligible Ad Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Availability:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Bid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Coverage Loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Potential Media Revenue Gain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Ad Coverage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41422.531214282404].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Current Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Eligible Ad Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Availability:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Bid:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Coverage Loss:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Potential Media Revenue Gain:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Ad Coverage:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Advertiser Name:nk]'>
            <groupfilter function='level-members' level='[none:Advertiser Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Filter for Primary User:nk]'>
            <groupfilter function='member' level='[none:Filter for Primary User:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[:Measure Names]</column>
            <column>[vertica.41422.531214282404].[none:Advertiser Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Primary User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41422.531214282404].[:Measure Names]' value='46' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Advertiser Name:nk]' value='336' />
            <format attr='width' field='[vertica.41422.531214282404].[none:User Email:nk]' value='196' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Distinct Hotels:ok]' value='56' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Can Serve Ads:ok]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41422.531214282404].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41422.531214282404].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41422.531214282404].[none:Advertiser Name:nk] / ([vertica.41422.531214282404].[none:Advertiser ID:ok] / ([vertica.41422.531214282404].[none:Phone Number:nk] / ([vertica.41422.531214282404].[none:Hotel Property ID:ok] / ([vertica.41422.531214282404].[none:Strategic Account Type:nk] / ([vertica.41422.531214282404].[none:User Name:nk] / ([vertica.41422.531214282404].[none:User Email:nk] / ([vertica.41422.531214282404].[none:Distinct Hotels:ok] / ([vertica.41422.531214282404].[none:Can Serve Ads:ok] / ([vertica.41422.531214282404].[none:Last Auction Participation:ok] / ([vertica.41422.531214282404].[none:SSN Channel Type:nk] / ([vertica.41534.409827615738].[none:Current Advertiser Status:nk] / [vertica.41534.409827615738].[none:Current Budget Type:nk]))))))))))))</rows>
        <cols>[vertica.41422.531214282404].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Budget and Impression Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Impression Share Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Impression Share] &lt; 0.5 THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF ISNULL([Impression Share]) THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF [Impression Share] &lt; 0.7 THEN &quot;50% to &lt;70%&quot;&#13;&#10;ELSE &quot;Greater than 70%&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Impression Share]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Percent of Budget Spent Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Percent of Budget Spent]) THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.1 THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.2 THEN &quot;10-20%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.3 THEN &quot;20-30%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.4 THEN &quot;30-40%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.5 THEN &quot;40-50%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.6 THEN &quot;50-60%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.7 THEN &quot;60-70%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.8 THEN &quot;70-80%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.9 THEN &quot;80-90%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 1.0 THEN &quot;90-100%&quot;&#13;&#10;ELSE &quot;100%+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='CountD' name='[ctd:Advertiser Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impression Share Bins]' derivation='User' name='[usr:Impression Share Bins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impression Share]' derivation='User' name='[usr:Impression Share:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Budget Spent Bins]' derivation='User' name='[usr:Percent of Budget Spent Bins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent of Budget Spent]' derivation='User' name='[usr:Percent of Budget Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[vertica.41422.531214282404].[none:Advertiser Name:nk]' direction='DESC' using='[vertica.41422.531214282404].[usr:Impression Share:qk]'>
          </sort>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Greater than 70\%&quot;</bucket>
              <bucket>&quot;50\% to &lt;70\%&quot;</bucket>
              <bucket>&quot;Less than 50\%&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt; 10\%&quot;</bucket>
              <bucket>&quot;10-20\%&quot;</bucket>
              <bucket>&quot;20-30\%&quot;</bucket>
              <bucket>&quot;30-40\%&quot;</bucket>
              <bucket>&quot;40-50\%&quot;</bucket>
              <bucket>&quot;60-70\%&quot;</bucket>
              <bucket>&quot;80-90\%&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='Number of Hotels' />
            <format attr='subtitle' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' />
              <lod column='[vertica.41422.531214282404].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41422.531214282404].[ctd:Advertiser Name:qk]</rows>
        <cols>[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Advertiser Name]</column>
          <column>[vertica.41534.409827615738].[Date]</column>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
          <column>[vertica.41534.409827615738].[Strategic Account Type]</column>
          <column>[vertica.41534.409827615738].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Hotel Status Changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='true' />
            <encoding attr='space' class='1' field='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41534.409827615738].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='color' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='Change in Advertising&#10;Status'>
              <formatted-text>
                <run>Change in Advertising&#10;Status</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' y-axis-name='[vertica.41534.409827615738].[sum:Advertiser Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0340936183929443' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[sum:Advertiser Value:qk] + [vertica.41534.409827615738].[sum:Advertiser Value:qk])</rows>
        <cols>[vertica.41534.409827615738].[none:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hotel Status Changes Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
              <bucket>&quot;New Channel&quot;</bucket>
              <bucket>&quot;Manually Reactivated&quot;</bucket>
              <bucket>&quot;Reactivated No Traffic&quot;</bucket>
              <bucket>&quot;Manually Paused&quot;</bucket>
              <bucket>&quot;Paused for Budget&quot;</bucket>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[none:Segment Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41534.409827615738].[none:Segment Name:nk]' value='92' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='-90' />
            <format attr='font-size' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='9' />
            <format attr='text-orientation' field='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' value='0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='2' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[vertica.41534.409827615738].[none:Segment Name:nk]</rows>
        <cols total='true'>([vertica.41534.409827615738].[none:SSN Channel Type:nk] / [vertica.41534.409827615738].[none:Calculation_5631031142200138:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Impressions by Travel Window'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Travel Window]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel Window]' derivation='None' name='[none:Travel Window:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41422.531214282404].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[:Measure Names]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='Ad Calls' />
            <format attr='subtitle' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41422.531214282404].[usr:Click ROI:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[vertica.41422.531214282404].[Multiple Values]' value='54' />
            <format attr='width' field='[vertica.41422.531214282404].[usr:Click ROI:qk]' value='54' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[vertica.41422.531214282404].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[vertica.41422.531214282404].[usr:Click ROI:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41422.531214282404].[Multiple Values] + [vertica.41422.531214282404].[usr:Click ROI:qk])</rows>
        <cols>[vertica.41422.531214282404].[none:Travel Window:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manually Paused'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;OTA&quot;' />
                <member value='&quot;GDS&quot;' />
                <member value='&quot;Distinct Hotels&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Manually Paused&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manually Reactivated'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Manually Reactivated&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Net Hotels and ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Net Hotels' datatype='integer' name='[Net Hotels]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Hotels]' derivation='User' name='[usr:Net Hotels:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Advertiser Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Net Hotels:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='3' first-period='-1' include-future='true' include-null='false' last-period='0' period-type='year' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='ROI' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41534.409827615738].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
            <format attr='break-on-special' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
            <format attr='show-null-value-warning' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[vertica.41534.409827615738].[usr:Net Hotels:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[vertica.41534.409827615738].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[usr:Net Hotels:qk] + [vertica.41534.409827615738].[Multiple Values])</rows>
        <cols>[vertica.41534.409827615738].[none:Date Axis:qk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41422.531214282404].[Known Rotator Type]</column>
          <column>[vertica.41422.531214282404].[Market Name]</column>
          <column>[vertica.41422.531214282404].[Strategic Account Type]</column>
          <column>[vertica.41422.531214282404].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New (New Channel or Brand New Hotel)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Brand New Hotel&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;New Channel&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused Hotels by Months Active'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Months Active]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Sold Date],TODAY())' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[ID]' derivation='CountD' name='[ctd:ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Months Active]' derivation='None' name='[none:Months Active:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused for Budget&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused No Traffic&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='3' first-period='-1' include-future='true' include-null='false' last-period='0' period-type='year' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[ctd:ID:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Months Active:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused Hotels by ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column caption='ID' datatype='integer' name='[Calculation_1151030171422328]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Click ROI Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Click ROI] &lt; 2 THEN &quot;1:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 3 THEN &quot;2:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 4 THEN &quot;3:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 5 THEN &quot;4:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 6 THEN &quot;5:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 7 THEN &quot;6:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 8 THEN &quot;7:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 9 THEN &quot;8:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 10 THEN &quot;9:1&quot;&#13;&#10;    ELSE &quot;10+:1&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1151030171422328]' derivation='CountD' name='[ctd:Calculation_1151030171422328:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1151030171422328]' derivation='None' name='[none:Calculation_1151030171422328:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click ROI Bins]' derivation='User' name='[usr:Click ROI Bins:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[vertica.41422.531214282404].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused for Budget&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused No Traffic&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[vertica.41422.531214282404].[none:Calculation_1151030171422328:ok]' />
              <lod column='[vertica.41534.409827615738].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#acacac' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41422.531214282404].[ctd:Calculation_1151030171422328:qk]</rows>
        <cols>[vertica.41422.531214282404].[usr:Click ROI Bins:nk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Date]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Paused No Traffic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;OTA&quot;' />
                <member value='&quot;GDS&quot;' />
                <member value='&quot;Distinct Hotels&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Paused No Traffic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused for Budget'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Paused for Budget&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Reactivated No Traffic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated No Traffic&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Spend vs. Budget'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Show Spend With Budget]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Show Spend With Budget]' derivation='None' name='[none:Show Spend With Budget:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[vertica.41422.531214282404].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Show Spend With Budget:nk]'>
            <groupfilter function='member' level='[none:Show Spend With Budget:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Show Spend With Budget:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.41422.531214282404].[sum:Spend:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[vertica.41422.531214282404].[sum:Spend:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41422.531214282404].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[vertica.41422.531214282404].[sum:Spend:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[sum:Adjusted Budget:qk] + [vertica.41422.531214282404].[sum:Spend:qk])</rows>
        <cols>[vertica.41422.531214282404].[twk:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
          <column>[vertica.41534.409827615738].[SSN Channel Type]</column>
          <column>[vertica.41534.409827615738].[Strategic Account Type]</column>
          <column>[vertica.41534.409827615738].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Advertiser Data' tab-color='#d7e9ff'>
      <repository-location id='AdvertiserData' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='4000' minheight='1200' minwidth='4000' />
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' type='layout-basic' w='99900' x='0' y='0'>
              <zone h='100000' id='7' name='Budget and Ad Coverage by Hotel Data' show-title='true' w='90975' x='8925' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='5125' x='0' y='0'>
                <zone h='4582' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='5125' x='0' y='0'>
                </zone>
                <zone h='4249' id='13' param='[Parameters].[Market]' type='paramctrl' w='5125' x='0' y='4582'>
                </zone>
                <zone h='4249' id='14' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Date:qk]' type='filter' w='5125' x='0' y='8831'>
                </zone>
                <zone h='4249' id='20' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' w='5125' x='0' y='13080'>
                </zone>
                <zone h='6916' id='12' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' w='5125' x='0' y='17329'>
                </zone>
                <zone h='6916' id='18' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Known Rotator Type:nk]' type='filter' w='5125' x='0' y='24245'>
                </zone>
                <zone h='11416' id='16' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Properties in MPM:nk]' type='filter' w='5125' x='0' y='31161'>
                </zone>
                <zone h='3999' id='15' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' w='5125' x='0' y='42577'>
                </zone>
              </zone>
              <zone h='100000' id='19' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:User Name:nk]' type='filter' w='3800' x='5125' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Budget, Spend, and Coverage' tab-color='#d7e9ff'>
      <repository-location id='BudgetSpendandCoverage' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='25' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='24' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='72335' x='0' y='5000'>
                <zone h='47500' id='10' name='Impressions by Travel Window' show-title='true' w='36167' x='36168' y='52500'>
                </zone>
                <zone h='43500' id='19' name='Spend vs. Budget' show-title='true' w='36168' x='0' y='52500'>
                </zone>
                <zone h='4000' id='21' name='Spend vs. Budget' param='[vertica.41422.531214282404].[:Measure Names]' type='color' w='36168' x='0' y='96000'>
                </zone>
                <zone h='47500' id='33' name='Budget and Impression Share' show-title='true' w='72335' x='0' y='5000'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='14' is-fixed='true' type='layout-basic' w='13333' x='72335' y='5000'>
                <zone h='95000' id='4' param='vert' type='layout-flow' w='13333' x='72335' y='5000'>
                  <zone h='6375' id='28' param='[Parameters].[Parameter 1]' type='paramctrl' w='13333' x='72335' y='5000'>
                  </zone>
                  <zone h='6375' id='17' param='[Parameters].[Market]' type='paramctrl' w='13333' x='72335' y='11375'>
                  </zone>
                  <zone h='6375' id='12' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Date:qk]' type='filter' w='13333' x='72335' y='17750'>
                  </zone>
                  <zone h='10375' id='23' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' w='13333' x='72335' y='24125'>
                  </zone>
                  <zone h='10375' id='35' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Known Rotator Type:nk]' type='filter' w='13333' x='72335' y='34500'>
                  </zone>
                  <zone h='17125' id='27' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Properties in MPM:nk]' type='filter' w='13333' x='72335' y='44875'>
                  </zone>
                  <zone h='15375' id='11' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[:Measure Names]' type='color' w='13333' x='72335' y='62000'>
                  </zone>
                </zone>
              </zone>
              <zone h='95000' id='34' name='Spend vs. Budget' param='[vertica.41422.531214282404].[none:User Name:nk]' type='filter' w='13999' x='85668' y='5000'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Market Data' tab-color='#d7e9ff'>
      <repository-location id='MarketData' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1000' maxwidth='1400' minheight='1000' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='85455' x='0' y='0'>
            <zone h='100000' id='7' param='horz' type='layout-flow' w='74026' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='74026' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='74026' x='0' y='0'>
                  <zone h='100000' id='1' name='Average Budget by Market Data' show-title='true' w='74026' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='8' is-fixed='true' param='vert' type='layout-flow' w='11429' x='74026' y='0'>
              <zone h='1200' id='10' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[Number of Properties]' type='filter' w='11429' x='74026' y='0'>
              </zone>
              <zone h='5100' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='11429' x='74026' y='1200'>
              </zone>
              <zone h='13700' id='11' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='11429' x='74026' y='6300'>
              </zone>
              <zone h='8300' id='13' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='11429' x='74026' y='20000'>
              </zone>
              <zone h='8300' id='14' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='11429' x='74026' y='28300'>
              </zone>
            </zone>
          </zone>
          <zone h='100000' id='16' type='layout-flow' w='14545' x='85455' y='0'>
            <zone h='100000' id='15' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='14545' x='85455' y='0'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='ROI and Churn' tab-color='#d7e9ff'>
      <repository-location id='ROIandChurn' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='20' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='70918' x='0' y='5000'>
                <zone h='47500' id='1' name='Net Hotels and ROI' show-title='true' w='70918' x='0' y='5000'>
                </zone>
                <zone h='43500' id='10' name='Paused Hotels by Months Active' show-title='true' w='36051' x='0' y='52500'>
                </zone>
                <zone h='4000' id='15' type='text' w='36051' x='0' y='96000'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='8'>Months Active</run>
                  </formatted-text>
                </zone>
                <zone h='47500' id='28' type='empty' w='34867' x='36051' y='52500'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='17' is-fixed='true' type='layout-basic' w='13333' x='70918' y='5000'>
                <zone h='95000' id='4' param='vert' type='layout-flow' w='13333' x='70918' y='5000'>
                  <zone h='6375' id='27' param='[Parameters].[Parameter 1]' type='paramctrl' w='13333' x='70918' y='5000'>
                  </zone>
                  <zone h='6375' id='8' param='[Parameters].[Market]' type='paramctrl' w='13333' x='70918' y='11375'>
                  </zone>
                  <zone h='6375' id='19' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='13333' x='70918' y='17750'>
                  </zone>
                  <zone h='6375' id='9' param='[Parameters].[Aggregated By]' type='paramctrl' w='13333' x='70918' y='24125'>
                  </zone>
                  <zone h='10375' id='7' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='13333' x='70918' y='30500'>
                  </zone>
                  <zone h='17125' id='22' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='13333' x='70918' y='40875'>
                  </zone>
                  <zone h='10375' id='31' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='13333' x='70918' y='58000'>
                  </zone>
                  <zone h='10375' id='32' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='13333' x='70918' y='68375'>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='177' h='95000' id='33' is-fixed='true' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='15416' x='84251' y='5000'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Status Changes by Channel' tab-color='#d7e9ff'>
      <repository-location id='StatusChangesbyChannel' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='1300' minheight='1200' minwidth='1300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3332' id='15' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96668' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3332'>
              <zone h='96668' id='3' type='layout-basic' w='74460' x='0' y='3332'>
                <zone h='32222' id='1' name='New' show-title='true' w='37232' x='0' y='3332'>
                </zone>
                <zone h='32222' id='12' name='Manually Reactivated' show-title='true' w='37228' x='37232' y='3332'>
                </zone>
                <zone h='32224' id='13' name='Paused for Budget' show-title='true' w='37228' x='37232' y='35554'>
                </zone>
                <zone h='32222' id='14' name='Manually Paused' show-title='true' w='37232' x='0' y='67778'>
                </zone>
                <zone h='32224' id='20' name='Reactivated No Traffic' show-title='true' w='37232' x='0' y='35554'>
                </zone>
                <zone h='32222' id='23' name='Paused No Traffic' show-title='true' w='37228' x='37232' y='67778'>
                </zone>
              </zone>
              <zone fixed-size='160' h='96668' id='4' is-fixed='true' param='vert' type='layout-flow' w='12308' x='74460' y='3332'>
                <zone h='4249' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='12308' x='74460' y='3332'>
                </zone>
                <zone h='4249' id='11' param='[Parameters].[Market]' type='paramctrl' w='12308' x='74460' y='7581'>
                </zone>
                <zone h='4249' id='18' param='[Parameters].[Aggregated By]' type='paramctrl' w='12308' x='74460' y='11830'>
                </zone>
                <zone h='5333' id='19' param='[Parameters].[Parameter 2]' type='paramctrl' w='12308' x='74460' y='16079'>
                </zone>
                <zone h='5499' id='8' name='New' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='12308' x='74460' y='21412'>
                </zone>
                <zone h='6916' id='24' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='12308' x='74460' y='26911'>
                </zone>
                <zone h='6916' id='25' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='12308' x='74460' y='33827'>
                </zone>
                <zone h='11416' id='6' name='New' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='12308' x='74460' y='40743'>
                </zone>
                <zone h='5249' id='10' name='New' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' w='12308' x='74460' y='52159'>
                </zone>
              </zone>
              <zone h='96668' id='26' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='12924' x='86768' y='3332'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Status Changes by Hotel' tab-color='#d7e9ff'>
      <repository-location id='StatusChangesbyHotel' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1500' maxwidth='2300' minheight='1500' minwidth='2300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='187' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8130' x='0' y='0'>
              <zone h='3668' id='15' param='[Parameters].[Parameter 1]' type='paramctrl' w='8130' x='0' y='0'>
              </zone>
              <zone h='3401' id='7' param='[Parameters].[Market]' type='paramctrl' w='8130' x='0' y='3668'>
              </zone>
              <zone h='3401' id='16' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='8130' x='0' y='7069'>
              </zone>
              <zone h='534' id='12' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Status Change:nk]' type='filter' w='8130' x='0' y='10470'>
              </zone>
              <zone h='4334' id='13' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' w='8130' x='0' y='11004'>
                <formatted-text>
                  <run>Only Show One &#10;User per Hotel</run>
                </formatted-text>
              </zone>
              <zone h='9134' id='14' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='8130' x='0' y='15338'>
              </zone>
              <zone h='5534' id='10' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='8130' x='0' y='24472'>
              </zone>
              <zone h='5534' id='18' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='8130' x='0' y='30006'>
              </zone>
              <zone h='12734' id='17' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' w='8130' x='0' y='35540'>
              </zone>
            </zone>
            <zone h='100000' id='19' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='7305' x='8130' y='0'>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='84391' x='15435' y='0'>
              <zone h='100000' id='9' name='Activity Report by Hotel' show-title='true' w='84391' x='15435' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Summary' tab-color='#d7e9ff'>
      <repository-location id='Summary' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4443' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95557' id='7' param='horz' type='layout-flow' w='100000' x='0' y='4443'>
              <zone h='95557' id='5' type='layout-basic' w='78812' x='0' y='4443'>
                <zone h='47778' id='1' name='Active Hotels' show-title='true' w='28062' x='50750' y='52222'>
                </zone>
                <zone h='47778' id='3' name='Hotel Status Changes Table' show-title='true' w='50750' x='0' y='52222'>
                </zone>
                <zone h='47779' id='4' name='Hotel Status Changes' show-title='true' w='68689' x='0' y='4443'>
                </zone>
                <zone h='20557' id='9' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='color' w='10123' x='68689' y='4443'>
                </zone>
                <zone h='27222' id='8' name='Hotel Status Changes' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='10123' x='68689' y='25000'>
                </zone>
              </zone>
              <zone fixed-size='167' h='95557' id='6' is-fixed='true' param='vert' type='layout-flow' w='10438' x='78812' y='4443'>
                <zone h='5666' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='10438' x='78812' y='4443'>
                </zone>
                <zone h='5666' id='13' param='[Parameters].[Market]' type='paramctrl' w='10438' x='78812' y='10109'>
                </zone>
                <zone h='5666' id='14' param='[Parameters].[Aggregated By]' type='paramctrl' w='10438' x='78812' y='15775'>
                </zone>
                <zone h='7332' id='16' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='10438' x='78812' y='21441'>
                </zone>
                <zone h='21221' id='20' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' w='10438' x='78812' y='28773'>
                </zone>
                <zone h='9221' id='21' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='10438' x='78812' y='49994'>
                </zone>
                <zone h='9221' id='22' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='10438' x='78812' y='59215'>
                </zone>
                <zone h='15221' id='15' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='10438' x='78812' y='68436'>
                </zone>
              </zone>
              <zone h='95557' id='19' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='10500' x='89250' y='4443'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='8333' id='18' name='Active Hotels' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='8750' x='54938' y='56444'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='83' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotel Status Changes'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card size='37' type='pages' />
            <card size='156' type='filters' />
            <card size='245' type='marks' />
            <card pane-specification-id='1' param='[vertica.41534.409827615738].[:Measure Names]' size='13' type='color' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' size='88' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:User Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotel Status Changes Table'>
      <cards>
        <edge name='left'>
          <strip size='226'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:Current Advertiser Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Segment Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Active Hotels'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Properties in MPM:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Summary'>
      <active id='3' />
      <zones>
        <zone name='Active Hotels'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes Table'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes' pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='color' />
        <zone name='Hotel Status Changes' pane-specification-id='1' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Active Hotels' pane-specification-id='2' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='New'>
      <cards>
        <edge name='left'>
          <strip size='191'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Manually Reactivated'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Reactivated No Traffic'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused for Budget'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Manually Paused'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused No Traffic'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Status Changes by Channel'>
      <active id='11' />
      <zones>
        <zone name='New'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Manually Reactivated'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused for Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Reactivated No Traffic'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused No Traffic'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone name='New' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='New' pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Activity Report by Hotel'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card size='34' type='pages' />
            <card size='239' type='filters' />
            <card size='182' type='marks' />
            <card size='109' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Only Show One User per Hotel]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Filter Status Change Not Null:nk]</field>
          <field>[vertica.41417.709767245367].[none:Filter for Primary User:nk]</field>
          <field>[vertica.41417.709767245367].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Segment Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Email:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertiser Name:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_0681002145521444:ok]</field>
          <field>[vertica.41534.409827615738].[none:Date:qk]</field>
          <field>[vertica.41534.409827615738].[none:First Hotel Property for User:ok]</field>
          <field>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Status Changes by Hotel'>
      <active id='4' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' />
        <zone name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Budget and Impression Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41422.531214282404].[none:Advertiser Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Impression Share Bins:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Spend vs. Budget'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Show Spend With Budget:nk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Properties in MPM:nk]</field>
          <field>[vertica.41422.531214282404].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impressions by Travel Window'>
      <cards>
        <edge name='left'>
          <strip size='282'>
            <card size='37' type='pages' />
            <card size='192' type='filters' />
            <card size='245' type='marks' />
            <card size='4' type='measures' />
            <card pane-specification-id='2' param='[vertica.41422.531214282404].[:Measure Names]' size='97' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41422.531214282404].[:Measure Names]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Travel Window:nk]</field>
          <field>[vertica.41422.531214282404].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Budget, Spend, and Coverage'>
      <active id='33' />
      <zones>
        <zone name='Impressions by Travel Window'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend vs. Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend vs. Budget' pane-specification-id='1' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
        <zone name='Budget and Impression Share'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Impressions by Travel Window' pane-specification-id='2' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Average Budget by Market Data'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:ok]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Segment Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Market Data'>
      <zones>
        <zone name='Average Budget by Market Data'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Budget and Ad Coverage by Hotel Data'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='typeinlist' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41534.565411180556].[none:Advertisement ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Current Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Current Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[:Measure Names]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Can Serve Ads:ok]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Distinct Hotels:ok]</field>
          <field>[vertica.41422.531214282404].[none:Filter for Primary User:nk]</field>
          <field>[vertica.41422.531214282404].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Last Auction Participation:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[none:Phone Number:nk]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Segment Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:User Email:nk]</field>
          <field>[vertica.41422.531214282404].[none:User Name:nk]</field>
          <field>[vertica.41422.531214282404].[yr:First Auction Participation:ok]</field>
          <field>[vertica.41422.531214282404].[yr:Last Auction Participation:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Advertiser Data'>
      <active id='7' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' />
        <zone mode='typeinlist' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Net Hotels and ROI'>
      <cards>
        <edge name='left'>
          <strip size='203'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is New:ok]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Previous Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[tdy:Date:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Date:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Sold Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused Hotels by Months Active'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Label - Months Active:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused Hotels by ROI'>
      <cards>
        <edge name='left'>
          <strip size='181'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41422.531214282404].[Number of Properties]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Calculation_1151030171422328:ok]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Click ROI Bins:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertiser Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:Status Change:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='ROI and Churn'>
      <zones>
        <zone name='Net Hotels and ROI'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused Hotels by Months Active'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone forceUpdate='true' name='' type='text' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone name='Net Hotels and ROI' pane-specification-id='4' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Active Advertisers Last Week'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Properties in MPM:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Date:qk]</field>
          <field>[vertica.41534.409827615738].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hotel Status Changes' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hotel Status Changes Table' width='192'>
      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
      /gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd3wcx33of9tvr/dD74W9U6RIipKoLtmS5diW
      JZc8x7Hj2Ilsx0mcYr/nRO85sR0ncYntuEi2Y6vL6hJFkRQbWEACJNE7Dtd72bvdu+3vD0BE
      O4AFYMV9/8DnsDOzM7/d3878ZuY3M4iqqlCkyKWCXu0CFLm+KSpQkQVRVKAiF0c6Fnj5pRfb
      u4fG/y0qUJGL48X/+aXOVaul8OHudncwUVSgIhfHzl13nTq8Lycqwz2nx4JJpNgLK3JRZDMM
      hSv/+MQP7tpQpZTfhF/t8hS5zug4ceDdo2fvvP8Da6t0v/jtC8UaqMiCKNpARRZEUYGKLIii
      AhVZEBMK1NHRATzT0e8e/zeZTJ6LceRICwCEvUN/eHU3yzIcL82Ocw7fSO8fXnnt7MkjgZRw
      Wctd5Bphohd26sje/g4Tr68cON2Cm0qH2t+77d4PjQwNOaoaYsEgAAx0dSK0/fDbL8TIhkYz
      H+Pp3tY9O269Q9GXC6lAKuxeue2+xkrr3oMn/+jDD505vqflhd9vveWO2OBxumS5t+uIRJfU
      uzQ9A4H1m1cP9Q/X1FSOhNiPP3xPsQK83pl4g5TJ+dEH75HYRDyPRYLekopqlIu1tLYFwglF
      UQCgdvnqzMgpnrQ6neZD+w8eO9leUlHtMGk6O8/2D4+Zjbq+/mEAVJW4vp7OTE6+5767ek8e
      OXisvb2jWyUNZkz2BTwxTuppO9bTP4SSdGS0O5VXrqrsRRaBiW58OBx22czhVE7l0xhtISHP
      ybiQiVFGByILLpcrk4xFGb661DLqj1GIKGO0RYdzMp5LxQidUc1njM4Ks57mMskxf8zlMNF6
      UybDZpJx2mDCEBVD0O72Q7sPtX3hy3/DxgLllRXhaKqxvhq52vIXWSDFcaAiC2LCBmJZdvp1
      xeMJWAwaldQxqWRFeZmiKChatFiKzGRCgXQ63dSrMs8GA4G02ZgZ3ZczLKtuagSWHY8jSRKO
      X9wEyCUkucYzurRUN2RGhSsVVZEpkiBx3FW3kiQR8mLLUmTJUFjjcNq4/ZYd47/XXMHSFLnu
      WHKz8eFoDAB0Wq1ep73aZbkRWHIKtO/QEQBYtbx5zYrlV7ssNwLFjlWRBbHkFEhRoT9VHL9c
      NJacAuUkOBRaclJfPpbcoyyOuy8uS1GBlKISLR5LToFkpahAi8nSUyAVZLVoRC8aS1OBrnYh
      biCWogIVm7BFZMkpkFKsgRaVJadAsooUa6BFZAkqULEGWkyKClRkQSw9BSqOAy0qhd054mH/
      kDeK5aMCaddoqA1rVlzhYl0+ikb04lJYgTQ0bbVa0wF/74B3dXNpPp8XRVGSJACQZfli87iE
      JJcvo/EmTFXUcXEuLaNLS3VDZlRYgQReAICK2jUrNlgYVtRoNLIsn/O4vgSH7UtIcpkyGh8H
      QlBkasxrp3jXX0YFr1ocJRbHxG/tjeX5KasAgCjF2YxFYukZ0SpAcUJ+8ViCCoQAFO3oRWNS
      gZLR4IljLQlOuoqluQLIKgCoRQVaLCYVSJFEn89/wy+VVxQg0WITtmhMKpCqyAqfTecupQd4
      HSGrQKDFJmzRmFSgYDhsdJSbqRu8eyKrxRpoMZlUIK1GF/ENMeJVLMyVoFgDLS6TCiSDunrz
      rWVG4iqW5gogq0CgRSN60ZhiRCuKJOR56Qbfdk5WgcSKTdiiMTkSvWzlGibD6jU3+Gp5ZaIJ
      u8FNvSvGZA3k7ut85aVn3An+KpbmCjBuRBebsMViUoF0BoPdUZoK+69iaa4AsooQxV7Y4jGp
      QBhBkiRBajRXsTRXAFkBsmhELx6TChQPB5LZnMtuu4qluQKMd+OLNdBiMalAZrtLT6KA3ODT
      q+O9sGINtFhMqgtOaG1Wo3yjf5tKcSBxUZlUoL6OVncohSE3+KOdmMq4wUe7rhyToz6ldSuq
      QKYpAgBy2VT3oBfY0I3nVH9djES3Blvzcn5nxc6rXZDzM6lA4aBfgymqpVJHUrTeLPF9OAiL
      6FTvT+ZKTBoMvdARvMvnTI4hIF3bTvWnw6dFRdxWsu1yZ7TAVNOc6jdv2cKLCq2hxv9dsWIF
      l0kvllP9gZbj3zuavLVU+Yf/9dCFp7pMzuQYAipcu071I27PwNgwAJKpy1rM5suX0aKkmkzg
      HexpaW3f9oHHaqwUABiNRqPRCIvqVH+NNBwock1PZbAcF83GcAQXxOvANWLSiLY4nKVl5Xry
      cnXjRQXy14azGoZcK6o8F6zK8uq1Mqckycrnf3tqrtApDmWhiEmvOXei5aKTl5GMeA189ypg
      13w3PqtmeDV/tUsxQSTD94czc4VOKpCGIsOxlE5zufyB8jKw10KVjACGXOsj0QhAHq4VBXrr
      UGsknRtxjxUMnVQggtLXVDouXw0kyHCNrPhAEZCubQ1CEUxRr5WhqrFoKiep6WyuYOikAg0P
      95/u6DfQl6sGIjHgpGugCRvvxl/DbZgIAgHXkF9oVgQEVHaOj39SgRAl31TfEM9eluO6ZRWM
      xJyFuMIgiNId67vapZgTVmF1iO788a4UWRGxa2CudzfZjd922/2qqmIYdjkKwcugI64NGwhA
      hJwvk77apZgTDlgtokshqcudkTfjPeA98KkVn5o/WlYEF62yc7QekzWQZ7Dn2OF9e46eWcwy
      vg+vAIUCXNkWLJlKP7/nyJ/+4uAMAzCuhkNs9GoZGcFskBO5eSJwKqtF9Cgg6mU+l8HLeFuD
      reeNlhURF62e+/h/2P7Dc0Ej6ZEp40BmfVffWHNDzSIXEwAAeBko7HI/kJkIojjgj7f7Mllu
      4oUpiooARNWAIMvxXPyKluZ9ftn1y0O+Q/NESCspA2IkgbocQ0GCIIajsXA0JghimAtHc9Hz
      JmElcNLquP3KCMzzA8+PX1dV9dG3Hp1UoHQmt3nrZptRv+iFBgBeRigMCBTiqczzJ0Z6PeHL
      kctsUgIkeeSc8S4qCoZATAmBigXZ4CXcMMTkASCUvvQ+dn+ivzfRm+JTvDyhHyeCJ3riPeci
      uNlRF1ZCIZRwGRQomU7vO3Rk36EjyXQqyAbD3PlfhAKgJyAjqADgy/jSfJrhGQBgBEZQhEkF
      4pjE8ZaWVO6yGLq8DBQGWhxOdA/+cE/3j18/cTlymU1KQGoMio+dUCAmJ+GomoMMidJTFeh0
      5PSF3E1R1Yd+fGQszj744yNM/oIeVJpPT20rFVURZKE/0f8fbf/x5sib4xffcb9z2Hf4XJyh
      xJAVsZNA8cDPuNVwarhgLjkpl5cuWqdDbIhACUk5jyCICjpcTXICAHgzXhqnvRkvAASyARSZ
      chS8o6z65ps20eRlWdbDy0ChUKFTd5/1IQB96UlrKByNvXq87/CZObtFWZY7V+sCgKSoeXni
      lfQGmT+0++bJN8XDaos6xqgA8PRLr3zn6d16fcCB2SlU60tP1N4j6ZHH9z8+vqtET7znvw8O
      7+0Nn9tjIsuLj775aCwXY0X21ZZOic9/7reHU2z+aK9nnnwHk4OiLALAN1u++Z7nvXPXPYyn
      2drMSVxHtOOI/8j4xYHkQHe8e/y3qIgMk0URlEJmNmFvjb710uBLBbN7quupX3X9qmCQL+Nr
      D7dPveLNIm960GSK6fX32xVXx2g3AKigclIBy+y0J6kjQIdDnBXG77bJtWlcgYJscI19zaQC
      nWlvbW9vY7jL0o3nFYTC1LU2ZV8AXWZWCRS6x0LjQZFo7OcHB184OgAAb3QEOnwzex+jY56f
      v9Hyg1da2jo6O3v6fj3q++FYGACyLPfaif6njw1nWfZcZE+C+/2JSZM5JSCrrMrB/si4fnQn
      UY2hv5FolPOlLx+qHo+ze3S3jtCNpEeGUkMff+UvjgzF3uuLfO2FM94El+bEbf+6Xxbpx/c/
      fucLdz7X3XVzRXgwll7nSp5xx+aR9xst3zjsP8xL/Bgz9sbIG+eud4b8jcb1pbrSW8pvieVi
      kiLlpTyN08l8cjzCcGrYqtoBgEQ0OZnzMJ6exETrdtR/NJlPjjd8oixOrdhOR04fDxwHAFmR
      JUVSVGW8Xkmm0v918Gc/bPlxMpUCgNH06OvDr3uyyAiDiqLI8pxOMoy3Yv2J/q8e/OpQJPvl
      Z08DgKqq/Yn+/lDmW691P1gt0zhEmTwA+DK+bWXbPBkPABzsaCnhKybrm4a6Jr2z2mG4LIfE
      jzdhegIqdGqtQa3Wq994/uQ/f2zLKx3ROiIRziE4Aqqq/mj/0K5m55oK84zkxyNoQECRM14r
      pXbUVgsGo6KoLMedGg4OptEMm9PrdADA5fL/c6D36Fh2lYv+eYvvG3dVSgroCbCh2RfbfG1R
      hJchiQ3vxG9mWKpf8sS5jI7UvNE9XEY9dsLX3c+01UoP1TsTn15fcjqY+8wvD9e4bA5rbBP9
      1Y3LI5A3f+7pU011b97auCKnCANpp6qqCIIAwMH+yKYa89OtvoCyx2oULTFXe9fyX0XfUW5V
      qrENnlhfPBe30TZW5H66h0smsbWV1s8//BCCIE/3Pr3KvgoRytl85Dc9vwNV7g7GHch6AKCA
      ahnxf9+7p8KV/NEdP+JlPpyONJqWf/PQ//7Uqk8+cfyJ2ypv+3jjnzJiIhT2xhNJbW7D/j7/
      qLg7L+ctlKUn3vN/d/xfQRTboyNpURqf2D/sP/zayKvAflZSVU4CIe/S6owZlQGAvkTf2ejZ
      nx3qfbt3+B+Y5U+dOPbcyE/KhS9++yONX9v7RLO6wsNsHImv9mf9n1j+id/0/AYAvIzPJa/G
      vvWtb42/JDbL+DwjhpI6Y6HFqaIokiQJAIqioOicM/bnnulUFEV5t8tPK5yVglUW1UKBVQMD
      aWR3h5/MJ94a5lEDkeZhmdMw7AsfC7GbVrkGIpkQy1ca6eOp7Hujgbd9olxvjKSU0TgkyvSZ
      4eyz+4eXOzRv90SrDarL4eBl1WnUJBjmu3v6ubyQF8RQVukYiwXTXLOV2bWy8Z2hbEv6bdL5
      jgUzrCTWAICZEp4ceOqp/UiFVKEXqN+cCY6ECClVP0L+4EjkQG3Wfor4aSphhNJnQt6tj67b
      9I0Xh+8qZZo0Zas1TUfkN7s9ZXt6ArfUV1E4+tgvTvzk5B8ODnl6x2iCUF717EcSd6XQkaB6
      6mjbhkTKRpp7KvTlf/LST2w52/2V6mGva11V3aaSDceCx3/V+dRA/+ZEvPZk+Kg3pnT01XIZ
      R7NJCcmx13rFXHq51TYMuZXP9r1YobGYorUDCf9+f6tL+cjb7jf3nzE8eeq9I9mf1aoNo56t
      A7HMiPyin/V7Mh5ZlfeM7TnsPXxyYBnHVt6zxiXmqd92/TKai4VjKzK6I95ovS+qGYq71jeg
      G0pXvdizv7V9S2/EY7F2v3AYPx44Y2XvoMqeCkn9NbnGDG5J6onftb6p4H6rdNe7/WPrXCve
      7t97yLcJObejVCLobu327Np1C1nIaZBlWZ1OBwCSJM3ldtR2tvNHR8MfXed64ObVU69LkvS3
      z7aWKNEKXYF+/M96sdEaK8T4Ohlqq5WDbnXL5opAe4QmsbsaHS9mmBzDOiURq9TGMDzVl6VJ
      gmOlJz+2/rvPnhyUVLxSa/YIZWb6+S/c/Lw7+r3n21ZSYnsM/epqaX8A7cyP2Cve+M+NP2JM
      8Z8c+PkD1MPn9Ls3ibwbpj+/q0ITGACAUW3/nQ2feHZf22o71yocjSihaqx2ObWjwqarqN/4
      6V+1PlIvV9MTRsl7/J7Tg3fU2nOMbK0qYdzMWCho/0CVVEM5pJI132sfe9DJ7xsbWl6mL+Xt
      oMDhfKfW4Mcid/1JI0JhcCKCWCsa2seSkqKmMmyZRhyrNINI/kmFfVu97ZeHR04OBmSEtVvM
      m2pMe7uTdodH4mqeemTD40+f8PBYCSI1GJV9IXFtuU1GtBSZiETShKoL5vm7bhtUkFwql3IJ
      nw9nU3ZLorcT4rya1ybxfBmrf4ng64I5srlM6/Hqdjb1ceKGfN7xzJ/u+Nhvn6ogyLPis1vI
      u98MJmqdHY/Qnw7Lwb3C24/Rn3lVa13Bcx1jZKeoEA7SoqTDkS6Eq9yyqnSyBpJEIeDzOsur
      NcTkYLSYy0bTrF5LX0gN1NM/SPCpZwcUWVZ+enBUi0k4TuAogiHqC23+CpLVFVI8yUzZ9YhE
      4XGnpoqSl4u5tpFsZQVU8ZnnMpIyljal8x+tFJdL+TUiByaywWHeUEu97AuMxaUSTMZrdLuM
      3ClWjoS4F4978QqCJBCVk7QV9IEKB4G+IOO6KsT8rPvp2+BuCqXGMPIFnS2DYmZM6Y3hf/3Q
      2p4R9xGN0SzaPBzXhHEkQthQxzviO6zt82/pnBtIkip1rDLmbEqmG6N6Cbqb1FbiDbeZlbvr
      Sm9dt+bNM9k6Y9fGymV6jSVKUp5Kl43MunVawqeJ8ebEMusuKkdaNvdwTbdscBxGiU5Sa9cj
      f3Pvpk1V2u0lSINelrWSoCdMDu19Ta4yUtUrjA1NOwl8a13JMTWfKtGvXL5ayiDPtQ8nVRRb
      Zf6ULlOqhTITUaYRqjFGhxAiRWpdFIVgucwyF24eDToEVheIsO1enFih76ENuURAY99Hp7cZ
      zSWKMZWv2HzL8qqTWI3foPX72p5zI96xHFlTNmbaFtJWUib+ZvLWLlLXpFD15CYZQfbR5gfy
      qUe21C6TgpVaFTHoHrCquOG9+4i6yRro6IF3FVArVt1SY6fPvd3T7W2irKxZvTqfz4/7zMqy
      PNd0R9vZTm9XajCsSQpIuVY5mAURAAfIoWqFjN7pUvFCSz4CGGlSZAbFaFUxKxIARDCCUlWT
      IvHOkmOjMYsirzVMJBQQVEPT6Xx+GNfosgIiSJiZGiA0tblcIKpY9UiVTjmB6wwZnjcpEfK/
      jHwlAVsH9f+1MnlnDbozh6AenFojcCGMCGEEyisKhQGoFkVOojgA0KpSLvE8ggYQrl7RWBTp
      FKWX3x9Bx1XVoYgaVfFhJAJQh4HFaDiZZvWylEJxACBVZYPFUJpOHJCxWFy81YSGEGWIoAGg
      UUcJomTMMgSogzidQTEEwKBItKpEMGKNwAkI0ktodaoMAByCumSxTEsP5/itfCZrcx5P8XiI
      W66XgiYtg+IIqDkEVQHBQSVUNYcgpKqqAJokz6REQovX15qHkpwiqU5arZCFM6ROVRhSRRRU
      v4PPiICM6oyVXCaDoAOonA5HMNLqsBmbxdwwoWnGkaMKrlGVPIKgAFpVKZeEGinvctjD0Zld
      h0kF8g/3vLbn0COf/qxVNzkV7BkZiGWlDWtWXEgTBgDJEMulZ/bjZEXG0Pmm2EbGPCNjHgC4
      c+eOc79XLmtCUdRiMpHERHmS6XTb2U4A2Lh2tcVkAgBB4JNMBgAsJhPZ+YwcH5Fv+8dkMgEo
      pgUF/cO/aG+7N6KWKqAiTAi6XxayKGmjhVQ0I+AJycAh+mbaR6AKiiKIY5kS7hZRWqzcgYOc
      Hzoq4kYSE4DnupJO2mRxSqOmqiatswrzHZf05Sl3d0JTgxvt5WZSGTveETVX6VIJsFtryr1p
      TUW6DVNFP9loMGoywTAm5RpqND1hnQll6unw6aiDk0kSlWXAq21KIG9oNmdFJhpgdRYqp1u2
      diSpR72ddWVIf9xsEoNp3NWkD9EqV+7SdnhAxnQNTiWR5EYThEQ7tHJCT0iRvA7EPIXJZp0i
      iko0R+NGp0X2W/FMOKeN5rWSiqmAoKDYaNGll6KKDbfXkrQ24fcxkSCgKIYiiqLQqGinWKpm
      YyTG6pDECmPYG8PMGz7Q1d7NZTK28oq412OiBAaMiijgGnpSFQQVXblyBTn9RVfVNVXN8+Zn
      YSnRWUpmziTPr3MQ6izfbLrl7g+O/5eQw0RGBoB1N9fjOA4jB+HsM7DsAchGbO2/D2rvieqa
      HbU6F8nBa18CU2Xtgz8CJginfg7CCVWTR+T3ak89Aas/og4fGnPrXJtudWEY4XQCQK5zeeDx
      P6v//hdh7aMg5Z9+fa8GQbyKaMuNVq7btWzNptee/pmT7bduv3f1iuUQ7obWX7yQ26wCutpq
      uf3OeyHUBa4VAAi0U5J/0BfQ03/7dZKiLGYz8JmtwW7cVPrSr59dnfxdLumy7/pURiVWZwZC
      KbT5rkcUBOl8/knUYWbwspB1uW1DycbUgQhZQzbsuPPWHT1P/2ucr7CWf2BFZVXbG3/gVEbM
      BMqqIJxKPnBbafnWL3WfaD3aiavxQCBOmExW16abfEGfBknf/dF7Sm7aiqoSABIacytMOMzm
      jr+5RyfG//iPt5HrP6HmWCzWDoqU8attr70e2HHXHZYQ+fJvWB91+11Br86gpr1CuAcfTAYf
      u890zxeWlVkZ35Bd8cPqjyqy9NRXPxstWZZBBKz76Q999d9MpZWk/7h06BCWDbyduSXZfFsN
      1zX5XmsbltU2LLsYbVkkMBJe/jPY8uegyGAsNXKMS6uoWgcAQNIN+5+A+/8N9v0ToDh6z/+r
      fv17UV0zZKOw73G4/3uw7wk4/Ttoewp2fA22fwU5+UvY+3/gs3sgPoTs+Kpz/YDnM3+CGo1V
      v/ols3u3FAorMiW47iAxAjACEAQAFJSI6ppcuA4AslRJlipZNV4q10ppx/+xdHQBgNFsAgB4
      P0Rd/ynvv35cRcDMspTLBQDJl94wPfQg6HQoTpy2fyiW8D388KMIy6GmR8/Z7BpCc9bjAwx7
      8I8+1NnT19mrBYDHbtsJACs+8Q/nHoaUcr/19MuKitxULWk//ri+fiugaL1jLbJ6TBUEfcdp
      5KVXdGZX8wc/GPj7v1fjWXTrNgASAErqGgEamd17HLXLBKst3bCdfPmVzL69Vb/4BSBI+idf
      1g566fpg9pXjmNqIGjUKJlYFXpce+HX4zE/o73xcfeUVZ0mJ7B6zr9s+XhIUJ5bdcvfA8ZZ7
      v/iV0vgB6HsS9p6E2lvwh38sJrjaj33M+EXtGmbvNbCdlKMZPv0qPPMoGMsh7a0WuOryDbD1
      m8qLnwFVhHv/FcrWwcefBlC5bM6uRJx2G9n/Ktz0OShbDzv/Bs4+A489D1obAMirPorZ6sFc
      BeYqANDetLl+99v+v/mb0BNPcK0nUZ3O8fhfpl991XDrrZqVK8czd9ptDpvN5bDnOjqmFkpw
      u0c+9PBt7+7BHY4Z5WUPHdZt3QI2G9/Xh5lMqZf+kHrhBYTW8EPDssBmzCUSBIWzHb6/fLzs
      3/5Nv30bAMR/+Uv8V0/qH/6wYDLLLLt6xbLVK5YBAHfmDIJh9OrJTitJ4bV8l8e+k2TOWKtW
      AEnysRiRyaxZsVwVxeBzz5U896znM3/CnTpV+d8/i3znO57PfZ5eu4YoLc0eOSIGghJJulTw
      PvxhAGCPHkUNxvB3v0c11EtZ1moxm4eHXF/4Ar1mTa6zY+wfv0Gvulk/MGq48w7zbbdyTz2J
      Bfyez32+fvfbuM0GAJn33rPuPywTckl9k2wzY3u/Do8+A4YSAEj84ruSSlXHjp5d87fIBW4M
      fYE2UEEuLomqwlP3AorLW76ILX9gZuivH4BPvQLPfxo++EPQz3y1BTPKHmkJ/fM/V/7kv5LP
      v+D44p/7vvIVVRBrnv790y+9AgCrljevaGqUvV73H33Effc98c03rf71k9V/8aXk75/W79wp
      xeOur//t++VSQ9/6JzEYFNzu6t/+Jud2548eZY8dN95/n+mDH3Q/+pjCMGebajObtrCDXQ+m
      eMsnHst39yhsFnM4uNZWfNcdnf2DWp937Uc/YvrAhFyBr38939df/oP/pGpqMgcOcMdPsLjI
      RI/4c03NR98m19yiWblKSCSEjg77l77InTyp3bjJeP992YOHMKuFXr1aZhiF47KHD6tcznDX
      nURpaWdvH//lL4d33rqpvi73xhtVTz7JHjsqBoPaTZsyu3enX3+jfs87E5Wiqrof+wS9do3x
      /vvpNWvcn/yk8ZFHuHffBQwr//d/53t6Iv/+H1R9vWS3Ou69z/3Ix+teew132AFAVRT3xz/u
      1erjGzdpaqqvgRpoBggCO74GKKbW3Fog1LEMwt2QS8zWnrnQbbu56qknyfLykn/4ewCo/vWv
      3Z/8pCpJNadO6j/1SZfDDgDpV14p+/fvZ/7ft+ObNmsRhDt50v6lL2lv2uz+2CPnhkbTr76K
      mYyuv/s6oChKUYpGE/nm/9Zu3mT7zGcAwPqpT5I1NaPf+qY19HpCQ+BNqwx33hn76c8wiwVn
      Mo7HH2dTqdLBQYzP586emVAgVRXGPGXf/W7ke9+r/PGP47/8lfUTn2BaWuSYVofyrjssmr/6
      l/C3v63k+Zpnn4n85w8QgjTefx8A6G+dWPKMGY2Y0Wj56EfPCVtbXZ246y5zS0t+oJ9etQrV
      UIbbbx8PUrkcoqEnh3kRBLfb2aPHHF/5CgDgZkuuvd3y8UfZEydiP/qR4PU6//qvqcaGsU//
      cXRoxPLYo76//AvD3Xdz7e3Ov/oa1diUF0QqFlVTqWtPgQCg6W4AAKnQLHHZBtj9d1Cy9sJv
      hqAoWV4+9QqmN+S6umx73ml64p8QHJdEkT123PH44wqGofk8WVFe8o1vjMcka6rFQIAsL0/8
      z+8y775b+fP/Rt/fgAvT6wHA+MBEXWL99KdVWS7LC5zF4Bh1G7/6twhBEFVV5ocfNtyxCwBw
      t5t/d6+EIHxf/3gSYWyMrKnWNDfhFov/a3+taW423ndvyGSE77dRSozeXIq7XKVPPCFxHKrT
      lfzjP8AFoNdp6c9/Xvz0pwiaVoVp3WF63Vp63doZV/iRkXGJiOqq9Nu7nX/2Be3WLfGf/0IV
      BM3yZQDg/OuvBf7u78v+9V+M99/PnTqlsCx7tIVetVLLZPHBQSSZuCYVaB7WfAzsDWAsW8g9
      iKrK7Lt7AcdzZ8+SdXX5QECzbBmCYYCgBMdipsmZOM2y5XxvH9famu/trXrqSWT6AJjjK1/W
      bdly7l8Ew6i167qtFs6mX71zJwCUf/c7CD0xqIaXlsqBAEIQgKGpF1/S3rSZPX5Cu2ULALi+
      +c3c2Q6qoeEZt70AACAASURBVB4AeLMFYzgNkscdTQCAGY3qRS4NxswmVdJhF2Az0KvX5Dq7
      xn+T1dVqOo27nAiC2L/wZ+fiaDdsqHv5DwiKUvX1VH29kskmfvPb8u9/f4vDHvzm/xYT150C
      YQRUbjl/tHkhq6oS//M/lkcfjXz3e4Lfb3r0Ud32bQAg0zQZT2DmKQq0fFm2pYVrPVnz9O+R
      WcOnpgdmmmhDd96ROnNKtJgRHAcAdMq7RylKDAbpdeuI0tLkc8/JmUy+q8vx1a+MB+lu2vx+
      REQjp3GFB9OuBYp5XuhNG0ubm8Z/k5WVZE3N7HlMAEB1k+My2q1bIv/5n1RzE0KSuTNnSn/8
      oxt8P7KCkFVV4pjH8tijuMtl/cRjySef1G3ZCgCSVquJxRCj4VxMatmy5O9+b3roIYS4oHU2
      CE7IOQ7FC0fGLRaystL51a9U/uynXNsp0e+f0baOg+pxXKeCsUDQ4oKgKGYyjf8mq6rpm246
      bxLN8uWmBz+IUhSCIHVvvandtOl6q4EWA6KqCi8tJZzOih/+QM5k8oNDmNkEANbqKoVlEaPp
      XEzcasVdLtNDD17gnVGCUPIcpjcWzre8jKisBADcZhN9fqqxEQp98WAkNPm8aiq/kksQiPIy
      +9f+6rzREAwr+/a3J5I4nZIkLckaqLzc8sgj478xg6Hku98Z/11SX2fKZCjbtG1G6954HTMY
      Zt5iDsZrIGSOGohsbqYaGsZ/02vWaDdvKhiNrkWE5jJBc6HdzKvLUqyBEIKYaieeAzNbBLd7
      vDY6B0pehIfdRBM2R3tn+exnzw1T2T7/OcxYuKJCzASp5FjCRl14xlePpahAc4FZzGIgMNWI
      vlgQDANFRvDz6xxZUTFXkIjR5ryPxei5IlxTLMUmbC4wsxlU9ZxdeUkgCE7M1YRdICJKy+g1
      tDZ+fooKNAlmscC4Gi0AhCDmasIuEBGjOcK6kDtcSYoKNAluNiMUhS7ssAd0MWogtqhA1yOo
      0YgaDIW71hcMghMXOGg0FzJK5vEF1YJXkqIRPQmCooZdCx3/RTAcwRb0VDOkkyMs10cnfi4F
      UiR+ZCwksTHK5BAVaKq9KLfE65jSf/6nq10ECBjXAUDT1S7GBVJAgTKpGJNXI5GgBkkfOe1Z
      u7IyX+pc+EbjVyDVFctorlRrVy7Xpe4tW71eKuRKcCEZKe8fwiDLynXxwAsokMFsNwCoEs8m
      yTtud4iyuvCNxq+pnbwvXyqH3eZ46I8WkpFBr3fabQBAa6jr4oFfex6JC0h1xTK6tFQ3ZEbF
      XliRBVFUoCILoqhARRZEUYGKLIiiAhVZEBO9MHbKJl8FEUWRIAiYbqtP3aljxq4dU/+dK8n8
      d7iEVDP6EXNFW3hGC38Ol1a8qVzWjC5cIlAvkmw2e+63JEkFf8/4d64k89/hElKxLHsh0Rae
      0TypLvA5XFrx5kquXs7nMH9GFzoOVKRIQSY3mDo/fPS9lt5sLu0d7KUspanR9sE0WWrV9Z/c
      O+hNn+zuXz6+STnje3ZfR3f7UQMFniirSjyJwf7Dx+pra3iWOXj0pKf3OEe4HOZpy53kXPy5
      l97ESSqRSnoG+gijI9J/zC9anEaq/+TertFk59BQc2317EKdOH5cEbLD7kA0mXLZjG/t3t/Y
      WA8S/+begyTrH7/D1PiMr3tfR7D96CEtLvmTgiLmMJAOH2uvralkmcTRk2e7uzqaGhtnZiMw
      zz7/Ck7R4VgyMNqLam1pz9lx8d0dh70c3X7qRGN97eziHW85HIkkU+loJieTiHj05Nmaqops
      Knbs5KngUI9qrjLR05qn7raWYJI5dOSExLECguRYVsrH2jv9lRXORKB/f0uv1+etq5k5NXn8
      0LueGJeN+cOxVCzF2Az07v2HG+trJZ7de/ConI97QmypyzYjFePrbnNnuLivp3/UWVbR2/Km
      aGkyUnBy71ssSR8/1tbUMFOiZ597Lu3tSoAl6hnOSGAx6S7CiO7q6Ewmwqc7OiU2PRZO26xW
      med4CaxW6wwXCIWLoVp755nW0JjXG2NIWm/QUizLUjqjjio81qkCUVlqOX6kZWBkJBT0hkNJ
      q9Uq5jhBAavVWnC9EgBko/5gkuvuaDtxoiOX5wAlrRYDy7KAU1ajzmot7FXDxbxae1VH21H3
      qDvG8LTerKVQlmV1RiuFg81WIJUMWFWFs+1ES/fASDDkDYeiNqtVFfM5QbFarSihsRgKLP8b
      Hezjc5mWg0fHkmw6Fhm/P8uyerOdRKQYJ9t0s7ZNwnTe0ZGqUt3RQ4fdI0M8pjfbragssjnB
      arPmsxmCLrATfElZZTzsbm050T0wHAmFUZK2GLQsy+KUzqijgr6gq8w1O1VHV0/MP9p1tp1J
      ROMcWK22HMcqAFarDVSUKrThs0uPhTPSUH+PPxYf7h9CAL1oG2hac5jLcOJ8EVIRfzo30WRm
      MpkLu6vo9QbGfwlsJi9fdKkuOCM14vfkJOViU3m93vEfisBmL758F56Rx+NR3s8pk81fWNk8
      l5DROdhM5gLlEfNZfzimqmrRBiqyIIrjQEUWRFGBiiyIogIVWRBFBSqyICYUyOfz+Xw+AAiG
      Jg5B8vv9yUigf8QzfuXc9XGG+rr7ujuYuc6zUoQTx455g5Hx+2Si/jljFrnOmejrd51pk6R8
      eyvuTuRWVJgTPF7lMjdUlQT8/j4mLcdeDiP2MpuxxGYcHRr58GOPhGIZO5F95Q9vVpTASM+o
      xlGPSR42r9Po9aiQ/chjn1RRRK8wP/3Ne5VmVGDSgqGM1tAP3Xv71ZW2yKIz0Y33eX0AYiQQ
      1lntiijgWiOuShYDHUiwILM8w6ikkdbgDMcbcLVu1XpPf6csy6TWzvLxfJKxldSeOX3QWVJn
      dZUgXKpu1fpY0KfF1L5AQgecVmviFNRkMtVUlF5teYssMsVxoCILYjGNaEG4LIfVXfssZcEX
      U4FE8do4F/6Ks5QFv76XNiv55DsHT9c31He2HTE7q5P+gU13PFxTYrna5brsiNnI3mO9BCJG
      IpE7bt/+7CvvffnP/9dVKcn1Pg6EKCLXcqINAEEQpLqqbGRkvrNwbyRUVUUJury83Dc8VOvS
      DUfP41N6mVhMI/rc4sOlxlIW/HqvgYpcZa6ODRQJeAKRhNZobapbKvt+jONzD8VSWbO9pKai
      5GqXZXFY/BpIlgRRVuaP4yxxBjxhWZmv85KKhY4dO3bydOfUi5GA59ixY2e7+xehoIVQVeXc
      /hjzxCocR5F4odD5HlNw2c2BeEbKZ+eJU1BGn7v/2LHW3sHR85XtElEURTmfMaOqqqLMjHMZ
      FIjPvvvOOz1DY/NFQvBMwusJxueJYraX4CCK0/dJcZY4ZFEpuHnKhZBPeA+fODM+SVeQo4cO
      7Nl7YP5tTk4db3n9xWcSs2f3VOngvj1tnfMpN0ZQoZG+aDo/T5yCMrpsFgmQSxY8PDrY1tEV
      jqXminBw/579B47Mf5Nj+1999uV9Mx7O4isQimIoCvOcLQ8AILMIbS+zF/A+ZpLR3t6+DMcD
      gMQmEGrGJt8Ik8pqdRoA6O7oTIWGR8LTvuaQb6x/cFiaowrECI0i5pPJws9RyHM6HU3Shvn3
      uBOySXeUTUfDs0IQHEXnF5xPh4yl9TZrgY1g4+FAX39/XpCnyjjl3miGy9MEAgAdnR2evrPJ
      6Ro8v+AkreE5NpnOFAzNsYyO1uhM59mYkWFYJumPRKc9vcVXIFUWFUKPK/POv2PaqnJ7wd0I
      FVmWFdnr9SqyLKkoy0wrrixLAFI6kwOJY7PMq3uOW/TTNmWWZEmWRa8vULDO5yWZxDG9Xq+q
      SjqdymVT+emfdCaTBThPTW52lm1c1cjxs2oRRM3ziIaa75GSxpISc+ENxGVZlmXF4/NOyjg1
      VBJlIc/xMs9EM+nUwdMD9HR//PkFl2UZw3G9jlYUJZ1OM6n0NEVT1UyWBfU8bberom5ZUyOf
      Y6ZeXHwFwkiaRiWMmrdbK/PZnESRBTajbDm0v+PsWYI2cJlUihUlYZoiMokkL+YFXgRE9Yfi
      K1c0o1PeN58OH2o5caa93eqqcNksogoz6vygZ4RXEBVAlfj33t394qvvKFN0OJ9JyLjOajYA
      QCoSSDCZ4VFfweJrdIa6qllrjBDcZCAAma9fIuVSvEqQs3fhlNgDBw6fPXNab3JMyjiFRDIp
      5FhBBlDEaCq3vLF2qsVyXsHdo2PjH4aYy77z+ouvv3di6rebjoc0JqdRTwNAyDuaYdKeQLRg
      +fV6Q2XVtH7P4iuQ1+uNh/3hBCPls0cO7H3tzXfysxtuBGUz6WisgA20YtVao55SFFVvttHA
      JbLTPnSL3SywEsfnAMFROTcw0J/JTT5o0uhY2VyNAYKgoEi8OxCV+WkNnN5a5jDRJIGjBL1s
      WbNJi0/d1o3Q6B1WE4HjAMAyyddffZXJFZjkQlEMx/HZtWfI540nY75gDBRh/5633t7XMvuL
      RjCSScXj8VmCY9rVq5drCUQGZFLGKVgNGl7F81wWI2khmxjo7+enlPy8gjvLyvQ0TeA4pTM2
      N9ZqcHJqNas1WMwGLY7hAJCKh1957dW8VKAaxjAMx2euQ1p8BUqEA6aSmhKbCdfoSZJkox5u
      tlGKEssb62hdgbVURrO5rr5ZRxMAUFa/at2ymunh5LLVzfVVlYBSVbV1RlLm5ck3iSCoo7Sm
      oaYcQ4E0OkpoCdPZpya26DFfOOXz+QEgk2G0ND00PHIuVKMzJmNhr8ejArg9/sbGhvHaaAYM
      k2g/1pKd1YPMpqKozl5d5gCUJJG8PxCf/RIwim6ordJqZ1XPCGKxuhob6zQ4Oinj1IQ6+4q6
      8sqqSlxrqa2rQvKcik5NfR7BNSDFM6wvEAaADCdrMW7Y7T8XqjfbIkGv1+sFAF8o0tjQZNQV
      2Cw7HRlrae2aIdTijwOt3zaxU64icBkuX1XfTM7WUkUc9vhrmppnJ0cAyWaSeZWucNmgUMdS
      VZXxdYYUgZXXr3EapzUHUi4bj0c5AXAhphjKcXGa2YgRNC/wDosLABwOp4xmXLbJE08QFC11
      muO8HgVgMxmD0YqhBay0ktKqeILTzmqFGlbf1DB+/LIq5VRdU12hBYp5xhtKNDcVmq1T+XQi
      gdl5h15zTsapD0ZR1fFLBIot37hZO/2pzi84qTPw+WiZsxQAnE4nkQOzflJFUBSzGWnMXgcA
      GSZrtpehhczT8vpVKdkz42Uufg3k7jr6xt6W/QdbUFJbUerE0FmLLwH6uzpNNrMnMLsjA7KQ
      G/OGnS570Dva2nri1JmuqaFjQz0nTp4+2zMAEmsrb1y1aqVOM+1NZplkRiINJKCUya4FTpym
      ghhJ63AFcK2Uz57u6stEvITBPj15yusNqACbNm9MxGLJ1DSDEQAknm07fcZss802tSO+gZdf
      3f32u+8BgrvsVhSF2S+hs2vYqkeCkcRswfNsNpDIOS30pIxTn1hHa9uZrr6hUZ6JVK/YtHLl
      SnL6c51fcA1NI7JEaWmOSXQPjAR8Xot92kpnJhHxB6MAsGnTxlgkkM5wM4qXy6ROn+202x0z
      5F58BapsWBl1d+stDlnkk8lUMBqf/RkLKrlhw0arrsCpNoFAsKSsDEehtLL2pm07t29cNTW0
      ur7hltvuXtdcDTJ36uTp7u7ubG5aWxKOxctK7IoKCILgOG6YftSXmImE0mIkHMA1+rpS60gk
      o59eBWt0Jg2uqgCqilRWVum0s47MUYTla7dadJrZ2uEsrxVSfkpnAkVKpRKxRHq2dCit37jx
      JhotMJwTDEfKykoRVZ2UcQoNjU277vtQfbmdZ6LtZ7u6u7v56YbB/IInwkFOVoLBkNZodRqJ
      ZFaYUXyj2YaoEgAAglRV19GamU2TxOc2bd9FUzNf5uIrkJRjqprXOa1GALBqkeoVG4lZz3rF
      imVD/X1Ny1bMTm622tLx4HgnFpV5Vpiu8ZhWzIQlhADCcucd29atW2fUTtNCu83iGXVLKkjZ
      6MmO/lAoNDUU1drqysw6vQEAbK7yNY010z9UCHi9LJ8HAF7g83leo5nZ5VYlIRQKxBLJAgMu
      Mm8rq68osQMAiWvXrV89W7oVyxr7+gaWr1w1O8hms0f87iwvT8o4BdJgS/oHMFKrczXsvGnd
      unXrZrzi+QU3OVwOPWUwWgCgtLK+rnqmb/FYIMqzaQDg8/m8KGmomYKLghDwexKpmWPoi69A
      5zoaqixmJVLKRuVZtT2GoQiCZjMFxrVoWlv5/hcwcLb17MD0wXuFazvVMTzmARQPjA2eaj0a
      Tk1201RVMdrKqyucKAKMgGxes7ymZtr+EgiC0jQNqipmIkNubzY/Uwuq65udNjMADAyPklgB
      O4AwuHbevGnbrbcbZteek11LBSHwZLxAO4UiCIphmczMlhFUldaba2qrKAydlHEKQjp8umfY
      4/ViBDXSd+Z4yzQr/vyCoxitNaiKkAx5PP6wqKgzZGtqbraYTQAw6nYX1AlrWfWW9Wtvv3XH
      jNDLMZmqVlZWarU6XKPfcNPNhaMgCJOMpfJyeenMMyHOnj6Z5JTNjioAsJWUgjq9p4ZqS0os
      Wg0FipRKJv2BcNWyyUchZOMnW1sVBF2lQjTBYJha7ppmySoCO+oNVlVViXlOlmUUA14CmKIK
      qagvnEAAYO3GmyyWwo5pg70dyRS76qbt+ll2dFVFparTAkpuubmw4AgC8UhQUHHXjFF4Odd2
      slVQoKxxw6SMUyCNdrtBQ1GaCcMgxqyZogLnFTyfZfyhUFWNkeN4WZFRkKfLDcGx4ZyuHAA2
      bd1hsRQeku46287wsO3mzVN1aPEVCEHxHJuxWGfuRjODVDq7qnFlwSBFUca9lFRJ0Bim93hV
      QZJAp9cDAIoguEavndXHU2RZBbCajAmGDUTilaXOc0GJRMJgMGi1Oq2j5o47amZmrKomV1W5
      kkQA5tIeAKBpbZqVyAJ9AzTHcybzefwhGVZYttpeKARRFElR1akynkPmcyqK6/VaAEAQRKs3
      4rPqx/kEj0UMJptOS5dXlZbXzdz9SFXk8pr6CIsAwFzaAwBarSYPM22/xVegju5+NptJxML1
      VXMv4lGFkD+qsY1Wlsx8lLff85AKgGFYyDuCmiqs05t697DbUe4icQJUKc7kykscU+eHSb3t
      oQ99CABwHAyVNbOzj2dFl83QVFc5KwQAwNPf646mb73l5nnadTHHeLzeobHwyvWbZqhuZ0dn
      OptVyThAgZ2mxpFzyVAyMzrqdtqm6xlGP/DQQwCA4bh7qG9CximMeoIldjNBUIrAZgXEZTdN
      nRc/r+B5RGvWqdXlBXYJAoC+ns4EK2zfMt+x32wq5vX6/Elp44bVU7+dxbeBjEajyWjSGwqf
      KDtOKBCtbygVpQJGBk4QBEGgKBqNRSPhoEY7bUQrFk+EQhGaIgHT7Lpj1wwjGkFQgiAIgpjr
      yC+ryYiieCBS2AtAbzFpcejs7J1vTkiRfKHEujUrZhtIRqPRbDbp9fMd8RxKcNU2SsFnjaAi
      yHjJUQSZlHEK8UQ8Eg2TJEHorHfcvnOGEX1ewY06CsPQWHKW7QUAAGaTEVXk7v6heUoui/ko
      w69a3jBzeOqquLQOdZ48fGZo2/btzTeEQ9mFC3766P4eX2r7tm03hkPZIm+yuZRdg5es4Pi5
      Xwu/Hc8v0S0UlrLgEwq0WB/Q0vwQYQkLXlyVUWRBTNnpns+ebjs15nb39Q6wl+h6W5iBgYHz
      R7pUhnrPRpMzZ/4Wi1jYPzDPSkVVamttm+05Exob8HtGPP7w8PDwpeXLJkODg8O9I96CoZlU
      rLW9Y7D7TCJTsOmUes+c6ujqHRgtnFzKM273yMkzvQVDFZE71dYh5Jkx/5ye47l07GzvhGiT
      CjTS2eZoXH/ojd8fPXHyuRdeef6Zp5556ufHewq75F0MSsAfPH+sS8XpsPkCgctxZyYRQTX6
      oG/uJ8CGY/GoPzXza8vG/E6n0z3Q8eY7+1j+Ur7Fk4f3dg0FYgXcrgEADGaLjiIYIT3S554d
      6nb7gKBpQh0ZKtAtD3rdh48e6+vuZRKxWRM5IPHsmeMt4VT2yLFjIyMFbj7O6LCXYScmaiZ3
      qjfZ7MO9nU2rN+p0hubGOrvdarO56hoa6ALuPIURRZEkC0wR4QRuNM43LLQQvB63zVWu1xZ2
      NF4IFK1jU3GU0tqtcwwuE1ommWmsr5CnC47jRDLF6G1la1c1W80F/OfPS01NDWA4RZJOe6EB
      fZEDyoLk2NL6Ru2sjdvNZrMKoNMQtMFis8zM3WAy19bWkCgqo2R5mXOmcw9OOktLmHT25u1b
      tCSlNxQ27Aw6MptHShxWURSL3fhFYCkLXjSiiyyIyfOhFn4vVZ1jyeaNzlIWfEKBFmWPLVEU
      l+ZeXUtZ8GITVmRBTFUg1T08mEwkcqICAMlkcvxqOp0e/5vLps/1ST2jg4lEIpooPLt7DiYZ
      DUTiXo93DkNd9Xo8qXgkFE0WTp6IxpJMweThgC+bzQTCsZDfK8x2eQQAAL/Xw2WZeRaEj8eZ
      nTrPMuFYiucYhjlfcr9/amqBy/ASqKrEC7wvEA74POKs3QjOEQl4x/zTHE8zmQwAMJkMyyRj
      ieSI2zM7scBlWJYNhGPhgC8vTrabqpTP5sRcJhVNMAG/P5NOxFIzHT5VWRgd84Eqp5MJt8cP
      s4iHA+lMxuMLJGNhNj/n1heqxPtDEysPJzuBY10nMnTZcMt+wVhl1KBBd295ea0/yZaYdaua
      ag609Wo538p7PlNuAACxrbWNMDvNOtKxY8dc2QCAz+tDZK7Pl7OUVs7231NF5uiBw2XNyypK
      SwAKdJVRkhpufS/A6mYnl4V0Z39GyiVkPqWPZDatn+1erXAxz8nuYS2J3b1r5xwFVLiYZ4yy
      1Tmn9aEkRRns78Wyfoau1pKqyz6HowwX7jzdAYYS6/tl6z/dYl1zrzY70uVlMJQoo/PDqmFZ
      ZeFRAJvVOOiffMdiLnuy7cztOzbv2XegwmHU6MyYLHOVVTOOFOs/3RJDHGw2bVRT1vptqxom
      ZvVDI11hvAbiQzE2o83zozmy1KbbtXP71LQiL6Zj0QExFQnnaRqtrCqf4RVHaqhTh/fGWMJV
      W6ZDAxs3rC9Y8qGeviAvlZc4YKoC2cuqQyNBCVANgQIgFrM5HY+quNFoMpldFfWVCTtdQmAQ
      8o9ZnGVVFSVpRUMbChx+NhWrzRoKixadIMsKEDObS1VWS6oqLCbjXFO5vpFBW/WK3JhvdvIc
      r5JIHqV1VptOYy7guebxjEkIWVvhAGTOOmA8jgamrW9gktFIPE3rtDhiE1BMN88IE2WgSMqs
      xeD9b7W0oiabSRkcrhKeikbjvIpp0Dlzj0ZSNVPOYCRofVmJIxFP2MwGndHKcwwjEeQs/57S
      ihotZk3FNahAat8PDvnHDPbybIbHbKWY3pQNeTc0NCrTVzdLPDvmGc3wipWgZD6cJ2wz7h3y
      j415AvWr1lOBuJEC2uiEObDbLZHgRMU8MQ6Uz8+34cgFksvlaHrWOpglwFTBBUEoNJp6oSwk
      uSoJEkrO+k4vI7lc7vrepfUaZCHas8DkCF5ot4rLTLEXVmRBTNRAGk2BxfQXiyzLi3Kf646l
      LHixBiqyIIoKVGRBTBrREXdPb4gjs2HZWm/UoL3tR9as28qIcp5JrF+9/I3de9dvWI/IYjiW
      WrFu81jb7jRqc3tin/z0h+dxpDj63m7KUpoK+tfvut86K57KJ3///LullU6aNmzbsnF2cr9n
      ZGigJxAVHvjIh6fv4gIDPW3eMKeoKqUmrRWbVzWXzUqtPP3rJxtXrAymxQfvmmscqDDRoK9z
      cNROCKK+MhGL3nX79sLx+OTzL+3Z9fBHZ/Q8O46/B1pzKp0aGIj88WcfKWTYKm+99Y7LYZaA
      3rJ53dSAoc72nhAjRt3l5TUpzHDvjpmPpf3Ibl+apHRUNjC4476PuSwTK4QC/SdDeE2TDWnr
      GfR1t910z4PhQGzH1g3TEkv8m/uPmChQVCycYj/6oQdm3HygozXMoul4RIOL5oqVm1Y1FJTb
      2991xp/44K6dMLUGQkBl04nTnT1ut9vtdgPAqaMH9h8+AQBGq7O8vDzi97j7O4ZHRkb8saam
      poK3nkFtw7JkNMDJqK7AOk5QFZnCJAUwfo5tUdPxiMFccBEnBH1Bi0mLa7RzbYjpdrvXLK8f
      8ia1F9mvZRIRn9+nofX+GEcgwow99i4EzOC0mUyIitSX61NcwUlW1Ga1FCy53WHLMNnVa5Zz
      QEGuwEC/0VbCZxMAsHrNcv/7A9lBr1tvsqpiHtNaKeDMJpuC0zM62BLPeqNpq1GnowhJRXUU
      NWOkOeh1IxozgaO1tbU0rZf5C/LzvEh/IJ4ZiuYbKgoPMS1lt5hrQXBV5DhFo5t3l8/FZXJZ
      z4VCGRsqLpdvYZEFghCzt8677BSN6CILYjH9gSRJWppuMUtZ8EmPRDGXHXL7auobaRIDADGf
      RzUaDEBVxGA4WVZijcUzdrtFEXNZATXqCvS9FOVCDpq4AVnKgk/aQOng8Kg30tU7SGh1WMav
      osbN99zt72rLpaOidQXC+N/pCi9zYJTWkBWJDJu9/85br2LRi1wjTNpABK0rKynV63X1tVUW
      s4k2mse73lqjpcxpC2X4eiuJ0qZMJhONRnH8gq1vVTh25Jh46d+ncuzo8XmCh/o6h9wFfKMW
      hVjI3zZ9m9hpSNz+PfvnWYTZ3to6z3lE6bivp3/eI2muHmF391CwwCah4yQCYy1tHeO/J/VA
      ay6h0oE77ridxBBobkin0xyTaFi+xmwyAgBUFx6POS+qwOe5ZCQjlpsubaoYJfD5LH2apmnz
      eU4JuTSYZDQnKpa5FoUBgJARBD7FydaCY4U809s/VLt6vYUuLLjJZhoYXvi6zcUn5B/T0XSQ
      nVP547GUrEx8N5P+QLGRswfPjtJGmxaTZAXTm3QBj9th0Cr6su1b1xYaCJxJYX8gVR0b81TV
      VM9/IxZZGwAAAolJREFUBM48MAwzz7rEkcE+k6PCZj6Pa9ulkYgEUzmlrrp8rgh+v7+svDw/
      hyMUm83Sev3c6i8xDG80Xv0BpNkoYo6TcP0cqq9KfCDGlJc4crncpAKlg0Mpoiw62J4TBFHB
      aYNRTynpcETRlWzfuq7QjqUzKTqULTWmKdCi3G7JPsclK/iEDYRhF9JGnQcMwxblPtcdS1nw
      CQUiZp9gdfEIgrAo97nuWMqCF6cyiiyISQViE8ETrSeD8YnDEBLB0Lgfg8IzPYMe93B/d+/g
      UhxtvSQiAe+Ix3/JG0wBQD6TONNdeGMuVZEGh4aZqC/CzOlqMv/WWHwmcaq9s7ATjaoODAy6
      hwcic68anbrB1OQ4EJcM+kOhjo5uhdISiWHQV93zsQ93HNidY2KGhltI1uOsbNi7Z3fa04s5
      m3LpRDjNV1SU5AI9Ddv/aPva+rkyW5oMj4yQWr03EKuvv8Qn4x4eSbCFP1hJFCORiJrOiS6j
      01jYn09DawN9PU1z7KJMULROQxX245FFfzhqphGGh/ETc2bjGfUmeBGgHqb6Awm5jAg4k0go
      GKnyWZ3RhOC0yMZxjQ4jtEou5Q+nLBY9AorO5EiEAqFYpLKyBpF5a0mlhkDhmnGLufLMFpzL
      JLMiSpOoYd59x+dBlQVvMF5VUXi3f4Zh9BoipxK6WRtMjZPPppOcXOosPMSaz6aHx0LNK5sL
      Jk4zjJTP4lqrSV94pYAq8f5ouqLUWdwnenFYyoIXjegiC2KiDptxSvSlIcvyotznumMpC15U
      oEVgKQs+aUXFRs62DoYwylxRapfSoVg8u+KWnVnvUJ5NjaYpKyXs2LG9q/1EOMwoZnOZDtcY
      nfU1FVex9EWuBf4/rM2F5zP9RTEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAMb0lEQVR4nO2dbW8cVxXHz7l3ZvbBXiexyYNjx3UcJylxKAio
      0pbyAlArXlXi2/BZ+A4IISRExasWKCAKJKRN0zRxZcdp7CR+iNde787sPYcXs95dZ3eqeGZn
      J3P3/F7FkjU6Gf19zv+ee+ZeZGYQhLg4L/NLIjIhipcSUK1WQ8S0QxHyyEsJCBHL5XLaoQh5
      RGUdgJBvREBCIkRAQiJEQEIiREBCIkRAQiJEQEIiREBCIvo3EpkZmAGRmZUSkQmR9BEQG/9P
      f/748uzJ5YePd/zSrz74heyFDRwiXt2uzU+NZR1IUvpkF9Te5KmKV55A4yNA0Gz6vj/8yOym
      Wg9+/dv/ZR3FAOhfwm7cuAEAcwtXWj8XCkMLaHSwI62Lv8kMO+YbREDZwJKBhCQQA1mhIBFQ
      NhCzIRGQEBcitkI/IqCMMMxSwoT4EAFZkYJEQNlgmI1kICE2REyUdRCDQASUDeKBhEQQSQkT
      EkDMYqKF+BgCK/QjAsoIazrR/QfK/vr3/8xNn9rY2NhuuO/97O3hh2U9huw10ag910HXc4ua
      fZ9qvl+v14cfmd2QLauw/gNlS0vX9na2zi5cP22a455XKxaHHJb1GGJjRR+ov4AqlUqlUhly
      KCOFjHMIiQiX8RZISASUDaaVf3KvIBFQNhAzsw0jQSKgbAgzkAU2SASUDcQAbMNcvQgoGyQD
      CYkgZgYbeokioGwgYilhQnwMSwkTEkAEDDZMdIiAssFwWMJyryARUDYQhSY66zgSIwLKBmIG
      K/ZT+w+U/eWTf1+9cOLRTrCxtf/+z98ZfljWE5poO0sYas9z1dSJ8adPngQBH8hAWQpQq5GY
      dRyJ6T8PdP36ki567/70zF61KgNlaWAYrC1hADA+Pg4AYw6MlUQ6qUDEWmP+9SMmOiOI2VVo
      QQYSAWWDIXa0ssADiYCygZgdhXauwoQhYAgcjZKBhJgQs6OUeCAhJobY0VLChLiEHkhKmBAT
      Q1LChAQQgyONRCE2ROxqZcEJLyKgbDDMrpZOtBAXCjvR+T+gQwSUDYbZVWjBOZv9BsrY3Llz
      b6yoDKinOwc3fvTG8MOyHmZwtA2rsH7jHMybW9uNMW/j/m2cWqr6frNeL5fLQ4/NZlp9oPyb
      6D4CQuVcXlwAUz83/cvN7eqEDJSlADE4WtlZwgBgevpc+I/z09NDDGaEOMxAWceRGDHR2cCy
      jBeSQASOsqGEiYCygZgdbYOJFgFlAzHIbrwQH+KwE517BYmAsoGZHSs60SKgbCBbOtEioGyw
      phMtAsqGcKDM5F4/IqCM4PCrDMlAQjwOh+pFQEIsDkuYCEiIRevDwvxvpvbfjQfg+3c/B+0+
      fV5/68ffH2pEowExuBobzdwrKDID1ev1W//4aOd5vSonlKUAkyXL+KgMhJNTUz95/4NnWzJQ
      lgrhVoYFHihKQHD+wkUAOHf23BCDGSFkM1VIhIxzCPFhBmYZKBPiwwygpZEoxAYBFEoJE2LB
      AIigFMhmqhCHsHBpyUBCbBBBiQcS4sHMCCgeSIhJqBqF4oGEuCDKMl6ISygbKWFCfBBAyWc9
      QjwYGBE12ntfGAA8efyQneLu7v7lS/NDjGck6CphWYeSmE4G2n/+7ObNW/t++H/i5eUHn370
      4Vdfr8tAWRqEfSCrSlh1d3f5/t39hgl/nJycmrt8bXzMG/e8ogyUDRRmQFs60Z0SVigUKkWv
      HhgAFwCvfPd7GYZlNwwMYQmzJwMxrz1cqfpQKehM4xkVEFEpG25t7pQwzyvVdjaqjfz7ulee
      9maqVVcdGEPX33z37ISbYTSjQ9gHsqiEAZTGSpsb6/VAMlDqMAOiJZ3ojok+P7cw89qi60V2
      hoRB0TLRCixaxiNurC7/8Q+/e7TTyDSeUQERNdr1WU+p5O3u+3vbmxlGMyKEeQcBrLozlUDP
      X5iuNfwMoxkRGAABADH38ukW0MFetcHOwtxMhtGMCMysEBEOR8vyTEdA5bHy0/VHvgVDcq88
      xKAUAFqgny4BsS5dmjub/6KcAwzZl4GYtzbWnvu64GCm8YwExKwVIiDnX0Gdrg/pwukJdLSM
      mKVOmIHsKGEdAdX94PS4s7nfHC9oAF5bWfZZBwFfvXwxw/is5DADgQWGodNIvLJ4CSdm5iYL
      4c8TJW97ffXBypNdGSgbNIZYIaAVZqFTsHa3ntz6198eP2/1gaoBXr++VBn3KjJQNmiIQSsE
      KzJQp4QViwUD2tOtv4uZmVkA+OlbU9nEZTXUWoWhBcuwTgZSbnH2zKnAgu2ZVx7DrBSiFSa6
      s4y/c/vmZ3cfKDsq86uNIdZoWQlDnF9cKo+VjHSi04eIdauTmHs6GWh15cHDx5slT/pAqWNa
      e2Fo1W48cHD65IntWjO7YEYFYgj7tbmXT1cJg6U33tSuVyzLij11WnthVpSw9jIeq1tPvl57
      pCbOv/OD17OMaASgcBVmhYnuGucoF795/OzMaWn8pA61V2FZR5KcjoC2t7Ynz5z9zqmTGUYz
      Ihz2gdCCFNRZhTWb/sryckOW8elDxGHD34J33dlMnTg5dXXxNQQrrN2rjWGwsBO9+nDl2bPN
      IJBlfOqEHsgOE9T1WY/jFisnx4sD+7Bwr9H87+r2oJ5mE6EHAgDO/4c9nRJ2Zma2oLntgZ6u
      r33zeP3uvQexH/3l+u5vPl5OHqJ9tHbj0Yap1k6+cR0dsHOYgfjLu18Etd26N3t+/kKzXi+X
      y8d/uNip/hC3TLQK12F5fk8dAWnHCeoHQZPAVQA4M3uhdtDYrnHF8w5iDZQpK0xiGhiCsIQh
      IjHrPCvoUEDMdz77fKJS2m+YEyUHAC4uJu1HNw0H+b+VOA2IW41Elf+DWjsm+uLC/L2vHjh6
      YH8NgSELrrVOg7aJVog510+XgLZ2qq8tXB7gEXeBYRFQX0ITDQCY/wzUGSi79sYPXyfDPMgM
      5DfNoJ5mE8QcjnNYkIGOdH2UGuQJm1LCojAErm6VsLxnoBTnDwOSEtaf8MNCaJWwrKNJRpoC
      MtSQEtYPc+iBFOZ+qjVdAflNyvsLSgPJQC9F0OSmYQvOkRw43RlIPFAkgSFibsqAUQ/EoLq3
      MvJM2gKCwIiPfpHwuzA43MrIOpxEpCogBgDJQL10daJz30hMNwOVPB1YcKnaoGkP1VvQSExX
      QGVXSwbqJfwyFawoYZHzh9+sfo2F0vbO3rWri/EeHRgueVo8UC9ErFpbGfaa6OfPd+7f+ufK
      2mbsE8oCQ2VPB5KBejAM2pZlfFQG4rHxMZi9pPeasQfKmiQZqD9ErGxpJEYJCOcuXkn4aENU
      9hzZDuula6BMtjKiaRKXPS0THb0YizJQigIyxGOSgfrRNVSfew+UroDKnhYB9dIeqrd5FZac
      puFywWnIHZo9EMtm6ktgxANFwG0B5f/e3VRNNI1JCetH12587m/+TjsDiYnuAzFjKwPJKiya
      ppjoCIg5zEA6/zd/p5yBCo54oF6IoW2i8z6xmZaAmJmYS65koD4cMdGSgfrCDAqx4CgRUC+t
      O1MBtAyURUHMiCAC6kuXica8DyukmIEQseAo8UC9EHF7GW9tCWOmWq22uRnzjDoCVgCeeKB+
      tE20zn8nOnIeaG353u3bN4PCzHvvvR0EwXGf2/FAspXRQ5eJhrxnoMiRVsNQKI8zoquUUceu
      dKEH0ir3ndY0ONKJzvnriRwom198ff7wkLJAH/vUjjADWbBZmAbdJjrv7yfdVZhGyHujLA3a
      GUg60ZGEqzClUD4L66V7nCPvf2ApZiCFNsy7pMFRE511NMlIT0DigSI5UsJy/n7SElBgyNXK
      gm+/04CYUbU70fl+P6kKqOWBcv6KBs9IdKITEhh2tUIrTrIdOF2d6Ny/nHRLGCI6GpvycepR
      qGucI+/vJt0SBgCuUkHOs/TAYQaU78K+naZhVysAcLSSDNQNMzNweDOklk50FL6hUECuRjmg
      4wUQ8DAD5X4zNb0M1CphkoFegKFzQZgFm6nprsIAwFUoHqgb5s71YDZvplZ3tvYP6k+fbcZ7
      bnBYwiQDfQsWb6by/u7WRx/+/pNPv9hvNn3fP+5zA0Ph1WOuRjljqhtmxk4Jy/20QmQG8ps0
      OXXadbCglOMc+yrndgmTufp+tBRkwbRC9AllC1fmFlqHlKnjTyS2S1jBkbHoI3Rfsit9oEja
      jUTPUb4IqIt2FxGkD/QtHC1h8mVPf+R0jkg6JczV8mFGNwzcVcLkdI4I2iVMTPSLMLRrmJZv
      46PoLmHigbp5wUTnfRn/f6GY2zeMhx/4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Manually Reactivated' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAf2ElEQVR4nO2daYwj153Y/6/uKl5991w9I81IMzpHK8leH/J6
      vYqMtXMtkmyyWPjDAgEWQbAbwDCyWX8IkCCLBAvHSBAg3gD5EAM5gKwXDhLb8iFpLVv2Opbt
      QJoZaw7NoZamp++LZFWxjnfkwyOLRbLIJquKNEd+v0/NbnbxkfXn//6/hxhjIBCkRRnwNyFb
      giNJECDG2Ov/94el8qw5M39sruJ5nmEYk1+Z4L4gUQMRFbv39nW0vX/2+Y8DgGVZE16W4H4h
      UYDkpTPnz8/O2j6d9HIE9xvoSEfHdV2hgQT9kH7RCxDc3wgBEmRCCJAgE0KABJkQAiTIhBAg
      QSaEAAkyIQRIkAkhQAIAAMbYy1e3UvyjECBBky+9eitF/4UQIEETQtP07wgBEgAAMABMKaZC
      AwnSEhJGhAAJUoMJFQIkSAvjGmjkDjAhQAKADD5QQkci9fa//9N3FspMKy5dOHc6j+UJ7gNw
      Xj5QGBCvurnboLXDPdd1CSF5LE8w7YSpfKAEDaQVZx9/6lcqBU02K5apua6bx/IEUw0DhinD
      oyeCEgQIScrplZN5rEpw/8AgJJQQEYUJUsEAMGVElDIE6cCUAQORBxKkBBPKldCo/ygESAAA
      EBIGIDSQIC2YUBACJEhNSLkGEqUMQSq4BhI+kCAlwgcSZEL4QIJMcB8Ii0y0IB2YUEVCQgMJ
      UhISZqiycKIFKcGEGqokwnhBSkIqNJAgA5hQQ5WFDyRISUiYoUhCAwlSgik1VDlFQ1niNr9s
      f/8Aew4yK4uz5eyLE0w/rSgsDyc6cA5ffvUH99bX7bojmup/SWhFYbmYMKSeOjZfKs/4gW9Z
      lizLOSxQMN2kzgMlTWVYxeee+1geqxLcN3AfSDjRgpSEhOVnwgS/fIg8kCATIWGGIkyYIC3N
      PJCohQnSwX0g0Q8kSInwgQSZwJTpohYmSI3QQIJMhJQZqpRPLUzwSwgmTFeEBhKkRZQyBJnA
      vJQhwnhBOoQGEmQiJExXRDFVkBYexosoTJASTEVTvSAtjDFMmJ4qkZjYVA8YY8YokhRFFhL2
      SwFjTJEQzWWfaEbDr7/4rVPLs8iYffrJR9OcQtbJ6q5TMpT5op7xOoIxglL+X4KC8Z0aAwgI
      KKoahmF2Afrvr7/76o2djBcRTILRb3WCBjJK83/3t/529DCXow6ktAIumAAMAAABSiE/E3Gi
      GQNZSNB0g7gEjc4kBMjHaQ6iEtwXTEKAvJCEZOQMlWByZPh2T0iAUjTbCiYGg1yjsNxpCA00
      9SAAlEoTTcyECQ10PzD6XZqMAFGhge4DUlmxsQsQY0w40VMOy+BFT0CAIMBUONHTDGMgITSl
      PhBlzMfChE01IaGKzA3Y9LVzUAaBEKDpBhOmpm27mIQPhBCIKGyaCQlVeK2Jwai180loIE2R
      hAaaZjDlGgghhEbtvZiED5Ru6FowMbgPhBDIMhr15O+xCxCmzFBloYGmmcgHUhAa9as+dgHy
      QlIyVCFA00zkA8mjn/g0GQFShBM9zbR8oCkVIFrQ0rT7CyZGSKgqp9RACS2tgXP43R9fnjPZ
      qYcunliazbg4LySmpuw7YcbrCMYHJoyP3ygSGnW2MFEDSToNrdn51dXV7EcdNEJiqXKWaotg
      3ISEqml9oAQNpJrWE08/bahINoqWrmZsqvdCYmpy5skOwRjBtKmBZGnk8fgEAUKSsrgwl8/S
      ALyQmpos5GeaiWph0+lEE1OVsw+XCcYHJkyVIh9oCgVImLDpJqRTrIFaTrRgeoky0dMoQE0f
      SKigKWbqfSDhRE83U+8DqcIHmmpCmj4TPXYB8jE1VBmACSs2tUSZ6CkVIF2RUqxMMDGiWpgi
      oVFPfBq7AAWYaIqkSKKnbHrBhClSUwOl94Gc6t6bb77pBDk37viY6oqcwjsTTIyYDzRyKaMt
      QHatdufWDcfH+S6OmzBFRlj0lE0rndX4tAKk6VrJ0Bp5a6AAU02RZGHCpph2R6KMRj3toCVA
      jN25dWPz0C1oeXpFjDEuQIpwoqeYqCMxgwZCaH7hmA6eG+Z5m/m1JIQUGYnp5qkFd2Si00Vh
      jLlu4/xTH1ouqzmujDLGB9ZStLoJJgamzSgsRbDcNlhmwdzb2mgEmfoPu2AMEELpViaYGCFh
      qWth7YayE6fPnjzzkKqNRQPJwoRNMZg2W1oVCTXCdCYMoe2773zz6/9r7cDHXu1HP3nj1o23
      3r23lXFlfN8QECZsusmnlGEaWs0J7cNdSTEVr7pRbWxv3MvYVE8ZQ00fKM2h9oLJEDnRKaKw
      tgkjID2wcrzhh4yGhYUTp8q6VpyzLCtLUz2hjG8xrspCA00vYcuJluWRo7C2ADWcus/kiysn
      ZU19/LHzuazMx1RXZQBQZUkMp04tmLBWMXVkQ9E2YQWrsLu5HuR6m3kzEACoMhLj8VMLpjQq
      pqb3gZhsnj29nO9NboTEUCUQGmgM3Nmxr6xVc7kUboXxGXwgxva37lYD2ZBzWVITL+TdZFyA
      hAbKk++/vbNT9588Vcl4HcYYpnnszlHzyLwphyzPY3UiE6YIE5Y3eeZl2/neDNV4WUYAKN90
      sReSSAOJMD5f8ixOt5RGilpYy4Qh9MwHfhVTpirJp6imo9MHEhooT7yQBHl/pJlqYeurt77z
      4tfuHfo5LijmAyHhROdLIyDeiGWH/jRVkCxny0QTkHUlz36guAkTGihf3AB7YQ6V77i8KNLI
      Jcu2uCDNPLU0m6+eiARIkYQTnTNuQPw8BAhip6xkiMIY+/mVy3fvvhfgPG9zIyCWKgPwraKF
      CcsTx8eNXAQodltS1Lxj7RzHV1QFKbmejusGxNSECRsLto9H3dO5L617rsgZnOiD2uHuXq1g
      5BmFCR9ofGDKAkyzz/uymAnL5ANhr7aycqbm5TnWw2d6QNTCxgBKdcz7YDJ0JCL0wY/+tSAM
      NT3PjsSgLUDCB8oZ3qzH0h+Xm0CmfqB33/75rdV3cWnlr//aM3ktyMeEC5AoZeQOY4AQsMwS
      xIB1RmFpZ+Nn5mb268EHnryQaTmd+JhqiugHGgsMGG8XzgghTG6eNpctE+37+OEL5y1Dz76m
      iLgJE6PNOUIoax5SmdmJDmlzdynImAeyaweX33jDDWnYqL917ebae+/sHNQyLs7HVBNO9Bho
      hMRUZYRQdq2O2+ddtmziKLR9IElWKkUjwAwZeujWdwJWwHJBV1I31TPGAhIJkDBhedIIiKnJ
      fh5Z3zB23mWKc3fbJuze+gaSJATMr+81qFIpFmVJtixLllP2mEVzzSDyQHnDNZAqS9krB5g0
      +1lbpAzj4cyZB4tOMGMqBeP4R+aOZ1wWNOPM5s8yEpsr5AnXQIYq+ZgWsnmtIW121AOkCegi
      0UOGaVb3tuzcOgSAMoYgZlzzuq6gpYEMVc5ekMeEKvEjm9OfmUqC9e2qpeXWFB3NNUPTOxMi
      lBuNAHMNlF2AQtLWQAhG9srbUZismyePL7H8xv+iuebmyoT85IcbEEtTdEX28veBRqP9n7eu
      X/Odgz0nt1pYNNcMwoTljRsQS8vHhHX4QKPTFqBHn3zS8eh8IbdaGKUgS/EEgxCh3HADbHEn
      OrPPGveBsoXx9zbKs3NZhLELDxM+1wypjKtgANyEGUoeGoh0aqCUiUSEHrv4zCOUsPzmwhpB
      cygMUqU4BQPgJkxXJQ9njsJozAca/eZ3tI9JUp5zqU6AC3rz+rlUbQQRLRMmZzdhXRoovQnL
      HccnBS3SQMKE5UnThOWdB0IAo4rQGAXI9WMa6Bdhwih9357w4vrE0mRDkQaE8UO+/W4faETG
      qYECEqUlEQCb+IE9/+obVzdr3iRfcWK4Abb0I8L4f/oXl5whtkzt8IFGZ6wCFNdASEYotymC
      4Vjdcw7dcJKvODGaiURVGjAa9t6+O8zBFb0aaKTv+ZhNWKwwIsvSqNvoZ6TWCN+vAhQQqsmS
      MTAT7fh4GAHq8IEQktBoG2yM14m29HaUN+EDexhjNQ9XG+9PAeIN0frARKLtY3tIDRQbBhyp
      KZExNmYTpv3CBIhQ5gb4sBFM7BXHzZf/6p1du7n1BWMMIdAV2e+fBxpagKgaq8aPJECUjdWE
      xZxoAJjwiU8Bpl5Iq+8jE/bKte27+80dcxkAAqQrUr+mRMaY45NhTJgTYEuPeRqjDGbQsWqg
      Rtica+ZM+MQnn1BZQofvIxO2W/d37aZCjZmwZA0UYBoSavtHR2G2h4tpPQ3KWMIgM6Nkd79a
      MBRJswwt/aRzvJQBzfM4JydAAaaLJf19o4EYY1s1b6vmQev8YgTchCVrC9vHCMEwJsz2cTE2
      zz6aCaOQIB/Yd29duxqqsqlZFx9/hKbtEIo2SOSkmLvOguPj5ZI+zCd4X8DfCBcgPjCO0CAT
      5gRkrqA5Qwyq2z4u6SkFKCA0wYSRoGGHUFAkq1CUZRmlnV5rhMTo8oEmuFl9zcOLJWOAj3l/
      sVv3zx8rbdd9aPWzAoCmSH6f/RUcHy+XDTsYQoA8XIzNs490bKrj4wQNZFSWPvn8UvQwCNIE
      MowxP6RGbL+zCZ/4VGuESyV9+/2Sid6x/ceOl+/uu4w1O+qhOfGS/JHaPl4q6Uc60YwxJyBx
      J3okH8j28bicaMoAIYhrrwkfHV/zwoWS7pMcNkCZBjZr/rnFohNgBqwR8w36NVpxDTTUEcqs
      Y0R6pPmZsQpQ9+T2kadeYkIP3dzSNrUGnjFVVUJHTk65AXaHUPWpqTbC7DNxWzXvWEWXEKKU
      RRoIAPrpIJubsKOiMAbdPUCyNELFyfHGJkDxoTDOkbOFP7i5+6+/eS2vBdS8sGyqhiofuQ/c
      /3lz/Wtvruf1ur184dvXX3t7J+NFtmrectnQFCkgtNEZnWTSQAxQpwSNZCjsIMkHyoVeDXTk
      ePyNrXqOOzTWvbBsKKYmH7kX7k7dl3Pd2K+LAzfIPoO8VfWWy8ZiUd+p+414mwMC1rHJWBPb
      J6dmTS8kjLEBYVCyBhpegLyxCRChTOq8K6okhQNXdunuYS771nJqDVw2VUuTjzRPu7Yfz+Xn
      zk7dr3tZ01GHjXDGVJcrxlbNcwJsaVGrZ/K8i+13pAf70aXMYEQnOjkKy4WElQ00YSGh61Vv
      xsxtJsQJsKXJFVM7Mhm9a/uGkusZM51s1fzsTQGEMllGx8rGZs0PCY3XiPqZsKKuHNnjbHu4
      1Lkr5mgayCfj+uY5Pi7oHXdFHVgL23eCxaJG84uY+Cb5M6Z6ZDJ6zw4O8nPeu/AxqXthxooK
      v6MyQstlY6vqubHAW1OS91fgGuhIw1z3wi5FNZIAOeOLwtyAFDrLIIN3eHlrvfbUygwmuQXd
      fkgMVa5Y6uCbxxgLCR1sW7Nw6IbLZaOeTYD2nWDW0hBCy2V9q+65MRPWrynRafUTD35jdT9R
      Aw3rsTnB2ATI8bGl9wpQ35Vdunv49MqsnNPhzowxDxNDkY7UQAGhlqZQynJUfnH2neD0nGUP
      0Vo6gF3bXyhqALBQ1Hc7nWhDTW6L5iVSXZEHxyW2h0tGh9swkg/UCMZnwgJS0LpNWD8NxBi7
      sVW/cKxkarKb7bPmEMqAgSyhiqUObglyfVLUFVXuW1TKyHbNf3ChMFRCb8BF6v5S2QAuQHbA
      O+r5n/rNFvJWiIKuDK4G1r1uX3ukUoYbjk2A4iMZnAEaKCC01ggXilphiKBpGPjOaAihGVMb
      3JToBLigy2Ye8zGJbNa8s4tFx8dZbDNPAgGApkiEMtuPm7DkpkTe71HU5cGyW/fDLhN2ZL43
      zlg1ELYSNFCyAG3V/OWygRAyNSUXDRS09mYsm8pgAdp3gtmCZmiyl8fr9rJV807OGACQZaBg
      q+otl5vbSEkS1L0w+mz1PqLPU0NHaqBeEza8E80YG6cA+aRLAyn9Dy28slblZ38WdcXOY6v8
      oLW98JGqZdcOFop6xVTH1D3NlceA9z78RfjPRV3ZrvsdJqx/x0FxGBPWpYGG9oF4U9IYNVBS
      FJasgS6vHV48WQGAsqnUMufcIOaB6coRw797tr9Q1OcsdX88kfyu7S+UdDVbL9RW3Y8EaLls
      rO45htp2ovu8QQYARV1xBpbDupqBYJQojBcbxqqBhjJhjLGb2/bDyyUAKBtqrZGDBqo1wrKp
      AoCuJnjHb7x3ELS+tTzAmS1oB85YBMgLqaHImiL1diZd3ajVhlN78d7O5bJRa+Co9pIYxoet
      PaOGMWFdTnRX1w1j7Cfv7CX+L2UgjU8D8T3Y4r/plwcilHkhKRsKAJRNNRcNVPNCfkFFQoyx
      eAITE/q5r1x6b7/BH3ITNmdp+07+Jiza6DjRRP6XH77znbc2h7kOoSySmOWyYcTGcPSkMJ5n
      cRFCR7oEdb/bhHX5QJTBH3/1Ck0yauPVQEmljGQNxPcp5gW/spGPCas1cNlQAQAhZKgd03c3
      t+3NqvfOrs0f7jvBXEGbLWjjSEbbPrZUWZbQjJUQDB66wV9e2z4yOvNCoirtuuKxsm5q7TbR
      xDA+ckCLujIgCmMMbL87E93lA4WEbtW8RDXGdygfnwYi3RpISnYkQ0Kj0dqymZMJ88JSq6xm
      qB0R1ivXtv7O0ydv7zj8Id8nZa6g7Y/BhB244WxBA4AZU+0th4WE7dr+YB8FWkY2kpjFklHQ
      2jUKQ5V7BzMiB/QoE8b8kHadktulgbZqnh/SxGKwE5CClnTELsPeS9997bW//Nbq+u7g9zaA
      Xg2kylKY5J3VY5Fk2VCzF64BoO6FFbP5xTK1dksQZeynqwe/88GVO20BIqYml40cTKft4y4V
      u2f78wUNACpWggnDhH7s4YUf30n2MCJ26v5Csb0V9GJJL+hK1KBhqFJvv0pUxxisgQC6u0ah
      Jw+0dtCgwBJPkePltgQBQopRLmgrp8+sr911XTfdUQdJApRswg7cgH9NgUdheYTT1ZYJA4BS
      zCyuHTQqhnJ2scBHPDGhlDFNlkxNbmTLA1HKPvs/3/jSq7fiJonnt4BroM73FRIKCH7z8WOv
      XN8afOV399yVWSt6OGOpf//ZU9FDQ00I420fF3UZAAq6PEADJdrOrihs7aBxvGIm3hTbw0Wj
      zyHfzz7z7MnTZz/4zMV0Rx0wxgLMutRbPyd63wnmrObNttR8Eok1L4wEKJ6M/t717U9cWCrq
      Skioj4kTEEtTEEJW5hLKi1c2Ts8VLt09vL1jR7+M8jcVS612+li1Rlgx1QvLpdVdZ/DoyJV7
      zSQZR0LoMx8+E6kNXcmggXraEaHHB7p34D5xopxYkOavkixAqqpquqGm7ZLhAR4ariMxroEU
      OZ/5eddvj+vOWE3/gzH2g1u7H3t4ASE0a2n7TuAGuJUukkJCU/f8H7jB/3j93c++8PAffeqR
      L3z7RvQWNmvesYoOAJUeDXTYCCumKknoyZMzl+5WB1z87a36+eViv78mjsfbPuGucUFXBtRx
      CWO9GwN11cLWq96jx8uJBWmu58biRPf2s8IRGqgtQLmcycKbgfjPUQi9ZweUsaWSDgCn56z3
      9t1DN6xYGgC0hvTSKCHG2H945eY/fO7Bsqk+eqz08HLpa2/e43+KNFCvJjhwgllLA4BPPrb0
      8tW+VszHhFJmqH2/yYmJrqgd0dTkRtC3DOf01CuhUwPxcdgLx0oja6CMxA85aK+sz5lzHRpI
      knoH5b57ffs/v3ZnpAV4mERNhjNWs6PjG1c2PnF+kevFc0uF29tO1CYBzYxcGtl9d8/drHov
      PLoMAAihf/yJc1/52d092weAqhtWTBWSSgo8/wQAv7Iy+/N71cRECwDc3nbOLRUHnEyoKwmZ
      6EgyJDTogIC6152Ghs4ojDLAhC2V9GpSR0NfJzo7jHXbL+jfznHohrMtH0hCIKGOlqC6F37x
      OzdubtdHeXXmhdRQm2+tYqqHjWCz6r301ubfa7mf5xaLt3fs6C5C88uaRgO9effwuYcWokRN
      UVf+0cfP/buX32aMReftFXpKCrzEAQCaIsn9y09X7h0+ebKS+CdOHxM2VEN03e+upAJAfDEh
      oYqMKlZCDgJahnIsAoRjmdMIhFCiLo2H8V3+LGPsz753+x984NRIoRlhDFh7ATOmeuCGX3zp
      xh8+/1DUBXFixlw/bPBCWOtpWrqptMtrhxdXOu7xJy4sugH50e09xpgmSwCgK1KAabxnLa78
      BhTAL61VL56aGfDqRpIJc3ryy4nYXncvBzT3wGhecLvuL5eNfi0x9vhMWKOnlwP6b6Nf98L4
      u43PUVxdr93esX/72ZWRur14L0ekAi1d+dGtXVVGHzk7Hz1nxlRrjXC71r6Lc4WU9dQ7u87Z
      hUL8Nwihf/apC3/6resFQ+HLQAh15Vfiym9Ao8vqrvPAvJX4J46uJCQSba9jf9x+9HaTQacP
      tHbgnpo1S4ZST8oDuQFOTiSm5sd39q6sVSGplwP6HJfBZ7OLWpcAEQCglH3xpbf/+FOPmJoc
      9NlCIJGoGYhjqLIiS5/75IW4VVVkqaArd3bt+dZxbbOpktGOjyljvbfheMX8nQ+uLMYSgEpn
      t26UY4T+FUDHx6osDb5HqoyCnvHtuAlTpGbs8rPV/dc7k5b1npEM6NzKcu2gcWrW7Kcg+QZi
      eQrQ1y+tv3JtC5qp9B4NlLR7I6ZMRig+QVZoBSxOQBiwc4tFCSFVTsh29CM6qJVTNpT//QfP
      LZa6z/U7VjFu7zhRy8CcpR2MPnyzuus8OF9InNz73V89/flPPxI97GoJiu++lVjoAIAbm/Xz
      y6XBu6MghHpzOW6sn7igK06AAeDFKxv/4mtvxQtndpIP1KWBTs5YEkKJDeO8WpWbADHGbmzW
      r23UoI8GkoDPUHYQxo4M5kQdHdv1ZgyMEJQMZfgSh+sTK6bSEEKVpHGzs4vFWiOMnpmuo6Mr
      yxdHllD89pR0pR4LxHDsqNtKUqkVAC7fq17sc/Euuj5WEkujFHWZF+RvbNY/86Ez/+l7t6On
      dTkP0bIjfbNx6J2YMSQElCXs8c3LiLkJUCMkmiLVvJAyFh+djEBJIWX8yGBOpM9vb9vnFpsJ
      tLKhJpZjEomnoQdwbrFQNJQoWJuz0piwI53ciHgymg+BKDE3P1mA7h4OI0AJ+yvEZp15CgoT
      Sij7zIdOv/Hewe3tZq48MYyPNBBjbLPmHWv2Yndvhcb7Wa0cfaCbW/Yjx0rHKua9g4bb000G
      fU474Bn9+G/KRrMcdnvHObfYdE7nioPu7o3NejwCP3TDsnl0DLIya5UMNTIQxR4lt3bg7tT9
      AVdgjHE388jXgs5yWM0Li7oSvXTFVBMDwI2qd2JmqIv3GphIq/OC/Nvb9vnlkiShf/43H/uT
      F69ydWInBWuyhLiZowxCwnRVRgiVez4cBkAZyFJ+7RyX1w4vrsw8fqL81nqtt58V+kRh+62E
      bESkbFb3nAda0c1CUY92uO3lz7536wc329tfvLVefXipdOSCT86a//JvPRY9tLSOfTxCQj/3
      lUuvXt8ecIVqI9QUyeyfJo5TsbSoIFBthBWr/bWZSZp+tD1sqJIyxK4PvT5S3FXgOcxImT28
      VJwvaG9v2dAnXbRcNt7bd/edAMfbbHosAKHNXHFuAvTz9doTJypPnZq5tHbo+B07x3IS80AH
      bjDXeUYiN2GMsc2qd7zSbAReKGoDBOjACV5qVQMoY6+/s//hs3NHLliVpQ880H6a1TkQ8hc/
      u4sABrwoNHVkccgtAOMa6NAN41+bStL043sH7sqcNczFEXR8sIR21JF4DvPSWvWpUzMAgBD6
      9BPHX766CUkjGQBgqPI/ef6hL3z7+lbdX2pFHiWju0vCCwkvsOQjQJSyd/fcBxasR4+Xrm/U
      eueaoXlkWPc/JmkgpdYIfUwpY9GXmw/U9Xt1TNnqnsMV70bVs1Q50WsejCojShmPtDer3jcu
      b/zRb17YGShAl9cOnxrOyYVOKdm1/fli+12XDLU30fLOTnd6qR9d59Hywee2adYV28e3d+xz
      S02H8rmHFn54a48xZvfsX8D59fOLPqZf/X9rp1ptJL39TBtV7/iMAXkJkO1jU5UUSSpoihfS
      aiNM9IEIY+uHjfXDRlQYOnDDuUKnAJlqzQurjbBsth0UPtKb+NI8ZHj29Oybdw8B4Ps3dn79
      wlKKjUERQqoire469w4af/rt63/4/EPHK+bgWZ8ra9UnBtYZ4sTtVDyLCAAloyNA48Rv+WC0
      zr1au8YZioayZ/ua3E6VGKo0a6kbVY9QlnhOD0Lo859+5L/9+N3IvZvp2eRk7cA9NWNBXgJ0
      baP26PEyAEgSOjNvXV2vmUkbTH/03Py//c6Nf/PNa5//6mX+Gz7XF3+OpcmuT3h+JfrlrKX2
      61n2MdEV6YXHll++usUYe+3mzscfXkj3Lp57aOFLr97+4ks3zi8XP3J2vtAKgPuxa/tLJWPI
      i5dizZa7dkeTYVFX7J4kxe2ddhA6mAfnC/G2RqfTsynoyk9W9x89Xo6+VAihFx5dfvnq1oBv
      2VJJ/5PfeuLp080AMypIR/AcI0DSPtEpuLRWfWql+WJPnKx84/JGr2uJEPrsC+cBIMD09778
      E75zVrURdO0JpMgSpqzr49PVvjtq+5jqivzkycq/f/ntXdv3Q3KsMuxN7eL3f+1s/GFRV5wA
      99vhizIWUqarw34D4wX5eCEMWv571wvt2kHczA3gD37jod//rz/76Ll5njqxg44mjaKu/HR1
      /7djTYwA8PwjS5/98zcHHJGKEPobF49HDyumenPbjj/h3kGDV3nz0UBvrVcfP1HmPz91asbr
      6WeNo8po1lJ5hFzv8eNUCWFCb+84ZxfbGmjAjto8H2qo8gPzhS//1epHzi2k3ti6C0WWJNS3
      SuX6xFTlAY0WXRRiY+pdJowfshQvF2BCo0LskcwWtM98+Mx//G6zm9bpPGWroMuOT7qSVTOW
      yhjr10PSS6+bv1n1+Bf1/wMq6GIFxFqiGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Paused No Traffic' width='192'>
      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
      pgllnogAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Status Changes by Channel' width='192'>
      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
      2r8BCAy6Y/72VN0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Status Changes by Hotel' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Impressions by Travel Window' width='191'>
      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
      5n08jHmpUswAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Budget, Spend, and Coverage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Budget by Market Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Market Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Budget and Ad Coverage by Hotel Data' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9Z7Mlx3mgmaayfB1vrzftHYBGw1MACNCLEqWY
      CEXsftjYn6I/sSutRiOJq1kTMyHuSBpRpOgBEq6Bbrj2ff3xtrxNsx9uo/t2o9EXRJMAR7zP
      pxv3VFbmqcpT+eRbb2VBIQQ44IDPCvqiG3DA/9gcdKADHoqDDnTAQ3HQgQ54KA460AEPxUEH
      OuChOOhABzwUBx3ogIfioAMd8FAcdKADHoqDDnTAQ3HQgQ54KCQAgBAiiqIvuiUH/A8JvH03
      XuzCOcIYAMC5QBAIABBCtz8FACCE7vkbQig4FxAiCDnnAELOGMYShLdKIYQ457v7YZQKALAk
      wY9awDmHEEII79O6z4vdL844hxDsHpPd1nLOJYk8uGmcMQEhZwwhBBGCQjAuABC7BwchRClF
      CAGw+xWFABCjWxd+xiiEiHMBBIcIQwiE4BAizrkkSQ9uM+ecC4EgBB+dIwDuHPD7br9nMy4A
      RHd/MSEEpRQhjPHuKQYIfeybC8H37J9zfqeV0/72z966QsJW8/RX55XJjz8cl3EgaZqu6HrO
      Elnaam+VKwuKZZ0+VPznf3pDUmGt0RwN+4tzM6Ezrhx7+nAjZ3duvHuj2x+MFpaWdBlxxgPf
      hbKhyFgW2eyRR9/88X8b+OCJx44gSfOjzMRZq9ORrMYLzz0pfXHD6bh34/pm6Lv9leXZnZ12
      1waz+QwajcizX/7KV6QHdqA3X/k3LwF2jOt5oeVnjy5U3/7gqsIDs7bc6Q++/sLTr73yi0yA
      fHlm3O/kdaSWlx47eWi37M7G9RvX1ns+P3ukSuVyq7Wdl8Khw3ONhZeeOfvgjnvhrdfDmAdB
      x/O1Rx8/ydMgwblTC7kfvXH92HwhiDIuq9ybIKtaVLPNrdE0COdr1uKxs0VD9jo3PhwKCydB
      yMpFNYkTL5POnVz5+//89ydOPSZpVtngrY5XbtROHFm9q1Yav/X2u4phgiwtlEq9Xg//+Z//
      +e5HmpEfD3sYZLnq0ubaDZ6EWFFF4r3/wYeZUiY8ZLHT6diFRqNZ1oNIGrWvJxQkHHQ315Ek
      V2YXvfGgPjv/o+9//+iRlfY0hLE7HAynoyGWlYntbl//QKutZv5EUeDN6+tB4F9b20QAIIkg
      QRvzKzL+7D3gIZEVMJ5k5WqRAHDo2DGn1+ayqilyszlXqxQfXLbT7QhEVMxlRY2TlKVRxKWS
      pfqp4FlMVE1WVBmJMOF5Q4UYJSlbmJvZLXvtw/eQZgAI86Vqo2TsdPqqxM3KQhb5S8uLH//9
      76Xf7aSZkCSqYel6ayBiG1uz8aSbRG7PDpIw0Ex1uLW92R0nwZAm1KFyOm3nGyt5TXrn/BsT
      N+wP+sPeAEqgt7Uh5MLcXHU4mhoSs/KFVm+405lW8lqj0dhbqWDJL37+ip9Q3Sr0W1uQR3eG
      sN846zeuMMk4vLzwW9r/AZ8/aeiMQ9Cs5G//B+6OmgcSfcBnY88VSAjK2D3uxhkTtz4EGEMu
      AEaQcyEEwPiWXHPOAQAYY8E5QAgILgRACAnOuRBCACG4JEmcc4zx7v8w/uKGq/shhOBcQACE
      4AAhzhiCECCE72ej98AYBQByLiQJCyEgAJRzsDt1EELCmGYUIcgBEFxgBAFEu4cOAEBpBgBk
      jGOMIIScCwgFhIgLQfaVaMaYEBjBvVa+ezrue3jvSLQQlHEEAQdAwoix3e0FowxhDCHknAEA
      dxv/ibVzjhBkbI9Ecxb/xf/2N//hz77T7Q1NgrwMSkTO8ckvP1gHGeQqeezoouNR2dC7mzd0
      PW+VqhLIzpw+9f1//b6AZLZRHw+GjZVF4Y9R8cjZ43Ox2/vH//6jmKPpNPjSC0+JKIiY5Dlj
      DHk+XyEyPnz8TMFU9z1DnwOT3vaHm/3IdnIGTpLoZss/NG+YtSNPnDmyb9k3X/1JBsjUy04d
      bk6oURb25Y5TIIlZW7Eno+efOXvxrTdbQ3t59Ug06RvVRhjGzzzx2G7ZtUvnR4kRehNNSjkq
      MJpEXr+5dMqeTl544bkHd94L59+IEu77HddXHz17kqdBivMnF3I/efP6kflCuCvR7gRalZKa
      bWyN7CCaq5lLxx8vaugf/uG/zRZRbC4WiOj3O6uHDrl+Mtm+ml88VauU+WRjwyW1ksqiCBJV
      iLRQnlldnAUAAJa89fYFDiRZRkLA7vbWHYnevPQOJfIHH671x47d3UYEr233nnni5MUrXZqG
      R1bn/VHHduO19qBkkemgNw45kcnhpVnbj+NpL0iyIOajcRtwYJXnWDQxS7Xz59+1FFGdW0U8
      CFz/0pWb5Wol8wfrLZsh9NipYw912n9z9LvtsZcULT2nkfHUJqqhGroiq7PN2r5le72u57oc
      EE1Fw5FTyJuDkd2sFkajCdFMQaNWd3zs+NFBpxWkgoA4X5uvFnO7ZT3fS+Kw2lxKg3GSMKQa
      Ck4nY1fLlRfnGg8ObAy6nSQTEmaGRG60hyBxUG4unnST2O05QRKGmqEMt7e3etMkGLGUuUzO
      7E6usVLQid3dGIc8TRMmJMvSB9vrnWmoYd4bTxXdMnCWIXk6GWyv71CsaDKmcaDqpqIqkCZr
      m5tpnAxHYyjrlir9FiX6gN8H9hloD/h3RpqmlNLf4A4PrkC/dwghkiRGSJJlcuefnDEBgbgV
      AWeMQQgBvDdafU8kGhxcgX4vEe//6ufa/OHI9QlMAdJKtbLF7bc2Aqezvrq8oBi5fr9LeLJy
      9qX5sra3JMuCn/zsjWK5JCEKkWoVCgd343/vgBA1mrOmzPv9gRtRmtrbrSHEcuwMrWLxxvX1
      nU6Pp6ETZh+/l4IlArOwNxiM/JhFYWt762AI+30ndCcJVIuW/usWTALHy/BBJPqAh+KuSHRG
      KSGEUro3Hv3xDAFKM4zvJDlQSoUQhJCPtoSU3opoc0YzJpQ9skYpRRjfq2ZfNLsB3DRJiSwB
      ACllGAGIyW2p3Ld4HMeSJEGEGKWyLKdJgjHmAAjOMUYCIIxAljEEBZLI7cBxliYQS4wyQrAQ
      gFIGgUAYU8pUVXlwpYxSyoWEoQDwdshYCME+djvh1vaMfRShFkkcC4hlggFECEKapSnlmqoK
      wQBAQtw/lr1bAeMc34lfg72R6Ogv/ve//c53vvHqW+899chRZ+IlkqKKKPGdjidWV1ZZYmOE
      tXzN3b4a6/mcjO2pf+qJp99+5d9GbvzIsZUk9ns2K5asLKYvvvAsAODDt14ZilwOxkLShESe
      euzMu2++wtSSoZJRf1CtVwTWTx1bvX9bP0fGvRtXbwx2uvbyUpEmPMvo3NLseOwOBsM//vY3
      H1zWmwxsz3/97UuzjUISeNMQ/uEffuXGpYsBMLLIpb4TIUXXzbMnVi+8fyVyh8fOfXl5prRb
      duPqxa1e0HfCR+ZzDlDcIFOy8dTJyguHXnz6sX3SOd5+M02F47Y8Xzv96DGeBpQUTy3mfvLm
      jcNz+TDKhKIyZwLMclmjG1tDO4znKsbyySeKBv7nf/ivc6uHGc1ks9So17dvfEDTJNdYpnZr
      mBqNAg4Calmaqmp+nKHEry0fnauVAACAxq+/fp6YhtMfWIWSppE7keitSxe4rHxwdUdRCJt2
      AwZHfqxiFDpD2/V3urasYG/YlvQSzsJpytNxiwuCrApPQ13Gvu/FSdLv9kKG8qZZMEmYQYLB
      latXels3Rz7UDKlRMN69vJZlaRh469euTLxA0fMLs40HHKbPB1mBo2Gk4DhDCmJZzDGLXd2w
      bMdeWT2CHzjTGPVbbgIxDWMGCIJJRucWFm9cu2aoEtZyqsQBJALLJQ2OAqrALOFSztIVWQYA
      uJ7b6XR0w1ycrXsJi6PY1HCuPEuTcHFp4cHpHKNeN86ELAlDJhu9CaY+smbjaS+NvL4bplGk
      GsqotdMaOGkw4hnwuUy9vtVYLhhyp9Op5jQ34RM3qlcrkWcjLAdh6E0GQcqyJEAQ2Y47GU+i
      JMUIAUxq5SIAALD0/DsX1EKZOcP2JCCKfiDRBzwUBznRBzwUd0l0mmUIQg6ATMg92yVxjDEW
      EBEJg938WcaIJDHGAAC7PiWEyDK6O3KTj+3hdxkhdvNWhOAMQEwpVVWZMSFJ+6edZGnCAcII
      Cs4gJhJGlFJKMwRRxriuq0mcYIQARJRmEkYASeSj3aZJjLBEKUMQYCILzjCCXED84FETAAAA
      o1nGBMFQAHS7nbt5zfc9+HskGqRJDCDGGO+tSAgeRbGmaYIzAbFgNKVU17QH7UqIuyT6L//i
      b584c2pj2j91+Lg7Gsr5IuKpJiuFmdUf/b9/qZfr3GgcauZiKgBFBKcZkIaDAQfoO3/8RxIC
      Tn/jv/zowtG5XL83PnbypO1EpgGymGpWfunQsZz2uxv1HvdurnXoZNB+5NTqjWvXbrS8l//g
      1ChAT5zZP1/gjVd/Wl08trW2oaNAaxw/vVL9yatvlTVhNFZHg+Fzjx/9l3/9+fHjh/tDR0d0
      4MelUuW5px7fLbt1/b1eQNzJqJCDRK65vjuXY6J++vh8ed96L7x9Pk2547Y8Xz31yDGeBlQu
      nV7I/fT8jcMzuSDOgKJRZwyMXYkeOWE8W9FXTj1ZNMjrr/xM1uRpIJUr+UbJGI5cNVectfir
      FzeWl5rBqD3l+QKcvLvlPXNyiSv5Wsmam50FAAiWvvXW28Op3SiXkKRASPdK9EWhKNstV7NI
      bI+uXbsR4bxJ4OX33zv79NPOZOBMp72pG/tjs1AGXBp11+NUMCQZKpmfrQ8m7vr1qxJkPsOY
      pYN+d3N7YJTyIEs+vHzziXOPPlgJv1hkBU4mVFdB5E6wrHCBFE2NU/ZpBB9CMXJCUyMIizCI
      KaWTqV0uFyjjzbkFZzJw7SnRiiz1vYjN1fIUafMzt7JEXM91HRdLCAFuleclGPMkZHKhUc7t
      W++o340zrhBhEGWzP5VYgHMz0bSXxd7AjbIoUg1l0m63h04aTgAVvlCY37fqywVdjiN/PJ1O
      h1NOlNQeRWnMIGnWStPRYGAHhoKBkBlIiWw4o17eVH2mzNSKAAAg2Ltvvw1lZTToh2GUCraP
      RAuera23Dx1a+jSn4b5ksdca+svzzc+8hwO+WOzxgBglQ713ABn3e7lq4yASfcBDcZdEJ2mK
      EWJC7EYp9oUzmlIuONM+Uq0syyRCgBCcMwARy9KMCV3X7hm+siyTJEJphiBgXCAsSRgBABij
      nIvbDkjTFGKcpRlRFPzbHAKF4IzxNM0g4ABhwQVGAGKJfoJF7iVNYoglmlGMAJJkwbI4pRKG
      siynGdMUOYqi3fkHo1QmmAMkk1u/5iSOACYYAMYyTBTBOYIAfrpIPc3SjAkiIQEQ+RQSvfcG
      QxJHACIsEQkjwVlK+e7dAiFE4PtEUffePPg4WZbtVpGl6R6JpuH/8Zd/tyvRJ5aXBQWpQGGW
      1QtWFrkjjxq6RCQ5SwKZ6EKSUo6OlMH//ZP3w+nw+ScfBUQXLEszUKwaqe9tbLRmjz5BxzfH
      brB69Jg3GRu5vJ+kJAkjyrBsmIbcHUyOVMlPz19eOn6uaEo0CvujTuaxx198aXWuBgB49Yf/
      nzlz+L3zb9ZWT8/ViypIHMcNhVovW4k/TSmUNc2ZBrlaSQdJfzB97JnnC/pnmf2NezdvbIXD
      fvuxRw/dvLE5CtCTjyyvXbu6Oab/6//8Jw+eEXW3rl2+2c6EtDJXinHpxGLpwsUPVRC5KUaa
      9eUnjn/vv37v0Wee7W9cdXwKCF4+dPzRE7ceLHztFz+eO/LI5to6TkfWzElnMirhrPn4s81P
      kSp+8Z23s0xMnR3fV0+eOcqTgKrlMwvWT8+vHZqxwigDqkbtkTAqFZ1ubA7tKJkta6unnyoa
      5I1f/lxXyPpUnFpt0jjYGqeH61p58URFBz/7xc81VZ6bXXR9T1c1jomI3dmVE5WCAQAQLH3z
      zfPjqbMwP2u7gYKSPRJ95V2hqjttR7NIFoU7azeHAXV9l/p2e2drGgqJSJBG3V6nt90euwGU
      tfmScen6eqFcGu5sT1NU1IikkKnrpHFCJKznq5iFp849c/X8L4BiQU6vrG3mVDkKncE0YTyR
      iFLJW9PpOM4QowHlsqmIvJkPOZJ5jCR8db2VeJOMcs6F4zn2qBf4XqtvO67jjLpJQs1cbmt9
      200Dd9hp96dHT5zSP9PjibICR30Xg4RLuSMrzVarF6eRoRsCSsuryw9+MtV1XdexqcDVWske
      jXSVmKUapLHjx5RRxLMoToIgrM0uRJ5jWDkI0dzMLTeHgNl+pskIIaGYZRnzWjEvFcqmvP+M
      dTzoRplQZGHIyvbQlnmErZl42s9ib+BFWRyrujJptztjNw3HgMNAqDwYmPWlgi7HUTDo93VD
      641sSaR+CqfddaOyULaUdrerEGl7Y5MJMBpOzIJlj/qKVSnlDQAAEOz9C+8gqwKjYXsUKJLY
      R6Lbnc7szMze/3Q67ZmZ2X2/3h0Eu7m2tXpo5TcyAmWRO41grWTd/s+k19Wqde1TBE4O+G1w
      INEHPBR3SXScJBghLMu7P+c0TWVZBkAkSaoo98kuEIJnlEsIhHFqGvpu8gYh5LbvCs7SjEKI
      dtNvGc0AkjCCnNEkowgiRZEBAJxllEMguHy3vN+OeHJGgygxDf32Ih5ZlmKJ3JbNNE2JLEMA
      0iQBAEiyvPvRnf+nKRAcIOm2wO4lTWKBME1TCIRAGHAhISAQUZX9jSpLYw4lBASjGYCYcS5B
      AbFEGVcViQskOGM0wxLJKNO1u+QmjkLGBWVcJhhjKUkzgiFRtE8zY9jNwZB3JfqjLyWEyLJM
      vt8c6I5EC5FRCgAghOyeMpkgz/V105L2vZALnlEOgCCEMEYZF3dJ9F/95d898cgpXDakTIyd
      tFQgk/74mZe/9suffF+TLLWQjxl87tzJX73yml4oQgBoNElJ/VCJ//Lq8PhSjfrTS2vthdVV
      QyHjsfPiSy8yf/DX3/3ewspSPlfSpTQKQkdoy7OV1B1tdl1ZU/IKPnHuS/3rb264SllyGTLT
      NCkUS1TwNAiGk+kf/9EfYQTeefN1Wcabw6BZK6dhUMpbV69trBxfYVE8dfxiubK5ufOnf/pt
      CMBrP/rHK5v+0195knv+wMlAPK5VqxzIPkdwdG0M69Vq8fmnzt5zWC68/WYUBmtbk69+9cmN
      G5vDEJW0dPn4uZW5/Z8Le+u1V4zKfL/dVVFkFcqX1gfNHPUTDImxVJeZ2ui3N0HkSUZeMopf
      fvbxvWXfePWnzZVTvU4r83qJMJRiVU/7RvP0I8f2X1Dg4jtv00xMnB3fU06cOcoSn6uV04u5
      n51fO9Q0gziDqp7ZI6GXdyXaiZOZonbokaeLKvzRD384M79IYzvLxHrP/w/fOvu9//LDx1/8
      8unD+9WbhT/40WvzM5UkDjMO+0P7To/bvnbp6MnVmzvj9tZ2GIZbO9t+ELS31t0gIRLAQNy4
      uU2zLA6dK1evbg+82J9Oph4hkp4vg8heu3mz3elJit5ubcdxvLF249LV6xDhxblav9u/du3m
      cNjrT0NDBr2d7QxKHCAM2Ha7ywXvDD0RTsajvuCs0+murW9NxsOYwmLOSEKnO5zomuJH6WTY
      Hwz7CUXXL79XqFa2NzY2164DwW5stAkhaeh1+mO9Op+T2fbGxvb29s2r17VSLeXgxo0bMkhl
      RbWHPTe4z2BdKRUEgNVaaerx06ePySBrLixPx6N9zyIAQDfMNM2qlcLi8nK/3y8XTKLnS8Wi
      JEFG+XQ8BkIYppGklNLkHt9cWlnx7EFzfsXM5XOFAs4iDvF9L/YfR5EJAzBv5ZsV4/pGK/Rs
      gdWtrY6Fo43e2LEdwTNnPN7c2Nzc2oSCcqQ505EXJgBCThPb9hhNhECKpgOA6s0m4Gz/WiGk
      WeTYdpYmAEqaSn6L6Ryu6+Zy+4fk95JG7iQQjT2LP+yl096pN+cx4ms3N1ZWV3/Hshp/TznI
      B/r94uDBwgMeHpGmmeAMEYVgmCYpkkgWhwwgmRAId5cYEfc18V2JJgSHYaTpOhD8dzfF4oDf
      GvxH//S9udXDI58aCqDTvrp01r75diiIoEmhOhNOx5DguYVl5k/mjz9eMvf0JJq8/qs3iWmN
      2lu1xrwqHyzz+/sIrMzOx+545IayJGm6QhDSrbxlGo1GbTwaAU6xYrHYW1u76Qbx3WX5ZDLm
      iDTKRXs67fSGB0PYAZ+dKHAPItEHPBR3RaKjKMYYMQAUjKhAMsEAgCxNkKTshiiTJLknSiE4
      c/0wl7PumVMzSpEk7S4a5ziuaeVuRzk5YwCiOPQyjnI5E360n6ltG2Ze2XMfcbe6LIm9ICoU
      C/ckOeyGVjnLXD/K56zdIPXHW/jRlxNpmspEcv0wn7M+9inPKAeCc0YhwnGSKgRBTNIktSzz
      wUfQdx0BsRDCNDTKeBjGuZyRZVkUZwQJTOSMcU0mnPMozfJ3701wljEBBGc0I4rGGc3ShMhy
      FGf53D71ZmkcZ1wlWAAsy3ci0Wl6/9sGt3MwABCe4wiIJCLrmpomqazItw5Cxj5Rn/dwO74P
      7nqwkAb/8a++e+6RU1MEnlks/ujd3uxMyUTZdDQUpZWqmnV2ula1VtCw70UuxS8//xQEwO1v
      /POrV88cnWGCT/u2XswLAIPJMI6z+uKMqpeVeOABPXJtRVP9iOdJ2uqPTj/15Stv/GgaiqOr
      M0EmlUuFlWbun/7pB8XyjGZo9bySCplB3N28cuTU08LZ2RyMVauWM8hoMFlYaKZZ6nmx7Xp/
      /O1vvvPmG/naTLe9GQZRbxo1a1Y0GUtmKaH8mafPvvWzn3CjLEuYiHjkpU8eqf/jG5vHZgzV
      sPq90fNf+YqKAQBg3Lt5s5V1OuuNopFQQBCJqA85aI2z/+V/+uMHe2LgDLYGYRY6BUu1Q+5E
      /FBN2uhOoVY6Wtdak5SxhPAASRpVis+ePbH3R9C6/u6WL08G3XoBAVzxAgdl04lN6ytHvnTu
      zIMDXe9euMApGNnbvqccPXWIx4HQa2cWrZ+/vb7aMIKYIlVPp0Oul6oG3dgcOXHaLCiHH3u2
      ZOAf/+D7c3PNbqxW5MQJ4lMnT21ut596/NQPf/wzVcZI0go5XdUMP0zKRYNmIqTi7OnjAADB
      sjde+9Vg4s0vL4XToayZdzrQ9rUrx08fXm9NmoebCJMoigVLp64rSWQ47ESQjTvbkaTHg4lc
      qIQJz2J/YEdFLaehuDOYYBCpWL9yfX1lZWnYbZnVhZ2tDbNIT87ldjZaG1vt0yeOBFE6aW1R
      bCEIDSuPlfTmjTWrWB158eHZYrUxE41HiajEk1aYkZmVw7XmnDcdFTVVUXRn3NeUZr+1AQhR
      YYyNmbzqrW20TUN3XG/S204pb7UnurmqEbxx/aZZKiZptHbzJi+Do3P5qTtVjJKkFzQWrO3Y
      BRVv7ozKiysVTVpcXCiUq9LWJsbYsHLU9SOOLMP0Jna1lMs4UB7Yg+IErCxU37scNOs1Ns2y
      pBOmSNEswKKNllMoFAJu1nOmILlWp3tP2SRjvmMjBIVA+VKFEAFSYZTycRxwAB6cmKIqskOz
      Qr6QU6XNnX7TgiSvbe30cjjeGqQyEHmFePZ0Og4jg0pQBkQPvLEfJiXDKJTKpmHwIPbtcYL0
      YWdrfaN/7tzpheVDyXhzZxoaChgOp1A2ssghimKHH73OgNPRZCrrJZiF46ldleQvXqLtYZcp
      +XLu114dAvDMDbOc+esWFO12Z3b218lIOeCTOZDoAx6KuyQ6jCIJIQaApt7OOhBxnKiquvuH
      EELTNM6ZEBAhkKSZqih7trmL0PdiyouF/O2hnKYJwGT/nIHPnSyJMg6zNFUIhpICBPuUdzQB
      AFHgcyQRBDmnAMsEiTCmgFNZkdOMW4bmuh6CgkGsyTLnGcCy+lHGcRh4SJKTJDV1NUnTKE5z
      poEkQrP7i/DdbY6jjGsy4gDfTmEWQiTJfc4FuFuiHXsKsGJqRCAi3UodEYHnSYqufIpkyL3s
      kegs+Ou/+u65M6cmkBppohXrcZoQkUqy6trOcy999ac//Fc/YasLDXs85FpVJkDC8h88+yQA
      4s03z587c+SdD24iCamKnEVeee7o5qU3h9NwZXVBkjXHCSsFxRkNbaF//eUX1QdniX7uXDj/
      BtYLg05PsxQiqZ4fffPrL3/Ksu++/Xpp7vDmzTVNSiqLp+RoeHmrj0GWqy4Aljz35GMXz782
      t3LE9uJht3Xy2OLOKH323Ondsv2dGztTgFlkYKrPHR/urKtpUDxy/Nqla9/86pf3qffiBc7A
      cLLl+8rRE4dYEgCj9shi7hdvr680jDDKkGak0wHTSjWDrW8OnSRr5uUjZ58rGfhn//bDxdVV
      L4hko1ArWjvd0bNnD39wZbNZMdv9KZGEoDTiynPPnbunNwmWvfbLVxWrpGuy6/gY7+lA29ev
      nDhzZKMzbSznBq2JmogoTWaatWzSW9/qnklEtTFrhY5ju4wDdzws1qqGrgy7bb1YSUN3bX3D
      c10qa+XUGw7HXGvoplWXlHa7mzeN7a4NQFUlag7jOGXqp1h05/NENy038C1D0XIFKOmG/msM
      6LMLiwMnqFVLgoXjbqtZK6q6mSM0ywKsmts7bUPXPS84fPS4xBMOsLz3xyOpLGwLrdBoVBKY
      NhcOycHAi2MEBRfgwVllmirbAS0VSgVd2u4MmzlIiL6908tJ8fYwU4DIqbJnO/YkSgxKsIJk
      IwpuSXS+WNaQCCTJdn2N+5vtybNPnhI0nk4T1/HUQl5MhiS/QD+2hqbg1HY9HRAZ6q7jSEb+
      EyV63O8MvfTYr/9IoeD0yuXLM4uHC9Y+D8Qc8O+AA4k+4KG4S6KDMJQwZkIgCD8uYlkacwEh
      kmSCsowSQuI4VlT19oVWcJ5kmSwhx4+K+RyjaUqFoij3XIqDICASzhjHCN1X9z5/hOBpxoDg
      glGBpCxNZAlziLKMfjxsfQ9R4DEBwyjWVJnISpKkgiaIKEJAJDIkyUxAyDJFU9OMm8ZdV+XA
      dwVAUZwoBNYX0aEAACAASURBVCuqHicJEhRJMhfQ2i88kSVRmHJNwVzg27nbD5DojzLcAQCA
      pjHAioTvP0Zymo6mTqlUvu90h3PKGLidhb1Xov3/9B+/e+7M6QnkdRWNPFEtKgCgMKKqgmSr
      YqWDD9b7yKxUi2p3eyenqwHF3/jmi6/99BdKvoQgALGbyKXjdfnn7+8cWagn3mSjM6w25w1N
      Gg/tl7/+VVVCPA3+r+9+99SjpzuTYLFs2X6cz5kAgiylqiYzpD/52MkHH7jfBrdX5yga0HG9
      SFi6llUrs53e8JvfeHmfl5688xaFKsGoXtIuXdtkQD5xdGE4mrRGYUXNFlZPbGytozicBLw2
      P/PlZ5/aW3bYXuv5Mk+9+WbhwoXLWqkJwsHS0dObm62vvvz8gyca7158VzAwmGz6nnLkxCpL
      fGg2zixYv7iwuVLTwpgiTU8mQ6aVaiZd3xi6CW3kydHHv1Qy5BvXLwOOWiOnMTurZXZrms40
      KtPh0E95rlA8VlOu92JycyOm2VyjPBiMiVU6d2Y3Ep2ef+3nXK0LGpQLxfFkukeib1w7+cix
      zY7dWKkOO+tbE2jkV6E7DIThud58rkYU7dCh1UtrbU9ipiFPJn6h3qSRu7G1nZ9TZnPQDcKc
      1VSsAhHXd7a3BU10MzcZj8z5mWGvHcZJbzKSM3fp0KFWZ2SVStNBZ3MULq8eVrkTUdn3nGJz
      6TN3goehUKnqY0dpVAGLMibSGBfzeuh7hirvG4mulss+RZZVxNyrVKp+mHKkLM3UonQ4WzNG
      o4mmmppOJANJ+N5nPARWVBSZzcXW1uW5xfmJE80tzA77E01VhAAPvpWhqbITZOViuWjgVm/c
      zEFM9J1WP4/jnVEqA5FT5cB1bDtOdaoQBQMzicZ+mBR17LphEthEtrq9gRz0RlSLIp9HvlWa
      5QgiLAWea4i4NU4UmHGIIbjVFMFoGNPI7XJFZUkfIv7FR6IP+GKhkedRUrQ+o0scSPQBD8Vd
      Eu0HAcGYaBoUwnUc3TAR5FPHL5dL97xyI0szyrl2t6zRNHaCpFTM37NxmiQcIFX5VCt+fCEI
      wdKUAcEFp5SLIAgljDEhacZqldKDy8ZhwBHBgNMslVRdAtyPkjQOEZa4gJVy0bFtWSYZB4Jm
      qiILLGu3nZfTlArBGacplnXBaZrEiqrFyf7pHGkchinXFcyBtFei4zjW7reiyB6JFnGcAAAI
      hgLJEoZJkuw+wykryj4RXsHjlO49lXcciGX+3/z1dx8/c5pUczAKL118b+7RFyw6rs8ubu7s
      SDwaDRwzl3eSTIPZYGQ3SnrAlHK5gCXlsTMnAABvvvHG3OLyztZaFnq2n2mGzrgANBkMR4V8
      UdLMokWwkj994vCDG/n5M+6t7Up0tWJRhoRgSzPlrXZ/FJFvvfT0gwN677z1K7My12t3dYVJ
      Rq2qsks709W5olWe6XZ6JYv863//l2KjMduovvfupZnFRdPQn3z81hsLd669ux3I40HPwlF9
      4USn250voLVhlAnpO9/48j4S/e57kIP+eNP35MPHV1nsQ6v5yKL1yoXNlZoWRBnWjWQyoGqp
      btL1zZGbZPUcOXbuD0oG/vE/f2/h6MnpdCqQvLx62J/0pr3tzKgbIsyQJkGaxTEHErEKz5w9
      fVetWfiDf3v16KEllsUAEc+x73SgnRvXTj16fKttN1SIGT929DAjUkG3RpOpMx1GsWMPY9X2
      rEYTq3opT33PVvL1/sg2DS1wJwHFecsY2+500PWciZ/IWHbnZuqymctFnuO6dd0cO55671JB
      vxMUKlVj4ijNKgaZrBq6oUdZdurkibcvXM4EePCv0soVMibq9bKK2TSkQDENI5W1XNXAaG5u
      c2u7WquUas3puFerVjACinpnfp5xEXoekZBh5ZlA1VIOE4ZYWLA0LsAnzLJvYWiy7dNyqVI0
      cWdoz1gAK/pOe5CX4p1RpkBuaUrgeY6TUo+qRA6hlSWT3Uh0c3E1sQeSbCYpHU/d5YLB5KPB
      eNje2ZErK7NlObRtBohW+tj0ASKCxHg8ohRIKHPG9qeVaM7iwShs1Pe5nt86LpFnx7Ba3Oci
      fMC/Aw4k+oCH4i6J9nyfYCzrOhTCtm3TtDASEyeolAq3C9A0ZlBS9qxxwTlNEiqE0HVtN2eA
      pglHksiiMBXF/K1I7u10As+ZxhQYmqLrdwVbsyQKYlrI34n8xlH4KZeqeEiEYEmS+X6oawQg
      OY5CWYJCUgkSqrrPHb0o8ACW4ziWoJAUNYpiCXKsGBjyNI41K8/SlEgooyylPGcZd9XLaRQn
      UZKpEgRISjKWN9WM8ihJi/l9ngpP4zBImK5KXGBNlT/6Ip8o0XuzxdPADoRWNBUAhO8Hpmnu
      lt3euKlYlUa1OB6Py+UyEKLb6zebe5aqFTxKMk1VAABxHKuqepdE/+1/uiXRIAyuvPv+7KMv
      PNqA/3axfWremLpJzKUXXvwDZ+vK+S2/aGqpN7Dy1UlE/+Ds4r98/y1ERKlc6Q8HM+VcFqcz
      Z57uXX9v9dChtavvCwGHPs2CcTWfmzt+7vrF15KMFyplQHmhVPBi/vTjZwAANy9f3PGQSd2M
      GAjLzz37xOUL5yOiqxLq7LSbs40UqM+eO/Pgw/rZGPfWrm0ERPh2nPLQCWGhbPKZueXLV69/
      Z7+XrVy6/OG426Ukf+LkypWLF7hWM1Awv3zk6o2bhxs5F5jD/qBp8q6L9bz+4t2R6O1r7667
      RGWB6wxrs4cj3zVRsDnhVr744nPn9pVoxEF3vBl48qFjKyz2UW7mkQXzlYtbyzU1jCjWjXjc
      p2qpbtH1jZGb0rolHX/i+aJOnGHr4pYb2P1CroxhvL4zqtVrzz9zdhKIBTP6h//nX4BZrWlp
      Z+D0R9OnXvhqNNpaOHp2Za4KaHLl8lXH92dr5aHtZf4eiW7duH76sePbbaehQszF0WNHmCzJ
      pqWJmxstJ/bj+txKnCXX1juEmKHv0TgY2VFpbgkhaeXw4d7O1TAIdCtnO16lWJQlydLVqe14
      fgAAGnYnC7OFVqdlzBwz8wUSp0noMS4FrVYGVW86SqFarNTXWpe2nBHS6/ONWuRPu3ZkWdAT
      InBHOxDNL/223utTqFTVLW8aiqJlxojzmNWac4NeTyY4ZeDBq+YpEs6Vq07Iutvbs4vLvaHT
      mJnp9QYEI4GV1I8IEhwRQoAk3RvIYBxEzhBbxVKxOOm31UIV8IQQDlj2KSRasYOsWqqUTak3
      dmdyECnGTmdYkOLWOFOAsDQl9H3XpSzINEWJsc6yiR8mRV3qDL1qwayVizISqsQVo5IrFAwj
      L4vt8ZRVm3Nmqcaj6apV2ukO52bqQ+pYhg4AEIK1ttZjbGloqBmGN6UHkegDHsQ9L4/LIs9N
      UTl/ZyA+kOgDHoq7JNr1/Nzd2QthGN6jup4zDVJer5Z3r69pmgLOBJIozQxNDaNE128ZXBpH
      QFJkaW8sQYRhLAQ3DAMAIASPwxDJmkI+y9Kqv0EEZ0nKhGCqqsRRFMapIkFMFNv1m/Xqg8tO
      RwNBNE2WOE2xYogssr1IU4mZK2RJrGlaHEWMZZSBwPd1Q5NVQ//IeT1nSnQL0CxLY0TkOMlY
      EhJVh1Aq5PcJgiRRECTMUCUOpL0SHUXRPafs1vZ7JDpLIiCpBMPb+eycppnAgmX3pILsmvJ9
      G8BoxgTaI9Gp93d/83++8OXnBuNJ3tR77Z6aL6qyYipAVozuxMXx5NiTL11+49XhNJhdaCAB
      7RjyyH7+mUdeO38Jy6Ykg8wemtU5zimWrSoJLvfjmZIReM7coTOHFxsApP/2/R8kNDI0szk/
      404mrZ0dUpr7w2+8bClfZJLruL92cydtdTaePnN4rTsNPV9TQOQ5wpqv16oPngXyLGz3p2vr
      63N1E0ml0yeXdrbWYs9Ti7XJxPnGV770y5+9curJRzfXd2TIS+VCd7zzzBO3pgLTwU7Hga49
      lulUKq1iGlaL+lZnFFPw9a+99ODE8ffeex8L2BltBJ68enSJxj7OzT66aL16cWu5qgZRJhlm
      POpnarFhsbWNoZeymoVPPPlCyZBv3rgKmNgeOLV6adjeqc0dOX6o/uGVdc6oG8aqyJqLS51u
      l0axVmo+9diJO7UK8cGF10eByJlaZPdTpX7n8tC6eePMYyfev7xDVIWFTkwhA0iTURCEw25r
      MLFpGk5t37By9Vpxageqpo56g3ypaJbnnPGonCOjqaMb2vbGxmjiqJoiqzqAGNJE0YzA99qt
      7ZSK2cXlal5NGRz0e1FKC/l8vWhG6W9yyaPPQKFSUxDXVNmPKaepqSrFcqXSXDJglu2niEHE
      FmYriiwBgThLR4NRc2FVwkgmBAu61e7NzDb6ra1itZErliWElT0/FQYl3VDr1aKZL2bekBNd
      EP3RU0dM09z3yRVTVxKBauXq4kx5MA1UghTN3OmMiiRpT/wojoRgURhMRqNuf2BosqznBUv9
      MBGCeX44HvY0lUzcKF+pO9ORouYSe1jMG4Oxx1hy4+aG57mGpjp+eFetgnba3akTSZCmDKg8
      PJDo33dYGk5DVinsk3h5Xyaj4YFEH/BQ3CPR3j3LYgZBsCu8t3HtSZDwRr2yR6KpQCTLMlNX
      gzA2jFsGl0QhJIp810v/eL/bU8x8wTJ297wba0aARQm9Zw3lz5PAszlSJAR4lkCihYEvSxBI
      Ws7c/8ESwZnnum4QmbqqGjkJUtePk8jXzZwQsJA3J+OJohCB5CT0ZSIxKBU+StVw7YmkaFGU
      yFhwAP0w1mTJMC0/jMvF+680epsk8v2YmZrEBNG1OxIdhuE9p+zW9nsj0XEIiUYwBEJESarK
      JE5STVMno4HAarmY2904jWOsqB8PR0VxvJvJE0fxvRL9/Iu7Eq11Wz2tUNQU1ZSFrJrtsSPF
      k+NPvnz5rV+OpkFztg4BdGIoIuf5Zx/91fkPJMXCkqDOyKjMck6RbNXl8HIvapaMwHPnD+9K
      dPb6r95QDA0DEUNsgoxKhmUZNLB3+pMvvfSNhXrh3sZ+LiRJcnPj+njoPHZq+d1334twqWyJ
      hdVTn6YDtdcvb0yBCuLAn8hGrabxS9uTI0vV9bXtFOMvnTn09ltvVueXRq3NIBG5nLawfPR2
      B3JG7a0RjbypaUIslSFIvUm72w9mDx154dl9ItHvvfcBFrAz3Ag8snx0icW+lJ97dNH65cWt
      paoSRlQyzGjUy5RSI0fX14duxmsmOvnUiyVDXrt5TTCx3Z+a+RxOPCZbo/b60y/90YfvvC2I
      XtHx1fZ4oWI5TvKlb34rtzcRV4gP3nntWmu8ONc0VM3P4B6JXrvxyNmTH15tKboqYo8CLBDW
      FRxG8bDbHtsup8nU8U0rX68WXS82DWMyHBUqJbM8600mFUueOJ5h6q2trantmYamqDrEBPNU
      M8ww2JVoUKmWMWT93ghiHKVUQqDfH4wm08X5Gf8eX/sc6WxvFGvzs7P1jIlcoahiVq3POLb9
      acoyAZFIStWZmXpdghwqZr6QlxRzabaMIWwPxhhLMsZmzrJUuVStu45zuywFWIKppqsIIEvH
      1dmVarU6t7QAGOP7qampqwlA9Wptca4ycSJDkRTNbHVHRZJ0pkEUx0KwOIzsyag3GJmGqhp5
      KOiuRPt+NBn1DV1BkgKQ5Dj2/NxMFMbFSu25px7v9vu6pmdUWDnr3hmooN1uXzCQATydTvV9
      X7byOdBrbVFJn2vsE2454HeTA4k+4KG4S6Id183n73I33/d37/XfxpmO/ITPNGp3JJpRjglN
      U9PQ/DA270h0AIkq3+/N2bu7HQ8HZqGsEOz7vizLtx97i8JAcA6Jpt0dXUzCMKYMI3i7SVkS
      ZVQwAK27H9hjWTL1IlWW7mn8JyE4i5MsCIJSKZ+mnHOqylJCRRAElfI+OXSBawtJiYJAlgAg
      uk6g7cdYUM0wwjgrF6zhcGyaWsqgIkGJkIwJ7aOcYmc6Vow8p2kah5pVZFmSJRGS5CRje1No
      7ksS+l5MTY1wIOnaLTt+gETviSmLMIwghPdkfTjTUURho1rOkhjJqsgSjsjdNxIAECyMs9vT
      nSS+S6Ld7/7t3z//wrP9WxLd1QplXVUNmSuK1RpPpWh64umvXH7r9bEd1JsVCJAdQxA7Lzz7
      2K/eel9Scwhz6oyMyhxnGVLMhhJf6kUzRcP3nflDZ1DY64y90A2NYqE7GP7Zn3zrlz/7sVmd
      swyTp+Odvo8hLuSVmeXT8eDaW1e7T5w+7CdUFhnEZBykdYtMJlEIhZTaUUq+/kffNmU8aV39
      +/9+/mvPn+s4YUXHmJCdncHc4ixz+h90oqWaGkzdx7/8rZnSfQ7oXsb9tQ8/2HZjdvTojBOR
      1vbak4fqV3puQpWvfe25Bz8M8MG75ye2T0mhoInFw6exRW7euDJubytWOQLKt196+saV96cR
      bTRmhq21Q4cOOcJ6/Pjibllv0r2y1nbtyZG53PWtgTMdgnhcWzgd+dPS008+OJb43vsfSAC2
      BhuhR5YOL9LYJ4X5RxfNX763vVRWgigjphUNe6lSbObo2sbIy1jVQKee/nLJwK/+9CdAMRs5
      aZxgGYtSsWgVKhtX34tT2KsbGzc7+Xo1C9wTT748X757GpFFP/jXH5aqzXw+x4PJWme6V6LX
      Hnn81KXrHdXQQRpwrCBJMlQpipJhrz31AiCyqeObVq5WLfphlrMsdzwuVcpmec637UpOtr3A
      ypmd7W3HD3OWqWgGlmQMMt3IRZHf7fVcZ5wzjdHUNQwDCDA3NzMZD1vtPsCyqSKsGCpBw/FE
      03NHl5pDJ5KxCOPY9zzPj+zJpFQqaLqhEiwphgTZ5lZLkrWzp49s7Qw1XQnDKPQDz3OZP5as
      iqJqpq5SgT/NgjeFSq1YKhMizTTrMhS6KlvlerFUJgTtW1g387lCQSOiUq93tje2NtaBpBYq
      NUzknC5t7bQURbGsXBoFqqIa+bKh3ZnVZAKZpt6slRmUTMOoV4qlUmnc3UbqvYuWfhzLUGOB
      GtX60nzV9pOcoWiG1e6NS1LatcMkTYRgSRy59qQ/nFiGqplFDLkfJgDAmYXlxZlqfziwvThv
      5WgwNfLFfLH8peefmfSGqm5wzgv5PPn4DB6i+bnZfreXxH5vMNQN64uX6AO+cIbDYaVa/fR5
      n9PJJF+6lXB/INEHPBR3SbTtOIXCXe52H4meDL2Ezzbrux02SZLbkWjL0PwgMs1bwpGEAZBV
      5ZMlejToWcWqQrDve4Qoykdq6XseZRRjyTDN22tDe84UybrxkS3GQYA1jSAU+j7jVECkaKby
      kfH5vg8AuN1yTpOIQkP9RJkZD3sZkGgU54smxErg+SqBgmgFax95AgC40zEFmFKqyVhSTQKp
      7SdIUF3X/SirlKxOq2tahsCygkSSJgyS0kd5385kRDTD98NizqCcB2GKRSYQCqJ0bqb54Gfj
      49BzI5bTJSaIod+R6CAI7jt12CvR/U4bqZaKGYUypBGQFJkoUHDGGYYAEVkA5E+HguimgmXd
      vG9u5O5TkXdL9N/95+eff6Y/mRQMrb3T0YoVU9MMwhXV3BlNpWhy8pmvXX7rjYkdVOplBJCd
      QJi4Lz539tU33iVaHkDGvbFenuUsRYrVVJMPu+GtdI7Dj+Cg2x57kRvpxXxvOPqzP/nWr37x
      M6M8YxmmyCbbfR8JVCzIMytnnPb1Dz68ZNXm5qoFiEjKgKqg3uZ1pbwIATSlgAt92Bs8/6d/
      UtPkwcaln1+8Ekb45MllU5FcN0CKPhgOSwbyfFCbKWLB/cnQWHry6ZNzn3QyVAK21ja6g6BU
      1tJpf2PEDi0W55ZPfJoOdP3qJbM809ra0nOKTIoFEn+42cvrchjGTM1/+/nH3vvwkqERIanR
      tK/nKzMLy7c7kGf3P3hty6PwWEOTGoc7azdB1C8feoKH7txM88H1vv/+hwSgNwZroUcWDy3S
      2CPFxccWzV+9t7NYJmFEiWmFw24qF5s5trYx9DJeNeDpZ14qGfjihYtEt3RDB4IjGmNN6nXC
      QqkgYgdjzGWlNnd068oFIFs1ExXnTyw0PpqK0vjV198QDNZnmttrV8NMukuiHzt3+srNrm6a
      kEZINogsG6oUJ+mw13GDCEFuO76Vy9dqpTjhhWLen05L1YpRmg1dt5qTvTCy8lavteOFSSGf
      UzSDyAqBzLAKSRT0BgPfm+Zz5sTxTcMEAszNzjjTcbs7AJKSU7FsWLoij8fThZnS6olHNVXN
      stR1vTRJgiiy8sXIs/0gUHL5cDIhmi4hvrW5M7u8nKss1MsGETQMvDTNXD8wDRPzdDKxE6gg
      Fmcc6+qD3n5qT8PDx48WDAgRVozcTL1UqTb2howfQK3RcKZjTVMxxEBkULXK5Yoi4UK5mtfJ
      VmdYK+gMyqqENVUtlCqe494um3GkaKRSylUbs5hTTVPMYhVHdn1hZd/X6VmGFgPUrDWW5+tu
      mBUs3TCsdn9SIknPiZI0FYKlSeK79mA8yVu6kSsSDHYlut6cKZcKmgQxUfPFUkb5oWPHDZxI
      et4L0qKlEyJVas0vPfloRPGo15rYH7VZcIVItuu3Wm1AFFVCBxJ9wK8Hy2I/5nnrVrTvQKIP
      eCjukuipbReLxb0fe55nWXelGtnjgRvz+dnGXonmiGRpmjN1L4isjyQ6Dn1I7uQ7u44NIDLM
      3O66abf37HkuyzJZz+kqYVmy0+o25+bvzpL+xPeOR4GbcSArhipjAIDveYZpQQh83xOCA0As
      61OtY++7U46U0Pd0BWeAsCxVJEj+//beq0uy67rzPOd678K79JnlUJYwhCMBgqQoUSIlrVb3
      Q6+lp/kg+gTzNGteZs2ablFSSxq1uin2qEmJFoSrQtmsqsys9CYyfMT1/p575qEKhSqArCwC
      kCg08veUa2WceyPi7jj3f/f5n70F9ck3vvv4joVIlgR5GvmAFkUGTtwQolhWNdePywW13x9I
      Ip8CKgl9liEzQBe0B54ZjFIviIIoKemyadluEAsMqRTK3FOYxCPfsUOkCHQOKFF4kBp+gogO
      w/CD1DPuHbYJTi4XNN/3GQpiksviSBA/+l25tskIyscd6w+d8oHvPSai//w//+WrX3lxMJ6o
      Itfe7whGURYEgUIcL+8PJlQ0OfPS76xeuWLa/kZJJwC0YpKInddeufTmuzcZQcMgxd6YNxoI
      JQQrN/jkTsevGaLv2q3F87s3f7bR95+7eD4IPCuAFDIVSYG0CGhs7W6njCEZxkunq52xefXK
      VaNS5Rlk236KSVWh++1xsVwADI8jx3Uj2Sh89dVXSALs3L724ys3Tl14hSHiXrsnyLyuqUSa
      mogVSNPqRgkn/rs//BZ5lKC4c3vZtc3DYTy/2BBhdmiCUyfr5sHoufMnj7yQN66/r5Qa3XZX
      l8jK7BlaYna21mtF9Z3L14xqU+Na773zVkKwKgcA4DKKOLF48mEA7a7duL4xIAhiriplygwM
      J1yB39jOzp5oHXne5dsrDISX+1u+S0/PT2WRyxjTF6flt28dTBu0H6aMLAeDXsxqdQVtbQ/d
      DBcFcO6lNwyRvHnjJi1pBS4fJNxXL87dXl/FmHBch4FpktMMQyiKOuyOKCpcvPha49E8Psa3
      3n9rvT2ZalVFlnej7DERfem5c2tbPVGRyDxmBJnlOImnkzQb9jteFFMUtG1PUdVSyUhSYBSM
      wLYKlZJoNCLPLamMH8WKqg46h0GUFg2NEySG4xkCy6oeR0F1+kSrrI7HwzjOQm9SrM1Kimzb
      tkCTqlEgISgUdJJifMvSdDVLE8/1HT/SDUPgBV3h0zQlM7/XM2m1IAtsmoQHnR4nFk4szZqT
      URTFBAoZqchxguV6JY2XJZWloV4sPU1Z/HqtpmhGvV4qFMpJDmmahHnOP13NdsMo5Jho1Cvl
      SqW7v7u7swVoYbfdW5ydRmnYGTmVcqVeKalagaTI2VbTcT4U0ZCkjWKxWCgwLJuHk0KttbXT
      qVb0J5zuIYrEhZiol2tzU1UvzguqJIrKYX9SoJO+E6VpinGeJnHgOsOxpamSpBgsTdwX0dVG
      s6BKw8lkNBozUtG3JrpEB0kqKWoUJoViCXlDyw1olvuoQsbZcDghCRITjOt6In1c4u4LDR4O
      h6VS+dMc4lhEH/OpeExET0zLMI4Q0eao70T5VLP2oYhGaU4yD0S0Fzxs8Rf5Hnxk06BjmYAg
      REn9mIi2szRlBUXgGJTGeweH9dY095Qi2rPTHNKcyDPk/WNKkgwhcF0XYwQhLcsiAMD3fd8x
      WVmb9PrlZsu3hhQn65rySIXrzLWd4cRqTk2nke/6kcgSkBE8161VK0/+Bn3HzAiOgnkSeoCR
      JAaMnQhmkaLrjhdVilqv15dEPgNUHPocQ6aAKeqPiujQD5OyoUxM676IVgtl7inunqHv2EGm
      ijTCtCR+KKI9z/vIJXvw+kdEdLe9T3BKpah7nsdSBKbYNI7FXyGiJ7SgflzR+0EgCgIAwPfc
      R0R0bH/vz//ylVe//IGIPhSMkiKKPIV4Xt7tj6locvblb61dfd+0/Y2CCgFhxySROK+/+uyb
      b19nJR3lCfAnnF6/L6KbQnq749d1wfOc1uL5/Zs/W+97z10873ueFUI6txRRBrQIGWDtbie0
      LhnGy2dqfdO+duXvC9UqRz8Q0ZpC99rjUrmAH4roQvGrr75CEWDnzvV/vnLj1IWXGRj32j1R
      ETRVIdLUzDmRNK1OGHHin3zr+ffevkqIZU3pmP185+DAHx9qRql57pXZ4oOvbNzf3jrEHBl0
      dtf2h27iBwyVORMbqvVvVStPvpg3rl/9QERTldnTjMzu7WxUi8q7V64b9abO55fffTuBrMoD
      ALiMIk8snngYQLurN65vDgiCmK1ISJshQpM3+M0d9MxTiOjbt1dYSFzpb/oOPTXfykKXKcxc
      mpbeWW5PGVQQZows+4NuzHwgohEo8vj8y183RPLWzWVa0josGqT8axfnb99ZxYCwHZsh0gQx
      LAMVgH6NFAAAIABJREFURRt0hzQdfVxE37zyy/VDc7pZEVjei9EjInpn50vPn1/fHkiqQoOU
      k3VeEGSeSdNs1O+GScoxpG17sqKWSkaWk6VSMXKdUqUs6vU48EsKE6WZqmmjXjdOULlocILE
      8QJLAVU10jisTJ+cquqTyTjN8iSwirVZWVVd1xUZUisUaIoolQokzXqWZRT0LM0CP/TCtFAs
      iKJYUMU0Q3QeDoY2q5dUkcuS8KDT46XCqRNztjlJkpQGMSuXBEFy/KCi87KscSxZrFQhRrRU
      IFEwMZ04dIxSpTXVdG3vUdOxXqwoIitrBkVSAKUCx3CSWiiXWIhRfsSFNArFD0R0uXuwu7u9
      iSl+76C/ND+TJ1Fn5FSr1UatrOlFkqbmWg3XdR+OhRRtlErlYpHjORxMjGpza+ew8rQimg8A
      Ua/U52eqQQpKBVWWlc7AKjDJwI3TLMM4z9I08r2R6eiaoqgFnqXui+has1XU5JFlTUZjRioE
      tmlIdJQhWdWSOC2Uy8gfOX7EcPzHRfRobNEkhSnO932R+UKIaGxbjqo95rS0bVtR1COXC/5X
      Bw+Ho1LpU7nRj0X0MZ+Kx0X0xDQetwA7jqMoSug5BPehWWI87HO8ECNoqBLO0Xg0kvXio/nK
      JPTDJM0xpGn2vr576CXwHTODdBRFlVIRAGBNRhQnS8LTtgf8FwLnmR9EpmkrIktwMszTLA5I
      VhiOzLmZI+SIZ08ySEdhyNGQ4hWeBoOxQ0PEsFyQ5NWSEXgeQgmCTOC5isjlFK98oHnHgy7N
      y54fsEQuaqUsCePQZzjeC9NaufDk84aebQWZJtIIMI+KaPdjJVYevP4REd3Z36MlvWSoYRhy
      LB3GGUfDMIUiR/e7bYqTFFV/moopYeA/LqK/91cvv/LCYDLRRH5/90AslFVJ4snMHg89ulCU
      6NgdNE58efXd/2HHFM1LqqapbN7uDgulsiQrse9lCEKBf/Fk/W//648IkuRVvVLUxyObJPEf
      fOe7DEWsL1+5vtEPwqjVqFUqpfbupl6oIFrUqDROUisGr7/+msz9a1fqGPe37+0GIhXddQIG
      AtMNKirr2DZbmJuZbj25OseNG9dQhqKcJWBslGc16O7ZUWxNZk6dd81htai+/eZbvCbYo2GS
      QEI2agX5+We/dH8shPl7v/ipjZjnTtc222PHGmtsFBEVjkwr5cKTU6DLd1Y5grjS2wwcqjXX
      TEOXK85dnJbeXW5P6ZQfpqyi+P1OxOgNNdvcHnkZKPD5hVe+YYjk8vJtRlJh7FoJUdB5kEFF
      IncH+R9888WNjQ0AYKHa6LX3Ulr9xleef+zTZ+HPfvFLBOhaxRiOLM/xyT/7sz+7/6+DjVWp
      WNg9MEsVg8njFPCiIqsCkyQxSZKYkVUOciIHgcAJLIR54rqA4+83r1RU3bJNCGCGSNWQZmdm
      9zqjgswWika5WBr0e4VKtVEr93ojCLAbZgaH/IzgOY6COS8qpm3zDJlEiazphXL5KVPAnyEs
      R5lD0wySmUaVIKgcZbVqlZe0PI1rreaTS80FrpPlIAeUoQkoSWmWDaJUFhjXsRlBQSgTWdYo
      GjQn8Syjyrwo6w+r399dvqkUSiRFcRzDCZrIkjiLc4wpQat/sHn81+HbYzfBuszpiurnVN0Q
      aLkSeyZMPCvBBM4pjo1sK8pwnoUiJwJWkumM1WqqyIRRevGZ+bt319ViTZW5wAtEUUgyMDXd
      8BzH9xw/zkgCxlE6Pz/z2NtA2cR2WIoemhbOUorhvggi+ph/QSjwQVmr3/Y7OeZzyWMiejyZ
      FAqPaTfbtgEAaZIwFEwBTZNEGvleGMdJxnMkJniBylnZkAXWtu2PbEqMAw/T/MM8ZhRFNAnG
      VoCzuFSrBa6dIiALzM7u4dTsLEuTtm2zFIwyTDO8yDPgI/XV8sz2Y/Vxj6nj2LL8GTyN4zwL
      whRjlKdRTvGh54ocFSbIdry5+XnqiWIkjWPTnAiyPBhZKk/RvCxJojXq0bzkegEKXU4raTw5
      ceM0sGS9kCKQRX6pUiMJOOp3ckhabmDIAisI44lTK+oIYMeLqkeLaMv0M01iEKblD4pAYIzd
      j5VYuc+j1QqzJEwwLbAUANh1PVmWHXPMSYrvh7p2RH3qBydCmR+lksg/JqL/4s//y0uvvDCY
      jDWR39s5kIplTVZG+7eZyjMFyiNENYlwf+t67dzrKLCcUfvMl16+ee295snnTs41b968+eVn
      z/1/P/qlrAggDSAteNaE0SqaIl88Nf3DH7+d5ejrr57/3l/9CMTB6bPzKaIJTnrlbN1yw/f/
      5q8ZuWBo/KzG/Pefvzs1d75kSLFvWpZNgfzsy99YaBQB8m/e3llqiLdXN3KKcwbdQmN6MhrV
      K7pSaJw9tfA0H/vXMe5vbx5m5qCtK7Q1HmVMiaTi6anFLAqeLIAAANu72939HS9I1WpzY9SZ
      ml/klSKbWqvbndh3Ty+2EgTu3r4VQTowbZrrA+RECViE0kxVIQh80B2TINsZ7/fbdnF2bry9
      FomiacXf/sZXn3zm5TtrPEG8390MXKox28hClyvOXZqW3r192NLJIMxYRfF7nZDRGira2h56
      CBhcfvHVbxoiEwz331wbVxXYG/ok9mdPXrS79yBkbaB84+ULTzorxjfe+wUhV4bdAzvIvnRm
      7pE60Tu7z714cXt/1Jwy2DTQihVekRWB4xfOBUFUqtV7Ixekfn1mUZHFnMFE5ucI1Rut+1sg
      KIBW767EaarzMs+SnCDGUUyRMM9z1xzFWV6tVUiKm6oUGZ71fY+XK7qmUDTnmIelckkq1Dgy
      Y0X+7JkTESLyPJcUQxZZ2401STjY36tXjdibrG0MUZ4Zug7SVGSpVFFwjtCR2eKj0IsVzXFk
      vgFQRFK06cNaSU6TQCsUnmJ6Ixr1epjTrusaBQMhhDGO05wlc8hzTgLLYjRmhDxKC4YcpAQl
      FpFlqxILANje3K5NTadAsHtuc34uDMNqc2qUxDCnj+xYqMmC6aetWgMVKRfTjUoxk7TuaFxk
      0pGfswBjjFGOsjiY2GmxoJEZLUPbC2KdJ1c29zXJyAGiQVZszhAgN8qtwWA4UzmiKBHAmWm7
      qZORNK3JTLs3PBbRn5Y4DGmOf/ion0QhyXJHWtj+l+E4E33Mp+IxET0aj4vF4sP/Paph48DN
      KYH/oOo/zlGvP6SIXCvWP5KyzGJ/c6fdmpkTHxqKMbKdQFVlezIYmMH83DTx6A8U4+iDTtWe
      PbEC1Kx9uDpjmaaq6/Dx92PbtqKqn+Fv3J4MwoxM41DkqDSHpmWXCjrFSepTVCibDHuA5gM/
      BJlPCXpBZg/6JksgmmEdP5mfmwpclxe4IMocy5REFlPCw8Pa4wGgBdd1eQaygmQ7QaP2tPau
      wLVMP9MlGgHmURHtfKzEyoPXfyiiset48sey1Z7r8iIfRako8Enku0GcJlm5Wv6VjxBZHGWQ
      4phHqthnsfWX3/vrF195fjieaIq0u7nHyYLKUWGcSkbJ6h/KlWkQ247lk4Lyxusv/fl//k8S
      i5fOfxnFYYYp3VBwFiS5cmlWXF5dv3njFikoRTaGQlHRpK27K6eefdk/XBt46b212zRFWT6e
      bxph6MUx8oHw3W++CgC4cvWGJjBXr79fVTkvTIMIShrv99ukoNGC4o47JCCMemPQH/3RH/7+
      ZxhAe7u7NEW8f3PnG99+vdPuMBS8s3y93DqhLs4cOZakiCtv/cSOieeeu4gyMOzuD03U1OlJ
      SqRhADB655dvP3NubnWzgxKUUGxZ4Z/7IBN94+b1JE6gWJK5tLc7AIpRrX7tSNl+n9t31wSS
      vNrZCFyyPt3IQpcvz1+alt6702mphB+lnKJ6vcOQ1poa2twaejk0WHTpK79jiOTKyuqZEzNv
      X7tbryrtvfHS0tThODhdF1dW3aHlVQuiM+xiudzZ3Hj+9TeWpuoPT4qz+J/+6SfzS/PrK2uI
      oDmeezQTfU8pF/bbdqVqCDQRuJZSqtEUpcuCbBR9LwijhCGRKMg0x9UazdTq0Vo1SxFAaalU
      TDIM80QvNIsKPXJTAqe1RsMe9RDkRFkyVAVSjMjRnMBnCDfr9dGwL4hCnqXF2hRNUxINEkzF
      nulnUBDF1LfjOC0Yle5koEtKtV4dmb7BIcsNKUHiWW52dvozDKAsjQfDEScKjmXWGk2GYVkS
      IEgf2TAVALB2+1Z5ap4iKJYXiwrj+KnrWKOJVS8ZoqqbpiVxXLVRizMchUFRlwRZLxUeGDYC
      z84wRUDI05ATNZ7nmo3GU3a3CpyJk2BD4Q1VjyHTLEm0XIk9i0g8OwUkxhTLJq6TYJijWBJl
      yCoalzNqVRWZ/e3NycSMAIUjx8sYlQMJJpdOnFjf2mlVSxTM4ySFJBGGqFotFfVHdrtj3O+0
      J25IQsCKcqNe+zcuovNeb1StfirT7jGfjMC1ASMI7BEbm45F9DGfisdE9HD0ob0ocC1K0BgS
      pKGXQPahIp5MJoZhRL5rBWm1ZAAAzGFv6ESLczMfeXRNIz/KKflxq0boWogSpA/qGluWdb8e
      yMM/fitY435GsIHrtZo11/Mt2xFZkpELMn90q3Jz1CN5DaAkDX1WKfAU7g7NgiYBAG0/rhb1
      9sGBokgZwbIEYlguTvFD+8r+zkaaEwnCs80aoLkk9H9lEvlXn3fYSyAtCeL9XYW+H9w3Nce+
      R/AS/TS7mR7H81yB5/wwlSUBZXEYYwjQr6yWBwBwbStFSNEKj4joyPqrv/ibV195oedFZTra
      2e8DuVHggzjOI8hzMDbKrRe+dO79K+9JAmeb42HCn50pcEptfLDmxslhp8PANPS8IAEIQlkQ
      LiwU/vHyTqWksXkgl2e/dPYEAODa5bcSroDciaga/bEDk5Eil9pje6FZHI0miBTe+ObXlafY
      D/rZQtLMxupq4IVBYG2ureRc7eKZ5nZn87kLp48cu7KyEibIDtKyQkHWKAv4MCAO1oeYLmQU
      Lskn3n3nXana0Fk4GQ2WFhcfLXGniJyLpWh4uLn8PizO7Gxt/v7vfP0p3/P+3m6c+Gsb42df
      PN/e7/hmx0+5hcWmPxrz5cpUY7pZLf7KgThHP/nhP86cOLWzvQ1xXpua6+5t6lOn48EWZJju
      QW/p7NnD9mYQcByX6yxsnXvpoS0aZ/EPvv/fBaOOYs+1JtXZkx8GUGdv74WXLu0dTKpzZbs/
      YVm+VDJSTBc1YsfMS7pCU7CztyWoBZD6nCBXNH3U3j33xqU8smSUuEGSo3gyHmeMfvrkLMoh
      y/GaLBmqREKBBPm4f8hIGiIFmAZGsdw5bENKai0suZ3h1MwsjX3D0JOczY4skPwvwN7mulos
      Z1kPEoyiF1OE/SAWhaOf4QEArVbTdCMwnlSqpSBCOUWQOKpPzSQZMbK9vYNOrVYhOZYTODUO
      Jb0I4g/HOgGq1yiU1WRNMDNK4FiU46fsESvKch6QhhRnWUTzYoXQsdSkoe84rlCugidIWwg1
      VdjZO2RoyjXH7d6Ip0hN07xAjhGan5s+7PY5TmAoXpRJe9jPs8da4ZTrLZKiExqwDENC8ClE
      NM67vcGjHVlxjra3t5sz8+yTlx+P+SxIAjejBOHxfpyH+9tquQVR8utuPY+SZ/H2Xnf+Y9rj
      N+Lf+FPYMb+W9Xt30jAeupkigDwnU0gpdLi551Sr2uH2Pb564ndfe+Hoo/wmJEmSZR9tzPXb
      bPN2zKch9II4TSCgAYAAYACA5ziA5gyjANMpM4mPPMJvyqO1vB9yPAMd8xuAs/iHP/zxwon5
      7a09giIb9dqxWDnmNwESmsy1uwOWIX3P6Y+s4xnomE9CloQH3fHMVPM4E33Mp+LDGQhjPBgM
      KpUHxSh8x6QEnaUey0QHjrnbGS4tLVIEBBgHYSQIfOhanbE/P9P44Jj5eGwVflWPkvv1GVki
      G1jhVKMS+W6EgCzLj68/435/UK48qEMdODYpSCxFxoGLSEFg/0UahJvDXkYJDIFREgCaN01H
      FUhGLipPseNxMuiSgoZRkoUeqxQFCneGZkEVASQsL66V9YP9A/V+JhpmDMfHKZY/2AeYZ7Hr
      x5bjMjADBG15gcySUqGmSUc3bxwPOilgJFGURB48UtH7E2eiXdcRBd4LUkUWUBYFEYAgO7Jb
      zYcBFEw6//v/+Z9e/8rXfCITYrPbs2hjWoC2KEh9Hytkohi1AuWt9mOBZ2kii/x4PB7Wp1rd
      nR2uNlck4wRDmqJnz5y99ot/YhkFURyn8K+cP/Ffv/+jarNBgSyNQ7Gy1FTB3fVtnmUDxxu5
      jsBzUzOzd+/c+w///g97/ZHBZf/H//W3X/naq3GUgXBkexioChvbkqx6KQXzuFiqPHfp/G/8
      9TyRYe9wYDn7O+1W3RhNXFVWMphliHnx+ScahAEAANy+da3b7W4fTp49t2RZvshSlFpKrQNA
      GSlMm7qwudv1IVcVwcb6xpeefz6m9IeZ6Cs//cFy2z9/9rQhs5DiwiDRVRphodU8ev34YG/3
      cHfl3rZ/7tJsu2PGdo8UK42q7o+HXKl6+sRp9ddEIcb5z3/0j1q5dtjtyyLH8JI9HpTnzibj
      XYIk+t1xsVadWIM44jkOEbF39pVvNQoPwgjn2T//zx8Wq6VObyzJIs/QHwZQb39HLBgry1tG
      vRBNBnGGVb2KkAsR9nJaFyiKZGQOkmrN7u54SSZwku9bkR/Iuo4gLRA4zZKJ6Z65cO5g8x5D
      81aYqppY18Wrt9cLpQpP5uZkXGwtcshtj30y9TFkaJ5JkkTkBdP2Llw8z5BE92BPkKWN7XZB
      V6zxAENONpQscDGGGckLDMFQ1NT01FPFxVOzdW+FUYpEnuIsCqPEi4EqkoJarhaPXp472N0k
      hQKBk9izOK0q09lWe1wvSjkgxk68NFO9c2dVVhWSFSUac4LkRqhS+MDwlYZ73ZHluASKS+Uy
      IxmT9oZSnSvrR3ep2lpfATRr9+3SVNG2Yw6GVkD4k90IiTPzTUnSG79uKQPn6yu3EcnhNLr2
      /vvnvvwVGoWl1kIwbkcICDRthzEBEAlZgoaRazfmThXUB9s5MEpXVlZIhk1D/9rNu8++8MKx
      iP68Yo0OU1I3FBYCACC8b8K/fzV7vV61WiXJX3G7/8wv93Ei8fPK+vpWELgB0CU6yhFMCVom
      rJtr9tJi3RoceITxp3/y+x8flWVZmqaf4ds4noE+rwwGA4CSg85QkXmMiRRSZGz6udio6s6w
      FxL8+dNLv2Yo3lxbAZwy06wREGIAMc4hhCBHN25c43ihOXdK5ohJv8NpFce2KqUCSVEfPOdg
      hBCERKd9kGVpuTl7HEBfPDDeuHfXi9OVq+8rU0syjQ63t9jK7O+99uWf/OTHaeClfLUuJTsH
      vcrUUuqbAzP60z/99/dvVXni//Xf/L+sUpJo3OsPKlMLx7ewLyZQVdRT5y66vpMA+tS5i1Kh
      xrFss9HgBYkVtcQfa6WWrBciZ1xLCIABgAAAACnuwoWLNCfESTo9Mwdp6kEi8XgeOuaT8WAG
      iuPPfvH2mC8Cj2Wi33//6mzdGNhRGKYY5ieXZjd2ho0Cu3kwPNkyDt3cGY8NkWwsLplD1+rv
      VpcucMmoH9LBYEetL+LIca0xpxRh5unlRm9/v7Zwary/TvAaizyuNFPRRQDA5ub6ZGwZxYJv
      TRrN6n7fPXXq5PryVa0y5Y4O505f+IhJ6l8B3x70J8F47FRKUpwg07R0TeZk3XeckycWnzzW
      Mie9zgHNS06QcnnAa+VKtdbdXSPFUhxYJIrF0nRFF9Y3ttLQIzmJoDkiDWeWTtIEiJzRXtdM
      c0KgkzQjojRnQEhwSpbD0yfmn2zzau9uTfxUF2FGaNONYo4xBoAi4ebm7tzc9IMrizEkCAhA
      hvJ+v1+tViiKghAvX7/OaaVmScW0yFIwx5imiJvXrinFesUQSU6OrD7ijNAZt5qPd+lD8X7f
      qpcLnueJoggh/FADBeO9H//TT155+eLlq8ul8sJXX537/j/8yIzBH7x0UtRL5vDgp2/eYOSi
      GPc6bsABoX3vJllZ6t1+f5jy55qSapTbN5evre0iRpfToVSZCscTtjp7cHAwd9q4+t57XNV+
      7bmTfkbu31ve7JiFSm2wtTK9eHIU4LnFEwcHB4Vq/b23fu5A9aXzn6rUxieBSCeTmEqtO+v9
      erUhilK9XLiz0Y6T6MgA6vZ6o15n4gRKoZ6G4wpg4pyoGMbm5sbyZvu7X3/x9t27BzTaGfrn
      FpqBHyTYhmHcWjxJA3D9ytuDRNJl7jCYNFonCJD3u+2+g1vNRg7Ak39GveFEosjr2/f8UXJF
      KxTYFOlLX6rBy7f3R8PDIIgrrXp3bb2X8Kfq+frmBImGmo/Pv/5H0yW+2+mShzu3M0rRi15v
      18vZb//hH3W7/cO9zdu0BFkhGeznfFXSuY8FUHrtvV/+2Evm51pOd3+SPVKhrH+wKxrG1vq2
      pMhBEGd5JkiywRNb7YFulMoKvdtzeDKWiq00sH3H4gVJKTd8c0QAzLKkUmwht9v38tCZqHo5
      9kZZhv0UcFROUgwnKSBLZmZmAADd3U1Ec9bEKjdaw/3NnOYhQeexy7CsWqzHvjMzM/3JQ+ET
      kaOwczgam3bBkBBkJIEP7BEpFkAW1ev1J4/d2dpCKGZ42fUjFiQUy/Nqyexu65UpkCeBPREK
      jYqh9PsDkiRokI18JDPQqNQpAoAs3Gn3/TCRWez6KcEKdB7QnBwjcGL+iC+h39kfu6lEZzkm
      Y0zQIOW0Oo0jlSPW2yOGACmkQGjTgoLzhKVYP4MU8irTJzSRWVm+RTEMw4thGBN5QvNitTG1
      tXKLZjlelLY3VuKcPbm4hAg0P/V40h8l128u87KhK+yoP8CsfCyij/lUHIvoYz4Vj4noK1fe
      f/bZSyjHEOd7B4etZpOAGJLU9r0VK0QXzp0mIIFy7Lm2JMkURaIcExCag0NCKisCE0w6tzfa
      J585pwpMnucUSeYA4BwRBJnnOUESAIMcY4amAQA5QijHWWQNzShBYHaqliNkT0Z2ENWb0532
      XpZmc7MzgT1JWUUV4MHeaG6+BQC4efUyKeon5mcICDHObDeSZZGEEECIMT7Y32+2WiRF7W6s
      Dp340vlnIIQ5BiQEkCCyLCNJIs8xQRAAYAAIiiIBAL41GAUw8kyWxFGCvCCVBJLlBNOJLpw/
      /WRnxP72vRTTpuPrEokwFUQZS6YMJ7ohKklkChnbC1SOoGgmzOnFD00vAAAQOqPdruW6jszT
      LMd7MZ4qcgMXuY5z8cK5J2/vae9ujr1MF0EG1elWKccAY0BTcGNjd25uCgCIMcA4J0gSApxl
      qN/vV6tVmqYhxMvXr6mVlkTElNaUGJBlGUEQOUpHlkdlYdf0T59cJAmY5wBjRNHMI9VUcJqk
      BEl0Dru1Rg3gR9p++6Pdn/74Z8P+yMZ5kcaubf7g++G5Z0rF+ZfG7TbJSn/9vf9b4NUIyJqB
      woEJeXXohK0SPer5SqUECO75BX3ieO/+8qfmsEOQEqBZnEcyR3shDrPU4ACiFI6nX3/9ddt0
      3MHO1c3BH7x66uqVu2NzcqtWJ5zO0AOSIn29UF+9fdMLgo311dFhNxOkYrmg80VZhLxWOWi3
      Ra731i/eKlQKEp1O+pOMLipynAYpAkQuVQu33uFbzxJOO6ekH//gv2zsWcXmjCxmZmfEiBKj
      lKLJfoiVek2lCPabX38NAADIrL2+c2tj48zSNCuoMksHYXDj3Xe06TNpDtgnRtDIcnu7G5zW
      qFSXdu7eCAlZl4iNqzca82c4DPnyHOH5nj0meGNijxZmGo9Gxc0rb0fKbFkUAXJ3dvpRku2v
      jConnxUF+cjNYb2hKVHkjTvrwTi5ohpFNs31pUs18P7d9njUCfyoMlXv3VvvxPzper6xNcnE
      goZ+ce6BiO7RZH5tc5/WuzUhXV9dY0tNmQJabWa6KMS++84vf+G7XkwJTDA8+fK3F+oPXAl5
      Evzd3/4dIxcUBm5sriFEPSKi23uioa/d3TGqBvLtMEq8IGNYojm9kIZus9lYu3OTZCSK4TGM
      aQyDME0AQaQOhhyGgGL5VlFCrGZ2d4b99sEoP7HQRFly4/Lb1flzBUM93N1++eUXukP3mdNL
      BASdva2Bl56aqUycZHi4PUyYMpdDmocEUZ+a86whQmno2JykOp7PCrzISq1WFQBwcHBQrxRu
      3FozykUaJK4TsIKW5QFNUIN+Xyk3sT8UCy0KpI1GY3X52ua9DW3+XInLQnv8iyt3X379DR6m
      2+3+pdNzCeTmp5sAgByFg1EEYZpFnh9EQQJViWY4fjx2nzl78skzUPdgBxGsabk0jEVZtxxf
      ZAEryLYXt4ry0HJiRFZ0Pk6QE6YflcZZ2Bs7NCe7w72c5FIE5+rGxA15RVeO2lU96ByMvVSk
      M5yTMSAonDwQ0Ty50R4yBHwoonOUcDTrp5DM3crUSU2kV2/fonnJtS1R1SHIfdsRC1UisTm1
      QiN/5MQsmUGCTfI8C736zJKhfGDnwGhtZYXhhCTLs9ClWPF4LeyLRZ7nn+0VP14L+2KBEEII
      fYYHPN7W88WCpmmOY/r9wXg0JiCkKQrkaGP1thtjkiBIkiQpmmPZ9t52uzeEABAEASGkKJq7
      DwUPuwOKogiSggAM+v3jGegLCF67fQsRpD3qteZPtQ8OsnC8sjeh0wnE8MJr354xaDNA8wXm
      h9//W4fQKxqjaOUvP3cRAADy9Nb1d997FxertXRyOIzZYw30BQR3u32SAJNRn+GVKM1g6vNa
      NQtMAMnGzBJP4/2dTURwvjWiBH3Q3piaP6UqiqopBEoOOt04SgBFx64FGeE4gL5YHIvoYz4V
      xyL6mE8FTdMsQw+H435nL0wQJAgAAElAgiQwBr1+n2XofreHIaAZxjWH6xvbCEOGYe9raJZl
      KIoK/ABjTJIESVLHt7AvIPjq+5eRN77TS2eKNCAUz+6REPuZLBe5MxXt+nYfBZOTF1+JrP61
      lDnQAAASW0lEQVQzp0/87K3Lb7zxBkMRAIA8i9782c/cCKWhD0WjZdDHAfRFZNxv55AZOkFB
      Zkb9MSdwEEKSEnMiq2rS2nZX5qFWbtEoOBxaiqLoigBJRuA5AED74IAiQIryOEkJknhg58jz
      T9vw5pgvJg9E9Ge72eyYLw6P2jnyd95574Xnn02ynAT5XrvTaNRJCAiKcYcHG/3wwskZgiCz
      HPMMefnyZdUolit1gWchRpCkUIZ4nocQ4ByFccIz1O3by5JerZZ0iiQRBhAjkqIRynOUha6V
      89qwvTM7N0+RFEGRO9vbaZIsLC7keY5Q2t4/4JTSVL0EANi+dzchxWDSnV9c2N5tc2qRy9yh
      HfICH3l2udGyBgNeNWJ3QvDq6aX5T1AycmdjLScpa+Lqhkyxsu9MBJYkBePXVcp9lIOdTUwL
      rm3TMBX0ukwnG4eWwePK1OL+7u7SXOv27buMINIMY01MWRa1YrVafNDqYHtjJYpxiKDGAwzp
      IMUcEQOCixE4e+oIK+3+9sbETxUuT6E6P11FeZ5jwLHk2r2dhdkWhiTKc4BziqIgwHGSDQb9
      arXCcjwB8fKtu7quSrLM0PlonFWrKgAEQRJ5MNkcxIk7OnnixGDQJWihWNBBntMsR5HE/SgJ
      wjCMY5HjOr3eVLP54WO8N9x565fvjEemB0GRxo45+sf/kZx9plxeeLHG4NGg98N775ghxQrF
      7/7xGymmd+6+9+bPkFqvKEQ26Pb0SuPZV1/PPJNFzt//+Maf/oc3AiRUkPXP/3x1YAYlnaMp
      No+DjGJi3w0c74Xf/ePN9bV7KzfdAH773/3J2p1bbhjeunZFLtYmkz4DYGXxokAmnFJCWToc
      Ha5df8/yols3ri4++7USFegi9eatgwKXFRTOTqmgsxkSRdLcx0tHeNF/JVEcrd+9gYRGbzxU
      GLi625ttFEt1/DQBtLu3K2iV0HMVkdq+da2oSn0vYw1qffXu2saeIAqyJByObez1clKLMPCi
      w4cBpKvarTtrBMMNuuPQDdVyI/MH9Zlz5qibn1x8sqOjP7Jkiry7vxGMk+vLeplPc+PkhXJ+
      c61tmv3ADWozjd69jXbInq7j7V0rFQwtf+eZr3xnpiwMDnd396nAm5w+u3j92kFZw6yg5Jz+
      4lJhbW0Dp/GovTEMaYnMKNnII7e5eO7CqTkAAEj9f/7R/wxzpmIok1Gv136kV8bw8EAw9PXV
      Xb2iI9+J4sQLUpol6s05Dod7A5vKfEyykqzXW5XVW7c03UjiNAXEyrVfFlondUU+88wZmoT2
      qLuxP7pw4czOxirNybZpyprOUNCzTZoTsjS+vbrx7IXzjKR5ozakubV727//7d/pHB5mSXTr
      zurFc6ftIGFATona3FQdAHC4t206brk55w3bFCfkJM/m/tCOFFnwHVPUSqlv57RAZQEhaDOt
      +icIoH5nH0FmMhoZhpqTPEtiFPuYUWrlo5ut9Dv7GSmQOMsin9PKPEwOBk7FEHil5FpjXRHu
      rGwaBY2gWcc0FYkHjPQwLtdXlnlZ96JUpnNMcl4YC2SGSS7JweLcEd1kRr3DsZeINMKYTDBB
      4pRTqzSOZJ7cOhyxJJEAAoQuI8oIJRzF+hkgM68ytaQIdK83iEIf5FmUYxrQgEA0SU2C7MxM
      ZbczZHkhsEeA4kWOcsLUkARakIq6CgAAKG13e0GMYOpDVhJp+EBEf7bJpWO+ODy4hR0H0DGf
      jMdE9Ntvv/vC888lWUYATFAMQ4J3Ll9/9tK5jXsb00uLNMCQIFGOu9srMSWMJsGlcycJkOcY
      eH6gSKLvTPpjd2ZhYXdzHUI4NTXFsgxC6HBnS6hM6SKLssyeDFLMtaZqURCMer3qzPStK5fr
      MwuaItMkjAN35KNqUedocGv5jlaoVUoGxpgkQORbAZbqJSVPg5X1HQDI6ekWQ5N5ltxb3507
      scAQRJqh8bBHc1K9VvmNbmSu2Rt5wLPGIkekOXT9dKoiuwnuDe2Xnr9w1Aa/jaHlo5w4NV8b
      eMBg0vX2WCAzpVj1vODkfGt5+W61WvIzOrBHHA1JQZ9t1e6PDaz+bs9OUsQRMSB4RDHYHxVb
      J6qFo1uu7G+vj71M4bIUaPOzVYTyHAOeo9bWtufnWgCSGcoBRhTFQJjHUToYDKrVCicIBMTb
      m1sExWgyDxgxdYeYLyoCnaWZKIpZbPcnSOAAy7AURQBIZlkmCMKDR5Ms3moP6uWiF/gCz/cH
      g0dE9GDnnbfeHY+sgIIaThm5cKouvP3etcNej82Te7u7Ak2M2zsLL38X9rqXV3YoEi4v36qW
      NJBjiSdRDga9Li0YldnFeNJORP0H3/+HLMshx9GRS+i7KPAoIp+YYanaMgz6r7/3d1Kh8p2p
      ZqfTk3j2H35wq9Wop85g4qdyofHNFxdzrowmWz+8eWNkh2UuDBJ84tmvg9AqNpoH63dKlco/
      /MMygDlPw9446Q33hwf7mFYAp5R0sV6r/CbxA0gajwd2FNghmQ06+0ioNwxmZ6/vuHGaA+aJ
      6z0sSVan5vdXrr/73n5MyBWJGnjZucUGSVOTQW8ztffah7Iij4MgsS2sCOPB7sMAWr52ZeXQ
      bTSaqkI4gyEj8wKT7e4cVAtnjnzP/ZEtU+TqxmYwSW7cUSt8lhunzpWym/cOTWsQuH59ttVd
      W78vond2rUQw9Jvvnnn1OzNl4c6196bmFm4uDzGkUm8cQaGq0bYVf+Xbf6gCfzRJA3PFGiMz
      xWUh7Zjpd/7oj3WRBgCAPH3zF282G1UyD/uThOfiR0R050DQ9Y21Pb2i0RgASACUaZq4ujus
      yJSTYBYkAFJGbTqxB3acIt/2E6JQKlAQEARwrYkoq47rN2bmYWiGWfje5Y3z5xZTlMMsTTCG
      GMiyGPpBBuj5mcqd2/dkTW1MTe3eWyFpxguTQXsLUdLppfk4J04tTK/fWyUISjGKvd5QFUhM
      UBSntGpFAED3sJ25/bv9/ORUIcd5ECKaQijNBEnJcpwD4kgF+hFyFI0mEc7jPA0RpC3LXZyt
      j53QNJ1TpxafvF5oTiYCT2/tdZfmp20/5mB60DfTyGvOLiaBXy4V1u/da05N+3EG0ghlEcGq
      lYeV87KoM7RsxxUZQDCiH8YMjguN2acp7jnqH469VKQQwGQCCAKnvFqhcKxw5NbhiKWIBBMg
      chlRRlnC0myQAgJ5ldaSIlD9/gBFbk5yYRxTAMcZ5liKJCijUmeJ6M7tTV7I9/Z9ikrmFxY8
      12u0WjRJiSIPULp30EaA5mlkOrEoUMci+phPxbGIPuZT8ZiIfuutd+6L6E77ABBkrVYjIcgx
      oFmOAnkYRd3BmMkjRhTDnCur9O727sypixIDBgdbCcn5IWpWjP2djercGV08utffvx12N++F
      KbKd+Pwzs9u7h16YlXWOFgtPk0jcWLuTQ9o0bVXhJb3WrOord1dhHuekACn25Gxtefnu1Px8
      r9sNHadSryBanak9SC9tb6yECU5zosDDjBZMxxOJmJHLYRCePnlEhYm9rfWJn8pslgJtYbaa
      oTzHQODp1bXt+dnmAxGdI4phCIDDKBkMBrVqmRclAuIb779PCtrCTGMwGpbLNYHn9nZ2GjMz
      ke+PRmOFI5yMLWgiTUKSZmnqkSoPOPeDCIB8OBhUao2D7Xsfimh3sP3eO5cnYzugoIyzyOz8
      LJU1TVCpBOpzDTG7eW/XKFZfeqbxve//5JkTzSvddhSTlflz495hRRX/n7/4bzNLC9evTlLf
      /lrjpH50u6p/Q4zGoxjTXB6+ffl6TrIKTO9NokrtqTLRcRyPXbtoFILIGty9Y3XF5c3OpWcW
      E9cyYyQJjCKLa3dvORE5VTNUjtg2XfBBAGmqenD7bghYuSxvdyY8SZanyphiLesAgCMCaDC2
      JYpca2+F4+TGHaUqZLhw6mwxW14/tKxB4Pj1uVbv3sZBwJyu4909O+ENffny6Vf+YKYs9Pt9
      ig8n3Y2tPWvh1MJXX/ryaDAoFIX/9vc/PnlqaTNO4+52xJRJaE3NX7z0zCOLKmnw5ptvkgD3
      rKhurCX4EU/0qNsWNG3z3r5a0fIgIEk4sSPDUMg8zRmZRsHIjQWWmZ1prq1viQzhxwkB6amF
      JZ4CAOcrq+uKSDthRsG8Mb0ocp8nr+OgexBl2HWDEycWR/3OxI50hYGMUi3pR47ttndJTqZp
      NnKGtFwqatJoNCIIkqNAe+TONQp3V7cWT50MXIckSFlkrRAVNfn+2PXV24Ksu37UqhpRhk3b
      TT27MjWfxf7DlgG/jnG/82BjIaZSAAmcckqFxrHMkdudEUuRMSZg5DKilGUpR7FBdl9EL8o8
      1e8PAUaubWKSIWlubrrZP9wzgxQn8fTc7GhsgjggWCXLXFEpl4xHcgoo7Y1MazyiGIok6fWV
      5WM/0BcLhNBna935PM0Tx3x6PvNSPscz0BeQ/PqVK6SoLUw3hqNRqVwFke1CRWVyazLiNaN9
      0J9qllmWRTkU+MczUjj3/CDPUb/fLxZLJMTHM9AXEDwYDCg+NLubm3vW4qmFcy3NgvT7P/lx
      dXZ+cPMuJ0m7m7cmVlqfmf36V7782NA0ePfKVX946DPqqaYVJdHxDPQFBA8GI4yRa5mAYkiK
      rRfE1Z2OyFKFSsMxx5LApSiLgxiw/Eyz9thQlPZHk8loyHCs5wUcQx4H0OePz1wIfxqOb2Gf
      S/7t/OyPZ6DPK+srtxGEkJKbVSPHuDcYVMoVmoSh71GCzLEsjO3dUVIviBRN5xhmaSorMgQA
      gHx7a0/TVZamAEEhnBM5YgRp9db1er0yCmGrUgR5SpBkjnKSYXn2kUWFLL5zb2dqqkESRIYw
      BfPjGejzCkmRk2Hnzq2r514+f7DbwfZBQNcbdWWyvSXNnzy7uGB29rpONNhL/Jhs6sRWL3jl
      G79rcAAAPBwOLddKrMH6VseYW1AzU2ycTzzrvWsj17V6tSpA8dbBuFEUlcrMy8890rYxT1du
      356MD/d3D5VCy5CORfTnlvbuVk6x/sQ1arrtxjyZOn7ujvYSQpmeqvKSRgFEAjyajCiahwTh
      uX5rqkEQhCjw66t3EcnzBEpzKOl6aI2VYg2iOAwjnKcJoGHiA1aWqDyjhHq58OFZUbqz18YA
      IYQlSQuDyQM7R5Zlv72v4pjPMQ9uYcfz0DGfjMfsHD//+ZsvvvD8eDTkFJWhqCzLGQpgSGVJ
      rKjK3bsrjXqD5ViUY0WWAADd/c2N/cmlS2dIAOM0I2HOcoIfhAwFMUFLAv9b/Wi/Ac6405uE
      47FVKcsUq1qTfk0XR15me8lzXzpLPtHduLl2h+bEwXAi8DRJsW6Y6DwIYgRYRSGinGYjRBeY
      JKFlx3bPPG7S6O6uBYjz44xGNqClNIdkYkJOj+L0wvkzT3ZC7m6uTbxMoOMEaCcW6lmWZzlQ
      RObOytbCbBMQZIpygDKa5QiQ+0E0HA6r1bIkqySBr12+TIraXKs2moxLpSpGKUXTJMXsba5F
      gM48k+C1+el6GIWHuzszpy+JDGQYBgAAcG67HsB4PBpUas0sTT4U0U5v88a1m4PeuFCSAMSD
      viurQpQTIvbb+91v/8f/bW/9xsqt21YKq7XC7732Ut8Ky0V959D6+U9/OOqM584931m/gilZ
      UlQ3zkqa/I03Xv/kl/RfF4YnbCumkbuyMZZIvHU4+s5rzw4mjjUYhBfPSkc1D+qNTFng3cgB
      bpwlAVuajVK73z3ky6KfEpPh4Y552Dj15dAyPzKQAMnEAY7VFyRy5+rdwvSszico5lRVPNKS
      O5w4EkVuH+yE4+T2mlwXM1w8c1pPVrc7rjf2Lbe5MNW7t7nnUWfqeL/txbxurFw/8dLvzVbE
      4XBIut76rSspIVar0mB/SCjGd3/3a1aASBz2hwOGDTbvXkeszCeunYBGc3pxpg4AAGnw9ls/
      t8Y+JYra6vLQzj+cgca9jqCrG2t7tboxGI4EXvAjVNBlnEaD0WT+5DPW4IAgWC/OZImrV6sA
      AJTFY8t3xj2KFfww5inMSappubqmEBBUq9VPcC1/K+QoGo2csWkVNBGRPEtihWfGXmS74eLc
      1JOvZe9wL4gzP0oNmSdo1vUCnAS8pMQprhWVMMlsP5qq6DGmIt8rlR4zGMW+5QTItB2Rxoyo
      mLbHE1kGyAQRSwtH2LrNYe+hnSMDEOKMU0pUnkgcsdsdczQV5RBGLitKaZZxNBOmAGRepTUv
      cdRwOMYYOdaEpDlAUFnocYreqlf6hwcRoAWGAjh3bIviJSKNx5a99Mx5gSYAAAClg4lljscM
      S5MUG/j+/w/6yRDlmqjAxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Advertiser Data' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='ROI and Churn' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Active Advertisers Last Week' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
