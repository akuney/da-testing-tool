<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0717.0952                -->
  <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/t/PreQA/workbooks/BaseCRMDashboard?rev=2.8' id='BaseCRMDashboard_BETA' path='/workbooks' revision='1.8' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Current Capacity / Week - SCA wNoSeg' datatype='real' name='[Current Capacity / Week - PPA (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
      <column caption='Current Capacity / Week - PPA' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.83333299999999999'>
        <calculation class='tableau' formula='0.83333299999999999' />
      </column>
      <column caption='Current Capacity / Week - SSN' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.66666666699999999'>
        <calculation class='tableau' formula='0.66666666699999999' />
      </column>
      <column caption='Current Capacity / Week - SCA wSeg' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
        <calculation class='tableau' formula='1.5' />
      </column>
      <column caption='selection' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Site&quot;'>
        <calculation class='tableau' formula='&quot;Site&quot;' />
        <members>
          <member value='&quot;Site&quot;' />
          <member value='&quot;Path&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='installed base (deals.0.xlsx)' inline='true' name='excel.41893.600574467593' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='Z:/IM_Data/data/Tableau/data/intentmedia-140910145732-618b4009094b24cf73af/deals.0.xlsx' header='yes' imex='1' server-oauth='' workgroup-auth-mode='as-is'>
        <relation name='&apos;installed base$&apos;' table='[&apos;installed base$&apos;]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Account' datatype='string' name='[entity]' role='dimension' type='nominal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\installed base (deals.0.xlsx).tde' schema='Extract' tablename='Extract' update-time='1/2/2015 6:55:36 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='73' timestamp-start='2015-01-02 18:55:36.767000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.361461' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='deals#0#csv (deals.0.xlsx)' inline='true' name='excel.41892.682379965278' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='Z:/IM_Data/data/Tableau/data/intentmedia-140910145732-618b4009094b24cf73af/deals.0.xlsx' header='yes' imex='1' server-oauth='' workgroup-auth-mode='as-is'>
        <relation name='deals#0#csv$' table='[deals#0#csv$]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Pubs' datatype='real' name='[# Deals (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [deal_count_30_days (copy)] ELSE [deal_count (copy)] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[excel.41892.682379965278].[ctd:\# Deals (copy):qk]&quot;' value='# Pubs' />
          <alias key='&quot;[excel.41892.682379965278].[sum:Calculation_0040911113036570:qk]&quot;' value='Adj. Deal $' />
          <alias key='&quot;[excel.41892.682379965278].[sum:Calculation_0040911113036570:vtsum:qk]&quot;' value='Adj. Deal Value' />
          <alias key='&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;' value='Adjusted Deal Value' />
          <alias key='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' value='Est. Deal Value' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Prob' datatype='real' default-format='p0%' name='[Calculation_0040911112600890]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [stage]&#13;&#10;WHEN &quot;Prospecting&quot; THEN 0&#13;&#10;WHEN &quot;Qualifying&quot; THEN 0.1&#13;&#10;WHEN &quot;Pitching&quot; THEN 0.25&#13;&#10;WHEN &quot;Pitching +&quot; THEN 0.35&#13;&#10;WHEN &quot;Contracting&quot; THEN 0.75&#13;&#10;WHEN &quot;Approved / Signed&quot; THEN 0.9&#13;&#10;WHEN &quot;Launching&quot; THEN 0.95&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='adj_deal_value' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_0040911113036570]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0040911112600890] * [scope]' scope-isolation='false' />
      </column>
      <column caption='select' datatype='string' name='[Calculation_0990912142357516]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 4]&#13;&#10;when &quot;Site&quot; then [custom Site]&#13;&#10;when &quot;Path&quot; then [custom Path]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Site' datatype='string' name='[Calculation_1190912142611876]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 4] = &quot;Site&quot; then [custom Site] end' scope-isolation='false' />
      </column>
      <column caption='count' datatype='integer' name='[Calculation_2430910174955333]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' scope-isolation='false' />
      </column>
      <column caption='deal_count' datatype='integer' name='[Calculation_2610911120349643]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' scope-isolation='false' />
      </column>
      <column caption='Today' datatype='date' name='[Calculation_2920911131414233]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY()' scope-isolation='false' />
      </column>
      <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
      </column>
      <column caption='Milestones' datatype='string' name='[Calculation_3200911113752500]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [stage]&#13;&#10;WHEN &quot;Qualifying&quot; &#13;&#10;THEN &#13;&#10;&quot;– Ensure opportunity exceeds minimum threshold&#13;&#10;– Secure Publisher pitch meeting&#13;&#10;– ELSE, log status for Unqualified deals&quot;&#13;&#10;WHEN &quot;Pitching&quot; &#13;&#10;THEN &#13;&#10;&quot;– Complete Publisher pitch&#13;&#10;– Get updated traffic estimates&#13;&#10;– Obtain Signed NDA &#13;&#10;– Provide revenue estimates to client&quot;&#13;&#10;WHEN &quot;Pitching +&quot; &#13;&#10;THEN &#13;&#10;&quot;– Negotiate commericals&#13;&#10;– Send integration docs&#13;&#10;– Conduct integration / tech calls where appropriate&#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Contracting&quot; &#13;&#10;THEN&#13;&#10;&quot;– Negotiate agreement on key terms&#13;&#10;– Secure signed contract&#13;&#10;– Identify SPM + PIE leads&#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Approved / Signed&quot; &#13;&#10;THEN&#13;&#10;&quot;– Complete internal kickoff and transition to SPM / PIE leads&#13;&#10;– Log all commercial terms into Contact record&#13;&#10;– Validate partner integration work &amp; write Pivotal stories &#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Launching&quot; &#13;&#10;THEN&#13;&#10;&quot;– Complete full Launch Checklist&#13;&#10;– Secure partner approval to enable ads&quot;&#13;&#10;ELSE &quot;NA&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Current Capacity / Week' datatype='real' name='[Calculation_3780911134747663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [custom Product] = &quot;ppa&quot; THEN [Parameters].[Parameter 1] &#13;&#10;ELSEIF [custom Product] = &quot;ssn&quot; THEN [Parameters].[Parameter 2] &#13;&#10;ELSEIF [custom Product] = &quot;sca&quot; THEN&#13;&#10;(IF [custom Segmentation Required?] = &quot;Y&quot; THEN [Parameters].[Parameter 3] ELSE [Parameters].[Current Capacity / Week - PPA (copy)] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
      </column>
      <column caption='Stage Description' datatype='string' name='[Calculation_4310911113250575]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [stage]&#13;&#10;WHEN &quot;Prospecting&quot; THEN &quot;Deals that are on our radar but have not yet been prioritized or qualified&quot;&#13;&#10;WHEN &quot;Qualifying&quot; THEN &quot;Deals that we&apos;ve prioritized or that have received inbound interest and are currently being evaluated&quot;&#13;&#10;WHEN &quot;Pitching&quot; THEN &quot;Deals that are currently being pitched and discussed with a Publisher&quot;&#13;&#10;WHEN &quot;Pitching +&quot; THEN &quot;Deals that have confirmed sizing and are in secondary round of discussions&quot;&#13;&#10;WHEN &quot;Contracting&quot; THEN &quot;Deals that are currently being negotiated (note: Installed Base deals do not typically pass through this stage)&quot;&#13;&#10;WHEN &quot;Approved / Signed&quot; THEN &quot;Deals for which we&apos;ve signed a contract or have approval to launch&quot;&#13;&#10;WHEN &quot;Launching&quot; THEN &quot;Deals that have been scoped, unblocked, and placed in our launch queue&quot;&#13;&#10;WHEN &quot;Icebox&quot; THEN &quot;Deals that are not actively being pursued or require add’l future follow up &gt; 1Q out&quot;&#13;&#10;WHEN &quot;Lost / Unqualified&quot; THEN &quot;Deals we have either lost or dis-qualified as too small&quot;&#13;&#10;ELSE &quot;NA&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Path' datatype='string' name='[Calculation_5040912142641557]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 4] = &quot;Path&quot; then [custom Site] + [custom Path] end' scope-isolation='false' />
      </column>
      <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
      </column>
      <column caption='Weeks of Backlog' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_8020911135332246]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4140911131616159] / [Calculation_3780911134747663]' scope-isolation='false' />
      </column>
      <column caption='deal_count_30_days' datatype='integer' name='[Calculation_9650911115924611]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,DATE([last_stage_change_at]),TODAY()) &lt; 30 THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[current_win_likelihood]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
      </column>
      <column caption='e_id' datatype='real' name='[deal_count (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[company_id]' scope-isolation='false' />
      </column>
      <column caption='e_id_30_days' datatype='real' name='[deal_count_30_days (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,DATE([last_stage_change_at]),TODAY()) &lt; 30 THEN [company_id] ELSE NULL END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='N' name='[id]' role='measure' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
      </column>
      <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[# Deals (copy)]' derivation='CountD' name='[ctd:# Deals (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[# Deals (copy)]' derivation='CountD' name='[ctd:# Deals (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_0040911113036570]' derivation='Sum' name='[sum:Calculation_0040911113036570:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0040911113036570]' derivation='Sum' name='[sum:Calculation_0040911113036570:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Product and Segmentation'>
          <field>[custom Product]</field>
          <field>[custom Segmentation Required?]</field>
        </drill-path>
        <drill-path name='Site Path'>
          <field>[Calculation_1190912142611876]</field>
          <field>[Calculation_5040912142641557]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\deals#0#csv (deals.0.xlsx).tde' schema='Extract' tablename='Extract' update-time='1/2/2015 6:55:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0040911112600890]' formula='CASE [stage]&#13;&#10;WHEN &quot;Prospecting&quot; THEN 0&#13;&#10;WHEN &quot;Qualifying&quot; THEN 0.1&#13;&#10;WHEN &quot;Pitching&quot; THEN 0.25&#13;&#10;WHEN &quot;Pitching +&quot; THEN 0.35&#13;&#10;WHEN &quot;Contracting&quot; THEN 0.75&#13;&#10;WHEN &quot;Approved / Signed&quot; THEN 0.9&#13;&#10;WHEN &quot;Launching&quot; THEN 0.95&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_0040911113036570]' formula='[Calculation_0040911112600890] * [scope]' />
            <calculation column='[Calculation_2430910174955333]' formula='1' />
            <calculation column='[Calculation_2610911120349643]' formula='1' />
            <calculation column='[Calculation_3021008185451253]' formula='date(left([updated_at], 10))' />
            <calculation column='[Calculation_3200911113752500]' formula='CASE [stage]&#13;&#10;WHEN &quot;Qualifying&quot; &#13;&#10;THEN &#13;&#10;&quot;– Ensure opportunity exceeds minimum threshold&#13;&#10;– Secure Publisher pitch meeting&#13;&#10;– ELSE, log status for Unqualified deals&quot;&#13;&#10;WHEN &quot;Pitching&quot; &#13;&#10;THEN &#13;&#10;&quot;– Complete Publisher pitch&#13;&#10;– Get updated traffic estimates&#13;&#10;– Obtain Signed NDA &#13;&#10;– Provide revenue estimates to client&quot;&#13;&#10;WHEN &quot;Pitching +&quot; &#13;&#10;THEN &#13;&#10;&quot;– Negotiate commericals&#13;&#10;– Send integration docs&#13;&#10;– Conduct integration / tech calls where appropriate&#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Contracting&quot; &#13;&#10;THEN&#13;&#10;&quot;– Negotiate agreement on key terms&#13;&#10;– Secure signed contract&#13;&#10;– Identify SPM + PIE leads&#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Approved / Signed&quot; &#13;&#10;THEN&#13;&#10;&quot;– Complete internal kickoff and transition to SPM / PIE leads&#13;&#10;– Log all commercial terms into Contact record&#13;&#10;– Validate partner integration work &amp; write Pivotal stories &#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Launching&quot; &#13;&#10;THEN&#13;&#10;&quot;– Complete full Launch Checklist&#13;&#10;– Secure partner approval to enable ads&quot;&#13;&#10;ELSE &quot;NA&quot;&#13;&#10;END' />
            <calculation column='[Calculation_4310911113250575]' formula='CASE [stage]&#13;&#10;WHEN &quot;Prospecting&quot; THEN &quot;Deals that are on our radar but have not yet been prioritized or qualified&quot;&#13;&#10;WHEN &quot;Qualifying&quot; THEN &quot;Deals that we&apos;ve prioritized or that have received inbound interest and are currently being evaluated&quot;&#13;&#10;WHEN &quot;Pitching&quot; THEN &quot;Deals that are currently being pitched and discussed with a Publisher&quot;&#13;&#10;WHEN &quot;Pitching +&quot; THEN &quot;Deals that have confirmed sizing and are in secondary round of discussions&quot;&#13;&#10;WHEN &quot;Contracting&quot; THEN &quot;Deals that are currently being negotiated (note: Installed Base deals do not typically pass through this stage)&quot;&#13;&#10;WHEN &quot;Approved / Signed&quot; THEN &quot;Deals for which we&apos;ve signed a contract or have approval to launch&quot;&#13;&#10;WHEN &quot;Launching&quot; THEN &quot;Deals that have been scoped, unblocked, and placed in our launch queue&quot;&#13;&#10;WHEN &quot;Icebox&quot; THEN &quot;Deals that are not actively being pursued or require add’l future follow up &gt; 1Q out&quot;&#13;&#10;WHEN &quot;Lost / Unqualified&quot; THEN &quot;Deals we have either lost or dis-qualified as too small&quot;&#13;&#10;ELSE &quot;NA&quot;&#13;&#10;END' />
            <calculation column='[Calculation_5810911131311388]' formula='DATE(left([last_stage_change_at],10))' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[deal_count (copy)]' formula='[company_id]' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='879' timestamp-start='2015-01-02 18:55:12.454000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.357683' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:stage:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Lost / Unqualified&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Prospecting&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Pitching&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Launched&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Approved / Signed&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Contracting&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Icebox&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Pitching +&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Launching&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Qualifying&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel.41892.682379965278].[ctd:\# Deals (copy):vtsum:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:vtsum:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:custom Product:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;PPA&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;SSN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;SCA&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:stage:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Prospecting&quot;</bucket>
            <bucket>&quot;Qualifying&quot;</bucket>
            <bucket>&quot;Pitching&quot;</bucket>
            <bucket>&quot;Pitching +&quot;</bucket>
            <bucket>&quot;Contracting&quot;</bucket>
            <bucket>&quot;Approved / Signed&quot;</bucket>
            <bucket>&quot;Launching&quot;</bucket>
            <bucket>&quot;Launched&quot;</bucket>
            <bucket>&quot;Icebox&quot;</bucket>
            <bucket>&quot;Lost / Unqualified&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Current Capacity / Week - SCA wNoSeg' datatype='real' name='[Current Capacity / Week - PPA (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
        <column caption='Current Capacity / Week - PPA' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.83333299999999999'>
          <calculation class='tableau' formula='0.83333299999999999' />
        </column>
        <column caption='Current Capacity / Week - SSN' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.66666666699999999'>
          <calculation class='tableau' formula='0.66666666699999999' />
        </column>
        <column caption='Current Capacity / Week - SCA wSeg' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.5'>
          <calculation class='tableau' formula='1.5' />
        </column>
        <column caption='selection' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Site&quot;'>
          <calculation class='tableau' formula='&quot;Site&quot;' />
          <members>
            <member value='&quot;Site&quot;' />
            <member value='&quot;Path&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
  </mapsources>
  <shared-views>
    <shared-view name='excel.41892.682379965278'>
      <datasources>
        <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
      </datasources>
      <datasource-dependencies datasource='excel.41892.682379965278'>
        <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
        </column>
        <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
        </column>
        <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        </column>
        <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
        <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
        <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[owner]' role='dimension' type='nominal'>
        </column>
        <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='excel.41893.600574467593'>
        <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='quantitative' column='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' included-values='in-range'>
        <min>#2014-07-16#</min>
        <max>#2014-12-29#</max>
      </filter>
      <filter class='quantitative' column='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' included-values='in-range'>
        <min>#2014-07-01#</min>
        <max>#2014-12-29#</max>
      </filter>
      <filter class='categorical' column='[excel.41892.682379965278].[none:custom Country:nk]'>
        <groupfilter function='level-members' level='[none:custom Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[excel.41892.682379965278].[none:owner:nk]'>
        <groupfilter function='level-members' level='[none:owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[excel.41892.682379965278].[none:stage:nk]'>
        <groupfilter function='level-members' level='[none:stage:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[excel.41893.600574467593].[none:Installed Base?:nk]'>
        <groupfilter function='level-members' level='[none:Installed Base?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='1' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='count' datatype='integer' name='[Calculation_2430910174955333]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom EZ$L?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Roadmap?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom EZ$L?]' derivation='None' name='[none:custom EZ$L?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Roadmap?]' derivation='None' name='[none:custom Roadmap?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2430910174955333]' derivation='Sum' name='[sum:Calculation_2430910174955333:qk]' pivot='key' type='quantitative' />
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_2430910174955333:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom API?:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:custom API?:nk]' member='%null%' />
              <groupfilter function='member' level='[none:custom API?:nk]' member='&quot;N&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Roadmap?:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:custom Roadmap?:nk]' member='%null%' />
              <groupfilter function='member' level='[none:custom Roadmap?:nk]' member='&quot;N&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom API?:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Roadmap?:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='180' />
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='268' />
            <format attr='width' field='[excel.41892.682379965278].[none:name:nk]' value='300' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:name:nk] / ([excel.41892.682379965278].[none:owner:nk] / ([excel.41892.682379965278].[none:custom Path:nk] / ([excel.41892.682379965278].[none:custom EZ$L?:nk] / [excel.41892.682379965278].[none:custom Segmentation Required?:nk])))))))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='BD Pipeline Detail by Deal' tab-color='#f2e6e6'>
      <repository-location id='BDPipelineDetailbyDeal' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='adj_deal_value' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_0040911113036570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040911112600890] * [scope]' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[current_win_likelihood]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[current_win_likelihood]' derivation='None' name='[none:current_win_likelihood:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0040911113036570]' derivation='Sum' name='[sum:Calculation_0040911113036570:qk]' pivot='key' type='quantitative' />
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.41892.682379965278].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_0040911113036570:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='134' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:current_win_likelihood:ok]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom API?:nk] / [excel.41892.682379965278].[none:current_win_likelihood:ok]))))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='BD Pipeline Overview by deal Count' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[current_win_likelihood]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[current_win_likelihood]' derivation='None' name='[none:current_win_likelihood:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:current_win_likelihood:ok]' value='128' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='180' />
            <format attr='width' field='[excel.41892.682379965278].[none:company:nk]' value='192' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom Segmentation Required?:nk] / [excel.41892.682379965278].[none:current_win_likelihood:ok]))))</rows>
        <cols total='true'>([excel.41892.682379965278].[none:custom Product:nk] / [excel.41892.682379965278].[none:custom Path:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='BD Pipeline Overview by deal value' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[current_win_likelihood]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[current_win_likelihood]' derivation='None' name='[none:current_win_likelihood:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:current_win_likelihood:ok]' value='128' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='180' />
            <format attr='width' field='[excel.41892.682379965278].[none:company:nk]' value='192' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='100' />
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[sum:scope:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom Segmentation Required?:nk] / [excel.41892.682379965278].[none:current_win_likelihood:ok]))))</rows>
        <cols total='true'>([excel.41892.682379965278].[none:custom Product:nk] / [excel.41892.682379965278].[none:custom Path:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Launch Backlog Detail' tab-color='#f2e6e6'>
      <repository-location id='LaunchBacklogDetail' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom EZ$L?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Roadmap?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom EZ$L?]' derivation='None' name='[none:custom EZ$L?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Roadmap?]' derivation='None' name='[none:custom Roadmap?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:qk]' pivot='key' type='quantitative' />
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.41892.682379965278].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom API?:nk]'>
            <groupfilter function='level-members' level='[none:custom API?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Roadmap?:nk]'>
            <groupfilter function='level-members' level='[none:custom Roadmap?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:custom API?:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Roadmap?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='110' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='128' />
            <format attr='width' field='[excel.41892.682379965278].[none:name:nk]' value='376' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='116' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom EZ$L?:nk]' value='120' />
            <format attr='height' field='[excel.41892.682379965278].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:name:nk] / ([excel.41892.682379965278].[none:owner:nk] / ([excel.41892.682379965278].[none:custom Path:nk] / ([excel.41892.682379965278].[none:custom EZ$L?:nk] / [excel.41892.682379965278].[none:custom Segmentation Required?:nk])))))))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Launch Backlog Overview' tab-color='#f2e6e6'>
      <repository-location id='LaunchBacklogOverview' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource name='Parameters' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column caption='Weeks of Backlog' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_8020911135332246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4140911131616159] / [Calculation_3780911134747663]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom EZ$L?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Roadmap?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom EZ$L?]' derivation='None' name='[none:custom EZ$L?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Roadmap?]' derivation='None' name='[none:custom Roadmap?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8020911135332246]' derivation='Sum' name='[sum:Calculation_8020911135332246:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_8020911135332246:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom API?:nk]'>
            <groupfilter function='level-members' level='[none:custom API?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom EZ$L?:nk]'>
            <groupfilter function='level-members' level='[none:custom EZ$L?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[excel.41892.682379965278].[none:custom Product:nk]' direction='ASC' />
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Roadmap?:nk]'>
            <groupfilter function='level-members' level='[none:custom Roadmap?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]'>
            <groupfilter function='level-members' level='[none:custom Segmentation Required?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</column>
            <column>[excel.41892.682379965278].[none:custom API?:nk]</column>
            <column>[excel.41892.682379965278].[none:custom EZ$L?:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
            <column>[excel.41892.682379965278].[none:custom Roadmap?:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='108' />
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='95' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel.41892.682379965278].[none:stage:nk]' value='48' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='136' />
            <format attr='height' field='[excel.41892.682379965278].[:Measure Names]' value='48' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Product:nk]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41892.682379965278].[none:custom Product:nk]</rows>
        <cols total='true'>([excel.41892.682379965278].[none:stage:nk] / [excel.41892.682379965278].[:Measure Names])</cols>
        <subtotals>
          <column>[excel.41892.682379965278].[none:custom Product:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Loss &amp; Icebox Overview' tab-color='#f2e6e6'>
      <repository-location id='LossIceboxOverview' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='deal_count' datatype='integer' name='[Calculation_2610911120349643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[loss_reason]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Site]' derivation='None' name='[none:custom Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[loss_reason]' derivation='None' name='[none:loss_reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2610911120349643]' derivation='Sum' name='[sum:Calculation_2610911120349643:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.41892.682379965278].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='187' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Product:nk]' value='100' />
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='108' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Site:nk]' value='160' />
            <format attr='width' field='[excel.41892.682379965278].[none:name:nk]' value='400' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='8' />
            <format attr='row-horiz-levels' value='8' />
            <format attr='col-levels' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:custom Site:nk] / ([excel.41892.682379965278].[none:name:nk] / ([excel.41892.682379965278].[none:loss_reason:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom Product:nk] / [excel.41892.682379965278].[none:custom Path:nk]))))))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Map' tab-color='#f2e6e6'>
      <repository-location id='Map' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource name='Parameters' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Site' datatype='string' name='[Calculation_1190912142611876]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 4] = &quot;Site&quot; then [custom Site] end' scope-isolation='false' />
            </column>
            <column caption='deal_count' datatype='integer' name='[Calculation_2610911120349643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Path' datatype='string' name='[Calculation_5040912142641557]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 4] = &quot;Path&quot; then [custom Site] + [custom Path] end' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[Calculation_1190912142611876]' derivation='None' name='[none:Calculation_1190912142611876:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5040912142641557]' derivation='None' name='[none:Calculation_5040912142641557:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2610911120349643]' derivation='Sum' name='[sum:Calculation_2610911120349643:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]' />
              <text column='[excel.41892.682379965278].[none:Calculation_1190912142611876:nk]' />
              <text column='[excel.41892.682379965278].[none:Calculation_5040912142641557:nk]' />
              <size column='[excel.41892.682379965278].[sum:scope:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>custom Path:&#9;</run>
                <run bold='true'>&lt;[excel.41892.682379965278].[custom Path]&gt;&#10;</run>
                <run fontcolor='#787878'>custom Site:&#9;</run>
                <run bold='true'>&lt;[excel.41892.682379965278].[none:custom Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>deal_count:&#9;</run>
                <run bold='true'>&lt;[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Est. Deal Value:&#9; </run>
                <run bold='true'>&lt;[excel.41892.682379965278].[sum:scope:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Pipeline Stage Overview' tab-color='#f2e6e6'>
      <repository-location id='PipelineStageOverview' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Number of Pubs' datatype='real' name='[# Deals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [deal_count_30_days (copy)] ELSE [deal_count (copy)] END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Prob' datatype='real' default-format='p0%' name='[Calculation_0040911112600890]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [stage]&#13;&#10;WHEN &quot;Prospecting&quot; THEN 0&#13;&#10;WHEN &quot;Qualifying&quot; THEN 0.1&#13;&#10;WHEN &quot;Pitching&quot; THEN 0.25&#13;&#10;WHEN &quot;Pitching +&quot; THEN 0.35&#13;&#10;WHEN &quot;Contracting&quot; THEN 0.75&#13;&#10;WHEN &quot;Approved / Signed&quot; THEN 0.9&#13;&#10;WHEN &quot;Launching&quot; THEN 0.95&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='adj_deal_value' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_0040911113036570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040911112600890] * [scope]' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Milestones' datatype='string' name='[Calculation_3200911113752500]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [stage]&#13;&#10;WHEN &quot;Qualifying&quot; &#13;&#10;THEN &#13;&#10;&quot;– Ensure opportunity exceeds minimum threshold&#13;&#10;– Secure Publisher pitch meeting&#13;&#10;– ELSE, log status for Unqualified deals&quot;&#13;&#10;WHEN &quot;Pitching&quot; &#13;&#10;THEN &#13;&#10;&quot;– Complete Publisher pitch&#13;&#10;– Get updated traffic estimates&#13;&#10;– Obtain Signed NDA &#13;&#10;– Provide revenue estimates to client&quot;&#13;&#10;WHEN &quot;Pitching +&quot; &#13;&#10;THEN &#13;&#10;&quot;– Negotiate commericals&#13;&#10;– Send integration docs&#13;&#10;– Conduct integration / tech calls where appropriate&#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Contracting&quot; &#13;&#10;THEN&#13;&#10;&quot;– Negotiate agreement on key terms&#13;&#10;– Secure signed contract&#13;&#10;– Identify SPM + PIE leads&#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Approved / Signed&quot; &#13;&#10;THEN&#13;&#10;&quot;– Complete internal kickoff and transition to SPM / PIE leads&#13;&#10;– Log all commercial terms into Contact record&#13;&#10;– Validate partner integration work &amp; write Pivotal stories &#13;&#10;– ELSE, log status for Lost / Icebox deals&quot;&#13;&#10;WHEN &quot;Launching&quot; &#13;&#10;THEN&#13;&#10;&quot;– Complete full Launch Checklist&#13;&#10;– Secure partner approval to enable ads&quot;&#13;&#10;ELSE &quot;NA&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Stage Description' datatype='string' name='[Calculation_4310911113250575]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [stage]&#13;&#10;WHEN &quot;Prospecting&quot; THEN &quot;Deals that are on our radar but have not yet been prioritized or qualified&quot;&#13;&#10;WHEN &quot;Qualifying&quot; THEN &quot;Deals that we&apos;ve prioritized or that have received inbound interest and are currently being evaluated&quot;&#13;&#10;WHEN &quot;Pitching&quot; THEN &quot;Deals that are currently being pitched and discussed with a Publisher&quot;&#13;&#10;WHEN &quot;Pitching +&quot; THEN &quot;Deals that have confirmed sizing and are in secondary round of discussions&quot;&#13;&#10;WHEN &quot;Contracting&quot; THEN &quot;Deals that are currently being negotiated (note: Installed Base deals do not typically pass through this stage)&quot;&#13;&#10;WHEN &quot;Approved / Signed&quot; THEN &quot;Deals for which we&apos;ve signed a contract or have approval to launch&quot;&#13;&#10;WHEN &quot;Launching&quot; THEN &quot;Deals that have been scoped, unblocked, and placed in our launch queue&quot;&#13;&#10;WHEN &quot;Icebox&quot; THEN &quot;Deals that are not actively being pursued or require add’l future follow up &gt; 1Q out&quot;&#13;&#10;WHEN &quot;Lost / Unqualified&quot; THEN &quot;Deals we have either lost or dis-qualified as too small&quot;&#13;&#10;ELSE &quot;NA&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column-instance column='[# Deals (copy)]' derivation='CountD' name='[ctd:# Deals (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_0040911112600890]' derivation='None' name='[none:Calculation_0040911112600890:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3200911113752500]' derivation='None' name='[none:Calculation_3200911113752500:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4310911113250575]' derivation='None' name='[none:Calculation_4310911113250575:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0040911113036570]' derivation='Sum' name='[sum:Calculation_0040911113036570:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[ctd:\# Deals (copy):vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_0040911113036570:vtsum:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.41892.682379965278].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.41892.682379965278].[ctd:\# Deals (copy):vtsum:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_0040911113036570:vtsum:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[excel.41892.682379965278].[none:stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prospecting&quot;</bucket>
              <bucket>&quot;Qualifying&quot;</bucket>
              <bucket>&quot;Pitching&quot;</bucket>
              <bucket>&quot;Pitching +&quot;</bucket>
              <bucket>&quot;Contracting&quot;</bucket>
              <bucket>&quot;Approved / Signed&quot;</bucket>
              <bucket>&quot;Launching&quot;</bucket>
              <bucket>&quot;Launched&quot;</bucket>
              <bucket>&quot;Icebox&quot;</bucket>
              <bucket>&quot;Lost / Unqualified&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='149' />
            <format attr='height' field='[excel.41892.682379965278].[none:Calculation_0040911112600890:ok]' value='67' />
            <format attr='height' field='[excel.41892.682379965278].[none:Calculation_3200911113752500:nk]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='120' />
            <format attr='width' field='[excel.41892.682379965278].[none:Calculation_4310911113250575:nk]' value='208' />
            <format attr='width' field='[excel.41892.682379965278].[none:Calculation_3200911113752500:nk]' value='320' />
            <format attr='width' field='[excel.41892.682379965278].[none:Calculation_0040911112600890:ok]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:Calculation_4310911113250575:nk] / ([excel.41892.682379965278].[none:Calculation_3200911113752500:nk] / [excel.41892.682379965278].[none:Calculation_0040911112600890:ok])))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Product Mix viz' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Number of Pubs' datatype='real' name='[# Deals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [deal_count_30_days (copy)] ELSE [deal_count (copy)] END' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column-instance column='[# Deals (copy)]' derivation='CountD' name='[ctd:# Deals (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='253' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41892.682379965278].[none:custom Product:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[excel.41892.682379965278].[ctd:# Deals (copy):vtsum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41892.682379965278].[none:custom Product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[excel.41892.682379965278].[sum:Calculation_4140911131616159:vtsum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41892.682379965278].[none:custom Product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel.41892.682379965278].[ctd:# Deals (copy):vtsum:qk] + [excel.41892.682379965278].[sum:Calculation_4140911131616159:vtsum:qk])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Pub Pipeline Detail by Deal' tab-color='#f2e6e6'>
      <repository-location id='PubPipelineDetailbyDeal' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[current_win_likelihood]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom MVT Required at Launch?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[current_win_likelihood]' derivation='None' name='[none:current_win_likelihood:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom MVT Required at Launch?]' derivation='None' name='[none:custom MVT Required at Launch?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:qk]' pivot='key' type='quantitative' />
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.41892.682379965278].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:forecasted_deal_value:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom MVT Required at Launch?:nk]'>
            <groupfilter function='level-members' level='[none:custom MVT Required at Launch?:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
            <column>[excel.41892.682379965278].[none:custom MVT Required at Launch?:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='118' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:name:nk]' value='308' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom API?:nk]' value='84' />
            <format attr='width' field='[excel.41892.682379965278].[none:current_win_likelihood:ok]' value='124' />
            <format attr='height-header' value='52' />
            <format attr='width' field='[excel.41892.682379965278].[none:Calculation_5810911131311388:ok]' value='124' />
            <format attr='height' field='[excel.41892.682379965278].[:Measure Names]' value='40' />
            <format attr='width' field='[excel.41892.682379965278].[none:company:nk]' value='180' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='15' />
            <format attr='row-horiz-levels' value='15' />
            <format attr='col-levels' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:name:nk] / ([excel.41892.682379965278].[none:Calculation_5810911131311388:ok] / ([excel.41892.682379965278].[none:Calculation_3021008185451253:ok] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom Product:nk] / ([excel.41892.682379965278].[none:custom Segmentation Required?:nk] / ([excel.41892.682379965278].[none:custom MVT Required at Launch?:nk] / ([excel.41892.682379965278].[none:custom API?:nk] / [excel.41892.682379965278].[none:current_win_likelihood:ok]))))))))))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Pub Pipeline Overview (1)' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='adj_deal_value' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_0040911113036570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040911112600890] * [scope]' scope-isolation='false' />
            </column>
            <column caption='deal_count' datatype='integer' name='[Calculation_2610911120349643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' scope-isolation='false' />
            </column>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[current_win_likelihood]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[current_win_likelihood]' derivation='None' name='[none:current_win_likelihood:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Site]' derivation='None' name='[none:custom Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[scope]' role='measure' type='quantitative'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0040911113036570]' derivation='Sum' name='[sum:Calculation_0040911113036570:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2610911120349643]' derivation='Sum' name='[sum:Calculation_2610911120349643:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scope]' derivation='Sum' name='[sum:scope:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_0040911113036570:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.41892.682379965278].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]&quot;</bucket>
              <bucket>&quot;[excel.41892.682379965278].[sum:scope:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='140' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:current_win_likelihood:ok]' value='132' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom API?:nk]' value='92' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Site:nk]' value='164' />
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='132' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='208' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='108' />
            <format attr='height' field='[excel.41892.682379965278].[:Measure Names]' value='44' />
            <format attr='width' field='[excel.41892.682379965278].[none:company:nk]' value='172' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Product:nk]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel.41892.682379965278].[none:company:nk]' value='true' />
            <format attr='display' field='[excel.41892.682379965278].[:Measure Names]' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:custom Site:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:custom Product:nk] / ([excel.41892.682379965278].[none:custom Path:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom Segmentation Required?:nk] / ([excel.41892.682379965278].[none:custom API?:nk] / [excel.41892.682379965278].[none:current_win_likelihood:ok]))))))))</rows>
        <cols>[excel.41892.682379965278].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Pub Pipeline Overview (2)' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom API?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Segmentation Required?]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom API?]' derivation='None' name='[none:custom API?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Segmentation Required?]' derivation='None' name='[none:custom Segmentation Required?:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Site]' derivation='None' name='[none:custom Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.41892.682379965278].[sum:Calculation_4140911131616159:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[:Measure Names]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[:Measure Names]' value='107' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom API?:nk]' value='88' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Site:nk]' value='168' />
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='132' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='116' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' value='108' />
            <format attr='height' field='[excel.41892.682379965278].[:Measure Names]' value='44' />
            <format attr='width' field='[excel.41892.682379965278].[none:company:nk]' value='172' />
            <format attr='height' field='[excel.41892.682379965278].[none:custom Path:nk]' value='46' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel.41892.682379965278].[none:company:nk]' value='true' />
            <format attr='display' field='[excel.41892.682379965278].[:Measure Names]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel.41892.682379965278].[none:company:nk] / ([excel.41892.682379965278].[none:custom Site:nk] / ([excel.41892.682379965278].[none:stage:nk] / ([excel.41892.682379965278].[none:custom Country:nk] / ([excel.41892.682379965278].[none:custom Segmentation Required?:nk] / [excel.41892.682379965278].[none:custom API?:nk])))))</rows>
        <cols>([excel.41892.682379965278].[:Measure Names] / ([excel.41892.682379965278].[none:custom Product:nk] / [excel.41892.682379965278].[none:custom Path:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[company]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel.41892.682379965278].[none:company:nk] / [excel.41893.600574467593].[none:Installed Base?:nk])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='by deal count' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[custom Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='N' name='[id]' role='measure' type='ordinal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Ad Unit]' derivation='None' name='[none:custom Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:custom Ad Unit:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Path:nk]'>
            <groupfilter function='level-members' level='[none:custom Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Path:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Ad Unit:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='116' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Path:nk]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Product:nk]' value='100' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Ad Unit:nk]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[ctd:id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:custom Product:nk] / [excel.41892.682379965278].[none:custom Ad Unit:nk])</rows>
        <cols total='true'>([excel.41892.682379965278].[none:custom Country:nk] / [excel.41892.682379965278].[none:custom Path:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='by revenue' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[custom Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Ad Unit]' derivation='None' name='[none:custom Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Product]' derivation='None' name='[none:custom Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:custom Ad Unit:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Path:nk]'>
            <groupfilter function='level-members' level='[none:custom Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Path:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Ad Unit:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='116' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Path:nk]' value='144' />
            <format attr='text-format' field='[excel.41892.682379965278].[sum:forecasted_deal_value:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Product:nk]' value='100' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Ad Unit:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41892.682379965278].[sum:forecasted_deal_value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([excel.41892.682379965278].[none:custom Product:nk] / [excel.41892.682379965278].[none:custom Ad Unit:nk])</rows>
        <cols total='true'>([excel.41892.682379965278].[none:custom Country:nk] / [excel.41892.682379965278].[none:custom Path:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='deal count viz.' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[custom Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='N' name='[id]' role='measure' type='ordinal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Ad Unit]' derivation='None' name='[none:custom Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:custom Ad Unit:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Path:nk]'>
            <groupfilter function='level-members' level='[none:custom Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Path:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Ad Unit:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='166' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#99ccff' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41892.682379965278].[ctd:id:qk]</rows>
        <cols>[excel.41892.682379965278].[none:custom Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='pipeline stage viz.' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='# Deals' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_4140911131616159]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [stage] = &quot;Icebox&quot; OR [stage] = &quot;Lost / Unqualified&quot; THEN [Calculation_9650911115924611] ELSE [Calculation_2610911120349643] END' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4140911131616159]' derivation='Sum' name='[sum:Calculation_4140911131616159:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[excel.41892.682379965278].[none:stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prospecting&quot;</bucket>
              <bucket>&quot;Qualifying&quot;</bucket>
              <bucket>&quot;Pitching&quot;</bucket>
              <bucket>&quot;Pitching +&quot;</bucket>
              <bucket>&quot;Contracting&quot;</bucket>
              <bucket>&quot;Approved / Signed&quot;</bucket>
              <bucket>&quot;Launching&quot;</bucket>
              <bucket>&quot;Launched&quot;</bucket>
              <bucket>&quot;Icebox&quot;</bucket>
              <bucket>&quot;Lost / Unqualified&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[excel.41892.682379965278].[none:stage:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[excel.41892.682379965278].[sum:Calculation_4140911131616159:vtsum:qk]</rows>
        <cols>[excel.41892.682379965278].[none:stage:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='revenue viz.' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='deals#0#csv (deals.0.xlsx)' name='excel.41892.682379965278' />
            <datasource caption='installed base (deals.0.xlsx)' name='excel.41893.600574467593' />
          </datasources>
          <datasource-dependencies datasource='excel.41892.682379965278'>
            <column caption='Last Update At' datatype='date' name='[Calculation_3021008185451253]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(left([updated_at], 10))' scope-isolation='false' />
            </column>
            <column caption='Last Stage Change At' datatype='date' name='[Calculation_5810911131311388]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(left([last_stage_change_at],10))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[custom Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[custom Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[custom Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[forecasted_deal_value]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_3021008185451253]' derivation='None' name='[none:Calculation_3021008185451253:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5810911131311388]' derivation='None' name='[none:Calculation_5810911131311388:qk]' pivot='key' type='quantitative' />
            <column-instance column='[custom Ad Unit]' derivation='None' name='[none:custom Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Country]' derivation='None' name='[none:custom Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[custom Path]' derivation='None' name='[none:custom Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[stage]' derivation='None' name='[none:stage:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[forecasted_deal_value]' derivation='Sum' name='[sum:forecasted_deal_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41893.600574467593'>
            <column datatype='string' name='[Installed Base?]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Installed Base?]' derivation='None' name='[none:Installed Base?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:custom Ad Unit:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41892.682379965278].[none:custom Path:nk]'>
            <groupfilter function='level-members' level='[none:custom Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41892.682379965278].[none:custom Path:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Ad Unit:nk]</column>
            <column>[excel.41892.682379965278].[none:custom Country:nk]</column>
            <column>[excel.41892.682379965278].[none:stage:nk]</column>
            <column>[excel.41892.682379965278].[none:owner:nk]</column>
            <column>[excel.41893.600574467593].[none:Installed Base?:nk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</column>
            <column>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[excel.41892.682379965278].[sum:forecasted_deal_value:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='width' field='[excel.41892.682379965278].[none:custom Country:nk]' value='162' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffafaf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41892.682379965278].[sum:forecasted_deal_value:qk]</rows>
        <cols>[excel.41892.682379965278].[none:custom Country:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BD Pipeline Overview' tab-color='#f2e6e6'>
      <repository-location id='BDPipelineOverview' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='1600' minheight='1200' minwidth='1600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90000' x='0' y='0'>
              <zone h='50000' id='1' name='BD Pipeline Overview by deal Count' show-title='true' w='90000' x='0' y='0'>
              </zone>
              <zone h='50000' id='12' name='BD Pipeline Overview by deal value' show-title='true' w='90000' x='0' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='10000' x='90000' y='0'>
              <zone h='5832' id='6' name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' type='filter' w='10000' x='90000' y='0'>
              </zone>
              <zone h='20416' id='7' name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:stage:nk]' type='filter' w='10000' x='90000' y='5832'>
              </zone>
              <zone h='15916' id='8' name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:owner:nk]' type='filter' w='10000' x='90000' y='26248'>
              </zone>
              <zone h='8416' id='9' name='BD Pipeline Overview by deal Count' param='[excel.41893.600574467593].[none:Installed Base?:nk]' type='filter' w='10000' x='90000' y='42164'>
              </zone>
              <zone h='9916' id='10' name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:custom Product:nk]' type='filter' w='10000' x='90000' y='50580'>
              </zone>
              <zone h='18916' id='11' name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' w='10000' x='90000' y='60496'>
              </zone>
              <zone h='5499' id='13' name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' type='filter' w='10000' x='90000' y='79412'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Country Mix' tab-color='#eaeed3'>
      <style>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='93187' x='0' y='0'>
              <zone h='50000' id='1' name='deal count viz.' show-title='true' w='93187' x='0' y='0'>
              </zone>
              <zone h='50000' id='13' name='revenue viz.' show-title='true' w='93187' x='0' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='109' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='6813' x='93187' y='0'>
              <zone h='20446' id='6' name='deal count viz.' param='[excel.41892.682379965278].[none:stage:nk]' type='filter' w='6813' x='93187' y='0'>
              </zone>
              <zone h='13221' id='7' name='deal count viz.' param='[excel.41892.682379965278].[none:custom Product:nk]' type='filter' w='6813' x='93187' y='20446'>
              </zone>
              <zone h='20002' id='8' name='deal count viz.' param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' w='6813' x='93187' y='33667'>
              </zone>
              <zone h='20002' id='9' name='deal count viz.' param='[excel.41892.682379965278].[none:owner:nk]' type='filter' w='6813' x='93187' y='53669'>
              </zone>
              <zone h='11221' id='10' name='deal count viz.' param='[excel.41893.600574467593].[none:Installed Base?:nk]' type='filter' w='6813' x='93187' y='73671'>
              </zone>
              <zone h='7332' id='11' name='deal count viz.' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' type='filter' w='6813' x='93187' y='84892'>
              </zone>
              <zone h='7776' id='12' name='deal count viz.' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' type='filter' w='6813' x='93187' y='92224'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pipeline Product Mix' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>Sheet Name</run>
            <run fontalignment='0'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='PipelineProductMix' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='7' param='horz' type='layout-flow' w='90671' x='0' y='0'>
              <zone h='100000' id='3' param='vert' type='layout-flow' w='90671' x='0' y='0'>
                <zone h='4391' id='1' type='title' w='90671' x='0' y='0'>
                </zone>
                <zone h='95170' id='4' type='layout-basic' w='90671' x='0' y='4391'>
                  <zone h='34624' id='5' name='by deal count' show-title='true' w='90671' x='0' y='4391'>
                  </zone>
                  <zone h='60546' id='10' name='by revenue' show-title='true' w='90671' x='0' y='39015'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='11' is-fixed='true' param='vert' type='layout-flow' w='9329' x='90671' y='0'>
              <zone h='20600' id='13' name='by deal count' param='[excel.41892.682379965278].[none:stage:nk]' type='filter' w='9329' x='90671' y='0'>
              </zone>
              <zone h='20161' id='14' name='by deal count' param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' w='9329' x='90671' y='20600'>
              </zone>
              <zone h='20161' id='15' name='by deal count' param='[excel.41892.682379965278].[none:owner:nk]' type='filter' w='9329' x='90671' y='40761'>
              </zone>
              <zone h='13062' id='16' name='by deal count' param='[excel.41892.682379965278].[none:custom Product:nk]' type='filter' w='9329' x='90671' y='60922'>
              </zone>
              <zone h='11087' id='17' name='by deal count' param='[excel.41893.600574467593].[none:Installed Base?:nk]' type='filter' w='9329' x='90671' y='73984'>
              </zone>
              <zone h='7245' id='18' name='by revenue' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' type='filter' w='9329' x='90671' y='85071'>
              </zone>
              <zone h='7684' id='19' name='by revenue' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' type='filter' w='9329' x='90671' y='92316'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pub Pipeline Overview' tab-color='#f2e6e6'>
      <repository-location id='PubPipelineOverview' path='/t/PreQA/workbooks/BaseCRMDashboard' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='1600' minheight='1200' minwidth='1600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90000' x='0' y='0'>
              <zone h='50000' id='1' name='Pub Pipeline Overview (1)' show-title='true' w='90000' x='0' y='0'>
              </zone>
              <zone h='50000' id='11' name='Pub Pipeline Overview (2)' show-title='true' w='90000' x='0' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='10000' x='90000' y='0'>
              <zone h='20749' id='6' name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:stage:nk]' type='filter' w='10000' x='90000' y='0'>
              </zone>
              <zone h='18916' id='7' name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' w='10000' x='90000' y='20749'>
              </zone>
              <zone h='15916' id='8' name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:owner:nk]' type='filter' w='10000' x='90000' y='39665'>
              </zone>
              <zone h='9916' id='9' name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:custom Product:nk]' type='filter' w='10000' x='90000' y='55581'>
              </zone>
              <zone h='8416' id='10' name='Pub Pipeline Overview (1)' param='[excel.41893.600574467593].[none:Installed Base?:nk]' type='filter' w='10000' x='90000' y='65497'>
              </zone>
              <zone h='5499' id='12' name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' type='filter' w='10000' x='90000' y='73913'>
              </zone>
              <zone h='5499' id='13' name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' type='filter' w='10000' x='90000' y='79412'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pipeline Stage Overview'>
      <cards>
        <edge name='left'>
          <strip size='179'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:Calculation_0040911112600890:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_3200911113752500:nk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_4310911113250575:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Product Mix viz'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel.41892.682379965278].[none:custom Product:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:Calculation_0040911112600890:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_3200911113752500:nk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_4310911113250575:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='pipeline stage viz.'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:Calculation_0040911112600890:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_3200911113752500:nk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_4310911113250575:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Launch Backlog Overview'>
      <cards>
        <edge name='left'>
          <strip size='215'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='242'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Current Capacity / Week - PPA (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
            <card param='[excel.41892.682379965278].[none:custom API?:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Roadmap?:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom EZ$L?:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Segmentation Required?:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[:Measure Names]</field>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom EZ$L?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Roadmap?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:scope:ok]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='by deal count'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[ctd:id:ok]</field>
          <field>[excel.41892.682379965278].[none:custom Ad Unit:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='deal count viz.'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[Multiple Values]</field>
          <field>[excel.41892.682379965278].[ctd:id:ok]</field>
          <field>[excel.41892.682379965278].[none:custom Ad Unit:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='by revenue'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='revenue viz.'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Country Mix'>
      <zones>
        <zone name='deal count viz.'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='revenue viz.'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='deal count viz.' param='[excel.41892.682379965278].[none:custom Product:nk]' type='filter' values='relevant' />
        <zone name='deal count viz.' param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
        <zone name='deal count viz.' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
        <zone name='deal count viz.' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Pipeline Product Mix'>
      <active id='10' />
      <zones>
        <zone name='by deal count' param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
        <zone name='by revenue' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
        <zone name='by revenue' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='BD Pipeline Overview by deal Count'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[ctd:id:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_5810911131311388:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</field>
          <field>[excel.41892.682379965278].[none:current_win_likelihood:ok]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:last_stage_change_at:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41892.682379965278].[yr:Calculation_2920911131414233:ok]</field>
          <field>[excel.41892.682379965278].[yr:Calculation_5810911131311388:ok]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='BD Pipeline Overview by deal value'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[ctd:id:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_5810911131311388:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</field>
          <field>[excel.41892.682379965278].[none:current_win_likelihood:ok]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:last_stage_change_at:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41892.682379965278].[yr:Calculation_2920911131414233:ok]</field>
          <field>[excel.41892.682379965278].[yr:Calculation_5810911131311388:ok]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='BD Pipeline Overview'>
      <active id='1' />
      <zones>
        <zone name='BD Pipeline Overview by deal Count'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='BD Pipeline Overview by deal value'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
        <zone name='BD Pipeline Overview by deal Count' param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
        <zone name='BD Pipeline Overview by deal Count' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='BD Pipeline Detail by Deal'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:current_win_likelihood:ok]</field>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Loss &amp; Icebox Overview'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Site:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:loss_reason:nk]</field>
          <field>[excel.41892.682379965278].[none:name:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pub Pipeline Overview (1)'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:current_win_likelihood:ok]</field>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Site:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pub Pipeline Overview (2)'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Product:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:current_win_likelihood:ok]</field>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Site:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Pub Pipeline Overview'>
      <active id='1' />
      <zones>
        <zone name='Pub Pipeline Overview (1)' param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
        <zone name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Pub Pipeline Overview (1)' param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pub Pipeline Detail by Deal'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom MVT Required at Launch?:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:Calculation_3021008185451253:ok]</field>
          <field>[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]</field>
          <field>[excel.41892.682379965278].[none:current_win_likelihood:ok]</field>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom MVT Required at Launch?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:name:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
          <field>[excel.41892.682379965278].[yr:Calculation_3021008185451253:ok]</field>
          <field>[excel.41892.682379965278].[yr:Calculation_5810911131311388:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Launch Backlog Detail'>
      <cards>
        <edge name='left'>
          <strip size='251'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41892.682379965278].[none:custom Country:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:owner:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:stage:nk]' type='filter' />
            <card param='[excel.41893.600574467593].[none:Installed Base?:nk]' show-domain='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom API?:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:custom Roadmap?:nk]' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_5810911131311388:qk]' show-null-ctrls='false' type='filter' />
            <card param='[excel.41892.682379965278].[none:Calculation_3021008185451253:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom EZ$L?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Roadmap?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:name:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='199'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[:Measure Names]</field>
          <field>[excel.41892.682379965278].[none:Calculation_0990912142357516:nk]</field>
          <field>[excel.41892.682379965278].[none:Calculation_1190912142611876:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Site:nk]</field>
          <field>[excel.41892.682379965278].[sum:Calculation_2610911120349643:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='1'>
      <cards>
        <edge name='left'>
          <strip size='223'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:custom API?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Country:nk]</field>
          <field>[excel.41892.682379965278].[none:custom EZ$L?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Path:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Product:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Roadmap?:nk]</field>
          <field>[excel.41892.682379965278].[none:custom Segmentation Required?:nk]</field>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41892.682379965278].[none:name:nk]</field>
          <field>[excel.41892.682379965278].[none:owner:nk]</field>
          <field>[excel.41892.682379965278].[none:stage:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41892.682379965278].[none:entity:nk]</field>
          <field>[excel.41893.600574467593].[none:Installed Base?:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Pipeline Stage Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product Mix viz' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='pipeline stage viz.' width='192'>
      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
      zwMBIv8PGvxh2V+rf04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Launch Backlog Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='by deal count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='deal count viz.' width='192'>
      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
      xQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='by revenue' width='192'>
      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
      y+XQIPqJ/h0rJhr/5E+mxAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='revenue viz.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Mix' width='192'>
      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
      dvWiACUriWEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pipeline Product Mix' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='BD Pipeline Overview by deal Count' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='BD Pipeline Overview by deal value' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='BD Pipeline Overview' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='BD Pipeline Detail by Deal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAB2HAAAdhwGP5fFlAAAgAElEQVR4nOy9V5BcR7rnl8eW976rqr23sA3vCQIk6IdmZ25s
      XO3eO7E7uyGFQm96UOhG6E2KkEIPq1BIsXFnhjMDEiQGhAfaoL231a58VZf33h+rh8aAZmAa
      IIAGBfz4QibPOV+e7Kw8X2Z+/y8hlmXBG97wrMA7XYE3/LJBd7oCb9g5qOJ3390kGFasMpw7
      dRgCAADAsmylUuFyuVuXmJdmVu0eoVR15vQJDvrT4WZheuzNCPQaQ5dml20dHR2NtcZCKnrl
      8rcLa/aRG3/5X//Ll9TfLjGb5vjKajbt+fb2WCLk+euV70KJrN9l/vbby55QYmFm7M0I9FqT
      jni/+fbb9r3HGgU5qzcmUiW1SmU7V/qDbgHVNDQ3dij+75tLX/3hHiLX/uEvVw7UCzKJ0PWB
      MfyND/SawxVI2tvaOChQ6Os7GvW3bt3COZxwMLg0O5Yqbg1DzMjd6//PHy91tLeLxZK6+oZd
      3W2Li2tqtZKhGQAAxLLsm4nYawpLWS12BgAE5zXVGZwOp1SlU0h4DodXKMRlagMXheKRQCyZ
      FYjl1XoNTZZdbl9tQ2M5m0iXSJiFYEDe70ClUgkA8LeeBEHQs1eKZX/W/W/4ZQE9GH7oYvg/
      /bf/s1avktd0/3f//rMn3ggACwAAEAS2nsDSIxMz+zsb1r3p/d0tD7nhB70q4FjdCBNnj+59
      1NNHRoZPnDj5/X+z7MTQnUA8pzY2njy0Z3uv9lNosnTn5q0CQaurmw6068ye4p6uegAAXc5N
      LtuOHfy+MkQuseKO7etufTZDP2F26Jagbl+bkTcz6z50qHurcGJyUs5jNa1H5LzH3bu+MLFk
      3jxy5p06nfy5VOa58yMnmieStrY0O8Lx2YG/Dq6Ezp/oHZ2YhQF9/p2zF7+6UlNXd+Hswf/t
      //xjtYp/8PyvTCO3CAaceOeTyTvfVii2e8/eb769wmXfmfcUp279SVrVkAeiY02ikZWg1235
      H/+n/0UuxP9mh12xuItlokLt9lkW59fdfKmirUo0t2pv6NgrohNrznCeICQzoza3z9i6/9Cu
      5mzYlseqPv+8x26300T+8uVrDCY4ub/l3sw6CrMIQ9R2HPRvTBcIZt+xswHzbDCaOnjmvYaq
      HzW6aXq0ufdMo07idjlJqpJOZwdufRdNl0+cPDo/NeJ12t46d2527F4qVzl75mg6k3teTZzK
      kZaJvtpP300msxOTk0cOHhgan8xn05gAyJnH30rbvYnffP7h9YHpOt1bz6s+z5cfOdF8sXzX
      3t7/4T//FgCw59BJJhts3nt8b7PWG6+0N1TFY7FsvqQxNp4/sX991WRz+Dk4Ggl6kxXs3/27
      f2xurNdWGRuNagAAjPPeefdCKZe0W22nL3xYpRD90Eo5GzFbXYmwb9Hi3XD4P/v8V3Qxu27z
      ffHrXwecG3Zf/LNPPxRxMAzDOTzMvGYBAJDlCl8kAgBIBIJNy0r93tO7a0TrDr+haRdgmA8+
      ft9nt5Ro7IvPP7GsLOIcDkKXrO7AT161XCHFIv7G0vS1a1ezZUAUkmVU/uH5I6bljYb23e+/
      1buy7uByucVkIBDPP8cmhiDk3XMnbt25BwBIJpIsYOPxxPZuZWEYhWAYvMJO6vcdCILx9o6O
      ttZWARcTy1UKiaCz91jKvexOQbuatGUaVirkHAxNhDwTK563zpw+eWwvzBF1d/fsbtRcunyt
      AnFbqqTuaMGgVRqMtTiGVxuqDh4/NXPvVixT/uH3a3l+4dN//Off/u53rtU5tZT71cWLoVRR
      K+d9dfEiLlYr+NClb7/LliiLxVzMlymWBAAoatqiG+Nff/11/9SSvqZ+aeTm2MqmUSVGEARG
      EBhAAIBk2HPpm8taY63Vai8RBE0Sqyurcb87mLg/luzat3/w6qV1h1elq+FhAOdL8hHn5WsD
      1XU1Htvqd7dHtCqBczNIUiRBUuC5unEipaFOyilAQMEDX1++mi/TAGzn+aiEQ3z550v6uobn
      WJnnC/RUU7BKNnxzzPLJhZPbvN61Pn9velUkU3/60QXkYSsGy9PDVk9EoW946+i+7VfjIbD0
      5Ss3fvXJhz/rIW94ep6uA/1MGIYpl8svzdwvGpqmGeYJLtKrwEvtQA8IOFY2QuTZY3tdDpux
      rglDINP0yLonjMHYufc/EHN/5Nq719clBtVg30g8Hqtp6m4xqmtamlEAAGBHhkdOnDz54Eqa
      Kljt0fa2uocajfo3UalOLkQtFldra9NWoddtl8hVJIsppYIHV5Zy8WCSbqjRJEObFF/Lo1Ke
      eJkLiPqWlocuvK6vr3d0dDzqZe1rixJjm0oEbI5oS3PNVqHFahFiQGpo/X5q8WNIkqRpOhZw
      Ty9bTpw6I+Y/4rqdBvmXf/mXl26UHZ+cLWQTDc2tHpe9nEn2j05TlYq2pqG+vkEtQr67cnV2
      waRVS65dvxXLVqzzo6ys9u2TRyPh8IV3zjqsVi7OXL12K5KppKKhYioKC2VjfTeW1mwchLw+
      MI+Uw2NT8ypDnZD3o0bfNJsogUouRKamloQ4Mzk1nS4DAQac6/NT1ogcKw2Pz+trap2rc3OL
      SwWKX1+tCTlXAhlyZnbpyOEDmWQin45PT0/nSIQPlfoGxvIVksuW+4cnN/1+o1J0u++eSKEL
      blrnZ+eK5fLcsqWxoQaCoPnJ8UWzo7vdODvrYJiSUiFfM1ucTgdbTPJ1LY/qQAzDsCw9MDBy
      6tj+8bnVpvrql/GXeXp2YCujnIlYrK5EyL9o8aRTyUI22nPojABHUBRFEIQFEJfHTYec0SxR
      LBQIkjIYGlpaah/cnk4mF6YX3v3i17taarMx77o/I6aiJmeYLKQIVNDV0kyRZLlSIQjy7yyz
      LMsCFrAsG/Q4azt7HWaTz+NUaPQtTXV/vXwtE/ff7Rsw+zJ72uofDMuT4yOYQMpBYafd7nXa
      m/cesa0ujo5Nnzpzwry+Pj4xe+b0UYZmhkYm33n33MTIPdPy0uHDe+bXvBIqEi4AAACE8I7t
      rr03vQYAsNvtgGXMFuv2morGuEKhRMpSxM9r8hfIDnSg5YXFT//xn3/7u//oXl0AEAQgCEFg
      CMaaWlrqa/SFZMQbjFM0TRC0UCSKR8N8Aby+7gR/W4qEIKixtfbqxa8GJ+Yl6po9NSJ7Cq6S
      8lCeSKNUbLqsMIbzMBBNZH5iV6NVz0yMzkyMI0IJQDCJWIQgMAAAguFoNKbTG9q7eno6W0uZ
      uM3ledCB3v7gi3opOb3iBAAABJeIBCgCc1CwtraWKxI4yq6srpdJmoOClZVVFuFgPIGQzxEL
      RTiO0PT9hxhb9lBRVxkAjC5Nz85lin/fuR8KylbS01PTPMkruooIdsoH2iHYeCSUKVJ1tcZC
      Ns0RSLLpJI7CXL4wHI1r5CJfKF5XV1vKpdL5slAokUoE5XyGxgQCHAqGY1wcQxCYL5JkUsmo
      37Fh99GY8NP3TvsCUYGAJ5eKXG5fTV19Np1UyCWJVIEDU7hIwUGhVCIpUchZopTME1IBFogk
      RUI+ACwOA45IgSMPr+uWD0RWSr5QrKbGiLyqu0OvRQeiKIognudXgCjlN32hmrp6DvaIv//P
      hqbpX8Sf5rXoQFvkMymYK+Jz4FgspVIptgrTyThfJAUswPHvp35kpZArsXKpkGXZoNddpNGG
      OiNFEijGgSEAAGBZhiBpDo5tx24iEhTItRyUTiQKSqV0qzAWi+EI4EpUnMf2QKKUd3lDTU2N
      CPyKjkCvUTyQx7ISShcBoKan57OphNvljCYz2UzKujR2d2qllM9YbU6aYTOJiHVjeWnNDQAI
      2uanN7ypoHPD5b/85z/F0nmf2+HyBnzmuZtDc0S5YLbYKJpJRAIuT+BRP8X5ieGrd4dYJj8z
      sxaLxQDLRqLR6Zlpq2k6/YRFMfb2jevZRHBwcvH5N8dz4vWLSGQBAMC6PB1jpZHAbLNByuFw
      YZj9yx9+j/F4m6FozO/WyzmUSAwAUOgbcMtoMAEfaBPBCEyVMi5vYH5m7u23D8Mw8s1f/sBi
      PMtmOGSe0jf26PQ6HvqQcQLCxEYxueqKAACmp2fev3B+dHyS+yjf50dQEC7tPdB79c74c22C
      58lrNAKJhTyPN5BLxkgIAShn9569Qj4OABCJRBKxiIE5nT27dXIBzpfW1Ri2vhh+l7Ohu/fU
      gc6ZhTWJTEbmY+5AHCJJTCCQSsQkDTo6e2r0qmMnTmdC9s1w9lGm9x47a5keIgEAVCWTzRZK
      23TIEJLIJ+NxGOM8jwZ4IezIQuLOIFZqY5tr667wqVMnuDgmlsi4OKpSqRRafTgQOrCrxeoO
      dO7aK0Urm7F8Q12dTCKQKpS2lXl7IHXq+FEBSpcgAZlL6GvrG5vaIsHA4d5d6xZne2d3IRmk
      OYo93a3owzwVCIJkSmW90YAIxG31uunFjfb2NrVKqVQoxNJHzsK2blXLBJOL5pMnj704b/1n
      8mYv7BXllzK52ZlZ2FYcLQzDDMNAEARB0INZKwzDAEAwfL9izzE6lmUYAEEQBBiGheH73+6t
      CvzE0FaYOAxDALAMzbD3a/WDq1iW3XbdHpjYeuUHhQAACIIf9YytdSCWZRmGgWH4lY0S3plP
      2PrcSP+stautcdNpF0pkgGUXpoYvfv1tKBLjofScJVhvUFvmx2lJlYiDsCxL0zQEQYBlaYaB
      IIhlGYZhnzb+emN2NIfJ5UL4xo3Bpqb6rT+h3+MspCOOGKmVC//2cDYVsk2vhuurNcmA49LV
      u3bzKstXOlbnNcZaiGVYli3EvSvuVJVaStPf1+dRvaHv8h/dWaSuCr99Z7Gx0QABwLDszVs3
      s0E7pn78Xhgz1n9jbmGpggiqVLJnbOsXzE7MwljGFUxLISpTIl1OezYaXPQkv/jVh5l85ejp
      c3TKPbW8dGswR4XNMkyr2928NDVk88XEamMpZCVZuHH3idn+SxyOSKzW5kr0v/+HT5+hCgsj
      t9f8WYBymrW8SoXwlwWRjYl0gWjbc9CyMM7QhKLhEAAARlAuh1NVU9tUo/jXa/NSndG2ZvIG
      Y0f2NJh8VD6wGkkXapp3ORaHUJHuo199xPs77SYAAOIoihFzOK0AANy8eev9C+cvf3dje7Mw
      Okfgn3360a3BKdBe/wyv+RLYgVlYKmgPRNOlUmF6YR0AAAB55NQ5wQ8aNOT3SBQao7G6qake
      AOCNpj777PO9HQaAqz7//AOf3akx1B/f39a8+7iE+xTfXw4G5wslhiQplgUofv69j4U4CwDQ
      6/VNDTU2h5fD49HFNF9dd/7MMQQCAIBcgXj7wntNGt7d4cWGllaVCCVoqJJOC1WalqYmm82G
      41wIAq2tLbl0NJYqPsr02XfeHbx9iwEAsCzDsvSDTbInALEszdAUgF7dyfIOfMJsFtuRt87v
      3d3jsVtkcqlEJORJNGIemkmnNDo9RFf4mgYq7VfrVJ5gJpMINRk1t/uGYJ6Sz2Ym59YOnThJ
      lfNquRQRKphKvqamZpt2xTL5zHD/yrp1z8GjOCDFCk0xl5ZLxDKV1ubwdjRo4plCbUsXFfes
      O306Q12VWoajoO/27c1gbF/vAVBKZMpsLBrBcby9q8dus+9qb4jEU/rqukTQy8Ccto4O3sPG
      lXQqVVVbr+LCeYRfr8DvTS5IFRq5VCgVCcQqA+8R3wCGYVgWsOXUvfH5vQePSITcZ27wF8pL
      daJ/KTOLV4EtJ3qna/FkXqoPxLLsm2n8Lwd2O5H/OzON99tN6yHy3PF9D0JaZ0b6lzbsUrny
      xNkLOrngJ9cPD987ceL0z5zJuldnXAX+mYNt4+MLR48e2CpcWZjiCwS00NhieFHTnOnBG4K6
      fR01gukZ1+HDPVuF4xPjci7Qth99vLBwdW7MZPUeOn2+oUrxgqr3UMhi+s9/+NeysPbX7x68
      eXcI48veObnn6vV+eVXt/lZd3+isUF71/rkTEMvuiHfGrlg9hdhmmWISibh7w3Tx2+86D51u
      qKv98ONfKdH87//45+XlpUuXLn195VbUa//zxa8WVq2JoOurr74emlx4ZqvFYsm+Nh9I5lKp
      tNk0F88R94aGctl0MZ8rlLcZ4fUsZAr08vRAkSRTqdz4+ARg6HvDo6lUKp9NkU+Imqec/vRv
      Pv9wbXnpxVXvoVTyqQqLdnd3sAjv40+/ELHF1VVT71sfCslYHpV9+vkXdD7BAECTpR0JaQ1b
      bO5E2L9o9mTSqWIutuvQmQezMJYm1LWtNVo5h8NxOKxzy+Zfff55jU4xOzXNwNDm5ubPsAyd
      OntutP8uzYB8NkPSTCKxTYHfzwKCkHfPnbx1ZxAAkEqlWMAmkslt3gvDCATD93eAXyICZc17
      Zw6uzk5kKGx1Zkhc09bT1TN37/q6wysQSSYHb9Z17EG2lkZfcs0AAKbF5c/+8Z//+T/+zrO+
      CMEwBMMoAoPvV3sBhqJBjztdKFIk3VSn+/qrr73hVGtbM0nQOp3ume3CMIzxREd3NwdTOYVM
      fPvaXyOpAgxt/fN8Xu1RdoUKfaOCX4IhlQD6+vLVIsHCMAzBT2x8VMqjvvzzJWNd0wus38PI
      x33f3R7Ol6mke6lvcjXotiQz+RJByvTNwaW+ObPfZTHHwp5AqvwaBZS94akoZ2NlTC7lPXLB
      s5SNpSr4m83UV5Q3wsLHkYn6PEm6u7XWYbPUNLRgyI8+IWurax1dnX//VTHNTtT1HBThsM1u
      a2luYVnGYrUhENzc0rwdoxGfC5XpFULUbHa2td2/xeu2S2RKgsVUMuGDK0vZWCBJN9ZqaaI0
      PHSvQKGnTp8qpGIqnX6rpmQ5n8rTaqVkO3ZtK/Pi6naNGLLaIq2ttVuFZrNZiAOpsU30WGFh
      xOecNVmPnTojFbyiIUE7s5k6MTbm9njb29uWF2YVCvlA391wuixEiDt990RKnWlxjoeyJIzP
      jA6u2n0NDXUwBLF0eWR4MJqFGmt1sXgsHtzccIXCQb9UKo2GfPMzMwxHDJWSdweGJCq917I4
      vWSuqa1Df9A1PZaVLWHh9PSSAKPGJ6dTJYaPAefGwrQtKkUKwxPzVcZa+8rM3NJykRbUV2v8
      lvkkojvcVZPIFa5f/JNUV7s8PWLeDJMp7+C8q0oM9Q+Nq6qqLUsTCxvu+vrah+6mzk9NLpnt
      Xe3Vc3NOmi6olIqV9Q2328mWkoInCQsH742dPt47PvtGWPgD6Ep2YWk15LJYfAkAQKVYFEll
      02PDlo2NMsVkstlMxDO67JTzUJQrcJsmwnkaAGBbmgxkofmZUQYAh8OxbnEeObAHAOB0OB02
      x9HTZ0yLczeuXikW87fu9q+urNFEuVj50eR8axt8S1gY8m42dB90W1cDXpdSo29pqvvuyo1c
      Itg/OGgN5vd1NG4Ny/rmPSIyOjQ6kS3SjW3terUQ54nMc9Nchbq1peXad38tFdJ3BkZWV9fI
      crFCPfyLAyHcE3vr702tAAAcDidgGavNvs2mwjgCgVjC0q+usHAHduPNS/Pv/ea3zRrsmxuj
      KhFsXV2KESjNUEqdscJ4l5ZXxepqmYAxb6ytO4MQxFAUCwC76k789//pn6yzg8v2MACAyxM8
      GFxgDl/M50EQq9Lo5Pp6nlBCZiIum9nhi/W2GR7Y1eg0d8ZG4ho+KpYBJCcWCeH7wkIkHIpW
      GQw1jY1ylXZmYsJsT7PSNgCAe2MxkCG0CnE0lqSIonll0eqNQwzNACgSDql1Bn1to0CmzoV5
      to0VTzTXbpA+9JX1TbvtG1+WsHoRU5qYnskUye3txqOASE+OTwikqp/Z5i+OHfCBUsmEWCpH
      YCgei6EYKuDzff4Ajy9UysU+X7CquqaYzYhFvFyJyqdiKIcnkav4HCSRSCkUcpaqJLIVBKIB
      AFKpNJ1Obz1TJpUmUimpWOD1BqqMNWQxE8+Ua4xVP/6ksMlYJFOiaoz6Yi6L80W5bBpHYA6f
      H4sllTJhMJKsrjaW8+lsscIXiCUi/pYWsUAAo0FXzKZIgGWTMQ6XJ5ErEvGERin1BcLGmppi
      JpEt0YYqzUODk9KplFgmY8lSOk9J+GgwlhYJeACwGAw4QtmjQlW3fCCKKAXCCaNR/8jAs53m
      zSzsFeWNsPBxVIrZTIlVKx43i0nFIjyZivuwEK1ng2UZj9NOQNzG+uq//0FHo1G1Wv28bP2Q
      WMgvVFZxUToWy6nV8gfmcATwJGrOY52ISjHr2Ay2tLSgyCs6Au1MpNLizOTtgSGWZeOxiMtu
      TaZSZquDYVmf225xuFmW9Thtk8P3UmXa73b4w/FyPp0pVKLhMEmWV1dWctuVxfwI18r0mieR
      CbvtvngkHLCazSWCyqZippXVYoVKpVOxcMhqXs8UnvMYuTg1eu3OPZbJz81tRKJRwLKhcGRm
      dsa2MpOuPP5W9s7Nm+VcfPBn7AC+aHbAiWbpyprNgwAqkCoujfRraptu3h2r13BgvjDiDZpm
      p0pn33KHCtlIJOZZ7x+YAmTp3bOHi/z6oGlCocCsYYrFBN1tT502UFfXvLE5HsjB1e28O99+
      07V3/+2+kQatIOBzuyMFpBJjckldS/vy3eEvPjn/HN8XwsQ1MtrkCAEAZmdm379wfnxyavvC
      wr379r4RFv4In9Wkb+45fLh3dmoOxvmd3R1VmqqGGl0s4LVthmBAZnMlhVqnlEsqxYLGWLd/
      724UhnPZTDKVqm7ubqiSzi0uP4PdTYe1sefAwV2NSyYzjHFqaoyALpuWV2kWlMslAABPKO/Z
      04XS1BMf9bTsPvKWfW50S1iYSKXy2xYWUkQuFonA+Csajgh2ZCExmSl0d3dpdXqGKGh0Orlc
      gaG4Sq2QqauITExb09Cxa3/Wt4FJtF17e+lUgOXJe7o6XOtLuroWg1Zhd7h7Dx2WiX8aM/RE
      5Eq1bXXBnygfP9prs6xlM6VDx48LcbYMuE0NdVq1QqlUyeRyFMGUyueZjwdGEKlCUW80YAJx
      W4N+YcXa0daqUSuVSpVIIn+CsFAhmjPZTpw4iqNvhIWv0izMarW2tDwknf6rwy9iCgZ2TFjI
      MAzLIsjjflUMTQMYfsz6B8uyW1l/IBjGsSdnWvnbAwFFMejfftA0TW+FkfxIWMgwDAsQBAaA
      pUiSARCGbjmLzyIspCkKQhAIAJr+3i5FURAEYBh9grCQYUiKwjDsjbDwR6zNDg/MWrvamxia
      omkKQBBFUjAMMzRFMywMAYqiYgEXjcswQDEAQBAgCAKCYYamKYqEIASCIIZO/5f/478m0vFU
      gazSKLfkrQzDUBQFwzBN0zTNID/ITr0xN5bH5HIhfPPmvcbGOpqiWACCXlc+GbJHCa1cSG7V
      gaETQdvMWqS+WpPw2y7fvOeyrjM8udU0qzHWAYakGTYf8yy7knq1lCBIBIEZmqZo5lG9vf+v
      X7ozUL2ec+fuYn19FQxBFE3fvnM7G3I8UVg42n9j2bRaBLwq9Sua5W5HhIW0M5CWADJTIidu
      fU1AnEg8jzLFsx98Mnz3DgvBp4/vv9o/3aoXq+qZ5flFgOIHO2vNjs0S4HPKEYgrgnjKj985
      CQCgaIogCBznbK7PrXliArk+sDYpUqil+saQea5l/6mHHvsCAFgcvbMRzDMQ2qzjEwQZqAgj
      6xPZMtmy64BtaQqwpKzuAAAAxThcHNMYqhurlX+8blIZaq1rqx5/+Mi+pg0fVQisxDJlY3O3
      c2EYl+o//OTDRwkLKzFbMKkEANy+fef9C+evXNuusDBPcD75+OytwSnQ8Yomq9+BWVgyYI+k
      8iRNTM2vAYx/7r13VDLN0T0tmy5XIk9KJCKCoDp3H9TKBWHf5r6T7144fTSWiKMYHo1GMbHy
      449/xZTuh6K27Trw2Wef9fa01rZ0ri3Md3W1cSWqjz76MJcIS1XGn/QeDoZkcwWaILaEhW9f
      +FDIAQCAqqqqhjqjczPAF4jYcpavqjl78vDWul02Vz5z/kJLlbBvZLG2uVkuQMoUW8lkhEp1
      U2ODw+ni8fkoDLd3tOdSkeijhYVn3nl36O6WsJChGYaitissZFiKpsg3wsIfYbfZj5x+e3dP
      t99pk8okOn1VNlNUKYRiXRObj1RotK25noY4Yg6rq+9cmegPZcoKARqJp2VKbZVaodfrU6lU
      dXU1YOmZ0VGby+GLZohs7PCZ8w6rPe63OzZ9PfsPwyylr9KsrFvK2TjElXIxRCyTz4/dW9mw
      7T10DIdIkVxTLmTlUrFcpbU5fJ2N2lgqX9/WTad8G65AlaFOp5biKDTYd8cdiPX2HoTKyUwZ
      JKJRLo/b1tXtsDt2dzSGoklDbX0y5GVgTntnB+9hO1uZdFpXU6fhYwWEX6/iDk0tylU6uVQk
      Ez9ZWAgR2aGJ+X2HjkoEr+hM/mULC1+wOXZiYurIkcMv0sRL4pciLHzZ0/hK5Qmr9294VWAZ
      FmwjCIDdCTyWpVtDMyzLmhfGxxc3WJa5c/liOFsJuMwXL178y1++CsazjpXpezOrLMveu/6V
      N1FiGeYv//r/Ziv0Mxt1mqb6JpZZlhgdmXxQuDw3YdtYNvsSP/+lHsVk/9Vle4CmsmPjSw8K
      R0ZH1+ZG4sUn3GuaHv7yyy/tvuiLq95DIQrJ//pf/vf/6/ffFvLpv/zpy0vf3c4lg1/+8Y83
      +kcZhrEsji/b/FtX7kiSTXbN7i1XiDK1L58uuLOp/c1qlyfYRjPzi2ufffEFIEtXbt5r0SBO
      X+L4rlqHy6Pfz2TCdqFCOzFtOn98NwDAtb4wbbI0dOxNe9biucqJs++O910hGUwul1Co+MPz
      J//eaqlUdpst/mZjOpPdWJpRN+5anh3nwQQEWAp7/tsXD8gWWefsUL3+fCadHx0bO37k8MDI
      WKmQ41LgETGMD6BcwexvPv/o+sB0o+GlnlhYKWQogHZ1dxL5NIuLiGzaal7tPfNh2DQQyxWi
      kRhAqgAAYEd0YaV0yGrfTEaCCxtuAIBKhI1OmxpbmgAAMIzAAMAoDkMMAEAv5Q6NzdS1tgMA
      pqZmM/niunhw3HEAACAASURBVGmWYQEAYNnm+fWvf1OrhEqw6tP3TywurqN82Z7mqpquI1Qh
      /gjL0Mmzb48P3qUYtpDPkhSbTKVewvtCEPLu+VNbwsJMOsOCp7ALwwgE7YCwkC83XjhzcGNx
      yuzyS+QqAZfV1nXND98wu/wIJuxsv7+mUCnEdqADrSyvfPaP//RP/+E/+C0mGEFb21rsnqhG
      yocBaK2r+urrry/+5auO3QdgBG3p6jTbfEaFEGYqRVj+D7/+/Nze+nVvfHV1pb5K/tVXX5sc
      CSrjvnSlv7m1AcdxGEFRBEEfsW0EIwjGFR3b2xbNFFVy6Z3rV+KZ0taZhy80jTeCIAK5rkUt
      KqOIWoh8fflqhYIRBIWRJ8b4oHIB86eL31Q3bEt28hwpJgNXb4/kS5RWq4547ekSC9OlcoWS
      GZrlPABBMAJD6bAnlEffCAvf8HDK2XgFk0keJyyMp4k3wsJXlTfCwkdSSEdu3hmGMfzIyTM6
      hfgn/3dt1dTW0YPAYMW00tpUmyoBzd9d82yEvU5MpleIsPV1R0fH/UVqr9sulikIFlf/WFjo
      T1BNdTqKKA4P3ivQ6KnTpwupqFpn2NpbI8u5RI7Wqh6uwfgJ1uVZcXWHRgpbrOEHpymub6yL
      cCAzdogeIRjcWgcKe+2zJtuxU2dkLz5DWWjT1j82fert9w1q6eraWndXFwCAoSpDAwMCTd3B
      3e1UJb9hD7Q3am/cGBCo9GdPHAQsuwMr0bmYt4BoDnZWTZmcWhF8604/IpCxxcTtvkGuRGVZ
      XRDx8WQJWlteYHLhkdXAro5Gupy/c+tWhoCRSupO/5BIofNYV2bn5vP57NK6s6mhZjsujMey
      SgnUciEyM7PMR8nxyelkgeZjrGtjacYWlUC54Yl5nbHGZpqZW1osMaItYWEC0R7prkvli9cv
      /kmiq1mcGt1wBam0996CWytiB4bGlTqjZXFiYd3d8Ahh4cL01LLF3tlevTDvJMm8WqUwra1v
      brpBKbUNYeH4WycOjs2uNNdvN5PfMzPY319VW8dB0XImentk9sC+3QCAlM8aqAhjm5aW9taJ
      oaFQKidDyhGCu6e7Q8jnkpXszmyyrC/Pjk0v87icsbGpsxcumGYmRiZm37lwYX5yjMgnrw3O
      VWtlAACDwdDa0gIBsDw53HzwLQFGj07Nf/D+u1Njw2sblpMHOszBEpYNZ7Y3B4cAYJj7wsKw
      39O067DHsR70bW4JC69eu51PhYeGhhyRYm9Xy9awrGvaLWPTw2MT6RzR2NZuUIs4PKF1YZar
      0LS2tNy4erVcyPYPjW1sbBClQvkxwsJ9TYMTywAAl8sFWMZmd2yvnWgMF/BFIkC/wPRFD3j7
      /Dmfw7rpjxjqWxurtVuFDIJFNi0lkl6eGk4SSCIaormyGp1i6O5dAgCa2on8QAAAqVyp02lz
      mZSIjy7MzZMQLuRA8/NzLMrFBLJ9TWqLNwYAgBEkGAwE/H6ZQra+NG9xeLgoOzc/D3MEHJ6A
      x8H5Aj6Gwdt0FbRV2pmxofHhYVwiBzAqEgruRwIhSCgU1usNDc2tne2txXRkzeLY6kBei2kz
      nldIhfFUhiaKG6ZFmy8KGJqB4HAooKky1DU09nS2NDS15WObvmjuUaarGnvgdKAEAIctj01O
      Zbd9YiFEZcZGx4WylyEsnJ+Zwbj8XO77Ez8CwUApnxXJ1RigtI09Pa11fB6vnEvFEikWQUvp
      RInm7YAPRBElnz8EIajeYEAB4w8E1DoDBjN+f0irNxTzGbFYlMoUYMBIJaJwJMHhoDKZPBoK
      8CRKAQfyByJ6gzGXTUtF/HSRQhmCJ5ZtT/zDphOxbIky6HWlQg7nCvO5DIbCHC4/nkwpxIJw
      PKXX6yuFbK5U4fFFYiFvS4tYJIFepynm0hSE5VIJnMMVy+SpRFKlkARC0SqDoZxLZct0lUb1
      0LCvbDojlEoAWU4XKTEPiSSyAj53S1iI86VPEhaWw7FkVZXuJQgLKaK8uLyya88+HIUzmYxE
      IplfWNi7Z088EsIEEqlIwLJMNpcXi4ThYECs0FQSvgyseDMLe0V5Iyx8MtmY7/bgJIpzeo+c
      MGpeeCp/lqGddgsB8Vob6+C/WzkMh8NarfZF2I0GvEKVnocx0WhWo1E8MMdBAV+qfbywsJxP
      W92B9vY2DHmpzgbLso61BYKvba/T2a1mrkRdXaWmyVI6T8mlAofVLFYZNAoJ2JF4IKpS6L97
      O1FkeXQa1XSc7O3ou9unkQpGJmYEQt5g/wDMlxKZcN/APRoVxnyO+dnZTD4/u7RRrZPevHmr
      AvG0ymfpba6VaVuU5NLpPMsnCkmvxyuUyAvp2IbFIZYpYtEwXal4PJsYT8zjbOssy20yPnDL
      5Aq3N6lGRzfEYlwoEATD4fmF+UoqyNU+chYGAACAvXH1qkzMW3VGGmv0z7FKTyQbtFwfmEzm
      ylI+FEhW1mfHa9tb+775c4yRoBm3PUpsLM23dnXCDLEDTvT67Kg9kBwZ7CuRDAAA5fDFfCwZ
      9Srru+aG72SK5bt3+4vlikwqGh0b29jYOH68d80WUUJJi9sXShby+Uee6/Z4qupamFzEG0qK
      hdy+W9cpmrzTP+LxbIY95v7ReZvNNjM6UKapvv6R5/q6AMJE9Qpo2RYAAMzNzQOWnpia2d6t
      FMyR9uzaVc6ln2+VnohIU1cl5ZTKhFLfuK/NiAikfAx/662TAIBwNLJ7X69BziuQgCZ3ogNJ
      ZAq9wXDgQC8HhZ2WtamJ0SLLw2DA5/GVak11TW3v3l1Lc7OlCklRNMbl8bgcoUCAYTDGlTTW
      VC0vrzybXbfdUtu+d39X/fKqFUZxnVYDMcTy0grNgnKlDADgCuSdPe0vQljYc/i0a3GCAACi
      KtF4/CmEhZVsKBhEOI9NJv0CKKTick2VGKPsbve31/tPnzkFbSlaAJBJJB7PZixb5sAUCyM7
      4gOx0XAQ40uFOOQPRRCMo6/SUZUCg3C5KBQIBOQqHUyXoqm8gM9FYEgiFqVzJRyiML4kHvKL
      5GrRM8V30mRldnqqSGOHDx+4+s2fNLrqXb2HQo7VSLqsNdRwYAphIUNDtcvmbWp+nkfjeJwu
      Q0N9JR3xpSiNgF3YcBsMBhRmBRgr0jYIHvu1TEX8c6u2w0ePCbnP86v6RFiGHLl1JS+s39co
      m182QzBy8uw7HDIdyNBGtXh6fFRR3apEs96i6LXYTP37c+PtdntT08vOnftUvPp/F4qsAOTl
      bqY+IJuM2t3+huZWqYgPACjlUiUaJiqUVvMCE/rTFAVgBIEBSVLY34SIFEXCCArun094H5ah
      KQZgKELTFIAQGLAERcEQhGLYQ1djCJLAsUc6wyRBIBgGAUBRNIbdn3SRJAlBAEawRwWSbK0D
      MQxdqZBcLudlCwtZtphLUahQxMOISgVGUAxDWZahaRZBYKJSQTAMRRCwI7OwQip4Y2C6vlY/
      PDBQ3dyWDnuta0uxCgcGLEIVvIEQDVCmnLE6/UqlIhUNOL1hlUL+81vQPDeWx+VyIXzr1lBD
      Qw1BkCwAId9mNh60Rcs6ubBcIVAUoWkq7rfObUTrqzWbK+MhUmye6i8iomIyJpJISJJkAQRD
      oFyusICFIahcqdy4cb2ttbVUKiEoSlEUSRIQBBEEiSAoBIGBK392ptgGA/fu3aW6Oh0CwwRF
      3b17J7cNYeFI34219Y0czdFrXqqwsJD0/+nPX5ssmzoZt39kannZ1NLZNtP3nTuDiNnU9b4x
      s32zva0ZAHoHQlr9DsuuI6ca9RKsErfa7A6rVc0t8SVlm8O/GA83Vcudkczm3JBALIzl8n6b
      vbtRObLIntr3PKXsS2N95kiJZqBmHZ8kqS1hYa5CNfccsJumYUBJa3u3rhy9dam6df/Jpuo7
      168H3WZ/jiFpuEXDCWaIWKbYrhMmymwsUx7tu54sMYhAUYnauXxhME2ypeyvf/s7CQ5BHDmV
      cgYSKgDAnTt3379w/ur1m9tM71IgOR99ePbW4BToanyOr/9EMK5AyOdI6pqraps+q667ce0G
      AGxjY9N6CrhdztMXPnZM3slRQMCUd2AWpquuW1+cy2Yzyxseg0qIc4UKmRQAABgawnhKhQwA
      BuWKu3ft1SuECM5TqeRE5TmkKeXiSCabpyqVLWHh2fPvbQkLdTpdfa3B7QuLJDKYzPNVNWeO
      H3wQLNh54HQpuJHIlQEAAOWdu/CeCKWj6fJ7711QCDmpAnXh3XdlQk4iT77/wQdkLoHwxRfe
      PaNQGnY3q7Ol+w85fe7d4b7bW8JCiqZJapsTPZhhSIokwJMPRXjO0DR0+FAvlQnY/fHbN27s
      PnKSi2BSqRAAgGNYqVQukzQGAxiGd+ATxhHKpFx6fmmlu/eYoUqHkpkshdXW1silMlBObFgd
      Ul3ToV31m8FkR9cuBZ9xhgsnDu35+VGnYrlicWJodcO+/9AxHKLFcnW5mJdLxTKVzu70djfp
      IolMfVsPm/ZvuIN6Q51WJa2U8iJV9a5W4+KKQyEVisQiuVpbyufqjcqBobFUiT62p3VwdEai
      UHU26Prvjbbu6uUirF5flcmTCjEuVhv5GJTNZrXVNVohp4gKGtS8e5OLKo1eIRPJxEKxUs99
      rLAQofLDE4v7Dx0V819uonGGHOy7m4OkdXLY5gknokFDfSvGEkUabW2qnbjXJ9DUKrGiJ0m/
      WrMws2kumKocPXqY8/xSIwIAWJZ9vtF9FtPMis3b2t3b3fKiwnQoiqK2O1C9EBiyQsM49ui4
      baKYrUA7sRv/8qFpmiRfRkjN/59gGZqFnjzuvxYdaAvn6gKnqtWgwEdG5k6cuC9/9rrtPC6e
      pgRNRuWDK7Mxj9lPHNjdVEiFr90ZggA4eOp8PrLZ0rUbgwEAoJSJeBN0S33VduxO9l3l1e7r
      aRBNTDqPHdu9VTgyOqLgAV3nCcVjF5mXp4fXHP7eE283G19IBtlHQRSSX/7+9xWB8Z//7adh
      p8mb4+yqk1y5MSjTVh/tqb05MC7T1r575gjYIWHhzlAu5gFFA8Bms7n1udFFW0AgVderOelk
      fLMojDtpTzjVe/yMbX4kkU6p6g8CAHKpKC5S7d/VJhHAt/r7AC6wri1nSvSuBsWChyhG7bbN
      UFfvMffyaIbAP/7044emd8mVIffCcIPhfDZbGBkZPXHsSN/QaKWU59FPFhZuhnJbwsJm40sV
      FpLFHA1hXd1dLEMlk4lsSeqy+nvf+jC83J9Ddp84emh8YR0AQBPFVzdvyHMHgSGSpLaSoxVL
      ldPvfMhWMoV8TldlaGmsmVtYgyHWa9+g+Jp3zhzbGroxofpob1fItTG36m5sazfq5BiOJ3xe
      oVrb2tIyNzcHIXDA58dQpFIpFksP/0pCEPzu+dO37/QDALLZLAvYBwn2nwgMwzsiLOTK9BfO
      HLIuzwTTREdHGwRAY1v34shNizuIc7hiiRQjCkUagJ3KE70jVDc1zwxc/+rit/qGJhTDUARG
      URRFMQ5f6HK6W5tqGADrqhvIpPfu0CS8lX6PLNy9278ZiCoVcgwiVlfXIoksDLMwxnM7rK2t
      rQzDqDUqAKEIS5WIh/u8KIbxZdo2nZzAUK0Y/fryVZJFMQxD0Ieva//wVqUQ/OniN7WNLzud
      YykdunZnOFeipAIOgGAMRclKqVwhFcYWOmb77sadCswrxTa9idJr5AO94amo5BIVVCp+rLAw
      Q3LehLS+orwRFj6STNj19fVRmVRQ29qzv+txqu+gfTkFy1EWamk0/vj/sAN9g2+9/XR+Zcht
      STKijgbt2pqts7Ntq9Bl3+BwuAxfZVSKnu41to15aVpc3amTwWZzuKPjfqDI2tqaiAPk1Z2P
      FxYGN61zK/ajp84oRC8qJCjotvaPTp84+16tTr5kMu3u6RkdvB3PllTGpmP7u8v51ODQqMLQ
      1FWnGhqd1NW3NelEI+Mz1S3dPa31LEPvyGZqaDNSqq/V6w1G8/xEIpX0J/NDN/66ur4hUOgX
      x/pmF02qKkPftctrG2Z5VU0ymfeY58bHJjCZXiW9n198aXHZIEP/9dKN1TVbvVF2+a/XnP5Y
      a1P9Y7wKr221b2yuo7NteXGVh9KAKzGvr6aifpoi80Cskz915vJtsjgzY7LaOttrFhZcBJFV
      q5RLK6te7yYop58oLBwamjx76tD4ixQWDt0b1BhrhFxOKRO9OzZ/YN/umvrGciqsqmmVibip
      eLSmddfa/JRCpWju2rM4M65WKNt2752dHGtva2OondgLAwBIZAqtVivkcXt62r++0tfZUoPy
      5b/+5NzawuTcmgtiScfaoqi659ShvYClc7kCBMEYTDk2/T98CE2W2/ccrZUiiybTobc/Oba/
      50lm4TOnjvb132NZEAn6igTtcDpf3Ds+AEI4J3tbB8YWAQBu9yZgGYfTtb1baRTn84TCFyos
      PHvufNjjdHiCVXUtDUYNAIBlCE+8XK+TAgCUuur45qpUV1tlqA1YFjTGpqqaWqdpxlDfDgBA
      MP4OdCAYRrxO8+zs7JrFOTO7+OkHp+dXbBGv/au/3mnt2d9Wq2ZhrKa5I2afH51dQREEwyCP
      x09QDATYpcWlrYfgOA7BKI5jGIbVNrSO3b7cPzLltKzkH7vrKpDrWjQ8XyLHx5HZqfFQLPMy
      XhgAXX0Xlg+XAOCCyvDYRLa4zT0KFKazw0OjIvkLXEWcn5kCKF4oFB6UZIMuubEFAOD3+/zW
      xb6pDREHta5Mji67eRi0Njs8ZwtjCJNJRJOp+CsyCyOvXxt4/4N3nnjdpnuztq722WyUi3kI
      4+EISGfzErEgEonz+HwMgWAYBgiH93h9zc8gl80KxGJAVrIlSshFYqmcgMcBAKAwwPhi7BE/
      4fvCQrISi6c1WvWLExZSZGVlZa2zZxeOItlcTiwSkeUiBeM8HF1cWmxuqEtl8gBCxEJuNleA
      YEzIR3P5EoTiOJkp4y9XWLhT/H1I66sPwzC/iFnYziTZ3BEYhgl6nAtLK2WCeuLFfr/vedkN
      +9z5MsUwlWAw9qAwGAwmIsES+YR7C9nkwqKpQj57atHtU8gm7t27lysSLMuEwuGtQoahHZY1
      lzfE0NTGypI/kqCI8vLCfDCW2rpgZ87K2BF8tqVFR6xKjpss3mqdfMW0TAKcLGXcLjcF4Rgg
      l00mmCPAALluti8sLdYbdcumVZwv3vriPDMTA7eXXaH2JvXYmFkowkRCgT8YWlxcINJPFhbe
      vHZVpRCZ7MHG2hcuLLx25VsGhnIFAqqkf3/pxrHDvQAAv3VhzZdLhvw4kzGHK2vL8xKcJXDR
      xPjYru5OwNKv0VaG2+09duJ4c/uut473JiLBXL5w6fIV89JMugIGB/vDQV8hn7n83a17/Xcx
      DM4WiKDfX8jFv7s+8DPtQpioSY0uWvwAgIX5BcAyUzOz27uVgjnSzq6uSv5lOPsHevf7vT4Y
      41TVtnQ1124Vejc3c7l0JBpBeSK3eZmg4br23XoJKlNoAAAMRb5GHcho0C0ummIh782+YYd5
      NV2oEAQB49zWtnYeDm+smIoERRBlhgESqRRD4RXTUoWkCeI5ZEbvOnjKY5oiAICocigSfiph
      od/nRbn8n1+HJxKJp9s72t12C/y3CNpypaJQyI31bUoR5nC6j5x9T8lhPJu2/sm1Y4f3UyRJ
      0tRr4URvwbKMZXUpEM/3HjzIFOJzJotUrqpSSxQao9/rEuHwqt2rUKmbqzXzJotKo5LgrMUT
      Uak13e0/ay/T697U19VWMjF/itQIwbLZU6XXoTDLR4FIU8d/rGAwHQssrDkOHj4ieGGTxAck
      I74bd4fefu8jrVzsdm/W1dUO3hs8ffLEwswUR25or9dNTU7K9Y18Jmtx+RGOqKNanILUr0UH
      +iXOwl6Fv0ulUuFwHun/UUQFQndIWLhTUCRRKlf4AgHyEnUORKWMYBwYYkmSxvH7A06lUoEh
      gGCcJwgLaapYrgj4/Ff2xMLXKCIxG/Nd6xtXyCW5Mvj0o3fJSokBMAdDyhUCgmAAGATFyUqF
      L+ATlTJJswI+t1wu0wzgcTAGwBBDQyj2DOKQoeuXGE3nucN1/f3rb721n4PjFYLo6+/TCEBN
      7/uax23BsSP9N3NlWlPfdaD7FRViv0YdaHV5+e0PP6tEXe5ALJ+OfHP5BgQjJ47u6R9dNSjw
      EuBEQwGVmNu471Tctepxu05f+OjKd1eVAvzgqdPeYBYrRfefOifcliDwR0AcOZtx++IqAEBf
      X//7F85fu3l7m8LCIsV9/73jtwanwKvagV6jWZhIyA9HYiKJLOKzR8LhPIWolAqGpjv2HFCK
      hYdOnNFqlKeP7Y+FQolUDjBEKlts7txzbH9bCZKCfCDP4IKn7z1bnDr3zlj/bQYAwNAkRZHk
      UwgLSaIC4Ff0zG/wWo1AnfuPjQ0NWtN5ZU1HXWNrq9NdZFCpTEFxcATT8nBUrzdw+GKtGi/G
      vbBSJxLwq9SQQMTAPA7LR1l9x7O5IRqdDsX4bx056kzBVTzB1Zt9OkONiAtJOYDzhI6BdDQZ
      rt26d/jU2Wey/DJ4LZzon7mvRBYzd4dnzp8/i77IM1l+AkVRb04sfFWgaXpnVZ6/RFiaYqAn
      n2P0WnSgLRwrcxx9u1GBDw/Nnjx1ZKvQ67ZzOViaFjQbv0/mnY1tbviIg3uafZb5irSFDK4W
      ORoJStW3tDzUZ+zr73v77NuPsjt+9wq/dt+uRsnYhOPE8T1bhUPDw0o+q+s8pXzsIvPi5L0N
      Z2D/8bdbajRP/cI/AyKf+OPv/1ARGP7Nu4duD4whuPCdU3uv3bon0xi7G1Szi+vBcOy3v/vP
      fJR5jXygSqkIUTQAbC6fX5sdWbIHeRJVg4qTSSc2i8K4nfJG0/uPnrLNjyYzaVXDQQAAWS4u
      Tw+hfMWHZ+snhkfSMb/VF+VLte063qLFC3GFnXrxujucLhIrs6NrDn91c08xbMnmyywuzKQy
      //Df/FseAhUqiG9ptMFwLp8rDg0Pnzp+7O69YaJcFLCAfsKPl/JGCr/54pPrA1MvuQOR5QID
      o13d3RyB7LPPvxi8fsVq2eg980F4eUCgP3maiy15inwM0JUdOupgR0BgiCAplmZoli2VidPv
      fASIbLGY3xIWzi+twxDwu6y0UPvOW8cejNwsLszHfBWKyedzxRL59gefsMWUdTP82Ref4WzF
      HUx89tknMgHu9MX/za9/HfXacmXq44/OsYioy8hPFAAAAILgd86fuX2nnwUgn8uzgM1ktpto
      FoK3IsleurBQor1w5rBjdTZaZOdH+9TNPV0d3cujt22eEASxs4vrh3q7t658jTpQTXPL3OD1
      r776trqxGcNxFIFwHMcwnCsQuZ3u9pY6BkDa6no65b87NIWiKAAAQbHuXfvOHu0ZGJnBcQ7G
      4aIwxMHxmirZ1xcvBpMFg1p06Zu/FmnIqBF9dfGiRFPD4/EgCOZxORjn/iozjuN8qabToKI4
      mE6Cf335KgVwHOdgGP6k1kfVYvhPF7+ta2p78c3zI8rZ6PW7I9kinfOtTqw4N62r6UK5TBCK
      6hY5h4FwoQCDU+E3wsJnZWVuzOwKaqqbTx7avdN1eVFU8skKKhFzHysspF6usHCn+CVupr4R
      Fr5yhNx2VGFUibGVFWt3d/tWoddtF0lkFRbX/uBcxGIm4o1RrY16spwfHBgsM+iJ02cKyYjW
      ULOVfoMoZeM5ukq9rRMXNhYmxTVdVXJkYyPY2Xk/1eHK6ooYB/LabvFjhYV+l3l+1XH01Bml
      +EWFBPld5oHRmeNnL2Cl2MK648iJM0TKN7dsPXD8tE4hCrqtM8sbBEmdPfvW5NiIoalrV1t9
      yG1jxfoqhXBnTizcKby2NVqolguR2VkTFyqPjk/FcgQfZV0W06w9JqBTIxPzGkO1eXFybmmJ
      gCT11ZqgbTEBVEd2N+dL5etf/VmsNS5MjqzZfXQmMLToVvHIgaEJmcawMT86v+ZqaKh/6KrJ
      4tzsisXW0VazuOgulzMatWpx2eTzeaFK5knCQmp4ZOrs6cPjs6YXJywcGRpSG6olfD4LIXVa
      wao76bKYqvRVLIyr5BKRTNlg1Piieb1SqKtpNC0uNBjVA/2DAm2dWiogK5nXyIn+4YmF0ZC/
      ff/x4KYtHPSqtPqWptpbtwZKufjY2KgnRR7e3bE1LKvrurS8yvjERDRZbGxrN6olHJ7AYVrk
      KTWtLS23b90kKvnR8Smn00mWi5VHnVgIc04fah8YmwcAeDwewDJO9+b2qsygGJ/HF4AXcPrC
      A86eOx/zb1rd3tr6+mA4wVKlaDyhViucLvfWBfMz0/sPHVJqjWQ2TlMMIpQf2N1xv370DilT
      dwSdoWpquP9efz9PrgIwKuDzIBgCAMAo6veHDEa9vrquvbWlmAwtrpq3OlDIZbZ6YwIens0X
      abK4Zlqw++NbS7QBv1enN1bpjR1tTdU1DcWEP5DIP8q0praDW4wVAeBBlcGR0e0LCxEmN3hv
      SKJ8gYtAs1MTFIDLpfJo/60iCSiK0mvVPp+fxxd6vV7AsskSqxFzPJalNXeI+sE2cCYeKdH8
      18gHAoDNpVMFglarlJVSEePwioU8isA4h5vOZCVCXjyV06hVRLlQKBNcLn/rXMFMKlmmgFop
      LxfzNEAKuQyGcwQicS6TkUqEsXhKpdFUCtlChVYpZA8N+8rn8nyREFBEvkwJOEgik+dxOQCw
      KAQwnuhR2US3fCCarMRTWZVK+eKEhTRZWVs3t3V2IywZS6RVGjWgyFgyrVarVkymXT09+UJB
      KBSyLJuIR/kiGZ+Lk5USA2PZsLvC071J7/KK8kZY+EjyyeDFP//l0qVL1s3QU90Y9bnzBLP1
      73Qls2J2P9Xt6VgoksiyLO33B79/ZjiQSkST2dJTPeqpCHqcuRLJMJVAIPqg0O/3x8P+JwoL
      8+n47NxCmXyyEvKZyafj/f396UKZZdlAMMiyLMswweD3TUSUstFElqYI08KcP5KkKWJ5YS6c
      yLAsIp42CgAAIABJREFUy7LMTpwbH/dlWPnRQ/uqNArT7Njo5KxUYzRNDiRLwLE6t+4KaiTo
      wNC41e2vM2r6bt90h1JyDjUwMjU/PUnxZU7T9Lxpo6ZavWIJNdc/hdzOuTLz3eDc3t3t4/9f
      e+f1HMeVpfmbPrMsyhdQqIIlPECQAL0XSImy3Wqz2727MzFPGzv/zEbM875M9M6sxG5JFD0J
      b0iAAOF9oVDeF8qbzEq/D6DY6mmChEQDaqRfMIKIjEzcm1kXWffce77zjU8b9SoIo6KRsNe5
      UqaLaVH15sq7TA7dX3RH25vMDx9uKJWIRq0KhMKLiwtcLvpSYeHdWzerrPoFZ+hQbfUb6t7t
      b78BGFqieYjN/uu1O+dPH/e7Vv/fjf4zJ48BACSBvvHlvxcwI5TaDhSxlfkZuJQoYYaFJ487
      Otqkgyqy6XWtz84tcoIoyRAiFBbWtuOZUq1WerSw5V+f3XAHBMJQq+YeDAyaW06quajTF9bX
      tHc21TcfqoUxKhve8kR/uNYOQo93Nw4/nAUAeDZXszQ/PbNPgd8rAWHq5kp8biMAAJifXwCy
      NP1kdn+XCjBR0drWxpV+pEnjfjh56kTQ55cgpLKmqau5FgBgb2xvbXg6XiGEvNJ3HgCgUKm3
      VmZ5Gd1JMl3dbTqK4AHgufzBDKD2Iyeu9F0gEfHJk0VRlASBJ0mKUldUWU2NrV3WCoXfvbnm
      iTfWOzYWpl3hrIZCSZLCMGh7dWF+3SPJ8r6zQv8Ga107xURjOQYBUiwaSWf3dHp/vXQcvxhc
      md4VFgbD4R8iLMz5vV6UfFNvRwBAJJZsbm3xe1zQd0qVZ8JChmEgCN6NDAJ+/9nLH6kAr9IR
      Lqcvx7CAYwF8EFGYyLOcCFEkDgAoZNOcBDCchIGkUqmK+SwrQlAhNO2hT/W0VaiVuUwSwhQU
      BokQhgKhyAgSV4IQnKBISQIq5Q8o/JZJRBCVUYkKW95ovd30ZG5Fb7HqlRiG4zKuNWrfVA25
      oM9fVVvD5ZPhLG9WQstbgUqrFYFlBSqrzLUvFhbmktHFdc+xkycU+JtKvMnuRO72j/R9+JlF
      r/b5/bU1NQCA3R+GR4beu9THlzI7NGzW4jPT0yZHc4NNP/14uvpQO8gEGHXtuxjGizzLCkDx
      aiUNvs9PcS/sXfhcXiws5DkWwX4em6m78BwLIRiKQOUyS5JPXVc5toxiuAzA96WGkijwokzg
      GAAyXSoKEqxWKWRZgiDk6XKMLIuSjOzPy73M0BhBwZDMsgJJPp0zl8tlGAIIRu71O54JC4sl
      Rq1WvX3HwkImwWManYqkSwUYI0kcK+SzEoRq1Sq6VEQJisBQcCCOhQfF5uyjEm7Qq+B790br
      au0Mw0gAikcCmURwI8LYjKpCkSZwnOfYeHBzfjNV77Ds+NdvD8/EAi4O065MT1gc9Xy5xPJi
      Me6Z3dpxWHW5QhEncK7MMCyPY9hzP+WhG19sJYVGu6J/YNHhMKMIwpTZwaGBYtyDW17iWDj8
      4JbH602X4Wqr8fnnvRlKqcC/f/nNmito1RFjUwtL84v19ZZvrj/gZEgp5x+MPdlwbre1NgP5
      IBwL3wWWJgddKZ5lhaYqpShKEa4QX3/ICHJD5zHv6hyOSqrqHgAAqdQSiKyosNTa9DP3PTXN
      Qdf6msvtP3+yLRCR7oeXc4xgrWv3Lo6rzLWf/urT53plQIQeKQX8CTMAYGBg8NOPr96+d3+f
      wsKyqPjow3N3h6bA4bdarB5XaLVKnLTVVDoO/bq69vbNu7lETEbQeCSKs8jFDz51TR2cY+FB
      QRFoOpPnGYaXAUDxS5evqkgIAGCxWBz2ykgsYzRbCblMGarPnezZtclKp7Jn33v/cIN5eGKh
      uq5OjQk5muMLBYXeUFvjCEeieoNJSRHd3UcKyUg0Vdqr6QtXPnw0eF8EAEgix/Pc/oWFIsux
      5bcvLOR5sbf3KEQnXMHEvdt3jp1/T11h+fzzX5sVAifjxVKJZgUcATD81r0UD5CatiNJ15Nv
      7wweP3nCYLJSGOKw203mSr3Flo3HL54/ni+U9JW1VSr58bLbYtQCAKzV1bPjA2Mz68d7uqos
      +limjAKhur5WW2HJ7YQvXryQz+crdBWlUrHCVLVXHGe1VaEY9f7588YqU1dzza17g3ZHna3K
      ZrDY9k732wXpaHbcvj/a03P09T+OF4IT+NLiUl4gSDaRY7iZRyMChI0P3JU19pMnjm08HlRW
      1jOx7c1g9q1OomVZ/kWftU8OXFgoCZwEYy/QUnJMgX/LjoWyLP/iHPifjAMI47PR7S9vjhv0
      6sPHzzXVWJ8dz8fcazHpVPdzylAUk8FQkWip/Wu9bTEfGVxNfnC6a2tl9tHUjIBrTp+90P4f
      LTX+BtfSDGFrcxiJ4eHH7713bvdgwOsicTQjqpod3xMWJryrAe50b3MxFb55fwyGwLEL75fi
      vtbu3t2yznQm6ktJbY372ombuPc1Wdvb06Qbn9i6eLF39+DwyLCRAlVd771YWDj3cHDDG+05
      d6W11vqi8w6OA4jCRIEjlFprVXWNzTQxeCeczB8727cxPZzL58wtp/tvfZ0q8hev9j249m33
      yWOura1sSThSr1lNklm/5I+muk5cDKw8LBSLkLkdANDU2YtJbKmita1a/W//+n/auo97tjZz
      xfIf/uEflX/rx8WVGViUAJBLJXplemTBFaU0xgYzkc9mfIxqx8WFdvK9Zy46Z8ez+dyusJAu
      ZHCVvruzxVyB/98vhmBK41xdTBe5nibznJ+j4053MNHWc9q7MF6UqL0cC2keCy8/OuR4v1Qq
      Dw+PvHfx/L3BYYErq8DLhYXBZHlXWPjODqCDmURbKu2NDbUozM/PrcEQFA84BbX9w75zMJue
      W/fBQErsJPWVDQ12M4bhSb9fZ7M1NzfNzc/DCJKIBVlZ9dnVS/+h67Isa03VrXWVKIbndoK5
      v8v6Q2GI4/hdYWGZFfo++hwSigxDV9qqmxtr5hfWYQhE/S5ZXflMWAgRugtnegsJ39TCdmNr
      W7VFi6J4NhxSmq0tzc1z8/MQAificaVSwTDFIv38xW4Igq9evXzvXr8MQKlUkoFcKOyZu/h3
      10IHIizcPwfhlYFgJoul0mpBYKKjo1EGkKm6Ac4F+senMZW5o75KhhGjXkcpyFI+nc4XcQLB
      SI3H5exob5ckyWiqwuT87YEJgni6BodgBIrAEARRCoop5lLZAoKRXCm9sRXYWF55NudyNLXM
      jtz58tpXNU0tOEliCEwSBE4QpErj8/g62hokAJmr6+RcuH/0MYahAAAU8A/uP9jyRqqsZhIV
      1za2krkChqMorvR7tjra22VJMhoNogRwBPDi8/O/CJJUaE2Ha6wSidt0xLWvb0gwQZIkTpAv
      q1yAWivQf/vi64bmttf18F87P6OtjF94E7zVOdAvKa375xdh4d7I8srcY6cvbK05dKa3a69t
      QqGUWg3mu1vqnh0R2UI4VXZUmZ57/kuJuNcSgqq72ba05Dx8+KkwZXtzhSQpSWF2mDUvvvxH
      s/rkoaamq9qIrq6Gu74rdbi0tKQhgKHu8IuFhcHt9dnV7bOX+kzaN5gS9AJEnr777TeCpuaz
      yyfv3bwuEYarl0+NDQ5hOtuFU0chIB/AHCgZWA+V8N/85jc6XGJ4cXp88Jtv7xSY8mj/7Vs3
      v42kiqP9d27cHSjThdHhweu37pc5duDOjdsPRtxr8zcGJn50u5lkYnRoMEOzgUDI51rP0vzs
      3Fw8Gkon48n8G3wvhiOJ4cF7gsgGg/GlpSUgS7PzC4FgYCcaYF6yqiourG5f7Tsz82TuzXXv
      xRQSgTQtWkyGfCqc5YiW1qathcdAZZQ5RpSBLHIHMIAyqaS9ri7s2Xg89TAQ8Idp7MLRuv67
      dwRVjUOHeV2rnMLeZaOWXFF7Q9uRWvXA/X68qqNWzRUhdXPzq+wpwpf7zg/2D8ky2IlFGE70
      +nyv66ZeAATjfac7+8eeAAACgSCQJa/Pv79LJRQjSUrxRoWFL0Zb1dzbYltbWshzWM/Rzu3F
      SXc4qdToCztBhgeyKB3AAKpp6VqZuOcO7VAKpUqjLcT9D6eXahoORdwr86ubCo0h4lmZWXWb
      9JqQzzWz7G5savSuzi65wmaDJujf56N/PlSFpb1aE0wVVCQ2OT7y1hwLzTWtKi5NA6CEuYHh
      0fzL3jzfgWJycWBgqMJU+Wb7tzf5hG9+3SeKAl3Ibjld+bLc1toc9btLPCTSqZ0CezBRmMhz
      qXRGXaGjCLxMF2lW1FDQjZv3stncJ3/4JxVc5iVYqyTyRVqGEK1GVcpnJRhTKxWZTFav31dJ
      g7+HKzMQSqAwKJRotZJKZ7I4QaIIgCEYINhuetSbgC6VKKVSFrgSKyoIJJunSQIDACAwQAnl
      S4SFApfJFfV63ZsTFr4YWZZ3gi6WslYb1flcBiWUShLP57IIoYDYTDgPvTvCQjmXSQOU1KiV
      72hR/7fLL8LCPSkXM/FUXpblYDBYyiWTWXqfF/p8PukV2s3sxPI0J8tiMBh+djAeDZVoulAq
      f/9MtpSLxNOyLEsiv7o4OzO3xPJiIZcTv2te5NlCcb/dDntdOZqXRDYYij87GAwGd6JB+mXC
      wkImMfl4htmHxeLrRZLEpemxJysuSeAWZ6ednqAkietLc05PUOTZuZmpYCy1e94BpLTm4p6t
      KOuo1E+MjVfbzAWaCwd9wXjKoCG3XNuxZC4Z8UmYMptKqrVUwB/PpqIbm06twTIxNmrWqXmI
      IH+URMG9MsdSRr0KHhubNlRQTucWI8ISVwo4F2e201UaeGnNZbJYEkHP+sZKJC3XOyyhzSfO
      JLBp4DQj9F//s8HRGHCthpN5Or49vOCvtarmFlYNZmvE53QHd6wW43OXJCZH+he3Q+3NlkcP
      NykFrFWr/MHg0tIin4tRLxEWSndu3amttsxv+A/VvSlh4XPJhzf6J+Y5EVKRUFEkNp88lEE5
      kOZziSiFS2VIMfN4squzXRIPyHDuycTgX/7yF3dop5CK+LzeR/MbTMy1tLo5veJenxkTSc3Y
      yMjS4oIM2NmZlYfjExYDNfxwvpAMDTxc1ChfQa0hP/3n3VgqAerRxFjQt40QSr1O/eX/+2Jr
      dbZ/ZGJ8eplE5N0vD2tdG15OrG55CYKsMBgoRMjkmZE7t3mM0Ov1X3/5757t9Vv9Yw/u3gkF
      /GXh+ZMBCFW1VSuerPkAAIsLi0CWZmbn99ddESG0h5qbOPot6deeoalsdBjJVDqjq6w7VKUG
      Sn0qHCgU8rFYVF/drIZKggiLMoDRl5Z5fDMcO3f597//fUP10yVBGEFhGAYQZKmyVVQYa+vq
      UIjnmFLA4yvLktZoqau1C+UyoTYqIYbmf+TMQKfTbGysB9wuEScAgjc0NJAECgAgKUqWZUql
      6zh8tMFukQG0W2ETAOBzristtUfb69Y2PQSJp8Ke7dAOJAowTgBZxihVe8fhlgbHsZNnclGX
      L76nfrSt93xkfZYDABbKvkCgwOwzKQoR2Zx7exujVD/uln80hVQMIbUKRHB73H+5OXT61DGj
      yWypdGgpJLC9zqA6JcyWyuUyWz6AKIwtZbNl2GLQBAMBvVaR2kmMzq53tHd0NFQl8hzElUw2
      eyToV5OIJ5az6HUASHab2RfOAJG16JRZAa8yan9Eu7IsOVcXkwX+aE9PKRNX6qzxaFBBoCpN
      xZY74DCr17dDR3p78nF/NF2srKqpsuhlUVhbXsyz4GjPkWzUV4bIiN9NUKrG5ib3trfBbl5a
      2+o6eiwT2Y7l+GM93c/N3wsHAlaHgy+kIlnBpASr2yGrxYxAMoUBldFBvVBYmE/Hlze8Pcd6
      qTcmLHwusiTMjN4vKes6HeqVjW0IRk6cPuNamSP1tsZq0/zsrN5Wr4Pz/gJ68FGYUC7EsuVq
      64/coPjPytv/w/6hiAIvw293AD1rWJAAgWMMzZAK6qVBe7FYVCpVr74OwrFlCMUxBKLpskLx
      NAGeLTMoTgAZfF8lKIk8x8skiQMgF/N5QYa1GpUsSRD8fWGhhCD7EkswpSJGKRFILpc5inoq
      aKQZGoEAiiteLCwUBT5fKGkrtAe1DvRSDmAOlI26ZtcCAIDhoSEZyIVclmZYnmUKhQJdZrOZ
      jCjJPFdOZ3OyLAtM5l/+97/kykKZoUVZLhaLAs9yvJjLpAslukzTkgxomt5Pu67F6UCyCAA/
      NDTOlplcLkuX2Xg05N9cmFz2CDybzmRlWWbLdMS7/mjWCQBI+NZu3B+ZHBtcdYf7794qlPlC
      LpvLF5PBjfEnG6LAp9IZSZbLdDGXL+71lzh+7/r9sSeylBsenqVpGshyiaaHhoaWpoaSzIu7
      LI/035meHH+85Pxhj/gtcjDCwicTg5Ht+WiyGPOsjs65uVKh85B5Iybkot7aapOyujO2+kiE
      4KbjV+D46rlLZyamFtp0DKNx3Pjq1tVTLRp7o3N9Y9Md+PRMm2Rucy8/+eTjD39QB5anht0Z
      iWHKTVUqSZajHP3t+gQrQnUdPb71BQqXFVVHAQCUWkfAIqYyOip1T/qD8WjItbG+teW5cLoj
      HJPu3VgqsJK5pt23NK6x1H/yq0/2EBbq8HLYG7cAAIaGhj/9+Ord+/37FBaykuKjq+fuDk0B
      0PKDbvCtccBRWDIWO3zyfINZU2CF7mNnqiyVfRdO5/I7iZ2CpaqaQuWtQEwU5Kh3w9HWPXXn
      m6ZDtespDqMTNCfSuVxNV8/KyHVd1b7sICkSS6WzHE3vCgsvvHdFRcIAALPJXG2zxnfylsoq
      CuIpve30sSO7s+HUTvrUxStHmypHHy3aHDVKhMsUy0KxSOn0NXZ7NJ4wma1qJXn0aE8hFYom
      90xUPXflw8dDu8JCgeU5ltuvsFAUWbbMAPjdFRAfwEKiJPIyQhkqlAxNt3Z2zY4PyRpri8NC
      aoyoxFkrzayI19u04US23lGpMNhPH++pwAVBUcmz9MVTXWWRtFt0bo/foDe1dHZtLC9f6LuE
      Iy+fImj0xvW5RyubnpPnzhOIrK4wiRxj1Ov05kqPJ9jd6gjGUk3t3QidcPoTdked2aBVKMjJ
      seHtYPL06dOokC/waC6V0Oh0Le0dPrf3WHerNxitb2zOxoMCouzqbCOe9wZiaNpsq7bp1Byu
      OlSpHnu8aLM7jHqtvkKjMVSSe4wNSZJkGZAwNz61ePLMGRX1ogXHA+SnLSyM+bfcO+yZ3s7X
      +DvfEXie/0nshf0iLPyFV+Mt79LJspyJbM2u+mRZHhoYFL87mA5vbwVTz84ZHBx49vPDe/dy
      gii/Mmwp85cvv7h27dqdwYlX2ZT9oYzd/vPjVa8oZIeGZ54dHBgcXJwc2Cm95NqZ8f4//elP
      a57wS847OA5EWMgvzi4UdrzuQLQnGbp5bwQm1DVaMcCb4puFUDJ/9HQfzTAAgGIq/M2d4UQg
      Xnes8/aDcUyp++1nH/zoFZHFmcnjfZ8aCMEXCLFM/vbNOwJMXjjZfmdgxmbRFuhymeVhgTn+
      3keuhcl4In3100++vf4tjmJ9ly9EMiJGx1qPnVUTP/iJMSIRXZ1sqrnC0Ozg0NDlSxfv9g+J
      AsvCLxcWhlPs//jDb24OTLbVVf24u37THEwUZqupb2tr02mU3o21Ux983qjDcJ25pblxYWEZ
      geHkTnL3NN/WyumrvzvcWufZWMqVpXIuTb9KuQEZAAgkoqGph2MBj9uXKEgsncnlD3Ud15HI
      qfc+ogj06qUTgUAUAFgoZ6M7OVtD+6XeQzlZm49tx7OM6kftJ0AQfPXDK/fvPZABYGhGBnKx
      tG9hIYCe/v+ucgADCEExk8lkNpv1FZq61vbJ+9e3M3yN1exxuTq72iQJGAx6BUWtrq7UNHVO
      3v/KFdxpbDmsRCVKq6NeoVDO4ROnZ4duP1lcrbDWVNc2VOsVKKnUqtUUiROUAkVhlUqFoBgG
      iTupDITgMASUSgVKkBiCmBWytrrpx737SIqiNMbuumqgIKoN1LWvbwJUQVEKgqReFjuilXrs
      3778urHlF2HhTxmOzn5948Gvfvc7Bfa2Cz29+xz8ZuovPBdRFA+2PtA+OYA3UDEdiRbQQzXm
      pYXFziPdu1+imagnBxtqLU/zNBYWF450v2Y70rB7EzPWmLXYwsLGkSNPl45ymZTIFtOiutGm
      f3ZmKRvzJ/i2JnshGZpZ9alQwVDbXk6FWzq70e/Ku4RyUNP+KmaszEyIGntXk2llJXz4cNOz
      G9QSwFB/RPtCYeHS7BQnAo21trnmTQkzFp9MRnZSFtshid7BSRKQRozPQhhpqqw2Vqizcf/C
      VhRF4LOnjydDbvcO2+WomN+O2SotdQ6bLB1EkU22lB0fXQ05TC5vuNZuvHlvBMZVNRVSgDcF
      yUI4mT9yqi8UCkW8zhwDPvr8dxUUujb3aMnpczQdzvpXsjR38r33J27dkDHcYNJxQPn7z97f
      T7vZZJxUVZm1SCgUQcqJBXecVOkbzEQhn/MzyoiKiyTzR09fcM6O54t5U8OptiZ7uZRPZ/O2
      9marnvrTlw8ArnCuLqby5Z4W67yfywZJbzjZcuSkZ2GcAcq9yrtEYpmsL1hjuxIKJXZ2gpff
      u3inf1ASOF4JlI49BxAAAAAhGM1+fPX83eHpNzeACvlcrsT1VltUlAMSiqMzLjrpxki1Um8F
      APi3Nx1NZ33T/clcdtEZlCTRx8e9vgyCEXUOG8ekDyoKa+jo6DA8i8L0+G4UtriwjMBwKpUE
      AOgrtAxD5wslAIArEP/jH/9bs51iEfMff/vBytK62mjrbbU19fTB3H7TPVEEYr8r78Ly0uWP
      P0ckmmXLVbbq5sbahaUNGIYSIS/Q2j68fH53L0zG1JfOn+JzkUezzsbWNptZA6NYLhpRma0t
      zc0LiwsQAqdTKV2FhqHzhRL73HYhCL569cq93SiMYWQgl0p7luP8u2vfeBR29OQ5h0U7PjHJ
      FlP3R2YuXjh57r2rH330weKTaQBAQ2vX4sMH/lh67tFoYie+urZpqOv8/W8+2/G7BAAAdDBR
      GG4ymUwmk16nrWttn3pw3Z3hayu/F4Xp9QqFguMFikBFSVhZXmuqsX557dqGv0iIiS++7u86
      3KZSKXGCwlFYqdyvG21NU9vC6N0vr31d19JKUBSGwAqKIkmKUmv9Xv/hjkMSgEy2WrgQ7R+b
      3q0dgyPSg3t3111Be3Ulhcsbzu1MrkiQOEaogl5XV2eXLEl6vY7jJQJD9lrUoRQKSmM82mAH
      CtJuoK59cxNClQqFgiAVL43CrDr8y69uNjS/wa34tbmppdVNg6Xq3u2bAs+trG85l2evf3ur
      vqVjYWFeEniW5awNzR989Os//u7Xx3uPcNnojevXUa0p5XclS/gvUdg7yu4c6O20lcmkdTr9
      3x8PhYLV1XtWDSyk4yKh+yUKe0f5qfxhH8AbiMnF3bFyR/N+fayF4s5GrNzZaAcAyLI0Nznm
      jabau0/UVIAwTTY59ptM/dwoLOB1qTRaRiJspr8m6peyUV9CaG+yc0y+v3+Ik5DzfVdKqYit
      puGpb3wpG8+L9krDftpdmR5X1x52mNDllXD3vqOwXXybSzMrrvN9V636ty3M2CcHEIXxTDGS
      yHNpny+cqO84BhdCzkDi8vsfzD8aSebZDz+4+GBgRALor3718fRof04g+nrrQ8GIwLJGvFxg
      yhnY9NvPzy0srXAYMjq6tmY0fXL5ZP/9fspgP95mHxh5hGvNH18+9/ftfj8K05Li4oZHZ621
      VSCB7fXtovJEnXrNHblw+X3v8pQ/EqmwHWlvsid8m4jOcandzpTzd77+6uKv/ot3fZEB5CEz
      OuNl+47a51e3T57v869OxQvgk08+wJ+X4RyJJWPue3/4/QfhUEKW6CPdnTNzi/FYZB9RmDi/
      5vnsw0v9D598dvXSa/sAXisHVqk+Ft+58slH7rWVSDjMczzNlBGcLMTdnmBcVpiazej6+vrk
      kjvuXXdH8zCpDXudy5s+hC9UVtthBG2srwMA1LV0q9jM3Ny0J5Zfm5tKM6JCpVyYnX1uzhEE
      gCRJQAaSLKcS8e7TfcmIZyce2fWN7x8Y4+jc9NSjSBE+f7x7N+4xOFpr9ejU5KNgLN/Y2ma3
      6ghK4VtbVhgtLc3NgwP9Al+enpkLh0Icy7B7CNYgGL98trt/5DEAIBQKAVn2B4L7e0gSipEE
      qZAPrrzLSzmwAYRiBI7hQJaMZgsmM1sba6tOjyjJPM9TFIViKKaoqDTpqmsPWfVKAEC1XiGQ
      moa2I/PDNwcHHtwZeggARFEkikI6U5VOqznU1rnjXdnJMjLP5dLxWDrv3vZ8v0Wbwz459ODe
      nbtqkxXACEUSAIIAADCGBfxBh91mNFc2NTUzqfDU7NLuF3syuL206YUhwHKCxJdWFuc84ZQk
      8hKEBvxeW7VDbzA2NdVbKqvZXCyW2TO332hv1koFGgAVwt8bGN5/eRcCFG/fvmew/gBr2LfM
      AcyBJFHgBAlIIkGSDFPGEKhAsxUVmlI+C2AUx3FJBigkAZQQWZoVIY2CYLny3W++OXb1t3aD
      kufK+QJdodNBEs9LsCxyGEkxxTyEEgoCzWTzGIYTBCYDWOD5vw3yZbpUZHmpQqvZNUtjywwC
      QyiGl0q0gsLzRaaiQitw5TIn4DhBEjgAcqlY4EWg1ag5lpEAwjIlBMVISkHTtEpB5vJFbUUF
      z9JlXtLu4epVZhiComSRL3MSicH5UpnAUQAADAEUp17sOfbuy3p+KlGYlM+X1Gr1u/oYXz8/
      lfIub3USDcOwQqEopsORPGZRcuuB7MmejvXZCbKqo6GqYmJs/OTZ88GtJcLUYDNQt+8MfPTx
      VVgszW9EOxrMGy7vxbMnXsW4LxMPMbC6yqQOBCIOx9NiF/FIEMNxCdcYNW/KMzXk2VJb6zSk
      FApn7Pan22eBQIBCgcq0p7R5dx2okE6sOH1Heo6+BWlzIR1/NLNw8uxFhM8vrbuP9PYqCUzC
      8w9DAAAGiUlEQVQSuIX5OY3Z0WA3L87PGasbHZVGJp8uyaRRq5DlgyiyyZZyHpfzzvBMd2cr
      kPjtQGzxybQMoDqrZmBkfHErUmlQRVzL6XRqM5gGIut1u7/65vaRo0de0fYx4nV++dW3rMAv
      La3txMI0K3q93m3nasi3HUi8wfIXa0vzt+71SzK9vLwdCASALHl9vqXlJa9zKf8SI1dpdGyi
      yqQan3obRTaHhoYxAvW43aOjY9VWzejEHAAgGfVTetvy1KPl+Yc8aVqZmaTp/M3rX/njWQCA
      yB+Qb7zT5RIFAYahmHt1O5TcWl9Ml7jq5u5syHn20iUYgh5NPYEhYWJ8QgZga9MpSCK8P4PS
      FwGhp3vbBsenAQA+10aO4Wfn91lm5RWbVXXWqqeXPQCApaVlIEuz84v7u1REcE1tXb1Q3u/e
      2atw+vQpv9tTFmQFBj2amlVXaAEAZvuhSjWEVRh0ak3A7YxFwhyqvnjm+O4lKK48mAHUe+rC
      5VNtd/rHZ1fd//zP//N//eOvp6aXAIDUepOGwvniDmo89N//4Z/sVDlN8x1Hjv32k8vXr9+S
      Xnm6ZnI0a8V0JEujkBzweZPpPQuyvF5ajp5NbC2wAMBCedvjKdD7lKagIpdzbTkxSv1m+wcA
      AMAfCNXU10UCvhwjnjt3Np0IFQqFXNx/Y2DyaHcHpdRarWaN0aL6zhmWKzMMUzqIKEzgeQki
      cKRYLEEwrFAoIFkq0WWlUsEwDEmSksjzEkTiGMcyAEZFUaJIolQsUkrlqwQj2WQcUeoVqOgJ
      xmurDIsrmzqjSUuhKIbJuEavJl/jPX6fSChkqa4Wiplojjcp4XVP2GwyIpBMokBprKb2mNvs
      zoFKueS6K9B1+DDx5pMhC5md4bHJ833vo3xhzeXvPHx4fna6taHG6QlCMHa094hzZdHiaLIa
      teVCuiSTYtq/w71dw7mD4qfoG/8uWB3wPI9he9YvEgUBQpCfxQDaJZOIImqDhkL9/khNzV+j
      MFWFQZJhtfKvbyCWziXzos2ql0RhZWGuJKI9Pd1ssaDSVuzmCYkCW2JEjXpfmSSlQp5QqhFI
      omlOqXwa6xVLJRSSUVK1V5nfXUSeS2XzRqPhba8DyXI6HuLxCoteVchlZYRQK6lcJoUrNAoS
      l2WJpsu7a2w/I994z+o8R5n0KnhiYkavIdbW10sCDAmMf3NhZjtlVYG55Q1LZWXUv7WyuhzP
      QfUOS2hzxp3H641EqsTf//qawd7g3VgKxLNMfHtowVdrVkzPLposlaHtdacvXlVpfm6cOHL7
      z5sxpqlGPTi4VFVlwDGsUCqNjo6UEr4X+MYDAACQ+29fj0aj0bxYU2V+wXmvnULC8+9/vr7p
      iVQZFQNj056tLQXKjTxe23ZuHmptcS8/HplzdrYeAge4lXEgyDIAMpBl2edckSj9zNTDoG+b
      UGrNJv2fv7jmdS71D49Nzm/qlMTul0dlQyfOxOdXtxAUN1msalwuMvzD/nsSqbSaLV9f+yLo
      d916MDo02B+PhvcssonrFELMHc0CAEZGRoAs3u8f3F9/BQ6oPvjgSiYeeU0PYL9QGqNORehM
      1tD2OsuLZUGiiwWrow5mdzweX4LGtN8JrH5GA8hg0K6tLLudGzKhAAhe46jZ3VLACYLneVWF
      oePw0UO1NlEUeOFpJpd3YwWtqDrc7HC6/BgGxwKurVACEkUIw3ieo1Ta9o7DbU11PcdO5SIu
      X2zPmO5s34czI/0iAEAUyhzLcvuMwmBBYBi6CCFvO2mCLbPdR7oxPhPJCh29ZxpMGKavEYtJ
      VqbS8WDYv728slLiAfhZfYUpdWaUy6eKwplTvSqlUq3W6LRqa2WV0VrNl+ljR9oTqWJzS6vN
      oGIAWe+wq5Sk3lxZzsazLHz6eLdeq0JVJiUqNrW322saJJY+cfxoJLbT1NwMy6zCVNNxyP7c
      mUq5XDZX2eyGCp5QNtkqxh4vOmrqjHqtvkKrMVhfKJWGlZg4Mrlw9vwFJflWy7sgCHg4MljC
      zJ9/3LfxZJxXWI601myurTpauk8d721va9Hq9AohvR0/IK+Mnwk/FW3Xc9lNOniJbzz88wjj
      D4pXCcUFQfhJDL53t3bafwIQBEEQZPT2NaKm90SbcXjUebnv+P4vhyDoycNBdzDRdeJiW/0v
      1Tl+rrCSIrgxnaVZtvxDFzOFeFb4r7/7tde1+UZ69jr4ZQC9cSAIuvrh+/fvPvgRcwUIAHm3
      LM27yv8H0PIn4eYeBvUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Loss &amp; Icebox Overview' width='192'>
      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
      nc62WuVWILS3yQJAvHblnRq5CIDrmrbLlXIGq2y53VqVrMAKDDvCUfYeO/vLv/x32sYj5Wy8
      d2QKRR6d6/DDtYEAgCqXMILEUCiVKJFQkEgkcAEplcrocoEUSRFgk4mUXKVmqLJIJEomEzKF
      msAgkUgp1SqqTGEIl82k7/eNXP3pVfLpM0AKhYJYIkEAAPhCoSSRiAGgmM+TEgmGILlcTiqV
      7oyxLxQKEomEZyulCifE0UQqo9Zo6FIecLJSyiOESIgDjwkET+9GqlClVCav1mhwFAqlskT8
      nI0fVKmQzuYRFFPIJAhO5NMpoVRBoFyJ5uRSMVUqYqQQR1EAKOaz5QpHEAKEZ0mSYHhM9EVY
      2fbr0OUijwoQlipXWBwXAM/C9/bEwn8pYOhyqcLLJN8229W/YDzO1sFS6Zt3+3ie675z90mC
      E55Lx+M7/uQ5hu4fGv4OU4fk4v41T5Tnecesg/3iYj4VCSVyO0pRTufmdyiU5/lULJwpUjzP
      er3+xxeLhRxFM0+klrKhaOorKmEr1OzU+LRjscJybIWas0/OLKxsZ3XxbqzlKeZLT9CjA/39
      /f0r6x6vzxvyeukvbiQjgVyZ4XmeKuWL5cozj2US4aHBQW8wxvP82vJcf3+/Y9HFPp3QpZxL
      bnjDPM97vd6vaPPjuzuKcel05reV53l+1blSYblCOhZLF3fW4/V6d55YmPng09721rq7t7sO
      dx4b6703MbOgVcn//H//8wpwWQqdG+0Rq7TjEzOFQoHJhvtG7BgGfb29JV5gNGi+sQbn4r4l
      d1IhwWdm5xpspq47t73RbMq7OOPy8wjuWZmV6fWrrrUKDetLU5Ecs7Vsn11x19XVfUvfnXtx
      pizUqqXY4OB4vc1kn5rkcPFE781InpXKlUGvWyIVhsNRhuGDvs0ii4a2XIl8RaNW7JS6PDGQ
      xtUKpFACydzYQ6HOAtlgkhbqVaJ7Nz9OUKKnz4ACgOLoqPPgK3vVSuXExJhGLhcrZY7JqVSB
      zgada8Ecw3KuyZ6tvKCu5smp1pVS+vO7/Xv3dcyN9ZFay/zs1L59+z1LdlCZVJInW8yyofX/
      +g839x3YPzk+0tTQsOSwZ2iEyqcEpGDLF+LoIkKKCQwdGhxsam4GgHAkzFOFueV1mRj71a+v
      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
    </thumbnail>
    <thumbnail height='192' name='Pub Pipeline Overview (1)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pub Pipeline Overview (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAATW0lEQVR4nO3d6ZPb9nkH8B/BAwQBgvfy2CW5u9pb0kpaHZWV
      xHGa2Ik7TdM2bWY60850+pf4X0je5XVfNGknUzvjUZTYieLItmRpZR173+TyJkESJAEQJECg
      L1ZeS3K12iXAS3o+b6zx0MBvVo+Bh9998INBVVUEQLuwXi8ADDYoIKAJFBDQBAoIaAIFBDSB
      AgKaQAEBTaCAgCZQQEATKCCgCRQQ0AQKCGgCBQQ0gQICmkABAU2ggIAmUEBAEyggoAkUENAE
      CghoAgUENIECAppAAQFNoICAJlBAQBMoIKAJFBDQBAoIaAIFBDSBAgKaQAEBTaCAgCZQQEAT
      08E/eJ7v7TrAgDLAFndAC9PXf1Sav/j5L3/2s59sJgtB2oKM5v2Nx8g3G3KTHnN9LcOHfK5i
      pU6aJZ7jMTPRwvAhh5GvNdh6KxD0WTDUKsXv7xYrDfXbC7OkwxsJDX3yySdXTo9+dHdTrjDf
      +cd/8eFHLSW5cifWItl46dKl6T/+/vo//ft/HPlxnSVX7mwUGnXZNBn2qrLEK2azVLZSXkk1
      IKG4nWJDbmuLcPtsmIFwjEeG2zhFMbG9VeCEVC5wdqIe3ywYQ+fGXTtLK9NvvXv0T+alK9f3
      53aiA35dQLGV+6MT4fdvfEba8QZtEVhGkI0cu56xWt65NIGQIRmLsXzdYneYheTqatY3dmrf
      UGPTheD4mXqz4nCGfQgFxuc9xe3FLz4NjkxQjjfrHJtjSun4HklRx1m6BSmZbPLhSm8uiia7
      39Fgq+VCpVRKcaqfUsrMmtEV8JoVs9mW3lvFIlebLGMi6+0VEEIGocbuxJLIR/KZVA1THgrp
      3O7+9FtaV677z+34B3z+FpZPxuJF/vK500f/Z5nYDj1yivyq/PY2V/3jszaTod0F96NEMhke
      GXnuX6bi2wbCHRpy92RJfehJAUETDQ4oinKiz0MTDZ4hiuKJPv98E/2D770pYK3k5hY5FPZa
      VKPdbcbk9Y1YXagNR8ZDHtvO2pIlcnnEJhSzmarROxJ0n546pc/aVen6jZsTE5GGWPn048U3
      /+aHSGkKFY6pVTBBIN0+d9CdWt2NXjorZvPJfCkccIZOzXvs+rTaB00018DMUskfnUlvLnqi
      Z+3Gugl31JrylfNndDkFCs89/tMXkZnR+INb/nPfceFod2n5/Lv/cP/3vwn4fYxsH6JN2XTS
      4xuhbAbaMxL0OY9z2FiLpGTb+QV9/iLSa3fjLZJNlBcuTP754z/8/b/+2xE/YuN777138KfY
      8t0GZlxZS0sm1eNw/vW18//7P/9dEhWmWqeshMftRGqryBSUZj3OiNmt+yacqnJCLJm7cGZG
      l3Vndjc4sb6bYwmjGgzPUVjtwdouk4xb3YFIcMhmNqfKjCrURVm4f3/ZRrtrTNzuP+W2W3U5
      e7WQrBi9LtJY2N2wBaOUUdjYZR20af3xShOh6Qkd/m6UJre6FU/kWL+TLGXimQpfYzI1QR2b
      mzNJXIHJMYXKXpYhW8W1GGNQ6gbCFfA4jrNyQTXJimUkqENnJstyjUkJqml3a7cuSfUaOzN/
      zvTiz8Mt7CXqNXYnVTgzM9nrhXTJSW9hUEDgGZIknejzUEBAE/hlKnheKbt/9+7dQvVY9zIo
      IPA8dyBiMmI++ljfTuAWBjQ54gtaV0EU3icgiQaaaEiie66tJHpr5YHVaskn9gJTC/PTY22f
      vAvjHEck0Xc+/PXYqVFGtARdRKVYoDyhfD5J4zYLZWvU+eDIVMj/wkha93GOEyXRfVRAmd0t
      ijQ/3k6MuCwX3njL3CgvbiSUatk1Nh2J+gwKSmWzqipn4zsrDzeDkfH47obNP2VEMlNuEnZH
      vVbRuIBOj3NQDufD5eUsx4cEXmo2N1aXHKaWIBgQQnaHvcIUdlncJtbjmZqxprqNtf080yC8
      0wFrPp06ooBQB8Y5zEjJ5lKP117+SbiFvVBPxjnUVnNpaW3m7DmLsUNneAlIotsBLfwhWZZP
      9HkoIKBJH/VAvdXbcQ7tTbSO4xxtzkQDk90fpMX4o9VGZNrnc6xvxGdOOfYe3yX9QYR0KKCO
      NtEN7et79oBtzkSD53R5nKPnTfRJ9UsBQRvbJyCJBpq8pkl0OZt0RefOz060ffLeJtHaZ6Ih
      idaUREfCkd10BmkoINTTJDocCWezKaZSirVaIUv1XrI0NkwHMPo4BYQgie5Pr+eDhZBEtwNa
      +EOQRIOu6qMeqLeSK3dQ+KrCrDNVZcjvLuxvWl0hjM8t7nLXLk0rsnTQ7WrcRmMgHiyEJLpN
      2xsbXOp+sWRwDgf9BL96v3xxxuMwNz9fXHIYxYNuV4uONtGQRIOBBFvcgWdAEg000Wd3Dlxg
      tzlr0CKpNldhf2V88lwDoXRsJ+CmJy98y2nrSOfU8y3uXtREn50JcsWaJxRoKWhOw1YkgzLO
      cZBEkzIxf378pR9+fou7W3dWvGOev12Y4PNo6y/Xgxe+yzK5B5UvmqRvmDY+vnfbOX7eaXv5
      lhHt6e0Wdy9qouPpvFUU9ivikMOqpYAGaJzDjJTm8T4Jt7DjKuUz5XrrVPT5bFpfPR/nGNQk
      Grr4PgFJNOiqfgoSvxrnECpcPJnyhUbcuLqbq5ydGsuz9RKTcFLu+ctX8M5c25Mrd1LqEG2o
      N5CpsL81Oj7BSQafDdmGxtyURa9TDMSDhYOaRD81zuGJRiIIU7P5TFOQ97bW11Pc+Jh7Y2Vp
      aqFTBYQQyuZyolzcq6hDROvxw4cmt583Nma8Ub2OP0APFkISPah63kSfVL8UEDTRfQKSaKDJ
      qzATfXQT/eDeHQtu3dtcWrj29lg4oNfJD5LoevKRhHAV8UzJGPHhwcnhh3cThkZKwn1+NyHy
      NQsdpKyt+Oq67KKX722//c4Vo4Lur+/9849/dJxTdCJqh5noJ47ZRMsi31Qwh52q1HS+621v
      bCi1tFATW1bcYwuICrJiVr6SRo0ibyA4sayW0ykuHQ0YM3vZID3pwG2Pvlw0I2vTSh7zFB2K
      2mEmejBkMtlgULdrXn9qM4mGHhYcgCQadNUR4xyIi+fsQ9T3f/DD+NqXJpurKkpWVeA5MTq3
      EPIc6wVyJ/NsE43h+HzEnZA83z6v08tcjgQPFrZ3wCPGOZq3Prtrdp+Ox3f391MYzooN2eay
      IKawRQ53ooCea6IFvsTydbWLXT48WNjGAeEW9kKv54OFJwUFhBB8h3gKJNFAk0FOonuqO0n0
      QDxYOKhJdM91OokeoAcLIYnuCEiivwmSaPAMSKJBVx2RRFuCpBU3NHCXb3llbX5yxBmaCnjs
      nVtKcuXOB5+uvvHW94OksvFo0RpZoE2iKEj5Uinqs2EWKlOVLs6fttv0mVD+5tm7kEQPxDiH
      bkl0JZbcWbtnCsw6bOrtW59ceXe4owWEEJo8NbqytMxY+SonGVIptpHayzUi4+OFEicL8Zjo
      futqR6rnQKeTaDQ44xyvQhLNZFO1pmEsEurVAiCJPo7+LaBugu8QhyCJBppAEt2m3r5sBZLo
      V0EPX7YCSfQrq8svW+m5Qd2do7egiT4ESTToKuiBnhj0faJ7n0SDgd4nGpJoMJDgCoQQNNFP
      gSQaaAJJdJt6u8VdXzXRkES3qYdb3PVbEw1JNGjToN7CoI3tE5BEg67qlysQQiix/kgmyExB
      dOKSkfBSVqWQZZqYgbY7kMCGZi7QONa5s8NMdHsH7KMCCk/N/tevPpgaH9pimoShiGPi5kZ8
      9PIbJp5Zu/25MTBH+4mOLgBmots4YF/ewuRGIl8Jh4Z6uwqYiT6OviygroMW/hAk0UCTQf0a
      33MwE30Ikug2wUz0IUiidQMz0UeDAkIImuinQBINugp6oCdgJrq9A0IBfQ1mots4INzCgCZw
      BUIImuinQBINNIEkuk0wE30Ikug2wUz0IUiiQZvavIVBFwkOQBINuur5faKvXpgnoyFMqBeq
      MsfERscmWVG9dmn+4/f/0zdztbC/rzTKknMiQklGC1HlZbtNpT2RcNCjw1pU6fqNm4HAkJMw
      1GQcVROMJTrtMxisHptSWc+KlnohX5X9PqsgEcN+qtWUK03s4tlpHU4Nbyxs94DP7xP9YD3l
      44piuRpL16LDuLjSWE5U/ur8RKlpra8tJuPZuQsLTKVSUlB+53a66Y54FFfUoksBHbyxcDdb
      NZVWRMuwVa3wBN7K5sjALKHW+Eojm1snw1eL6ZU6iqQyGz67N1Hi9SogBG8sbOuAcAt7IZiJ
      Pg542Qp4BiTRQBMNSbTS/MXPf/njn/woUyg5aFool0m3Z31jeybq41sE7STkKuOOnA527nUZ
      qnT9xs2ZyUi5wrlcniovWjE2lUGB8JDD2iqWmwRNT41HOnTyLjTR1czW7+5szU5GCRvZYBmZ
      IBqF8vTlq05CU5zbLzPRB030h3+4NzruabCZRw+W7aPzLmvr0z/fsnlHZIvJLubClmDnCuig
      ib6znJiLerYffr7NYTNBaypWK9Y5F8rXJCfucHaugFDnm2ij1TFkUx6u740Hqc0v73vOXnRx
      1VRRcI7QGlcOM9H9qENNdDKZHPnGYfsHvLEQaAJJNOiqFzbRYrWimnGOF4e9ZFM21lWEtwSr
      M9DMbd7bq1w4N2Oo19i6QlIEYbEYTVguw/iDXqOZnBgLt7mWp5po0kZJyIjkcqNmtHkdCsci
      gsRxEmMTtzbS1659y1ArlGUTYVQsJlVWzCaTWq40L185b2z3BzHoSbSOTbSmJPpJE13cf7Ce
      9kbGoj5HLF40q+pivHh5dgxVd704NjU7nYttVMtVrmUSMGLKhSQztby4eObCvKBSbRfQ0030
      47s3JXp0PGiKb1fOuqbvfvYJNfnGlL9uR9jU7FwtFyvn8lXk8HiJzOYD59CYpLbyGXZBQwGh
      AU+i9W2iu5FE86VMFdFB97Fema67aj6JHCO0LhvsvAAk0ccBTTR4BiTRQBOtSfTVC+MJVtzZ
      SZw7f8nazH26zWF89ruXpg2+swunXPdX4j6nRZFb6UIFt5FXryzouemcKl2/cdOmcJ7o9Obm
      amBkvBzbck6fTW5sTYSoyPybrUqaFxulikjbMJ7jRqbO+5267VkGW9wd0pREP1jPNzDD+LBD
      UVVFVU2NPEaHsqWmob76oICqlmE+Fm9W82zDjAjfxStIxybkoIkucK7absyDGzDMgBDGJPa8
      w95Kvbm99KXJjHBVTKTqDr/TbeLTqaLfqWciB1vcHYIkWgevZxMNu3O0A75DHIIkGnQVPBf2
      RG+3uLvz4a/HTo0yoiXoIirFAuUJ5fNJGrdZKFujzgdHpkL+FyaK/TITDXq4xZ3dYa8whV0W
      t4n1eKZmrKluY20/zzQI73TAmk+njiggBDPR/azLW9yprebS0trM2XMWLb+U6SIooMGme/sP
      TfRrp8FXWyar0mxRdh1iVVEUG3y1ZbYqzRZFEflc1usPHBEXd/D1JaA7CrHV248fb2+l9Tpg
      cX/93tLy9es3d7Z3bn70kXTkh6GJHng4SYdtVknW7ZcCFhs9TFjrhUquVB3y+4++xsAtDDwD
      Nph6vejeRMM4x2uHq9VIG86Jqp3U5y72dFeey2Z8gSA00a8yi0H60ye3zbg++/Chr7ry3/72
      4+2t7Y9v/A6a6FechXJHwyGrSes21ocOuvJ6ns0UWX8gePRx4RYGNIErEEIwzvEUSKLb1OCr
      CKfx5/6HkhvVBqJJHCHU4DkDQVk0NI0Nvopwm1SXKDtRKuTsHr8Ze3JYkasqzbrZ7iG/WgHH
      1SjqWNsQnKjnfamTJtFwBXqiEFtF4auV7Vu7mdbE1HB+b1khQiFKvr2aHYsMiQLXqApv/N1P
      tbxspRBbReG5Tz/4aHRmPL++aAyOm1rNg8PefP9X81e+tfnlesBuYNmq1T2sCAW1hbXMVjMS
      gyOzU6deOERbiK1uCKbcZubKldkvPvuL9nGO4v76lmDK7WQvLkwv3vn86Jlo+Bb2BE7Sie0N
      piYQRjlTYH1+v9KUVKNlaiyI4XR02I+TdrO2PtUTiiTW1pzDIY/T7vb7KcpxeNgzF99olPMm
      nKRJi8hVm4qBouxIVS02ejgUwpSjvgnhJB32umkncZye9zgsNnrY46ZpApLowaO2mtt7qYmJ
      Md2+U50QzES/XiCJBlpBEg00gSQaaAJJNBhgcAXqkkEJuyGJ7l9HJNFsNmEk7FYrQRI4z/Mk
      eYJdlyCJfl0ckUTH4zGDJDCqSxFZmStWBEMw5J4+cznsdx3nsD1MoqGAuscTijz8KomW/f4W
      5fBTWLzFmA2IsttlyaykWYyk/ITqMg95KKVaq6FjFNCJet7jgJlo0D6YiX69QBINtNL3wUIE
      SfTrRvcHCyGJfr3o/mAhJNGge/rlCjQoQe0rb7CTaJZlZUlyu+wlTuKKWbfXh8xEU6iZTSba
      6fzmtbRarWKYQVFUVVUdDoeWUzf46nY8PTUzbcb+n2s2z/OKqtopSuMpdIyMO3TYAU6iVYn7
      /PP7dovQwgNMYvnSOz/94/u/cc/OpRLM6RHSEb0glROy1EgVRMKmynx1ZPZaIbFutVpSm8vR
      i29rLKBCbDVbaDxa35uK+mSeLSl2B1aTmkqxgUZoc7JU95MKa/QO2w1Gm3N+rp1XReseGXfo
      sCdKov8Pibunj7jakLQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pub Pipeline Overview' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pub Pipeline Detail by Deal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2d2Zcc133fb+17Ve979+zYARLgLlOxZTKWJUey
      TS3RQxTnb8ifkZOHnLzl5JycWHZOTnKsxJFDS5YsS6IokiAJAoMBZgaYvafX6q7q2vclD0PC
      I4qhgJnumUG7Pk/ADKqnbuE3v/vp29+6BcVxDBISjgp82ieQ8HSTFFDCsUgKKOFYJAWUcCyS
      Ako4FkkBJRyLpIASjkVSQAnHIimghGORFFDCsUgKKOFYoACAOI4tyzrtM0l4KoEefZgax/Gd
      O3euX7/+6Hum3LXQTJ4nAke/e2+9unCpmGY+57Wkzs6D5rBYqS40Kgdf2d3dbVQKA90H1ogr
      z9Lobz+hUa+53ZEXL1wWaOw3v9vrdhhO4NjPPo04Drd3mgvzc4++0Ov1S6XSwV9UsbWxP8Bw
      LI7iuWrRRqhSmvvtJ3T2GHb3JTvOsISiGnDk0EJeGvQwknZMfXa2oVox5KrFmQX8SLNL4Jp7
      rZ6hqcVKXey1CZJyQzjP4z1xJKQ5BGdcU1+Yrez39dl6CRx0oANcpfU3f/1/O6IkKWpZIExl
      aAdITKUxFLtWJUsXvjhcf+9XraEfer7aH2lxplJjSU/uShGRKdRyKZIpUo6sxeubv7gZ2eeu
      f/H5q0t7e3tZzPn+37zNs+xXvvVYBaSILd1G//bNN8t5ztVV0YazNFBVnRCyPIbothsaA19o
      lMiQytVevn7l8LGm1H7n3Vt7zZ3Q1k0XxDgpENAPf/DmG3/2XbU/BGZHs0JprzlTKSyvjQBK
      l155/ijX+LQxDGNza3e2MS8PJYFD19bWr734qrj3wHaifUpSJOnhyv0//m4j+1m/gb+VMPZF
      Uavmqf391myjpDuxtLcF4hxHoa3ekIQHludrwz3J5g4K6B87UG9vi8nl3vq7v38gWV979VmA
      YENxAJEcRZGXF6p3761zQkrWnHyGizxt5cPl1NIzWcJzbZ/PFNo792ev/74QDPHsrLi3Zjou
      HIPa0pXO1grFsLKs2o5/4+VXHquA+i00XVPEVuRZlhM6Ydja3Tx37pIHYGApgOCgwCRSpb2V
      97j61RevLR0+dtDv8wL9s7//GcykchzDClzoe7puXbnxAo1B6rADsUVt2K1Vq31xEIOoWCxB
      R7jGp43U7/RltVqb1VUpcAw7xHDYhzBaV+Tz589JmkWCgMuXjtaBAAia283haJQplK1Rn2Q4
      w3KzAtsbqtkMA2EsEvu1WqnXHZXKeXC4gBISjkAi0QnH4tMSvTg3R6VSzYdrIcoszTcAAHEc
      7m3vtHv92szCTK0k7m+RhQWeAJY68LG08DjT0pNwfIkuFPI0AW5/9GDh4sU0TwMAOu1mt9Xl
      86X5+Zlhq5Wp1TAAet1uqVw+ODD07Xsrq7lieTgczMwtyLI8P9sAAOhS52FL5lmqWm1gkC2p
      cRxZ5VIZAKAb2t7mJpfN6yO5UJsrZPjxXofPIfCsZkeCAztTLI6GUgyjimoUsmy/LwlpHsZo
      zzIW5qr7XWX2k3czT/DihyTatTQYJ4eSVsrQjyvRz7/wiuKPWJi4ev3qf/mP/56uLsRxTJFC
      mkN3N9cfrLwfWvqufU/w2zjOBgTnAeJff/OrY7w6x5foxmzOVJUw5Gh6/ccPdxxVF0rVhUre
      VaSf/nwrVnV85+HWRlsQOOCqv/OH3/R0qV7ORVG0dvfei6///uDhnfcfDOv1crctoq6oO6gu
      rn7w4T2e8TTJjxnuja/+nqy7/e7eoN1pgICpXCTH/Ev0Wwgjv9ftY4GleyGHBg5eQGJVUk2B
      xpvdAY1CluMZ8n7foI5QQIclOkuDvbao6BaCVB5XolduP0yVMzSCzNSK775zk+CzDEPHYUiR
      OADAszTNMHG+CLtDghQUw6YY9sqFxTFeneNL9PpmMyMwKCbEviKpZuD5tJBOMSQUx7Imuw5I
      ZWhJHDEs53tGbf5yisF9R7+3tlUsFgaDAc2na1nGQ3mBxnS5F5JZrbe9u7s/tJxnL1y0/ej8
      +SUUBt1eJwzicim7ev9BsX6iHQiAsNUScSgMMDJDQq2+bHlBhmf6opzN8gClURAc9twn5JFE
      VwocNtSd0WiUTfH9RKITJsHJNt+JkbwPOC2mqgOdpEQ7hrK2scOzjGLY5y5e5kjU0YbLD5vz
      C0v5NNPrDkrloiL1fYjKZ3i519zpyEsXL/EUfvxhyoPuXm+U43BJ8yt5rt0TBSEVo0TsWLPz
      jf32YG6mduQXP7pETwEnKdFqa3fx8oU3/+f/KC9ctWxHFkcp2OEK5V/8zfd9Ji1Q6OhHXb5c
      CUybLTQWUpFmRrfe/aXY76E46frB3Pmrr1y/dLRh8hxLybrhQb4+aEFxlqU2Wz2BRGzH09Re
      Ww6PU0BHl+gp4CQl2jXVtYc7vMCV6gsHCw4HHaiQEVTbZ9BIVU1G4OMgwBk+SyO4UBy2t3Td
      +ODWnesvvpzJ5BqVwtGGaeuK5ceBZ3dFqZBJdfvDXDYVwAQJR+VaReyJjz7+OxKJRCecIFMy
      hSUSfVpMVQcav0TLvQDlPM8pZoTuYFQu5ru9XrlUAgDs72wabmibenVmsZhLneQwz+hK9BQw
      CYlebW/JYocRGHMwsAC1dH6RQGKETsdxZJt6q9OfP3f5hId5Rleip4BJSHSAcsPurh2iJBTo
      TpAvFhuVEgBgZ2PdAwjDcLXKcYz1aCQr0QnTwpRMYYlEnxZT1YGOJtGtVgtFId+LIASpVSsA
      gP2dTd2HKNiPUJYEXrY+RyIQAOHdj+6gBJGrzBbSbKvVKmZ51YFzaRbE0eaDNYhgdXnA5UoL
      MzUAwP27HyFU+sLSnNzvMrky5FvdgTJTr4AouHP7DpcrL8xUjzbMZCV6UhxFor/yrXanjWPQ
      9r37z/z+1xWpH+NcHEe2oVsQcW6eufn2B0UPLbIwl821251SQfjVW9tR4PoQxcZK8cI/c/Vh
      NpfVAiTWWr3+qEayw36H5HO67eF25y//4uc4xhar+f3dJp+r/PIffvL1b36z1e6X4uh7P/1R
      rj7jyl0tpL/9rTco7HHjtclK9KQ4mkTrYtMIAEdRAMS1Wg0AsLO57gECi90AQjOZfOA7pWIR
      gLDV6nMk1B3I777z7vNf/OcpzIHIXK2cBXG89XAN4AyB47Xqx0sD9+9+hFJCYGsYTnthGPou
      QfOepS9dvCQN5UKaXr7/QFeGPkTlc9lr166ijx1hTlaiE6aHKZnC/olI9ESHCcMwRVFPetSU
      FBAEQQzDnCmJbrVa2VQKo1lt0GWy+bXlY4nzAVEUhWEYenarP4IDO53PK/IohhFVs3JpZjCQ
      eYGDMcpzzNl6uSOq9eoTzGUwDDMMk0j0WZHoVrvljgbLG5u2Ffzhn3z9E3H+Ya4+68pdLaS+
      /a1vPL44HyaMg0F/gAaW4UcsGjhYDon1kW5yNNYWJQqBbM8z5fbAop6ogD558USiz4xEQzAB
      wSCKwMzigiIphQy9vPJAV4c+ROZzuScS5wOiKNJ1HYCw2xmicBgiRIqCuwPFdv00T4tDNZNm
      AUIhUFApF8W+UihmH//FYRjmOC6R6GnmkwKaCJ8U0JMxJQX0T0SizyBTUkAHnJZEx1HQ6XRD
      16UyhcD3yoXcRIeZxDkmxWlJdKE6s/vwXrHcMBXNNs1JF1AS55gUpyXRoW+Lku67liLL5dml
      /MS3HUriHAnTwhmawhIRfho5cx3o4N549tfvvwvM0cDFyhkWAKCIPSJbopDPOPa0byyU9Jii
      kIhl6V53QMDedltavHBJoMdwM+FhkjjH56GILZKp3PzJXzUl7OKFSm9n1SfKFyrUB+utlMCh
      see5yGt/+qefWUCnfmPhIE4N19/dHrjVQmGhRGpm9NF7b4v9LooTrh/Onbv6yo0j3kx4mCTO
      8XmMes29gQ3HJgwwF8B5DjfsEEQuRtBBDFAoGknq1Rde/MwCOvUbC1e2OjyJ2AEssHSKxTC+
      KB3cTPjhnesvvZLJZBqV4vEvURLnSJgeztwUdjQSAT8tpqoDnaREK8O+7oZBEHI4JpRLGABS
      r0VlyqHvsiTWl1TfGEm6c+nKFRwZ81awiURPipOU6AJH/OrW7XyKcTGMzAq9geYMWxk6897P
      fqR7UaEyy0R6hFPv/uLHe02RzuQgW166/sVr5xrHH2Yi0ZPiJCVa7LYhGFYNy3bDK5fOQQAM
      O7td2UHgMIZRhmZxOC7WajsP7iuydHdL/J3nzvP5enkcN0EnEp0wPST7RCcci8/cJ1robq72
      LHipUU0J3Nb29sLCwqceXDI54jja3tk79MCUT9Pr9orF3HCk2ZpkeGCmVmMY6pNjP5ZoAo5v
      r6yWqjMztVKr1Tr4iLTb6x7476fwbVU2Y1PqoIzACpkMR0WBe2/lfqZQlIbDxtzCSJLm52YA
      ANqws9mWOZaqVhs47A0UF0Tu4YXpdIqTRsbB6rNrju6ubjfmF4tZvtvrl0slVR66MVLIpo+5
      413gWbv7XVtX85WaaxoYSYvDUTHD9CYQ58AodjAc5VNU/4n2iX79+uUQwX/w379Xvf7Ptt/7
      wfuFCy6Bs5E72Hvw1X/zb2dy9BGG/ZjYo87bv/pga3cbdZShg/oArgikPlLpUrm/scbkazRF
      fwHznDgTx5GhyTt78JVLCwfHPpJo3yNyAiV1d7bWlhVV2UplmkOTo0N1aLzxnW/c/NV7KIH7
      ar+jBlyu/JWXFsRhKD6433TI737rj/Z2m9VaIYqijfsrz7z6utq8997dVrVW6fdExBZ1F9X6
      qx/dXmWJwFRNE2O+87U/GKqm3mkuXrrw4//zvzLVJcuylWE/QwZ0pvTe3/1vA00JLGYM+0y2
      Grkanq6dy0G6FS9/8O7e3h7FMGEEKrPnXn3+6mNeojDyRVFpFNnmXqsgYPc2tmGChWAwiTjH
      g609lGAgKH6yfaLPldI9E+i9PcVFcgJqaoaPcywWOZrauHQjy5FPelqPz6DfF9LMD37w48tz
      xTXRv3pxAQtMmOJDzzfVIUbzbhDXChkhl93bWPcimCKZbC7NMgw4JNH5XAGOwzgO5UEvJgQW
      DWQj4mhgGO7MwkJ7+yFGc3AUQjgB4/RcJbe6co/hOIoTAIyXckLgmvdWNwrFwmAwoNhUo8jb
      gE6zhCb3YjKrdLdb7W53ZDx/5aLm+hfPn8cQyDGV9Ye76bSQLTdYAgEAHHSgXDalGB5LAV3R
      SS4FIg8l+TyL4kJR7u6MRsqHt+++8PIXOD41W3v87h42d/aG8iidL5dThGT4otgvZNO9CcQ5
      FDsQRTGXFhKJTpgIZ2gdKHH5p5Ez14HGEuc4IxKtuhiNxyzLdnt9Anjj2ir6cCZ6d3snlSu5
      lsXTaOd0JfqMMJY4xxmR6IFOK80PN1p6qVw8V6Q0M17+4N12p41hhOMFM4sXX33h2hEu0eFM
      dLlSHqlWv98PsqlTlugzwljiHGdEolfWmxyD2i7gBCZD4wfirOj6Rx/cvvr8y5lM5knE+TCP
      MtGE2m+nyzOBrSEQ1OknEp3wtHHmprCjkQj4aTFVHegUJfpRukMgMSZXIj5rhh0Xn5LodKHq
      WRpLYolEH5dTlOiScJDuoEMKRzOTLaBPSfTu5vqdjdZLN55JJPq4nKJEi902BMG67Rime+XK
      hSM+cftx+bREA9+IwziR6ISnjzM0hSUi/DRy5jrQ4ZXoKLQHkkPCAZXJ448xK0xcouVeiLK+
      5xWyQq8vlUqFR89e6bf3+iOLRCMnQA6msP3tDclwL126BIfmyAT5FN3c3SvOzBMI2Fy/b4XI
      lctHnOlGYqerOAIR92SrVkx3+mPORDe7Q0ORq41Ge38/ncsrkkRQtGUY87NV1UVia1SeXcA+
      OfUz1IEOUMQWSZU+eOvHuu4EUJgvXsql4Iu5x5rLT0Ci1zqmLHaZNO8ORcVHF8+fo1AIEHyz
      O6imibfu7M5Wy7apalbYH8iz9fz3/uIvy3kWgvjBqE8jGHHvzvzll6RWi2AzP33zrzpqnE8z
      yrD/8mtfn6887m5i/V63NdRGUCDqAYQiY89Ed7Y2QwzufmTfuDa3u71bnl3obt23XKTNUsPB
      6OG9+298dyZNfVw5Z64DHaxEY5CNYkwMRxTBMzSWyz3WhiknINEhyg67TSdCSSjQLC9XLM5U
      ywAAsdPsjawUzzbqH//n7W9vyKbLUkQMAVu3XABRCIJiEJ+rhI5Rq1XW7i7Lo1FrZF+er1Rm
      z2f4x01ZSf12S5RL+VynPyhk071xZ6Jb+72RNEwVSvqwC5M8CjyEYNSRfOH8kqS7ROQJhdKj
      DnTmCkjpt2A+4+h+oSAc/nq30wG+ZSD8Uq0AAHg0dyScLmduClMHbQQlf/TXP5yZL0Sm3jKx
      6xdqnY27OlGFR7tkpfH2j7r5Wp2i6cMFlAj4aXHmOpBnqffWtwg2lWEJsflAdJhSMRXbCsDT
      BHBRXtAHIs0LQYxcOjf/qWPPlER3Wq1CqeD6MQF7IxOoYvM44nyYE5PoTms/V6wM+72nSaJx
      Wrhx48bBn8uVz9qWu/H/vTfvTEl0p93mBfwnP/5lCLz6wkuO1CKYzE/f/H5HjY4gzoc5MYl+
      8frc+x/cvvzs9adJoo/DWZNo3QtAGMEozHI5ELmPxHl/ZF+dr5SfRJwPc1ISXQ5MyfQxEg2e
      JolOeLo4c1PY0Ugk+rSYqg50ihLd6XRgKAoiBIWhUnmy6wsTlWip1xKNgEN8UfMqOb7bH6bS
      QoySoW3OzdX3u9Jc49fEdEo60AGnKNGRLnY8MnIcDIknXUATleh+v9eRdTzyR3YMIfUUQ+y2
      RQ6DLNfTRp2eBn2qgKaqA52aRMdxu9OJ49gxNYgUjvlMp9/KRCV62Gu1xVGpkOuIw0Ka74mj
      XFYIEZKAwnKtIvYGpdKv7dI3VQWUcPIku3MkHIvP2Z0jzDAZmkFP+COnUa+53ZEXL1wWDvY+
      /XV63Q7DCRzLfOaxn5Jokk1dmisrHpJPfca/9yz13tpWsVwaDqWFhVlJNmfqJQBAZ29LtjwK
      Jxqz874+sBHOM5RyuQQAUAbdnc6QownDci5duYoj0LCz2+xrSxcvshjoS2qpkO2396h0laex
      /e2Np3GLuwOJzvGkoppwZONs+nHjHL+xOwf65//pP1944erX/uirb/3dD1GatS0/AJo9UM69
      +vWXLh39FD8fRWzpNvq3b75ZznOuroo2nKWBquqEkOUxRLfd0Bj4QqNEhlSu9vL1K4eP/ZRE
      q73Nm91tvHZl8+7NMII1PwgMybaC3/0Xb7iqVMwwURSurG68/rsv3bt1a98IK3lWVGyx1UaL
      5dVb79zf3I3kpg4EVmD/gMFNH2nutS7OFv/qh++dO1e3bbuv6s6wV64vff+//Xm2VEYgqNcZ
      5AukF+D1paux0noat7g7kOiwWBlJ0rVLcw83HjvO8Ru7c4SjZtNBMIqiIFuGCcHwwlyKCC0b
      y9RmSunjX4jP5CBQpoityLMsJ3TCsLW7ee7cJQ/AwFIAwUGBSaRKeyvvcfWrL15bOnzspyQ6
      CD3gO1ZMo6Huh8ANIYElIs/L1hd5ErHU4cPdTiGXGUiKkMmmCIjMFEkE6rVa2Wp5e/V+t983
      nPDC+QsBAOcXZiEA1GFvpz0QUqnGTP0gNX/QgQSeCSIQe6ZmBhyHRwDhUzkkdJ/GLe4OJHpu
      YUkbDTR5+PTFORKeLs7QOlDi8k8jZ64DjTETfVii4yi4v3I3lSvKw2F1Zk6R5YX5WQCAp0t3
      Hu4LPFerVmkCaYsyDuJsuYQA4Nn66vpmOiUMZGXh3KU0R/quJqkxQyMcy3Z7XZ6A72+3FxYv
      ZIUJbtn2m5zASvRRJPqMMMZM9COJdpRhuV6Oomhn7e7ii687w4fvvLdertcG3U4W80TN8Yzh
      rQ8+TKd525BkDf7Ov3pDFmVP7sycv/z2m98nC3OmZWuSmM8g/UFoyQ8ebA1ylcJLSyVJM+2P
      3uuIIotisuM35s596Qs3Jn2JTmAl+igSfUYYYyb6QKJjKlcvZaLAWVlZyxWLw8GApLjZRs5w
      0GyK9nR5FBKBJu7v7uxJ9ss3LmiKvXT5EonCvq2vPthMpdOpfPVgTcF3teXlLVYgbStgU2wl
      zboob8ttWTNWPvhg8fpLuUx6vjHZZWhwIivRT7FEJ5nop4szN4UlmeinizPXgcaYiT6mROuy
      ODJ9LwzzLIYJ5c9aGD8dEon+PMaYiT6mRFcL/M/fe6eYE3AHo+kzVECJRE+K8Ur0sN+JIVg3
      bM20rl65PO5PtI5OItEJ00MS50g4Fp8T50BfuHb+4Fu7u7uzs7Mnc0LHiXPI3b3t7ujSlWs0
      DmtSF+HKDA4AAN1uDwpsKpXHCYrCEQCAKrY29gcYjsVRXC/nY5LL8QwAoNVqMRhK5UrAGtkQ
      xeORrHv5bArE0cP1VZTiFamfzlfnGhUAont3bmNc7vzCzLDbE8qlyDZ6kj5TK4PQ/+jOcrpQ
      nat/RgR7DJdI7HQVh0V9Sfd5GqX5rCR2MZJ2TH12tqFaMeSqxZmFx1m7/02e9ImF/1hAzmj/
      3/2H//oozrFtgq3bq668i1Uu4JDnye3nXvvWpfmJL73s3H1nT0e7nc4R4hxby+9sio4Zwjlo
      NNB8lM/DemdgI+l0Oo17YYy0lOAbX3tNHqrAaG1KoTQQZyoFy3UwUnjm/Iwd42u33w2cIKBI
      u98eekipkJqbv8wTcTaferAjhrrYHiizC+fKaYZO5+4tL8Ox+/DhQwRLFctsvyPRmdyoJ377
      O2/85Cc/q5SyK8urpXrZURQjpr79rT8Z175363dvNYdavVqPXFP3HaM7OHfjBXHvge1E6UpF
      kaSHK/f/+Lt/lj2S9ruO8tHtnWqe7CtOlgYt2VF0a7ZRoeGwo5gkHFuezyKuZHNffu0l8Plx
      DkdRxV6LEvJe4NOQU5i7Wkx/9q/+GDlOnEPu7m13FZrCIRAbmmZZhh3AuUyG4+h0JmeNukZE
      Xzk/BwBQhx2YLarDbq1a6YtDEEfFUgl80oFEVUEApNkeTeHZbPGgA208WENJDsPxWuXgtyi6
      d+cOzqY8U8EI1gtdEIQYxTimdenKJXEg5wVieXVzJLYwtpBKCc9cG5uGH0h0lmeHmsOTsBuh
      OOxDGK0r8vnz5yTNIkHA5UtH60DJEwsTTpQztw50NJL3AafFVHWgE5boVqubSgk0y8rdnlDI
      rtxZThcqc/Un3ln3STlTEj0lHeiAkdiWJOdH//CLbDxqSSaTrUBGD+FKQegLeBSG99pq/LFE
      W/1cZebunTuv3riwvLqKkalnL8zYMb79cDVwAhfHnGHXQFJL9QyfqbuGki/mNBeE8k5MCBgS
      D7ptOp1rt9sjsdvtNds99xvf+ZoXY4Ha+d7Pfp7N865uMNnGl770haOKyOfR73Wb/VG9WmVI
      XBwN9fWtuavXQmMgDSSC5WV5tHv/3pf/ZeNoEh3GvtgfVUpCq9XKUmCv3Vc0EwYlnqPbvQGJ
      SKbrBtZgX0KmcJ9oSx81O1I+w4UQauuqocoWRBdSHEMTFMN5tu7HWCGXBgA4lg7hjGsZPMca
      pg1AxLIcAEDTNAyGDctAMcK2bRjFOJZjaBIAMOi1EEpAYYjnWAAAAHFze9NHKBIJSYplON5z
      XYbC9lvdYbdJZmo8TdTr1UksX7uWLo50jsS7AzmXEQBKRo5mhwgGRaVy0bR9FEQEwx7V2aOR
      NOr3e5lSLU1jbhCNFIVnmXa7VyzlIIxGQcjzrKHbLMeAqSmgOI5t2z7ts/inyJQUUMJpMVUO
      1NlcedjR5s9fSlPw3sN7bHmJIhDHMsW+mGZQUii4flgul2gCU8Xm6s4gk2Js261Vct1RePV8
      AwDQbW71ZaNQLAAAAQiplPIAxGsry7oTh76BENyLzz0LALj9wXt+jDRm6oY88DCOwUGvK5XK
      uXK1fvvm2xDBFzM8y3FuCIWuVanVEXicU1l7+8Gu7GTJaKQ5OIGwbFrXtTgOLcOcnZ/RPdSX
      2xeff4U80rqlqQ7WtzpwaNFC3tFHCMX2BupsWZCHCkTiJMmoqnrj8txGU3/mygKYsgKyTd31
      3JsffpQO+i6WCtUNVHqowdlUNmNplruzM/S579QLzWYnw5HANx9sq7/3yjPLd9ecCCzVU7Lh
      9wfSwuLS+vpGr7XRuPy7WNym01nN8mgE7Cja4kLFUCQH4F4I8hz881+9K0ABmm+Y4p7noyOp
      HWGCpumVRm5rdbll4zUhkCXvxdfSjTw3xmGquq6PpFR1NpVmDXOwtXr//I3nfWNoKFoE48pg
      v7W107j6PHkkiWYEznf9TCpl2XYlx602JceydJvh0inNMGzTQOF4c3NjoKIALIApm8IeX6JD
      39nabc82KvudQSGfQQHAaBaFQei7u/vdNE+5QczxaZYmAACGIqku4CiM5/mDHzTotswQEQgo
      QnDHsiIYJlDcc8x8pe5aBsexrf19U5GGLjJTSFXqjfF2oESix08i0afFlBRQwmkxVQ50YhK9
      urq6UC+3JD2yFCzT6G+vQARXyvCcwJtuFPt2pTbmaeswiURPihOTaF3TXIO8u7qBO9r5L8xq
      mlZpZDdXl1s2XucDSfJefD0zXnE+TCLRk+IkJVq1PIYmURTHSAaO/QNxdg21pfoLlVy53kAn
      1oESiR4/iUSfFlNSQAmnxVQ50IlJ9Htv/bxaKw9dOM+SrW6vVCq4lkuzXCFFNDuiangEDqdT
      bLdn3Lhxeew2nUj0pDgxiYag8NbKQ9cy5XIhcO2HW9tMYMHpma9+5YtbGzcFAd/c1HNpyLfx
      vWp9viz89lN/EhKJnhQnJtGGrvl+AEGxYfuBa3GpDApFquE0ahVVVREIiiLf9mNTN2ZmZ8be
      gRKJHj+JRJ8WU1JACafFVDnQRCQ6jh8+WINgJIJxBASLi0u/9TQmTSLRk2IyEl3wbS3CBcfT
      ocg/7SECkEj05JiERMdxqOs2AKGhjphMSWDI0x5lItETIJHo02JKCijhtJgqBzq+RK8tfxSh
      pGnpleqMKcAXhcIAAAl8SURBVHdsJOWboxeefw4AsLe5LsqaF4YYBF19/mUKBevLH1DZ0v5+
      r1GrSP39fLE8UO0sT1er5Z3tXVFWcgJDsVy31b1y/QZNjO1SJxI9KY4v0bqu8SWut74laq7f
      28LTC1SWMBTJifGBpNYK/E8/fHD1/CLkm/sD0w/B1vJHkedahqo6fntn08WYDSd69ctfkXu7
      IWBX79+D6RQBR+sb2zeunBvXMBOJnhTHl2hd0xiOlYeD1t62B7OLs40wDvLZLADAd639npxN
      88Kj9WjD8AMfhaGRYmBwiJIMjGCmplYbdUvTcAL1w3ik6LHn5Cr1MXagRKLHTyLRp8WUFFDC
      aTFVDjRRiW5ubxgBAEGA4+jBevTq6moxReoRzZCYYZgEScS+m6/Ult9/J8SYai5Fs6zjx7Hv
      lGr1MQYULW24vtOPTbW+ON9ttXA2PZKkXJZXpVGM4xTJqJry3JXF9d3R9atPvG6eSPSkJBqF
      wpHqopGDILCtK5oL5EFX6roK4EmtaeEpDCcdtX/1xdc1TSvWM9sPV7aG8UIBG8r6jS9yc+Wx
      PaKP5nnfbjIY0u6P6kWha6LpTMb3bC6VUgzDtgwUBlubG8MRBMATF1Ai0ROS6FjTdBgA17UC
      iCjm0gAATdMIDNYNKwYwgiIQjFqanC/XHcvgOba1v2/ro44WLVSzxVoDG2eoI9I0EwFxhKAU
      CkaKLo3UYinfbfeKpRxAKQyKDnvuk754ItEJJ8eUFFDCaTFVDnR8iX6wuprPcyMbwWNzpMcZ
      gbb9aGm+AeJoZfm2G6OeMSK43HPPXgEA3Lr5Tgjh9XpZGfYxroCDoCuplZxQrtfff/uXBJ/N
      8DTHcSGEuJZVq9fHNYklK9GT4vgSrcqiOGiJJpEjlf1dQ6gWKpV6t91MZwuWByHAVjR9oTKn
      DPuA4IMYSZHBW2/fxIGXbwBxdy0gUkpnBzBpTdcaufz95VsOkeV9Ufao19KFPEeMZZjJSvSk
      GItEEwSq6WYMo8B33SAWBIFjaQCAIvVdQFAY/CgZ3W83XYig4ADBKcuyYBhBccIztWKtYZsG
      x9L7+y1FEl2ELaTYeqMxrg6UrESPn0SiT4spKaCE02KqHOiEJXp1dbVeykqGZylipnFxe+V9
      gstmeFrgeTeCfNuuNcYmzodJJHpSnLBE65puEOHqZt/Rhl+YvaJpeiObX12+ZeM5LuiNPOq1
      zNjE+TCJRE+Kk5do3fYZmkRxgmS42Hc5ltnf3zdUSfXxSk4YozgfJpHo8ZNI9GkxJQWUcFpM
      lQOdsES//Yuf1St5NSTTDNLtqaU8b3khywkpIuyIsuFBOAxSLNY3oOuXF8c4lyUSPSlOWKIh
      4N1e2zTNqFokXDve2vEDS8k0Fv/wi89t3Lwv4MGW7gqQ6+BCtd4oCfi4hplI9KQ4YYnWdc33
      fRBFThC5lpnKZEAUmG5UK+dVVYMgKPJtP0Z0w56dGef7+USix08i0afFlBRQwmkxVQ40OYmO
      4+jB2iqMRAiRi313cWkOgGh19QGOIwxJYTRt6zrJ8rZl14qZt965mc0XaIrhKAQhGMty6rVx
      Pv87yURPiglKdKFiaxIuZE1Ni3zv4ImF+zubEQyxDLWx1V+6MDva+anP1DKv/45mmPmMe+vm
      /Ww5J+7tkLnZQrVMjM+Bkkz0pJicRMdhoNsuCAN1JGVKdYbEPk5Jw5CuKDjNYRgCQl/R7Xq1
      pJsOQ8D7HVFsbbOlOZYkGmPtQEkmevwkEn1aTEkBJZwWU+VATyrRLI2FMaqNxEKlemFpCSSZ
      6ESin0ii3SBjjgY+FNy7vz5XLUpJJjqR6CeS6EoxKypmLsVFUZRKpQBIMtEgkeiEE2VKCijh
      tJgqBzphiU4y0WDKCuiEJTrJRIMpm8JOXqKTTPSUFFAi0afFlBRQwmkxVQ50whKdZKLBlBXQ
      CUt0kokGUzaFnbBEJ5loMDUFlEj0aTElBZRwWkyVAzU3H7AZod3V0imWZTjbUgBEBKGD44yl
      K/W5eRSG9P7uhxvd0DSZNFvO5VyEOz9TBACsrq6W0qQa0oivKRaUTdG2Hy3O1kEcLt++HUCo
      pSpcrvTslQsAgJvv/BLCuXo5O+z3uUIZjYLOUCtm+PpM9Z1fvE2nsimO4XkmgjHHNOuN+ngX
      gyYq0fub6y3VS+GBYng4BnFcRjV0EPqm6czPVfWQcofNy8+/Qnzy4lNVQMVi5gc/vnlhqXZ/
      ZdOHqGoK+ejOevXC1RThDfc7WLoaGiIHLNuP8SCACarV6QZgMJMlFDseDXtyz5EiXgj6mx13
      ZqaYL9fazd18seREKAgMTTcqs6w86CJ0OkZwMjDfvrkJvKgBoO7muoun+k2HyeV1TU9lU8u3
      3sdzVUje1SGBy5XT9Div80QlWtN1XZa46nwqDRtG/8G91SsvPOeqfVUNAEbInf3W9u7ctRcI
      6uMRTdcUFseSPIIizwsj1fAEGo0BSrEMDCJFlvOVBoUjvmP5EB65FsVztmFCAFAsCwOgaRqJ
      wZphARQLbTuEUZ5jWYYGAIwGvQAhCRThee7g57Sb2xAhwIGFU4xlWSiGIihu6Xptpm7qJssQ
      +/sdReqFRDrL0416HRprC5qoRDumNlBMjkS7QyWX4iCcCizVjVEURKVS0XQDNA4Pv/iUFFAi
      0afFlBRQwmkxVQ50YhK9urpazmZ0z1fEXuPStXs33/1HcYYwxxq/OB8mkehJcWISrek6GTob
      /aE2VGevPatrejqbWr51E8/VIHlPg7gvj1ucD5NI9MQ4QYm2ffjjHAcv+I5zIM6q1AvwdFYY
      vzgfJpHo8ZNI9GkxJQWUcFpMlQM9jkQ7qnhrdSeXSVm2Xa9Vmt3RjavnAQBSt7nXl4uFYgwA
      BKBqpQQA2FhbGelOGPoAIV568TkYgLu3P/D8uFSrR46mOAjP4IN2N98olwrV+7dv+hBRLWVo
      hrPcEA7dQqWGIfDYh5lI9KR4HIkuZjgM+GsPtr/0e19YW14eOZF7rt6XDLM/mFlY3F5f7/Za
      lcZlGothOi1rVpZGlneUpcUF11BUJ7a8cDbP/fAXb89kiABOb5iDwPQVW3Z8TNO0XKXR3Fxd
      bVnna6mhLF178bXFRn7sw0wkemI8hkRHob+1tduYbbT2O/lCnkShGKMIFI5Cf2d3P5vmTTfg
      Of4gwmEb6kB1Uhz1KMIhD7ojM8xyeAjjnmV4EUzhqB84mVzFdy2e49qtfcdUd4fOhZlCvlLH
      J9CBEokeP4lEnxb/D9pwhYzWGptiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Launch Backlog Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1' width='192'>
      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
      X/iMBTAnn3ikAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='191'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
