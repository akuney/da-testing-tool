<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location id='SystemMonitoringDashboard' path='/t/PreQA/workbooks' revision='4.7' site='PreQA' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Min Average Ad Calls per Day' datatype='integer' name='[Average Pages per Day]' param-domain-type='any' role='measure' type='quantitative' value='1000'>
        <calculation class='tableau' formula='1000' />
      </column>
      <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
        <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Site&quot;' />
          <member value='&quot;Ad Unit&quot;' />
          <member value='&quot;Browser&quot;' />
          <member value='&quot;Site and Browser&quot;' />
          <member value='&quot;Ad Unit and Browser&quot;' />
        </members>
      </column>
      <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
        <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
        <members>
          <member value='&quot;Blacklisted Ad Calls&quot;' />
          <member value='&quot;Fraudulent Clicks&quot;' />
          <member value='&quot;Fill Rate&quot;' />
          <member value='&quot;Interaction Rate&quot;' />
          <member value='&quot;CPI&quot;' />
          <member value='&quot;CTR&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;Gross Media Revenue&quot;' />
          <member value='&quot;Ad Calls&quot;' />
        </members>
      </column>
      <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Only Show One Day of Week' datatype='boolean' name='[Only Show One Day of Week]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Browser or Browser Family' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Browser&quot;'>
        <calculation class='tableau' formula='&quot;Browser&quot;' />
        <members>
          <member value='&quot;Browser&quot;' />
          <member value='&quot;Browser Family&quot;' />
        </members>
      </column>
      <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
      </column>
    </datasource>
    <datasource caption='request_errors' inline='true' name='request_errors (copy)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;requested_at_date_in_et as &quot;Date&quot;,&#13;&#10;&#9;ad_unit_id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;browser_family as &quot;Browser Family&quot;,&#13;&#10;&#9;browser as &quot;Browser&quot;,&#13;&#10;&#9;os_family as &quot;OS Family&quot;,&#13;&#10;&#9;os as &quot;OS&quot;,&#13;&#10;&#9;sum(case when uncaught_exception then 1 else 0 end) as &quot;Uncaught Exception&quot;,&#13;&#10;&#9;sum(case when parsing_error then 1 else 0 end) as &quot;Parsing Error&quot;,&#13;&#10;&#9;sum(case when inactive_entity then 1 else 0 end) as &quot;Inactive Entity&quot;,&#13;&#10;&#9;sum(case when derived_intent_mismatch then 1 else 0 end) as &quot;Derived Intent Mismatch&quot;,&#13;&#10;&#9;sum(case when unknown_entity then 1 else 0 end) as &quot;Unknown Entity&quot;,&#13;&#10;&#9;sum(case when unknown_hotel_property then 1 else 0 end) as &quot;Unknown Hotel Property&quot;,&#13;&#10;&#9;sum(case when unknown_product_category then 1 else 0 end) as &quot;Unknown Product Category&quot;,&#13;&#10;&#9;sum(case when unknown_ad_unit then 1 else 0 end) as &quot;Unknown Ad Unit&quot;,&#13;&#10;&#9;sum(case when unknown_market then 1 else 0 end) as &quot;Unknown Market&quot;,&#13;&#10;&#9;sum(case when unknown_airport_code then 1 else 0 end) as &quot;Unknown Airport Code&quot;,&#13;&#10;&#9;sum(case when publisher_show_ads_suppression then 1 else 0 end) as &quot;Suppressed by Publisher&quot;,&#13;&#10;&#9;sum(case when suspicious_hotel_conversion_value then 1 else 0 end) as &quot;Suspicious Hotel Conversion Value&quot;,&#13;&#10;&#9;count(1) as &quot;Request Errors&quot;&#13;&#10;from intent_media_log_data_production.request_errors&#13;&#10;where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;and ip_address_blacklisted = 0&#13;&#10;group by&#13;&#10;&#9;requested_at_date_in_et,&#13;&#10;&#9;ad_unit_id,&#13;&#10;&#9;os_family,&#13;&#10;&#9;os,&#13;&#10;&#9;browser_family,&#13;&#10;&#9;browser&#13;&#10;order by &#13;&#10;&#9;requested_at_date_in_et desc,&#13;&#10;&#9;ad_unit_id</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[request_errors (copy)].[usr:Metric Z-Score:ok]&quot;' value='Metric Z-Score' />
          <alias key='&quot;[request_errors (copy)].[usr:Request Errors Z-Score:ok:1]&quot;' value='Count Z-Score' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Metric Z-Score - 3 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1510311113219541]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-3) - WINDOW_AVG([Calculation_2590311154506235],-30,-3))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-30,-3),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors Average' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_2580116164200677]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric without Min/Max' datatype='integer' default-format='N' name='[Calculation_2590311154506235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN NULL ELSE [Metric] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 7 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_3570311113337993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-7) - WINDOW_AVG([Calculation_2590311154506235],-34,-7))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-34,-7),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 4 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_4100311113237449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-4) - WINDOW_AVG([Calculation_2590311154506235],-31,-4))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-31,-4),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 1 Day before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_4450311100654122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-1) - WINDOW_AVG([Calculation_2590311154506235],-28,-1))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-28,-1),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 2 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8380311113127777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-2) - WINDOW_AVG([Calculation_2590311154506235],-29,-2))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-29,-2),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Dimension' datatype='string' name='[Calculation_8640115165316652]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Site&quot; THEN &apos;Total&apos;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &apos;Total&apos;&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;OS Family&quot; THEN IFNULL([OS Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;OS&quot; THEN IFNULL([OS],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_8760311113355964]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Calculation_4450311100654122] &gt; [Parameters].[Standard Deviations] OR [Calculation_4450311100654122] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_8380311113127777] &gt; [Parameters].[Standard Deviations] OR [Calculation_8380311113127777] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_1510311113219541] &gt; [Parameters].[Standard Deviations] OR [Calculation_1510311113219541] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_4100311113237449] &gt; [Parameters].[Standard Deviations] OR [Calculation_4100311113237449] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9660311113253455] &gt; [Parameters].[Standard Deviations] OR [Calculation_9660311113253455] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9420311113315981] &gt; [Parameters].[Standard Deviations] OR [Calculation_9420311113315981] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_3570311113337993] &gt; [Parameters].[Standard Deviations] OR [Calculation_3570311113337993] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_8930219124412291]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Metric Z-Score - 6 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9420311113315981]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-6) - WINDOW_AVG([Calculation_2590311154506235],-33,-6))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-33,-6),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 5 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9660311113253455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-5) - WINDOW_AVG([Calculation_2590311154506235],-32,-5))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-32,-5),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Derived Intent Mismatch]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Inactive Entity]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Metric Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_2590311154506235],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Positive Filter' datatype='string' name='[Metric Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &gt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Metric Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_2590311154506235],-27,0))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-27,0),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Metric]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Request Errors])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Parsing Error]' role='measure' type='quantitative'>
      </column>
      <column caption='Count Average' datatype='real' name='[Request Errors Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors Positive Filter' datatype='string' name='[Request Errors Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Request Errors Z-Score] &gt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END &#13;&#10;ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Request Errors Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Request Errors]),0) - WINDOW_AVG(SUM([Request Errors])))/WINDOW_STDEV(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors outside of Standard Deviations' datatype='boolean' name='[Request Errors outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Request Errors Z-Score] &gt; [Parameters].[Standard Deviations] OR [Request Errors Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Request Errors]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Suppressed by Publisher]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Suspicious Hotel Conversion Value]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Uncaught Exception]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Ad Unit]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Airport Code]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Entity]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Hotel Property]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Market]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Product Category]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Derived Intent Mismatch]' derivation='Sum' name='[sum:Derived Intent Mismatch:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inactive Entity]' derivation='Sum' name='[sum:Inactive Entity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parsing Error]' derivation='Sum' name='[sum:Parsing Error:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Request Errors]' derivation='Sum' name='[sum:Request Errors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Publisher]' derivation='Sum' name='[sum:Suppressed by Publisher:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suspicious Hotel Conversion Value]' derivation='Sum' name='[sum:Suspicious Hotel Conversion Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Uncaught Exception]' derivation='Sum' name='[sum:Uncaught Exception:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Ad Unit]' derivation='Sum' name='[sum:Unknown Ad Unit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Airport Code]' derivation='Sum' name='[sum:Unknown Airport Code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Entity]' derivation='Sum' name='[sum:Unknown Entity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Hotel Property]' derivation='Sum' name='[sum:Unknown Hotel Property:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Market]' derivation='Sum' name='[sum:Unknown Market:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Product Category]' derivation='Sum' name='[sum:Unknown Product Category:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Request Errors Z-Score]' derivation='User' name='[usr:Request Errors Z-Score:ok:1]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\request_errors copy 4.tde' schema='Extract' tablename='Extract' update-time='4/15/2014 6:02:13 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='117368' timestamp-start='2014-04-15 18:02:13.488000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.281768' measure-ordering='alphabetic' measure-percentage='0.527624' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy)].[sum:Derived Intent Mismatch:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy)].[usr:Calculation_2580116164200677:ok]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[request_errors (copy)].[sum:Request Errors:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Entity:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Ad Unit:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[request_errors (copy)].[sum:Suppressed by Publisher:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[request_errors (copy)].[sum:Inactive Entity:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Hotel Property:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Airport Code:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[request_errors (copy)].[sum:Suspicious Hotel Conversion Value:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Market:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Product Category:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy)].[usr:Metric:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy)].[usr:Request Errors Z-Score:ok:1]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[request_errors (copy)].[sum:Uncaught Exception:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[request_errors (copy)].[sum:Parsing Error:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
          <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Browser&quot;' />
            <member value='&quot;Site and Browser&quot;' />
            <member value='&quot;Ad Unit and Browser&quot;' />
          </members>
        </column>
        <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='funnel (copy)'>
        <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='funnel' inline='true' name='funnel (copy)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;dimensions.requested_at_date_in_et as Date,&#13;&#10;&#9;dimensions.ad_unit_id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;dimensions.browser_family as &quot;Browser Family&quot;,&#13;&#10;&#9;dimensions.browser as Browser,&#13;&#10;&#9;sites.id as &quot;Site ID&quot;,&#13;&#10;&#9;sites.display_name as &quot;Site&quot;,&#13;&#10;&#9;ad_units.name as &quot;Ad Unit&quot;,&#13;&#10;&#9;ad_units.ad_type as &quot;Ad Type&quot;,&#13;&#10;&#9;ad_units.product_category_type as &quot;Product Category Type&quot;,&#13;&#10;&#9;data.build_number as &quot;Build Number&quot;,&#13;&#10;&#9;sum(data.ad_calls) as &quot;Ad Calls&quot;,&#13;&#10;&#9;sum(data.blacklisted_ad_calls) as &quot;Blacklisted Ad Calls&quot;,&#13;&#10;&#9;sum(data.served_ad_calls) as &quot;Served Ad Calls&quot;,&#13;&#10;&#9;sum(data.clicks) as Clicks,&#13;&#10;&#9;sum(data.fraudulent_clicks) as &quot;Fraudulent Clicks&quot;,&#9;&#13;&#10;&#9;sum(data.interactions) as Interactions,&#13;&#10;&#9;sum(data.sum_actual_cpc) as &quot;Gross Media Revenue&quot;&#13;&#10;from&#13;&#10;&#9;(select *&#13;&#10;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;        distinct(requested_at_date_in_et) as requested_at_date_in_et&#13;&#10;&#9;    from intent_media_log_data_production.ad_calls&#13;&#10;&#9;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)) dates,&#13;&#10;&#9;    (select&#13;&#10;&#9;        distinct(ad_unit_id) as ad_unit_id&#13;&#10;&#9;    from intent_media_log_data_production.ad_calls&#13;&#10;&#9;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)) ad_units,&#13;&#10;&#9;    (select&#13;&#10;&#9;        ifnull(browser_family,&apos;NULL&apos;) as browser_family,&#13;&#10;&#9;        ifnull(browser,&apos;NULL&apos;) as browser&#13;&#10;&#9;    from intent_media_log_data_production.ad_calls&#13;&#10;&#9;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;    group by&#13;&#10;&#9;        browser_family,&#13;&#10;&#9;        browser) browser&#13;&#10;    ) dimensions &#13;&#10;left join&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;ac.requested_at_date_in_et,&#13;&#10;&#9;&#9;ac.product_category_type,&#13;&#10;&#9;&#9;ac.ad_unit_id,&#13;&#10;&#9;&#9;ac.site_type,&#13;&#10;&#9;&#9;ac.browser_family,&#13;&#10;&#9;&#9;ac.browser,&#13;&#10;&#9;&#9;ac.build_number,&#13;&#10;&#9;&#9;ac.ad_calls,&#13;&#10;&#9;&#9;ac.blacklisted_ad_calls,&#13;&#10;&#9;&#9;ac.served_ad_calls,&#13;&#10;&#9;&#9;c.clicks,&#13;&#10;&#9;&#9;c.fraudulent_clicks,&#13;&#10;&#9;&#9;c.interactions,&#13;&#10;&#9;&#9;c.sum_actual_cpc&#13;&#10;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;requested_at_date_in_et,&#13;&#10;&#9;&#9;&#9;product_category_type,&#13;&#10;&#9;&#9;&#9;ad_unit_id,&#13;&#10;&#9;&#9;&#9;site_type,&#13;&#10;&#9;&#9;&#9;browser_family,&#13;&#10;&#9;&#9;&#9;browser,&#13;&#10;&#9;&#9;&#9;build_number,&#13;&#10;&#9;&#9;&#9;request_id,&#13;&#10;&#9;&#9;&#9;count(case when ip_address_blacklisted = 0 then request_id end) as ad_calls,&#13;&#10;&#9;&#9;&#9;count(case when ip_address_blacklisted = 1 then request_id end) as blacklisted_ad_calls,&#13;&#10;&#9;&#9;&#9;count(case when ip_address_blacklisted = 0 and outcome_type = &apos;SERVED&apos; then request_id end) as served_ad_calls&#13;&#10;&#9;&#9;from intent_media_log_data_production.ad_calls&#13;&#10;&#9;&#9;where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;&#9;and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;requested_at_date_in_et,&#13;&#10;&#9;&#9;&#9;product_category_type,&#13;&#10;&#9;&#9;&#9;ad_unit_id,&#13;&#10;&#9;&#9;&#9;site_type,&#13;&#10;&#9;&#9;&#9;browser_family,&#13;&#10;&#9;&#9;&#9;browser,&#13;&#10;&#9;&#9;&#9;build_number,&#13;&#10;&#9;&#9;&#9;request_id) ac&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;requested_at_date_in_et,&#13;&#10;&#9;&#9;&#9;product_category_type,&#13;&#10;&#9;&#9;&#9;site_type,&#13;&#10;&#9;&#9;&#9;browser_family,&#13;&#10;&#9;&#9;&#9;browser,&#13;&#10;&#9;&#9;&#9;build_number,&#13;&#10;&#9;&#9;&#9;ad_call_request_id,&#13;&#10;&#9;&#9;&#9;placement_type,&#13;&#10;&#9;&#9;&#9;count(case when fraudulent = 0 then request_id end) as clicks,&#13;&#10;&#9;&#9;&#9;count(case when fraudulent = 1 then request_id end) as fraudulent_clicks,&#13;&#10;&#9;&#9;&#9;case when count(request_id) &gt;&gt; 0 then 1 else 0 end as interactions,&#13;&#10;&#9;&#9;&#9;sum(case when fraudulent = 0 then actual_cpc end) as sum_actual_cpc&#13;&#10;&#9;&#9;from intent_media_log_data_production.clicks&#13;&#10;&#9;&#9;where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;&#9;&#9;and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;&#9;and ip_address_blacklisted = 0&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;requested_at_date_in_et,&#13;&#10;&#9;&#9;&#9;product_category_type,&#13;&#10;&#9;&#9;&#9;site_type,&#13;&#10;&#9;&#9;&#9;browser_family,&#13;&#10;&#9;&#9;&#9;browser,&#13;&#10;&#9;&#9;&#9;build_number,&#13;&#10;&#9;&#9;&#9;ad_call_request_id,&#13;&#10;&#9;&#9;&#9;placement_type) c&#13;&#10;&#9;on ac.requested_at_date_in_et = c.requested_at_date_in_et&#13;&#10;&#9;and ac.product_category_type = c.product_category_type&#13;&#10;&#9;and ac.site_type = c.site_type&#13;&#10;&#9;and ac.browser_family = c.browser_family&#13;&#10;&#9;and ac.browser = c.browser&#13;&#10;&#9;and ac.build_number = c.build_number&#13;&#10;&#9;and ac.request_id = c.ad_call_request_id &#13;&#10;&#9;) data&#13;&#10;on dimensions.requested_at_date_in_et = data.requested_at_date_in_et&#13;&#10;and dimensions.ad_unit_id = data.ad_unit_id&#13;&#10;and dimensions.browser_family = data.browser_family&#13;&#10;and dimensions.browser = data.browser&#13;&#10;left join intent_media_production.ad_units on ad_units.id = dimensions.ad_unit_id&#13;&#10;left join intent_media_production.sites on sites.id = ad_units.site_id&#13;&#10;group by&#13;&#10;&#9;dimensions.requested_at_date_in_et,&#13;&#10;&#9;dimensions.ad_unit_id,&#13;&#10;&#9;dimensions.browser_family,&#13;&#10;&#9;dimensions.browser,&#13;&#10;&#9;sites.id,&#13;&#10;&#9;sites.display_name,&#13;&#10;&#9;ad_units.name,&#13;&#10;&#9;ad_units.ad_type,&#13;&#10;&#9;ad_units.product_category_type,&#13;&#10;&#9;data.build_number&#13;&#10;&#9;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[funnel (copy)].[usr:Calculation_1590415213558480:qk:3]&quot;' value='Fill Rate Weighted Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_1710415164819556:qk:3]&quot;' value='Fill Rate Stdev' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_3350317120944013:qk:1]&quot;' value='Fill Rate without Min/Max' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_4590310124859040:qk:2]&quot;' value='Blacklisted Ad Calls Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_7030415211649175:qk:3]&quot;' value='Fill Rate Flag' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_7730415174041268:qk:4]&quot;' value='Fill Rate Deviation Weight' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_9720310125012918:qk:2]&quot;' value='Fraudulent Clicks Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:CPC Average:qk:3]&quot;' value='CPC Average' />
          <alias key='&quot;[funnel (copy)].[usr:CPC Z-Score:qk:3]&quot;' value='CPC Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' value='CPI Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:CTR Z-Score:qk:2]&quot;' value='CTR Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Fill Rate Average:qk:3]&quot;' value='Fill Rate Average' />
          <alias key='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' value='Fill Rate Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' value='Gross Media Revenue Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Interaction Rate Average:qk:3]&quot;' value='Interaction Rate Average' />
          <alias key='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;' value='Interaction Rate Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Metric Z-Score:qk:1]&quot;' value='Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Pages Available Average:qk:2]&quot;' value='Ad Calls Average' />
          <alias key='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' value='Ad Calls Z-Score' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Ad Unit and Browser]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Ad Unit] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
      </column>
      <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CPC Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CPC Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CPC P-Value]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [CPC Z-Score] &lt; -3.09023230616781 THEN &quot;99.9%+&quot;&#13;&#10;ELSEIF [CPC Z-Score] &lt; -2.32634787404084 THEN &quot;99%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &lt; -1.64485362695147 THEN &quot;95%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &lt; -1.2815515655446 THEN &quot;90%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 3.09023230616781 THEN &quot;99.9%+&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 2.32634787404084 THEN &quot;99%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 1.64485362695147 THEN &quot;95%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 1.2815515655446 THEN &quot;90%&quot;&#13;&#10;ELSE &quot;&lt;90%&quot;&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[CPC outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[CPC Z-Score] &gt; [Parameters].[Standard Deviations] OR [CPC Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPI Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CPI Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CPI Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[CPI outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[CPI Z-Score] &gt; [Parameters].[Standard Deviations] OR [CPI Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_4160317122837051],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CTR Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CTR Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[CTR Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CTR],0) - WINDOW_AVG([Calculation_4160317122837051],-27,0))/WINDOW_STDEV([Calculation_4160317122837051],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[CTR outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[CTR Z-Score] &gt; [Parameters].[Standard Deviations] OR [CTR Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Blacklisted Ad Calls without Min/Max' datatype='integer' name='[Calculation_0060317124106415]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Blacklisted Ad Calls]),0) = WINDOW_MAX(ifnull(sum([Blacklisted Ad Calls]),0)) &#13;&#10;OR ifnull(sum([Blacklisted Ad Calls]),0) = WINDOW_MIN(ifnull(sum([Blacklisted Ad Calls]),0))&#13;&#10;THEN NULL ELSE ifnull(sum([Blacklisted Ad Calls]),0) END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_0120314135922361]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot; +  IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Ad Calls without Min/Max' datatype='integer' name='[Calculation_0180317120202106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Ad Calls]),0) = WINDOW_MAX(ifnull(sum([Ad Calls]),0)) &#13;&#10;OR ifnull(sum([Ad Calls]),0) = WINDOW_MIN(ifnull(sum([Ad Calls]),0))&#13;&#10;THEN NULL ELSE ifnull(sum([Ad Calls]),0) END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric without Min/Max' datatype='real' name='[Calculation_1510314114443868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN NULL ELSE [Metric] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fill Rate Weighted Z-Score' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1590415213558480]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SQUARE([Fill Rate Z-Score])*([Fill Rate]-[Fill Rate Average]))/WINDOW_AVG([Fill Rate Z-Score]*([Fill Rate]-[Fill Rate Average]))' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Breakdown Dimension]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Fill Rate Stdev' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1710415164819556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_2830314120024265]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Calculation_9090314114330358] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fraudulent Clicks without Min/Max' datatype='integer' name='[Calculation_3070317124605609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Fraudulent Clicks]),0) = WINDOW_MAX(ifnull(sum([Fraudulent Clicks]),0)) &#13;&#10;OR ifnull(sum([Fraudulent Clicks]),0) = WINDOW_MIN(ifnull(sum([Fraudulent Clicks]),0))&#13;&#10;THEN NULL ELSE ifnull(sum([Fraudulent Clicks]),0) END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Interaction Rate without Min/Max' datatype='real' name='[Calculation_3270317122151926]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Interaction Rate] = WINDOW_MAX([Interaction Rate]) &#13;&#10;OR [Interaction Rate] = WINDOW_MIN([Interaction Rate])&#13;&#10;THEN NULL ELSE [Interaction Rate] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fill Rate without Min/Max' datatype='real' default-format='n#,##0.00000000;-#,##0.00000000' name='[Calculation_3350317120944013]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Fill Rate] = WINDOW_MAX([Fill Rate]) &#13;&#10;OR [Fill Rate] = WINDOW_MIN([Fill Rate])&#13;&#10;THEN NULL ELSE [Fill Rate] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CTR without Min/Max' datatype='real' name='[Calculation_4160317122837051]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CTR] = WINDOW_MAX([CTR]) &#13;&#10;OR [CTR] = WINDOW_MIN([CTR])&#13;&#10;THEN NULL ELSE [CTR] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Blacklisted Ad Calls Z-Score' datatype='real' name='[Calculation_4590310124859040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Blacklisted Ad Calls]),0) - WINDOW_AVG([Calculation_0060317124106415],-27,0))/WINDOW_STDEV([Calculation_0060317124106415],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fill Rate Flag' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_7030415211649175]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF ABS([Fill Rate Z-Score]) &gt; 3 THEN 1 ELSE 0 END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CPI without Min/Max' datatype='real' name='[Calculation_7430317122702530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CPI] = WINDOW_MAX([CPI]) &#13;&#10;OR [CPI] = WINDOW_MIN([CPI])&#13;&#10;THEN NULL ELSE [CPI] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Browser/ Browser Family' datatype='string' name='[Calculation_7570311114722702]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Browser&quot; THEN [Browser]&#13;&#10;    WHEN &quot;Browser Family&quot; THEN [Browser Family]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Fill Rate Deviation Weight' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_7730415174041268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1710415164819556]/[Fill Rate Average]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Gross Media Revenue without Min/Max' datatype='real' name='[Calculation_8430317113102213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ifnull(sum([Gross Media Revenue]),0.0) = WINDOW_MAX(ifnull(sum([Gross Media Revenue]),0.0))&#13;&#10;or ifnull(sum([Gross Media Revenue]),0.0) = WINDOW_MIN(ifnull(sum([Gross Media Revenue]),0.0))&#13;&#10;then null else ifnull(sum([Gross Media Revenue]),0.0) end' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 7 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-7) - WINDOW_AVG([Calculation_1510314114443868],-34,-7))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-34,-7),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 6 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-6) - WINDOW_AVG([Calculation_1510314114443868],-33,-6))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-33,-6),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 5 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-5) - WINDOW_AVG([Calculation_1510314114443868],-32,-5))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-32,-5),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 4 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-4) - WINDOW_AVG([Calculation_1510314114443868],-31,-4))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-31,-4),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 3 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-3) - WINDOW_AVG([Calculation_1510314114443868],-30,-3))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-30,-3),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 2 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-2) - WINDOW_AVG([Calculation_1510314114443868],-29,-2))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-29,-2),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 1 Day before Yesterday' datatype='real' name='[Calculation_9090314114330358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-1) - WINDOW_AVG([Calculation_1510314114443868],-28,-1))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-28,-1),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CPC without Min/Max' datatype='real' name='[Calculation_9180317123147787]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CPC] = WINDOW_MAX([CPC]) &#13;&#10;OR [CPC] = WINDOW_MIN([CPC])&#13;&#10;THEN NULL ELSE [CPC] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fill Rate Global Deviation Average' datatype='real' name='[Calculation_9410416162041232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Fill Rate Z-Score]*([Fill Rate]-[Fill Rate Average]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fraudulent Clicks Z-Score' datatype='real' name='[Calculation_9720310125012918]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Fraudulent Clicks]),0) - WINDOW_AVG([Calculation_3070317124605609],-27,0))/WINDOW_STDEV([Calculation_3070317124605609],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='p0.000000%' name='[Fill Rate Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Fill Rate],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[Fill Rate Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Fill Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Fill Rate outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Fill Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Fill Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Filter: Same Day of Week as Yesterday]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([Parameters].[Only Show One Day of Week] AND (DATEPART(&apos;weekday&apos;,[Date]) = DATEPART(&apos;weekday&apos;,[Yesterday])&#13;&#10;)) OR (NOT [Parameters].[Only Show One Day of Week])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Formatted Dimension]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,All Sites,All Ad Units,All Browser Families,All OSs&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,All Ad Units,All Browser Families,All OSs&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,All Sites,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,All Browser Families,All OSs&quot;&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,All Sites,All Ad Units,&quot; + IFNULL([Browser Family],&quot;NULL&quot;) + &quot;,Total&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Gross Media Revenue Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Gross Media Revenue Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Gross Media Revenue outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Gross Media Revenue Z-Score] &gt; [Parameters].[Standard Deviations] OR [Gross Media Revenue Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Interaction Rate Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Interaction Rate Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Interaction Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Interaction Rate outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Interaction Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Interaction Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Is Yesterday]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date] = [Yesterday]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Metric Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_1510314114443868],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-27,0),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Metric]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Pages Available&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Fill Rate&quot; THEN [Fill Rate]&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN [Interaction Rate]&#13;&#10;    WHEN &quot;CPI&quot; THEN [CPI]&#13;&#10;    WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;    WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Calls Negative Filter' datatype='string' name='[Pages Available Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Pages Available Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Calls outside of Standard Deviations' datatype='boolean' name='[Pages Available outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Pages Available Z-Score] &gt; [Parameters].[Standard Deviations] OR [Pages Available Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FLIGHTS&quot;' value='Flights' />
          <alias key='&quot;HOTELS&quot;' value='Hotels' />
        </aliases>
      </column>
      <column datatype='string' name='[Site and Browser]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Site] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Site]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Value Label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Value&quot;' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='date' name='[Yesterday]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='// DATE(&quot;12-17-2013&quot;)&#13;&#10;TODAY()-1' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Z-Score Label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Z-Score&quot;' scope-isolation='false' />
      </column>
      <column-instance column='[Is Yesterday]' derivation='None' name='[none:Is Yesterday:nk]' pivot='key' type='nominal' />
      <column-instance column='[CPC Average]' derivation='User' name='[usr:CPC Average:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CPC P-Value]' derivation='User' name='[usr:CPC P-Value:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[funnel (copy)].[CPC Z-Score]' ordering-type='Rows' />
        <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CTR Z-Score]' derivation='User' name='[usr:CTR Z-Score:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_4160317122837051]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1590415213558480]' derivation='User' name='[usr:Calculation_1590415213558480:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[funnel (copy)].[Fill Rate Average]' ordering-type='Rows' />
        <table-calc field='[funnel (copy)].[Fill Rate Z-Score]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1710415164819556]' derivation='User' name='[usr:Calculation_1710415164819556:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_3350317120944013]' derivation='User' name='[usr:Calculation_3350317120944013:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_4590310124859040]' derivation='User' name='[usr:Calculation_4590310124859040:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_0060317124106415]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_7030415211649175]' derivation='User' name='[usr:Calculation_7030415211649175:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Fill Rate Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_7730415174041268]' derivation='User' name='[usr:Calculation_7730415174041268:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Fill Rate Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_1710415164819556]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_9720310125012918]' derivation='User' name='[usr:Calculation_9720310125012918:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_3070317124605609]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Fill Rate Average]' derivation='User' name='[usr:Fill Rate Average:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Interaction Rate Average]' derivation='User' name='[usr:Interaction Rate Average:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <group name='[Action (Ad Unit)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Ad Unit,Browser Family,OS,Product,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit]' />
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[OS]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family,Date,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group name='[Action (Dimension) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Breakdown Dimension]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Dimension)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Formatted Dimension]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (OS,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OS]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Product,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category Type]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group name='[Action (Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\system_monitoring_funnel copy 3.tde' schema='Extract' tablename='Extract' update-time='4/25/2014 5:10:19 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='421294' timestamp-start='2014-04-25 17:10:18.798000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.21978' group-percentage='0.112637' measure-ordering='alphabetic' measure-percentage='0.508242' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[funnel (copy)].[usr:CPC \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[funnel (copy)].[usr:CTR \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[funnel (copy)].[usr:CPI \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[funnel (copy)].[usr:Pages Served \%D 2W:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Multiple Values]' max='6.0' min='-6.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          <encoding attr='color' field='[usr:CPC P-Value:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;&lt;90\%&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;99\%&quot;</bucket>
            </map>
            <map to='#eac0bd'>
              <bucket>&quot;90\%&quot;</bucket>
            </map>
            <map to='#f37263'>
              <bucket>&quot;95\%&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Is Yesterday:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>false</bucket>
            </map>
            <map to='#d62728'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Min Average Ad Calls per Day' datatype='integer' name='[Average Pages per Day]' param-domain-type='any' role='measure' type='quantitative' value='1000'>
          <calculation class='tableau' formula='1000' />
        </column>
        <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
          <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Browser&quot;' />
            <member value='&quot;Site and Browser&quot;' />
            <member value='&quot;Ad Unit and Browser&quot;' />
          </members>
        </column>
        <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
          <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
          <members>
            <member value='&quot;Blacklisted Ad Calls&quot;' />
            <member value='&quot;Fraudulent Clicks&quot;' />
            <member value='&quot;Fill Rate&quot;' />
            <member value='&quot;Interaction Rate&quot;' />
            <member value='&quot;CPI&quot;' />
            <member value='&quot;CTR&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;Gross Media Revenue&quot;' />
            <member value='&quot;Ad Calls&quot;' />
          </members>
        </column>
        <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Only Show One Day of Week' datatype='boolean' name='[Only Show One Day of Week]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Browser or Browser Family' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Browser&quot;'>
          <calculation class='tableau' formula='&quot;Browser&quot;' />
          <members>
            <member value='&quot;Browser&quot;' />
            <member value='&quot;Browser Family&quot;' />
          </members>
        </column>
        <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='funnel (copy)'>
      <datasources>
        <datasource caption='funnel' name='funnel (copy)' />
      </datasources>
      <datasource-dependencies datasource='funnel (copy)'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[funnel (copy)].[none:Date:ok]'>
        <groupfilter from='#2014-03-18#' function='range' level='[none:Date:ok]' to='#2014-04-24#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='to Site Breakdown' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overall Graphs' type='sheet' worksheet='Gross Media Revenue' />
      <link caption='to Site Breakdown' delimiter=',' escape='\' expression='tsl:Site%20Graphs?%5Bfunnel%20%28copy%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Site Graphs' />
      </command>
    </action>
    <action caption='to Ad Unit Breakdown' name='[Action2]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Ad Unit Breakdown' delimiter=',' escape='\' expression='tsl:Ad%20Unit%20Graphs?%5Bfunnel%20%28copy%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Ad Unit Graphs' />
      </command>
    </action>
    <action caption='to Ad Unit and Browser Breakdown' name='[Action3]'>
      <source dashboard='Ad Unit Graphs' type='sheet' worksheet='Ad Unit Worms' />
      <link caption='to Ad Unit and Browser Breakdown' delimiter=',' escape='\' expression='tsl:Ad%20Unit%20and%20Browser%20Graphs?%5Bfunnel%20%28copy%29%5D.%5BAd%20Unit%5D~s0=&lt;[Ad Unit]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Ad Unit and Browser Graphs' />
      </command>
    </action>
    <action caption='to Site and Browser Breakdown' name='[Action4]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Site and Browser Breakdown' delimiter=',' escape='\' expression='tsl:Site%20and%20Browser%20Graphs?%5Bfunnel%20%28copy%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Site and Browser Graphs' />
      </command>
    </action>
    <action caption='to Browser Breakdown' name='[Action5]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Browser Breakdown' delimiter=',' escape='\' expression='tsl:Browser%20Graphs?%5Bfunnel%20%28copy%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Browser Graphs' />
      </command>
    </action>
    <action caption='to Ad Unit and Browser Breakdown' name='[Action6]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Ad Unit and Browser Breakdown' delimiter=',' escape='\' expression='tsl:Ad%20Unit%20and%20Browser%20Graphs?%5Bfunnel%20%28copy%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Ad Unit and Browser Graphs' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Ad Calls'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Negative Filter' datatype='string' name='[Pages Available Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Pages Available Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls outside of Standard Deviations' datatype='boolean' name='[Pages Available outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Pages Available Z-Score] &gt; [Parameters].[Standard Deviations] OR [Pages Available Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Negative Filter]' derivation='User' name='[usr:Pages Available Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Pages Available Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Pages Available outside of Standard Deviations]' derivation='User' name='[usr:Pages Available outside of Standard Deviations:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Pages Available Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Average:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Average:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[funnel (copy)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Pages Available Negative Filter:nk]'>
            <groupfilter function='empty-level' member='[usr:Pages Available Negative Filter:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Pages Available outside of Standard Deviations:nk:1]'>
            <groupfilter function='empty-level' member='[usr:Pages Available outside of Standard Deviations:nk:1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:Pages Available Negative Filter:nk]</column>
            <column>[funnel (copy)].[usr:Pages Available outside of Standard Deviations:nk:1]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:qk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Breakdown Dimension:nk]' value='220' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy)].[:Measure Names] / [funnel (copy)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Ad Unit Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Category Type:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[Action (Site)]</column>
            <column>[funnel (copy)].[none:Ad Unit:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[none:Site:nk]' />
              <lod column='[funnel (copy)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI:qk]' />
              <lod column='[funnel (copy)].[usr:CPC:qk]' />
              <lod column='[funnel (copy)].[usr:CPC Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='51' />
                <format attr='maxheight' value='51' />
                <format attr='minwidth' value='762' />
                <format attr='maxwidth' value='762' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Product Category Type:nk] / ([funnel (copy)].[none:Ad Unit:nk] / ([funnel (copy)].[none:Ad Type:nk] / [funnel (copy)].[:Measure Names]))) * [funnel (copy)].[Multiple Values])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ad Unit and Browser Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Unit and Browser]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Ad Unit] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Unit and Browser]' derivation='None' name='[none:Ad Unit and Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser Family]' derivation='None' name='[none:Browser Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[Action (Ad Unit)]'>
            <groupfilter function='level-members' level='[Ad Unit]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser Family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Browser Family:nk]' member='%null%' />
              <groupfilter from='&quot;APPLE_WEB_KIT&quot;' function='range' level='[none:Browser Family:nk]' to='&quot;UNKNOWN&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[Action (Site)]</column>
            <column>[funnel (copy)].[Action (Ad Unit)]</column>
            <column>[funnel (copy)].[none:Browser Family:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI:qk]' />
              <lod column='[funnel (copy)].[usr:CPC:qk]' />
              <lod column='[funnel (copy)].[usr:CPC Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='53' />
                <format attr='maxheight' value='53' />
                <format attr='minwidth' value='813' />
                <format attr='maxwidth' value='813' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Ad Unit and Browser:nk] / [funnel (copy)].[:Measure Names]) * [funnel (copy)].[Multiple Values])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Blacklisted and Fraudulent Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Blacklisted Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CTR Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CTR],0) - WINDOW_AVG([Calculation_4160317122837051],-27,0))/WINDOW_STDEV([Calculation_4160317122837051],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Blacklisted Ad Calls Z-Score' datatype='real' name='[Calculation_4590310124859040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Blacklisted Ad Calls]),0) - WINDOW_AVG([Calculation_0060317124106415],-27,0))/WINDOW_STDEV([Calculation_0060317124106415],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Fraudulent Clicks Z-Score' datatype='real' name='[Calculation_9720310125012918]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Fraudulent Clicks]),0) - WINDOW_AVG([Calculation_3070317124605609],-27,0))/WINDOW_STDEV([Calculation_3070317124605609],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Fraudulent Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blacklisted Ad Calls]' derivation='Sum' name='[sum:Blacklisted Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fraudulent Clicks]' derivation='Sum' name='[sum:Fraudulent Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CTR Z-Score]' derivation='User' name='[usr:CTR Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_4160317122837051]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_4590310124859040]' derivation='User' name='[usr:Calculation_4590310124859040:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0060317124106415]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4590310124859040]' derivation='User' name='[usr:Calculation_4590310124859040:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0060317124106415]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_9720310125012918]' derivation='User' name='[usr:Calculation_9720310125012918:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3070317124605609]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_9720310125012918]' derivation='User' name='[usr:Calculation_9720310125012918:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3070317124605609]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_4590310124859040:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_9720310125012918:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CTR Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter from='&quot;Apollo&quot;' function='range' level='[none:Site:nk]' to='&quot;Worldspan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Site:nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]' max='6.0' min='-6.0' num-steps='3' type='interpolated' />
            <encoding attr='color' field='[funnel (copy)].[Multiple Values]' max='7.5' min='-7.5' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[sum:Blacklisted Ad Calls:qk]' />
              <lod column='[funnel (copy)].[usr:Calculation_4590310124859040:qk]' />
              <lod column='[funnel (copy)].[sum:Fraudulent Clicks:qk]' />
              <lod column='[funnel (copy)].[usr:Calculation_9720310125012918:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Pages Available:&#9;</run>
                <run> ()&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>Æ </run>
                <run>()&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run> ()&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run bold='true'>Æ </run>
                <run>()</run>
                <run bold='true'>Æ&#10;</run>
                <run fontcolor='#787878'>CPC:&#9;</run>
                <run> ()&#10;</run>
                <run fontcolor='#787878'>Blacklisted Ad Calls</run>
                <run>&#9; ()</run>
                <run bold='true'>Æ&#10;</run>
                <run fontcolor='#787878'>Fraudulent Clicks:</run>
                <run>&#9; ()</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='70' />
                <format attr='maxheight' value='70' />
                <format attr='minwidth' value='555' />
                <format attr='maxwidth' value='555' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Site:nk] / [funnel (copy)].[:Measure Names]) * [funnel (copy)].[Multiple Values])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Browser Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column caption='Browser/ Browser Family' datatype='string' name='[Calculation_7570311114722702]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Browser&quot; THEN [Browser]&#13;&#10;    WHEN &quot;Browser Family&quot; THEN [Browser Family]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Calculation_7570311114722702]' derivation='None' name='[none:Calculation_7570311114722702:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[Action (Site)]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='54' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Calculation_7570311114722702:nk]' value='108' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI:qk]' />
              <lod column='[funnel (copy)].[usr:CPC:qk]' />
              <lod column='[funnel (copy)].[usr:CPC Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='50' />
                <format attr='maxheight' value='50' />
                <format attr='minwidth' value='678' />
                <format attr='maxwidth' value='678' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Calculation_7570311114722702:nk] / [funnel (copy)].[:Measure Names]) * [funnel (copy)].[Multiple Values])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CPC'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[CPC Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CPC Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[CPC outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[CPC Z-Score] &gt; [Parameters].[Standard Deviations] OR [CPC Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPC Average]' derivation='User' name='[usr:CPC Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC Average]' derivation='User' name='[usr:CPC Average:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC Negative Filter]' derivation='User' name='[usr:CPC Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[CPC Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC outside of Standard Deviations]' derivation='User' name='[usr:CPC outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[CPC Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC Average:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC Average:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[funnel (copy)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:CPC Negative Filter:nk]'>
            <groupfilter function='member' level='[usr:CPC Negative Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:CPC outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:CPC outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='empty-level' member='[usr:Volume Filter:nk:1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:CPC Negative Filter:nk]</column>
            <column>[funnel (copy)].[usr:CPC outside of Standard Deviations:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:qk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='43' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Breakdown Dimension:nk]' value='188' />
            <format attr='height' field='[funnel (copy)].[none:Date:ok]' value='26' />
            <format attr='height' field='[funnel (copy)].[:Measure Names]' value='38' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[usr:CPC Z-Score:qk:1]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
            <encoding attr='color' field='[funnel (copy)].[usr:CPC Z-Score:qk:3]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[usr:CPC Z-Score:qk:1]' />
              <text column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy)].[:Measure Names] / [funnel (copy)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='CPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPI Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[CPI Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CPI Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[CPI outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[CPI Z-Score] &gt; [Parameters].[Standard Deviations] OR [CPI Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPI Average]' derivation='User' name='[usr:CPI Average:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Negative Filter]' derivation='User' name='[usr:CPI Negative Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[CPI Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI outside of Standard Deviations]' derivation='User' name='[usr:CPI outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[CPI Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Average]' derivation='User' name='[usr:Fill Rate Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Average:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Average:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[funnel (copy)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:CPI Negative Filter:nk:1]'>
            <groupfilter function='member' level='[usr:CPI Negative Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:CPI outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:CPI outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='empty-level' member='[usr:Volume Filter:nk:1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:CPI Negative Filter:nk:1]</column>
            <column>[funnel (copy)].[usr:CPI outside of Standard Deviations:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:qk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Breakdown Dimension:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
            <encoding attr='color' field='[funnel (copy)].[usr:CPI Z-Score:qk:1]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
            <encoding attr='color' field='[funnel (copy)].[usr:CPI Z-Score:qk:3]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[usr:CPI Z-Score:qk:1]' />
              <text column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy)].[:Measure Names] / [funnel (copy)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Fill Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Fill Rate Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Fill Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Fill Rate outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Fill Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Fill Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Average]' derivation='User' name='[usr:Fill Rate Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Negative Filter]' derivation='User' name='[usr:Fill Rate Negative Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Fill Rate Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate outside of Standard Deviations]' derivation='User' name='[usr:Fill Rate outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Fill Rate Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Average:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Average:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[usr:Fill Rate Negative Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Fill Rate Negative Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Fill Rate outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:Fill Rate outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[none:Date:ok]</column>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:Fill Rate Negative Filter:nk:1]</column>
            <column>[funnel (copy)].[usr:Fill Rate outside of Standard Deviations:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Breakdown Dimension:nk]' value='228' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy)].[:Measure Names] / [funnel (copy)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Gross Media Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter: Same Day of Week as Yesterday]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Only Show One Day of Week] AND (DATEPART(&apos;weekday&apos;,[Date]) = DATEPART(&apos;weekday&apos;,[Yesterday])&#13;&#10;)) OR (NOT [Parameters].[Only Show One Day of Week])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter: Same Day of Week as Yesterday]' derivation='None' name='[none:Filter: Same Day of Week as Yesterday:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[none:Filter: Same Day of Week as Yesterday:nk]'>
            <groupfilter function='member' level='[none:Filter: Same Day of Week as Yesterday:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Category Type:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='level-members' level='[none:Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Filter: Same Day of Week as Yesterday:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[funnel (copy)].[sum:Gross Media Revenue:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy)].[sum:Gross Media Revenue:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[funnel (copy)].[sum:Gross Media Revenue:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[funnel (copy)].[sum:Gross Media Revenue:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Site:nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Product:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Product Category Type:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Gross Media Revenue:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue Z-Score:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Site:nk] / ([funnel (copy)].[none:Ad Type:nk] / [funnel (copy)].[none:Product Category Type:nk])) * [funnel (copy)].[sum:Gross Media Revenue:qk])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Interaction Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Interaction Rate Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Interaction Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Interaction Rate outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Interaction Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Interaction Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fill Rate Average]' derivation='User' name='[usr:Fill Rate Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Average]' derivation='User' name='[usr:Interaction Rate Average:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Negative Filter]' derivation='User' name='[usr:Interaction Rate Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Interaction Rate Z-Score]' ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate outside of Standard Deviations]' derivation='User' name='[usr:Interaction Rate outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Interaction Rate Z-Score]' ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Average:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[funnel (copy)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Interaction Rate Negative Filter:nk]'>
            <groupfilter function='empty-level' member='[usr:Interaction Rate Negative Filter:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Interaction Rate outside of Standard Deviations:nk]'>
            <groupfilter function='empty-level' member='[usr:Interaction Rate outside of Standard Deviations:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='empty-level' member='[usr:Volume Filter:nk:1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:Interaction Rate Negative Filter:nk]</column>
            <column>[funnel (copy)].[usr:Interaction Rate outside of Standard Deviations:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:qk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='63' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Breakdown Dimension:nk]' value='200' />
            <format attr='height' field='[funnel (copy)].[:Measure Names]' value='38' />
            <format attr='height' field='[funnel (copy)].[none:Date:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy)].[:Measure Names] / [funnel (copy)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Overall'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Blacklisted Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Fraudulent Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Blacklisted Ad Calls]' derivation='Sum' name='[sum:Blacklisted Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fraudulent Clicks]' derivation='Sum' name='[sum:Fraudulent Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Blacklisted Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Fraudulent Clicks:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Blacklisted Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Fraudulent Clicks:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Type:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser:nk]'>
            <groupfilter from='&quot;ADOBE_AIR&quot;' function='range' level='[none:Browser:nk]' to='&quot;UNKNOWN&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Category Type:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter from='&quot;Apollo&quot;' function='range' level='[none:Site:nk]' to='&quot;Worldspan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Browser:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='122' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([funnel (copy)].[none:Ad Type:nk] / ([funnel (copy)].[none:Product Category Type:nk] / [funnel (copy)].[none:Site:nk])))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Request Errors'>
      <table>
        <view>
          <datasources>
            <datasource caption='request_errors' name='request_errors (copy)' />
            <datasource name='Parameters' />
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
              <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Site&quot;' />
                <member value='&quot;Ad Unit&quot;' />
                <member value='&quot;Browser&quot;' />
                <member value='&quot;Site and Browser&quot;' />
                <member value='&quot;Ad Unit and Browser&quot;' />
              </members>
            </column>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
              <members>
                <member value='&quot;Blacklisted Ad Calls&quot;' />
                <member value='&quot;Fraudulent Clicks&quot;' />
                <member value='&quot;Fill Rate&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='request_errors (copy)'>
            <column caption='Request Errors Average' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_2580116164200677]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_8760311113355964]' role='measure' type='nominal'>
              <calculation class='tableau' formula='([Calculation_4450311100654122] &gt; [Parameters].[Standard Deviations] OR [Calculation_4450311100654122] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_8380311113127777] &gt; [Parameters].[Standard Deviations] OR [Calculation_8380311113127777] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_1510311113219541] &gt; [Parameters].[Standard Deviations] OR [Calculation_1510311113219541] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_4100311113237449] &gt; [Parameters].[Standard Deviations] OR [Calculation_4100311113237449] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9660311113253455] &gt; [Parameters].[Standard Deviations] OR [Calculation_9660311113253455] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9420311113315981] &gt; [Parameters].[Standard Deviations] OR [Calculation_9420311113315981] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_3570311113337993] &gt; [Parameters].[Standard Deviations] OR [Calculation_3570311113337993] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_8930219124412291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_2590311154506235],-27,0))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-27,0),2)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Request Errors Positive Filter' datatype='string' name='[Request Errors Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Request Errors Z-Score] &gt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END &#13;&#10;ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8930219124412291]' derivation='None' name='[none:Calculation_8930219124412291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_8760311113355964]' derivation='User' name='[usr:Calculation_8760311113355964:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_4450311100654122]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_4100311113237449]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_9660311113253455]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_1510311113219541]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_3570311113337993]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_8380311113127777]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_9420311113315981]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Metric Z-Score]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Request Errors Negative Filter]' derivation='User' name='[usr:Request Errors Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Request Errors Z-Score]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[request_errors (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[request_errors (copy)].[usr:Metric Z-Score:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[request_errors (copy)].[usr:Calculation_2580116164200677:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[request_errors (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='quantitative' column='[request_errors (copy)].[usr:Calculation_2580116164200677:qk:1]' included-values='in-range'>
            <min>1000.0</min>
            <max>92809.552631578947</max>
          </filter>
          <filter class='categorical' column='[request_errors (copy)].[usr:Calculation_8760311113355964:nk]'>
            <groupfilter function='member' level='[usr:Calculation_8760311113355964:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[request_errors (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[request_errors (copy)].[usr:Metric outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[request_errors (copy)].[usr:Request Errors Negative Filter:nk]'>
            <groupfilter function='member' level='[usr:Request Errors Negative Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[request_errors (copy)].[usr:Last:qk]</column>
            <column>[request_errors (copy)].[usr:Metric outside of Standard Deviations:nk]</column>
            <column>[request_errors (copy)].[usr:Request Errors Negative Filter:nk]</column>
            <column>[request_errors (copy)].[usr:Calculation_2580116164200677:qk:1]</column>
            <column>[request_errors (copy)].[usr:Calculation_8760311113355964:nk]</column>
            <column>[request_errors (copy)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[request_errors (copy)].[:Measure Names]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[request_errors (copy)].[none:Calculation_8930219124412291:nk]' value='128' />
            <format attr='width' field='[Parameters].[Measure]' value='100' />
            <format attr='width' field='[Parameters].[Breakdown]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[request_errors (copy)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[request_errors (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[none:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([request_errors (copy)].[none:Date:ok] / ([Parameters].[Measure] / ([Parameters].[Breakdown] / [request_errors (copy)].[none:Calculation_8930219124412291:nk])))</rows>
        <cols>[request_errors (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Request Errors Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='request_errors' name='request_errors (copy)' />
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit ID]' derivation='None' name='[none:Ad Unit ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='request_errors (copy)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Request Errors])' scope-isolation='false' />
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[request_errors (copy)].[usr:Metric:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[request_errors (copy)].[usr:Metric:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[request_errors (copy)].[usr:Metric:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Ad Unit:nk] / [funnel (copy)].[none:Ad Unit ID:ok]) * [request_errors (copy)].[usr:Metric:qk])</rows>
        <cols>[request_errors (copy)].[none:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[funnel (copy)].[Ad Unit ID]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter from='&quot;AirFastTickets&quot;' function='range' level='[none:Site:nk]' to='&quot;Worldspan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='159' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Served Ad Calls:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Served Ad Calls:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate:ok]&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Ad Type:nk] / ([funnel (copy)].[none:Product Category Type:nk] / ([funnel (copy)].[none:Site:nk] / ([funnel (copy)].[none:Ad Unit:nk] / ([funnel (copy)].[none:Browser:nk] / [funnel (copy)].[none:Date:ok])))))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([funnel (copy)].[none:Ad Type:nk] / ([funnel (copy)].[none:Product Category Type:nk] / [funnel (copy)].[none:Ad Unit:nk])))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Site Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Category Type:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[Action (Site)]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[funnel (copy)].[none:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy)].[none:Date:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[funnel (copy)].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy)].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[funnel (copy)].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Site:nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy)].[usr:CPI:qk]' />
              <tooltip column='[funnel (copy)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:CPC:qk]' />
              <tooltip column='[funnel (copy)].[usr:CPC Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='65' />
                <format attr='maxheight' value='65' />
                <format attr='minwidth' value='596' />
                <format attr='maxwidth' value='596' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Site:nk] / ([funnel (copy)].[none:Ad Type:nk] / ([funnel (copy)].[none:Product Category Type:nk] / [funnel (copy)].[:Measure Names]))) * [funnel (copy)].[Multiple Values])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Site and Browser Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Site and Browser]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Site] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Browser Family]' derivation='None' name='[none:Browser Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site and Browser]' derivation='None' name='[none:Site and Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser Family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Browser Family:nk]' member='%null%' />
              <groupfilter from='&quot;APPLE_WEB_KIT&quot;' function='range' level='[none:Browser Family:nk]' to='&quot;UNKNOWN&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[Action (Site)]</column>
            <column>[funnel (copy)].[none:Browser Family:nk]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[Multiple Values]' />
              <lod column='[funnel (copy)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI:qk]' />
              <lod column='[funnel (copy)].[usr:CPC:qk]' />
              <lod column='[funnel (copy)].[usr:CPC Z-Score:qk]' />
              <lod column='[funnel (copy)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='52' />
                <format attr='maxheight' value='52' />
                <format attr='minwidth' value='746' />
                <format attr='maxwidth' value='746' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy)].[none:Site and Browser:nk] / [funnel (copy)].[:Measure Names]) * [funnel (copy)].[Multiple Values])</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp_Testing'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
              <members>
                <member value='&quot;Blacklisted Ad Calls&quot;' />
                <member value='&quot;Fraudulent Clicks&quot;' />
                <member value='&quot;Fill Rate&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;FLIGHTS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='61' />
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='114' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Site:nk]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Parameters].[Measure]' value='true' />
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / [funnel (copy)].[none:Site:nk])</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp_Testing2'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9180317123147787]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;HOTELS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;KAYAK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Date:ok]</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp_Testing3'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Interactions:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;FLIGHTS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Product Category Type:nk] / ([funnel (copy)].[none:Ad Type:nk] / [funnel (copy)].[none:Site:nk]))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weighted Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column caption='Fill Rate Weighted Z-Score' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1590415213558480]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SQUARE([Fill Rate Z-Score])*([Fill Rate]-[Fill Rate Average]))/WINDOW_AVG([Fill Rate Z-Score]*([Fill Rate]-[Fill Rate Average]))' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Breakdown Dimension]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Fill Rate Stdev' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_1710415164819556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Fill Rate Flag' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_7030415211649175]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF ABS([Fill Rate Z-Score]) &gt; 3 THEN 1 ELSE 0 END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Fill Rate Deviation Weight' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_7730415174041268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1710415164819556]/[Fill Rate Average]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Fill Rate],-27,0))/WINDOW_STDEV([Fill Rate],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Ad Unit ID]' derivation='None' name='[none:Ad Unit ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1590415213558480]' derivation='User' name='[usr:Calculation_1590415213558480:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Fill Rate Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Fill Rate Z-Score]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1710415164819556]' derivation='User' name='[usr:Calculation_1710415164819556:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_7030415211649175]' derivation='User' name='[usr:Calculation_7030415211649175:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Fill Rate Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_7730415174041268]' derivation='User' name='[usr:Calculation_7730415174041268:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Fill Rate Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1710415164819556]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_1710415164819556:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_7730415174041268:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_7030415211649175:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_1590415213558480:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Calculation_1710415164819556:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Calculation_7730415174041268:qk:4]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Calculation_7030415211649175:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Unit ID:ok]'>
            <groupfilter function='member' level='[none:Ad Unit ID:ok]' member='129' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Unit:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Expedia Flight List Page&quot;' />
              <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Hotel Details Page - CheapTickets&quot;' />
              <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Orbitz Hotel Meta - list page - 2 to 4 advertisers&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser:nk]'>
            <groupfilter function='member' level='[none:Browser:nk]' member='&quot;BOT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Ad Unit:nk]</column>
            <column>[funnel (copy)].[none:Browser:nk]</column>
            <column>[funnel (copy)].[none:Ad Unit ID:ok]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='86' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Date:ok]</rows>
        <cols>([funnel (copy)].[none:Ad Unit ID:ok] / ([funnel (copy)].[none:Ad Unit:nk] / [funnel (copy)].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Weighted Score 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day]*TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser Family]' derivation='None' name='[none:Browser Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;META&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser Family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Browser Family:nk]' member='&quot;APPLE_WEB_KIT&quot;' />
              <groupfilter function='member' level='[none:Browser Family:nk]' member='&quot;BOT&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Browser Family:nk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[none:Ad Unit:nk]' value='262' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Browser Family:nk] / [funnel (copy)].[none:Date:ok])</rows>
        <cols>([funnel (copy)].[none:Ad Unit:nk] / [funnel (copy)].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ad Unit Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='85643' x='14357' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='85357' x='14357' y='0'>
              <zone h='100000' id='1' name='Ad Unit Worms' show-title='true' w='85357' x='14357' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14357' x='0' y='0'>
            <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='14357' x='0' y='0'>
              <formatted-text>
                <run>Only Show One&#10;Day of Week</run>
              </formatted-text>
            </zone>
            <zone h='6000' id='11' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='14357' x='0' y='8625'>
            </zone>
            <zone h='8250' id='10' name='Ad Unit Worms' param='[funnel (copy)].[none:Date:qk]' type='filter' w='14357' x='0' y='14625'>
            </zone>
            <zone h='33125' id='7' name='Ad Unit Worms' param='[funnel (copy)].[Action (Site)]' type='filter' w='14357' x='0' y='22875'>
            </zone>
            <zone h='10375' id='12' name='Ad Unit Worms' param='[funnel (copy)].[none:Product Category Type:nk]' type='filter' w='14357' x='0' y='56000'>
            </zone>
            <zone h='33625' id='9' name='Ad Unit Worms' param='[funnel (copy)].[none:Ad Unit:nk]' type='filter' w='14357' x='0' y='66375'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ad Unit and Browser Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99714' x='0' y='0'>
              <zone h='100000' id='1' name='Ad Unit and Browser Worms' show-title='true' w='76428' x='23286' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='23286' x='0' y='0'>
                <zone h='6875' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='23286' x='0' y='0'>
                </zone>
                <zone h='6000' id='11' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='23286' x='0' y='6875'>
                </zone>
                <zone h='6375' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='23286' x='0' y='12875'>
                </zone>
                <zone h='6000' id='10' name='Ad Unit and Browser Worms' param='[funnel (copy)].[none:Date:qk]' type='filter' w='23286' x='0' y='19250'>
                </zone>
                <zone h='24750' id='7' name='Ad Unit and Browser Worms' param='[funnel (copy)].[Action (Site)]' type='filter' w='23286' x='0' y='25250'>
                </zone>
                <zone h='24750' id='8' name='Ad Unit and Browser Worms' param='[funnel (copy)].[Action (Ad Unit)]' type='filter' w='23286' x='0' y='50000'>
                </zone>
                <zone h='25250' id='13' name='Ad Unit and Browser Worms' param='[funnel (copy)].[none:Browser Family:nk]' type='filter' w='23286' x='0' y='74750'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Blacklisted and Fraudulent'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='80800' x='19200' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80400' x='19200' y='0'>
              <zone h='100000' id='1' name='Blacklisted and Fraudulent Graph' show-title='true' w='80400' x='19200' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19200' x='0' y='0'>
            <zone h='8750' id='6' name='Blacklisted and Fraudulent Graph' param='[funnel (copy)].[none:Date:qk]' type='filter' w='19200' x='0' y='0'>
            </zone>
            <zone h='66625' id='7' name='Blacklisted and Fraudulent Graph' param='[funnel (copy)].[none:Site:nk]' type='filter' w='19200' x='0' y='8750'>
            </zone>
            <zone h='6375' id='8' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='19200' x='0' y='75375'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Browser Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='86714' x='13286' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86428' x='13286' y='0'>
              <zone h='100000' id='7' name='Browser Worms' show-title='true' w='86428' x='13286' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13286' x='0' y='0'>
            <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='13286' x='0' y='0'>
              <formatted-text>
                <run>Only Show One&#10;Day of Week</run>
              </formatted-text>
            </zone>
            <zone h='6000' id='10' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='13286' x='0' y='8625'>
            </zone>
            <zone h='6375' id='11' param='[Parameters].[Parameter 1]' type='paramctrl' w='13286' x='0' y='14625'>
            </zone>
            <zone h='8250' id='9' name='Browser Worms' param='[funnel (copy)].[none:Date:qk]' type='filter' w='13286' x='0' y='21000'>
            </zone>
            <zone h='66625' id='8' name='Browser Worms' param='[funnel (copy)].[Action (Site)]' type='filter' w='13286' x='0' y='29250'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Exception Summary' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='1200' maxwidth='2500' minheight='1200' minwidth='2500' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='6400' x='0' y='0'>
              <zone h='4332' id='6' param='[Parameters].[Standard Deviations]' type='paramctrl' w='6400' x='0' y='0'>
              </zone>
              <zone h='5416' id='9' param='[Parameters].[Only Show Negative Changes]' type='paramctrl' w='6400' x='0' y='4332'>
                <formatted-text>
                  <run>Only Show Negative&#10;Changes</run>
                </formatted-text>
              </zone>
              <zone h='11333' id='7' param='[Parameters].[Breakdown]' type='paramctrl' w='6400' x='0' y='9748'>
              </zone>
              <zone h='5499' id='15' name='Ad Calls' param='[funnel (copy)].[none:Date:qk]' type='filter' w='6400' x='0' y='21081'>
              </zone>
              <zone h='5499' id='17' name='Request Errors' param='[request_errors (copy)].[none:Date:qk]' type='filter' w='6400' x='0' y='26580'>
              </zone>
              <zone h='5166' id='16' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='6400' x='0' y='32079'>
                <formatted-text>
                  <run>Minimum Average&#10;Pages per Day</run>
                </formatted-text>
              </zone>
              <zone h='4249' id='19' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='6400' x='0' y='37245'>
              </zone>
            </zone>
            <zone fixed-size='2296' h='100000' id='3' is-fixed='true' type='layout-basic' w='91840' x='6400' y='0'>
              <zone h='100000' id='1' name='Ad Calls' show-title='true' w='14311' x='6400' y='0'>
              </zone>
              <zone h='100000' id='10' name='Interaction Rate' show-title='true' w='17101' x='36320' y='0'>
              </zone>
              <zone h='100000' id='11' name='CPI' show-title='true' w='15339' x='53421' y='0'>
              </zone>
              <zone h='100000' id='12' name='CPC' show-title='true' w='14226' x='68760' y='0'>
              </zone>
              <zone h='100000' id='14' name='Request Errors' show-title='true' w='15254' x='82986' y='0'>
              </zone>
              <zone h='100000' id='18' name='Fill Rate' show-title='true' w='15609' x='20711' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overall Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='172' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12286' x='0' y='0'>
              <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='12286' x='0' y='0'>
                <formatted-text>
                  <run>Only Show One&#10;Day of Week</run>
                </formatted-text>
              </zone>
              <zone h='6000' id='10' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='12286' x='0' y='8625'>
              </zone>
              <zone h='8250' id='9' name='Gross Media Revenue' param='[funnel (copy)].[none:Date:qk]' type='filter' w='12286' x='0' y='14625'>
              </zone>
              <zone h='66250' id='8' name='Gross Media Revenue' param='[funnel (copy)].[none:Site:nk]' type='filter' w='12286' x='0' y='22875'>
              </zone>
              <zone h='10875' id='11' name='Gross Media Revenue' param='[funnel (copy)].[none:Product Category Type:nk]' type='filter' w='12286' x='0' y='89125'>
              </zone>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='87428' x='12286' y='0'>
              <zone h='100000' id='1' name='Gross Media Revenue' show-title='true' w='87428' x='12286' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Site Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99714' x='0' y='0'>
              <zone h='100000' id='1' name='Site Worms' show-title='true' w='85571' x='14143' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14143' x='0' y='0'>
                <zone h='8625' id='7' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='14143' x='0' y='0'>
                  <formatted-text>
                    <run>Only Show One&#10;Day of Week</run>
                  </formatted-text>
                </zone>
                <zone h='6000' id='9' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='14143' x='0' y='8625'>
                </zone>
                <zone h='8250' id='8' name='Site Worms' param='[funnel (copy)].[none:Date:qk]' type='filter' w='14143' x='0' y='14625'>
                </zone>
                <zone h='66250' id='6' name='Site Worms' param='[funnel (copy)].[Action (Site)]' type='filter' w='14143' x='0' y='22875'>
                </zone>
                <zone h='10875' id='10' name='Site Worms' param='[funnel (copy)].[none:Product Category Type:nk]' type='filter' w='14143' x='0' y='89125'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Site and Browser Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='177' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12643' x='0' y='0'>
              <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='12643' x='0' y='0'>
                <formatted-text>
                  <run>Only Show One&#10;Day of Week</run>
                </formatted-text>
              </zone>
              <zone h='6000' id='11' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='12643' x='0' y='8625'>
              </zone>
              <zone h='6375' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='12643' x='0' y='14625'>
              </zone>
              <zone h='8250' id='10' name='Site and Browser Worms' param='[funnel (copy)].[none:Date:qk]' type='filter' w='12643' x='0' y='21000'>
              </zone>
              <zone h='35125' id='7' name='Site and Browser Worms' param='[funnel (copy)].[Action (Site)]' type='filter' w='12643' x='0' y='29250'>
              </zone>
              <zone h='35625' id='9' name='Site and Browser Worms' param='[funnel (copy)].[none:Browser Family:nk]' type='filter' w='12643' x='0' y='64375'>
              </zone>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='87071' x='12643' y='0'>
              <zone h='100000' id='1' name='Site and Browser Worms' show-title='true' w='87071' x='12643' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Summary' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='1600' maxwidth='2000' minheight='1600' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='92500' x='0' y='0'>
              <zone h='100000' id='1' name='Overall' show-title='true' w='92500' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='150' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='7500' x='92500' y='0'>
              <zone h='29583' id='6' name='Overall' param='[funnel (copy)].[none:Date:ok]' type='filter' w='7500' x='92500' y='0'>
              </zone>
              <zone h='6313' id='7' name='Overall' param='[funnel (copy)].[none:Ad Type:nk]' type='filter' w='7500' x='92500' y='29583'>
              </zone>
              <zone h='5188' id='8' name='Overall' param='[funnel (copy)].[none:Product Category Type:nk]' type='filter' w='7500' x='92500' y='35896'>
              </zone>
              <zone h='29333' id='9' name='Overall' param='[funnel (copy)].[none:Site:nk]' type='filter' w='7500' x='92500' y='41084'>
              </zone>
              <zone h='29583' id='10' name='Overall' param='[funnel (copy)].[none:Browser:nk]' type='filter' w='7500' x='92500' y='70417'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Overall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Summary'>
      <active id='1' />
      <zones>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Gross Media Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41593.498140914351].[usr:Gross Media Revenue Z-Score:qk:2]' type='color' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:qk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Gross Media Revenue Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Overall Graphs'>
      <zones>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone name='Gross Media Revenue' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Gross Media Revenue'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Site Worms'>
      <cards>
        <edge name='left'>
          <strip size='207'>
            <card size='37' type='pages' />
            <card size='145' type='filters' />
            <card size='314' type='marks' />
            <card size='145' type='measures' />
            <card pane-specification-id='2' param='[vertica.41593.498140914351].[Multiple Values]' size='35' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card param='[vertica.41593.498140914351].[Action (Site)]' type='filter' />
            <card param='[vertica.41593.498140914351].[none:Ad Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[attr:Site:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Date:qk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Site Graphs'>
      <active id='1' />
      <zones>
        <zone name='Site Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
          <selection-collection>
          </selection-collection>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone name='Site Worms' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad Unit Worms'>
      <cards>
        <edge name='left'>
          <strip size='232'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41593.498140914351].[Multiple Values]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card param='[vertica.41593.498140914351].[Action (Site)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ad Unit Graphs'>
      <active id='1' />
      <zones>
        <zone name='Ad Unit Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone name='Ad Unit Worms' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Ad Unit Worms' param='[vertica.41593.498140914351].[none:Ad Unit:nk]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Browser Worms'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41593.498140914351].[Multiple Values]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Calculation_7570311114722702:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Browser Graphs'>
      <zones>
        <zone name='Browser Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Browser Worms' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Site and Browser Worms'>
      <cards>
        <edge name='left'>
          <strip size='263'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41593.498140914351].[Multiple Values]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:OS Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site and Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Site and Browser Graphs'>
      <active id='7' />
      <zones>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Site and Browser Worms' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Site and Browser Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad Unit and Browser Worms'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41593.498140914351].[Multiple Values]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit and Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:OS Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:OS:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ad Unit and Browser Graphs'>
      <active id='1' />
      <zones>
        <zone name='Ad Unit and Browser Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Ad Unit and Browser Worms' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Ad Unit and Browser Worms' param='[vertica.41593.498140914351].[Action (Site)]' type='filter' values='relevant' />
        <zone name='Ad Unit and Browser Worms' param='[vertica.41593.498140914351].[Action (Ad Unit)]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad Calls'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:7]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fill Rate'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:7]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Interaction Rate'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPI'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:CPI Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPI Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:CPI outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPI outside of Standard Deviations:nk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPC'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:CPC Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPC Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:CPC outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPC outside of Standard Deviations:nk:3]</field>
          <field>[vertica.41593.498140914351].[usr:CPI Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPI outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Request Errors'>
      <cards>
        <edge name='left'>
          <strip size='248'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
          <field>[vertica.41654.504623240740].[:Measure Names]</field>
          <field>[vertica.41654.504623240740].[none:Calculation_8640115165316652:nk]</field>
          <field>[vertica.41654.504623240740].[none:Calculation_8930219124412291:nk]</field>
          <field>[vertica.41654.504623240740].[none:Date:ok]</field>
          <field>[vertica.41654.504623240740].[none:Date:qk]</field>
          <field>[vertica.41654.504623240740].[usr:Calculation_8760311113355964:nk:1]</field>
          <field>[vertica.41654.504623240740].[usr:Calculation_8760311113355964:nk:4]</field>
          <field>[vertica.41654.504623240740].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41654.504623240740].[usr:Metric outside of Standard Deviations:nk]</field>
          <field>[vertica.41654.504623240740].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41654.504623240740].[usr:Pages Available outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41654.504623240740].[usr:Request Errors Negative Filter:nk:4]</field>
          <field>[vertica.41654.504623240740].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Exception Summary'>
      <active id='18' />
      <zones>
        <zone mode='type_in' name='' param='[Parameters].[Standard Deviations]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show Negative Changes]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Breakdown]' type='paramctrl' />
        <zone name='Ad Calls' param='[funnel (copy)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Request Errors' param='[request_errors (copy)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Blacklisted and Fraudulent Graph'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='37' type='pages' />
            <card size='145' type='filters' />
            <card size='314' type='marks' />
            <card size='217' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card param='[vertica.41593.498140914351].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Blacklisted and Fraudulent'>
      <active id='1' />
      <zones>
        <zone name='Blacklisted and Fraudulent Graph' param='[vertica.41593.498140914351].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp_Testing'>
      <cards>
        <edge name='left'>
          <strip size='131'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41593.498140914351].[none:Product Category Type:nk]' type='filter' />
            <card param='[vertica.41593.498140914351].[none:Ad Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[vertica.41593.498140914351].[none:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Calculation_0120314135922361:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Date:qk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Calculation_2830314120024265:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Calculation_9430314151108835:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp_Testing2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp_Testing3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Weighted Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Unit ID:ok]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Weighted Score 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Browser Family:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Breakdown Dimension:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Calculation_0320416171837558:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Request Errors Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[request_errors (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[none:ad_unit_id:ok]</field>
          <field>[funnel (copy)].[none:ad_unit_type:nk]</field>
          <field>[funnel (copy)].[none:browser:nk]</field>
          <field>[funnel (copy)].[none:browser_family:nk]</field>
          <field>[funnel (copy)].[none:product_category_type:nk]</field>
          <field>[funnel (copy)].[none:site_id:ok]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Overall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Gross Media Revenue' width='192'>
      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
      irJFdIaRMCNmfLYG6kWWUDYAsjVQLyaXUDYDoQz8ftQHguAU2ZouimKfc2WhjLS4o6EMiK9B
      iC35gYS+IdeiCySbDCEEVWOgIgJsSJIkiWiLLJQxAKZ2CsMYkypBULSA1H+BzhAkhg+FNUik
      VhCES599VzYZSO44DqSRNBoNqO4gCIIoirIsa5o2el5AZsZfj7EQKAzDdrsNuTWe50FKDSRq
      kUJBycoYw5Xk6QOShgGpKaZpws0pFouapg2njfoL845Atb1vqMWN1396vble4OS87xg0wwmC
      5Pu2rZ9FyvKD9cU0j6h5erRXOdNE7vjM+NlPfzJQhZdXX//RZSSr1d7a2jDOqq5Q8PXGQmlp
      Y2Odvpoftz6F2bat67plWTRNy7IsSRIwZujpY7zReNu2O52OYRgcx+Xz+VwuN9Dgaacw19J3
      a8/33hxF8cLO81erH31P1I/O/Dybl9n6npU3H6ynKvRUP61tbH9AB66JhUHrA5mGLizmjg72
      LM/tHO0Iaw+l0Njfr8wtr+T4fm/k5KewKIo6nY6u67Zty7Kcz+dXVlZomo6iaNqssFwul8vl
      QC21Wq29vT2WZQuFQqFQSHmWVBro4gN++7ayurpyyVfTPaHknDjoQyXHVo52sVBcKb3bzdNn
      KNDSA53o0lP310DwAAzD0HU9iiJVVQuFgqIoXV+7K/lAjuO02+1Op0MYdlVRgMwKS4Xk7YbU
      Zu8Cvu9DIiLP86qqaprW5428KwQiCMPQsqxOp2PbNs/zuVxO07TkQq1XGDjENE3LsmaEQKMv
      ooMg2N/fB68rwzCiKCaXve9DgSlQsZ1OB3YgybJM5j6aph3HAdJ4nseyrHKBGSHQWDRQEAS9
      xQMHxZ3TQFcdS5bewBBRFFVVVRSla6bLkurPcSc80QMh80Snxa2b8Um8bwTKPNHnyIKpwwmT
      5QNlGAkJR6KpI0EO3FBVRcu2VUU2DKPTOhNkTSsu0KEdUoLEX0/n0LP3jqulotpx49Bu89r8
      6tJCSmmMjs6xLOJEgY5tP1YkzjBsTbu+Tn6WD9SLSecD1fa/2bVo/aRdWs6/3X/jIWVjiVdX
      PuIrX35Jl3LmwaHF//KXv9CEa5RWs3pSqdT1Fh9RVLNyLOYW0hPo9fM/dkw/kvJS0Nyr2WpO
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Graphs' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Site Worms' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Site Graphs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ad Unit Worms' width='192'>
      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
      lF/Dc0o++IIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ad Unit Graphs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Browser Worms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Browser Graphs' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Site and Browser Worms' width='192'>
      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
      4sWleAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Site and Browser Graphs' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO29Z3Ak153g+dJnVpb3DuXgTRu0pxGNSLnRSCPt
      aDZ2RnsbodmLuNjY/bofL27ivk7cxUVMxO7dRsze3o1iljManXYlUhQpik022d1sb9DwplC+
      CuVt+nz3IdHV6EI1Gt1ANYBm/T40warMlw9Vf7z3f3+LQAhBnz7PC3rQE+hztNkUoFa9vBZL
      aT+XSqX224n11XK5xIlqx21QlZcWFwW58/U+XzcQbQv78MPfTgxYrywUjVY9IfM2qxGi+jOn
      hv7D//5/HTs+HCvDqdFguVzV6alCNud2D4i1jZEzF776/fscJP3+QKnKvfutN0jk+eeRS6xc
      vr3y2plRwNgpHDEb9U+6cm32Ouqc8rP8rz74w/jJc1PDwd09QZ2dXTCyjNtjW45XJoYDzz/X
      PlvAtf9QOBLLlFRFVmUBACS/Nh96/SdAQcMhx0osa3M519MlTKypnLC2mvaMnrOg/PLiIk2R
      qkosL602JKBCAPYgQEsPZhDGvr483xDB1dnMO2eC68niH/34J0aM+8U//mr8zNmvPvvS4g0E
      TOCra9ff+fMxBZRnV2JNhVi8/ql7cCKxumxyD+hIEqgihiCVUiY0fmbtwS3IOih+g3BE3nnt
      7NLCvFxLKow7MDz+87/7LDJxYvHGl5Hh4dV4GkFxm9snFtZPv/3DsNe2Px/t14NNAfrmt763
      9dXZBw9GvEYAwPf+2U87bnjnu9p/nQAAAM7s1zzC48eiv/tNMThsszmdTuXqF581EWOrJTQK
      S7fv3VNZo84yAITK4nLF73Vptzg8Aa5eJhjyeNC8vG5sJZMeVqrJeqA3h8zGmdtXrl69GTl2
      zqGDP/3RWQDA+IBlseFdvnn1xKDd6I5EVxdIg2PQbQQWZ34lJ9SKFgO9uLzeF6BnYnMLu3Tx
      9xBlJidHZFmlaBoiuJFGU/nq6sy1iQvfji3dj0Zjg4Nht9Ph8nrTmUI+lw6FQg6HY7/mUS8X
      8jXBZWEAqc/EYk63LZEpTYwNQZlfXU+ZDCxESBSRGQJLZDYCkWEGkeaX1zz+kMQ3XC5XKrbG
      WNwUojB6ptWUqqUMbXRKzaIAKBpHXC4XAECV+JaMQZk36Nm1lWV3IFyvVMx6mlMRiZMgUFr1
      stUTNOqo/fqlvg5sCtDHH3/sYcFSHVdbZXEjefqHP0vPfkWhIFoX/uWPfvDf//7/TFVJixlr
      cRCHKmFyqnzGMTD9nTf3bQXqc0TZ3MK8TpuEMpNmqSlZFzhpxGt0ohNrG7UzfgwAMHHs/Ktu
      z0aV5wtpu9eXypYdtnGkb0Dq016B+Hp5dmlt7Ng0JtRR1kT2zUN9dsfmCpRdupPlnMaVu1c/
      u8EEB8w4WMs1/6d/9WcHO7k+h5/NpYY2mE+fnMrmCgaLMeBxlqqt41NjBzuzPkcCpO8L67MX
      8IOewCY8zyuKctCz6I6qqih69LRCCCGC7MG2u7vB+yvQ02k2myzL9mJkCKGiKDjekz9jWZZ7
      NDIAQJIkgiBA3xvfZ4/0BQgAuXXl8tVoMnfQ8ziS9AUIAAhTqYQkH1IN7JBzuAQIQtjWybb+
      3P7fDrbfq6oqfPjT1ld2eqqqEiSRL5Y6Xt7+iD7b2VSy/rf/9X+eOHcqlaxMnDiN4+Dc9PG5
      65/Pl5GTQ34A5Gq+YLTZeRnWyyWb3b5Rrg3YDSJCD0cC//Sf/2byOz/lY7dzkvXkALGYEwJu
      WyaTK1RqNAb9HqveEaGVynKy7HXZWqIi1PJjx8999Ot/Iin2nT/+Y/pxAf7qs4/M/hFOEIyY
      tJ4ssQYCRenpM6dIFEnNXYvKuvjlBz/4l2/84v27P/3z79+59tUrF17ZvFNufnbpVtBJ31yv
      qRvxd/7iZ4X5a1XEOmxRP70XOz4WQVS5ygMKlQlEcgQm7Cam/dBEKs3QtNNm7fho5mdub9Sk
      N18737tP/yVgU4BCEe/icpJSlIXFdZuTBuD4Qizd4kGaagmcEMtUzGw0PHbi/t2bqjHgM6P5
      RFNv80XcLEfZ5i9/SLMmRA/qlYp/8ISYmr135zrlGvcbwNrKkkVkzHKaa6D/7f7CaMiDAfkU
      hemMFgMONoolPQas1s1vThVrTZVa+vxzayTSRMVstjiAMIUqHJo6Vs/ncQAoBDIWdmZmxcig
      i8trhWyyVG1aTSwAACAIAFCSJBQlx8ZHAVDW4huREXNVwi24MLeW8FBImodOCx2bvX/OHNwq
      QH6v9cNPrhpd5eGQd+tHox1TBUGQZblYLO7+M32mdat3NgJFUTAM68XIWwffPMYXCgUEyjwv
      oSRDEKjdaikWSyQKIUaghK6US5gtFpxi0vF4rVJc22h8+7WTAqSMFBBRWmzWeK7OGOxWkz66
      umR3ebOZjM5kZQhUbNUZi6scm6lgnlGfvtxUaAKxWq2J9RVIGvQ0AcAjAdLIJ5NGn4/qmQFj
      O+n4WrZQCQ2NWo3dz+r9Y/x22sf4TQGCqjQ7vzI1Frl0+XbAb5MhlsoU3nj9/Iv7Gg+OVGw1
      ky95g0Neh6XrBX0B2k5bgDYfIAlSNpMediDZ7EZGhIbMzSY9VpSB/bBYqnuILzjoCw4e9CyO
      KpsCQjK6oUi4KGIet3PAb1PC309mCravgfT02SN9V8bT6W9h2+ncwo40vXLEqtLKemowHBIE
      fv8Hf0jvzkq9PoWJogheDgGiaboXw0p8E/KcgGAYhlFUryLtj64AaYO/DALUIxSxVebkCZqS
      QK92GU1/6N1G07uRIYTa4IfLlXEwyK0vv7yylsh2vEwbHW+/cYHEDpcpA0LYaDRWV1er1eqB
      668Qwv4KBACE6WTC4e+eIs3zvCiKPdrCNFfd7i/meT6bzUIIHQ5HJpPhed5qtT4paqynAXqC
      IBQKhXK5vClA//2X/yjJ6NDkkJ5gKrxsNTCNZgMRm1WZ8dt1EkKUMtlTr55fvHvLaLGnytwr
      E46/++VlswW3G1xWO4MChBMUCICkIiaTvr6RYc1mQFvYZuxeHhsP2OstQWkVOBFa9PTswpJr
      7ILPAAYH99P6oigygqCKomAYrqoKhmGqqkAIMAxTFBnD8CeG56kqraNLpQoI+ba/SdN07w5K
      uzyFQQhbrVY6nUZR1O/3MwwDADCZTIlEIp1ODwwMPMkZsu/ThhDWarV8Pq8oit1uHx0dffQA
      EhHn13JOBqFRMJusLT5YHRqdyOarCRNud9hVESeEUqoqry9c1I++od0iiY1a01ZvpgBQZu/P
      ShA9fXJ0I8FlCi0aV9740c9AMwYAmoivx1IbLrsZAfXMUrUGEd1GarawrwIkNy59cTfkJG9E
      awRfDY6ODPgjSiMzs5r/5rmRX/7m4uSxYziONEolXKfDEcRocwe8m2m1iVSKwHCbpbsZ+sWj
      bUyKonAcx/M8z/OtVgvH8bboaKAoGggE8vn8yspKOBzWDtW9m5Isy4VCoVKpsCzr9/sxDHvs
      GH/m7JmGhDosRiNLpfK1Ewby/Nk3WL0+k807LToBEhgAgDZPRRqWs8dEFQMEdubEsNnppDAK
      SnWMtU6fOgsAwIEiYQxfKxpNJkaHgNDEW0M6uVEKREZNehoARTkuywC0yjnVtK/1MRAUgYoo
      SQTJnBj2FlqiJAmri8suTzCerfg9lrn5xWOjvlQ6LersulbagzJtAfJ7bR9dvGHxVgDw7vyQ
      Z0KTg6dGJWu7mCAI/EMEQdBUVJqmaZo2m81ut7urfCAI4nQ6aZpeWVkJhUJbxWuP0wYASJIk
      PITjOFmWtSVHW+0kSdqcg3ZDJR29t5o5efa8ie7Vwe/Qko6vZQqVYGTEbu5SU0b7UmVZfqYx
      m82mIAiiKDIMQ5KkqqqaLQBBEFmWeZ4HACAIIoqiJEkoimpiRFEUTdPaZc/0OE0j0el0CIK0
      74UQkiQJIaRpeofzvKqq7WkAAERRbP+yWqSANiuSJLfe1XmMr2Si+ULj//6794Z95sL6Mjlw
      TNeI5RRKTMYJV+AnP/6RzdwTU+xhQIs6e5KIaDqQ2WzezVCqqpbL5UKhQNP0wMAATdOiKPI8
      r21GzWZz69KifTEIguyLpuLxeBRF2RqOJ8uyoiiNRqNaraqqyjCMXq8nCEIURW1dkSQJQoii
      KEmS2nwoiiJJEsefrC8+pNMbX0lH769l9Ra7mZQUgLTqAkLTkiTDZhHqnWePj+/9NzyKqKqK
      IGir9XRXhqIo+Xy+XC6bTCaHw7FLjeSFuTJUVeU4rtFoSJLUFhSSJJ87FKlTgPp0Q/3tBx99
      74++txsBqtVqgiBYrdZnMv72fWEvL6oYTeTtdqsg8KIodmgA22EYhmEYVVV3b9fZfM5TQ7af
      l96NrA2u6dGHZQU6zJmpgiD0zhd21ENaD8sK1COH6H7RD+fooJ+Z2md/6AsQAHLz0qXLq4nM
      Qc/jSLIpQKn4Wiy56Y7mOO7g5nMQQJBJxeV+0fTnYnOPnF1YsZBwo5Ar5ovlYtZjMXknzo8M
      2F/sZKDACzhJYigKAFAVBUE15yi2G8usLIkIikmShOM4imGyKCAojuOoKEokSe40AlT1BkO5
      UgHA9/jLiqxComdqxMvB5qfD1SsqxZRzCwhOs7gyO7/sGH3xFVjr/89/+q8jJyZZs9VESOvL
      Kf/x0N0vZr7/L35iIp92mpAbX165H3IQ19eqykb83b/4WWV5popYwgb585nY2FAQU+UKDyhU
      RmTOPXjcZXmkFCeSKQjV7bbmuZm7hYb0jVfOaaruvv+2Goqi9KiKT+9GBgCoqqp9JpsC9Cd/
      +s979KRnAXH7/OVcui4pIiEXS3kmz0KEAKq0HssGg76dPgwEQ1RZEAHN6AenxhFEWV7PhIb0
      VQm3EPJKPOOmkAwPnRY6tThn8IyCLQLk99o/uXTbUa11rEAYhiGIIkmSoii1Wq1Hv3PvDts9
      PYV1ZqYeEiRRRFAUQVAIFUmSSYqSJRHHCQgQqCqKLGMEse97Sjq+lslXApFhh8XQ9YJ+VsZ2
      DqUlWm5cvno/7CCuR5ssF1OtEbJZMQ+EK9H7qPd4Pnqfq1Rf+fYPxiP+/X0shBCCZ7Yg99E4
      TAKEYAiUeREEI8NiLFeDUG+2KpKIU1Q9n7IHwgKdN+r2397oCw76dtnxp882DtcWdjjpb2Hb
      6Vui++wPh2kLe1567YgVBKF3gx/dxMJ+Zuoz0N/COuhvYX32h74AASA1P//8y5V4uuPlQi51
      78FC/4yxMy/DFrZ3MqmYKxDueNFstqQLjV1GJD43RzQisa10vjwCJAo8gmKiKFI0Iwk8xTCS
      wCsQYWiK5ziKZlD0Cb4QCE0WS61a7XBl5Dc2aJqmKFpRlB6l7R1dHQgAcPgs0XtBbly9NhN2
      EF+tVvBWefj4Mbd7ALTyD9byb5yKfPDhpeGRUYrCqoUizjAoVM0OX3jArd2aSCZFQTAYjR1D
      egZCnhf+ezw37arWvXOgduVlESAEQ1SJEyCrN02N+XM1XhKFtYVFu2sgnq14XZbV1ej4kGdj
      Y0Nm7Sy/gekelYb1e+0XLwuNeuMAp793KpXKxsbG1rwwAACKoiiKItvQXtz+7w5vaYHbW7MW
      VVVFEGTTEp1emVkqI2eGPbWWsLy25vf4cVSxWm25Un0wPDB3/77ViM/EWxGvKZVIj45GKBzk
      WtRYyHlAH9d+komvpfPlgfCw09q5CIGHOepH7hivJRZqOa8daLqR+ngl/938Cx9vIqAJz+bU
      b9ydLQlAqmROnz4tNMt3L824xqY//vAjk8PJ2AeS6fSAd2rx/hd8M0Sh8OInHwfHpuol7uUQ
      IHVHTVN5SK+e/jCwZt9p72i92NQ6wjng0tIyg8ImRBQVhVKTJuhKpWyxWmQIPMHRmWuXhoeC
      a+my1axXeF6BAkMSGy3dK9ND+z6zw4OqyJICKZLo+8K205mZmkwmc7kcAECn042Pf00TmTt4
      cO9WqSl949ULrb4AbaPTEp3L5U6fPl2tVpvNJgDgw/c/mH0wWy7lrl67+WB2rkeTOOSQBI6g
      L8sho2c8+oDee+89g8FgMpkAAAQiXLv5IGAX7sXxC9ORFzCPQ5iZ6gsO+QBoNZs9daYe3czU
      x5ypEMLh4WEAgBb8e+bVt6dVtVkvj04bjPp9KFv0VPqZqfvOC9WBWq1WpVIBAOh0ul3Wwvn6
      0Feit9OpA927dw8AEI1G7969CwAoZNc3yg/TC/nK1dsLPZrHoUBqXLz4xUosddDzOJI8bLZC
      krdv306lUmfOnAEAzMzMys0v1woyZXZ4sOJsyViKXXdFXj1z4qU8tyOZVMwTehGq3svHpgCJ
      ohgOhycmJmKxGABgZOIkrKyv1fPnjw0B0WuUGJ1adA302jWk1msNWscSOAYAkCUJxTFJkEmK
      2I0pjOdaKIbzPE9RFEGSrUYdIyiaxBtNTq9nd8xMhXaHo17rzAtTFVmUVZrqlR/+5WBTB+J5
      vl6vAwBomjYYuqdH9Z7af/6PvwiPDenMNhMhxVZS/mOhu1/O/vGf7yIzVap//tVcxIFdXalo
      PVPra3driHmAFb98EI8EfTiUKwIgEQkKdd/IGY/tUT3NxNr8zTtzoyfOTQwNbB1y5t6tclN+
      7fwZjuN6FM5xdHWg9uCbD7h//z6GYaIochz3zW9+c21pjjS6/G4bAADIfJkDqNTAGKOe6emf
      I+J0exvlYguiKiHV6rVquYyTNLKbzFSUQFWxxeMmkzXoMSKIshRNBSN0VcTNpBLP5p0kkueh
      y8Jk4kl76MTWW/1ex6WvYKvV7BiSInAUhYqiqKqq1VXtBYqiPGsJ2F3S68xUbdqbK9CtW7cI
      gvj444/feuutM2fO/Oq9n5MGPZSAzubWibkbKeyktSp6X33nVGfU1X4CVV6UEQBRBEgqAIqE
      YDgKIEbSItdUAcqyul5EKmjOVH9oyGUzdb2gfwrbTpfMVAzDfvazn62vrwMAzBYLwbKVfAUC
      CHHKaSJ1ZkrH9lgbEIu/ev8ekPLhAb+ooKV8jDI7lWxs7Ns/nb/0a2fkxLnpyV48VnOmYr2x
      5r30bAqQ2+3OZrPr6+van9rb3/n+1ote6XJjL0AZlANGF0ngAgQmkxWjKYGm4ytLtNFqMekB
      BKAHS1A/M3UvbApQu/pE78pQPB3K9q1vvUXSLFRlAJUWL+t1FIq9Vq/VaGZUEri5uVmXL2A3
      H5SO36cLmwLUarUmJyf//u///vjx4wCAv/2bvzZ6QmMjYzKCp+PLLEVZPCG0kU4L+lqxMD5o
      4xTj2emx/Z6MePGT309Mn5mfXTQyikrZnayC6/T3HyStZM00+tapyZ5sYX32wiMd6He/+935
      8+e144bV4cFx6dLHH+rCx81iLlMVWmuZYQ+7GF8fDVhn19acjhNPHvN5UYDb45m/f9fqsKQK
      0p++derKpc+xZsPA0jQJcPyJOkrvHLH5fN7hcPQzU7sOrjlTN09hCwsLWiAHhFAzRreBsnD9
      xt2T585TX7M2LGKj+A+/+fSf/ckPRIHT67v0YdkXeueN793IYHudaL1erwnQ9vMqglPnXznf
      o3kcZhBCNzESJikKwH5aTxceO8ZrAWWffvqptiDdvXlVxg2l7Nr5V94o13m1VdKZbaIIq+ll
      g9svSKjf72dfmhVJavzhi1uByOBw6LHSVQTFnD59BgAgHtC8jgTdA8rKdWFkJFCMFf/Df/z5
      +PExAxf9Kk29djzUrGRbD+5VTWP/OvIyHXyRbCrmDb2UfuKe0z2g7NTx8QoPzn3jj05fQBqS
      CqQgYUuFI2GT+ZzYyEuE/sUmr+2KVrOB4USz2TQYTVyzoTca+WZDgohRz9ZrVdZgwp6YmQpc
      Hm+zUe/6ptZ09/CnNouiiGHYVq15+8iSJEmSxDDM3vM0OlObJyYmtIAyrY+pyeZqW/XtAADg
      DoWHN//f8JjH8bAg1W/eWYg40CvLZbRRnDp7xg5xVCjPrRdfOR749OKVQCisY/ByvoBSNKLK
      FldgOLTZ4DKRjFfLJU9otOvAWsO5g9KBtPQujuMoisJxvONUBSEUBKFSqdRqNQRBFEUhSdJm
      sxkMBhRF2zqQVmW2VCrJskySpCAIOI7r9XqDwcAwzM6KtjbDZrPZ7i/WFr7HdKB79+4Fg8Fo
      NCpJ0ltvvRVdnq+JmIHFI49HySzM3JFJ49ToYK1aNZq6e44OBoxAVb7J41arc2wimKnWjQZL
      dH7R7PTFM2W305xMJofDrnKppOgdrFTQ2x6Fpvi9ji9v4DzX2svzOY5DEOSZAnPbPeqoh7T7
      XYqi2Gw2m80mz/Nar0xJkmRZRhCEoiiGYSiKarVatVoNwzCLxaI13YUQchxXLBYzmQzLsiaT
      CcOwYrHYarUMBoPX69UaJEIIRVFsNBr5fF4bf6swafKhyU2tVqtUKpIk6XQ6WZa1DocEQdA0
      TRAEiqKSJD1ypmYyGS2g7PTp0198/sXUianf/uI/VWSnwe7Q15fWZfeI32oyGhColhMzKw27
      z4L+2Z/95PBtZc+M5kz1Bgc99u6xvLtxpnIct76+7vV6Tbv4u1IUpVAolEolq9WqXa/1oNS2
      S1mWaZpmWZZlWZqm2yuE9qVqLXBbrRbLskajsevSqKpqvV4vFAoIgtjtdr1e/6RlRhOmZrPZ
      aDS0vwGdTkdRVK1Wk2XZYDBYLBZN7Noja008m80mjuMkSW4K0NWrV41GI8MwsVjs7bffXlua
      q0u4gRIqZQXQNGxkHqxkT05P04CXCYNYS3Oqwe0wRyKhp35Yh59UbDVbrIYGR2ymPTXdlWVZ
      20osT+4grqpqoVDQmq5jGIai6KHKypBleTPj/WmdXDsLjR+OgLLDhSwJnKjoWd3uEwtVVU0m
      k6qqBgKBrWKhKSvFYrFardpsNk16wFG2A3UG1d+/fz8ej6+srNy4cQMAUCvlYqlcuVJ+fEb8
      rVu3HiysAgDK5c23jnpRix1o1Gp379wDz3JCQlF0YGCAZdnl5WVRFDUVOJ/PLy8vJ5NJhmFG
      R0ddLlfvPAwvnk0JxTCMIIiLFy++9dZbAIBbd+enpiZ/+8v/YnCOVnh10CikRYPTYiJxmVL5
      q5d+vxLLHZ8Y/vzyTZ3NbUXrb/zwp3a2J+eUg6Ja2ojHYzjTpV7HzmhqB8Mwq6urJEnKsmw2
      m0OhUO8MAQfLIyWapmm3272+vn769Ok7N65ygKZhMZFWBgaD2aWv1krYiYlRq0UHAdIoZgst
      MGDGUlVEr2fQWsJz6juDzj15iw5hZqqGIAiiKDLMM2dXyrKsqcM7X6bVSXne2R3MyGCLo21T
      gFKpVDabBQCwLDs21iVOo1wu76Abvtz0Q1q306kDPTWg7GsrPX12pntA2fz9W7PL0UB4VIe0
      AK4XILo2f/PE9Dko89lCHWOMr589fqDT3lek+ieXbgUiQyPhfe4D9HWge0DZ5UufthRWoVgj
      bMTTZacvUMimr13/ykxjKuOLLt5/qQQIoNnkurftq+nzLGwKEMuyAwMDPM9rKtH/+O/+/bYr
      v/sCZtOsVxGMwEma3BJ/KApctdagdayB1QmCQFEUAGC7g7NZr2IEVa/XWVZPMXStXMRJnV5H
      lSo1q8W8Y2Yq8AUCfKvTHqHIIieq+h40mHqZeHpA2YtDqt2+v+wg6/cyyHhIj2BsIV+0miic
      Mmzk0na7pV7lq7VCMBjO15qtjSRu8b/7jXObkiHVbt9fjjjQy0slLTO1VcjUEZOH4q/OJwa8
      LgIqJQFSiCQ1yoHJC37Ho/N5IhnP53IOf2c4x+yDmRonXzh7WlXV3nWyProtLzXrfPeAsosf
      feAJDZotTokrsyZ7sVhmSXR+dm7k+ARJm13dqpnuAxiFqnxTkK06Y7ZctpKt1bU0P2ByO1mn
      0wnFWp2XCRzLpDOQMRlN+kRuQxRaG+XmgMep3dvgcIfD4/dbUERZXEkMhPEqgpspmCmU7SSo
      8sBpYSrlyoD6mHHQ73UCTCcKnbmnOppsiIh2ae/6GWqugx6N3Ltptzv6PrIDLS8vGwwGt9t9
      +vTpX73382MXXr9x5brDbk48uCm6JkIuavXG/Ng751pl6Y+/83aPptWoV3GCAigOZL7e5EwW
      a2x1ORgKqwiqyiLXbFGsYd/3lExiLb1R8gQGvY7uJ83+MX47nZmpHQFlJ06datbq7377W7P3
      bvzwL/9tqVhmKWxyZAoiKj3Us/JTUu3O/ZWIA7m8XNNzMdUawWpF38TxT9//R9x3PL8+p3LC
      K9/63r4LkKpCgKD9KhzPx2GqUKYKly/fsBvxJhMUE9ckfYAGkoIRUiVTVxjWZuSyG8fOnPO5
      7S94Xv0VaDudJe6uXr26NaDs9rXLesfASCSw9Z7F2dnBycmvYdnSvgBtp3ML66hQFotGJ632
      9/7xVzpcrhfyOVU/6DWk56Pr+Tgvsm5G1ZtNv/n/Pvm3/8u/70d+fM3pXqEsGA4LHDc+Nr4y
      f3v61dcLddmqA06zm7EyJEoQBClw9bOvnkMVAA5BYMIR7Znaju4zGo29iCl7oZmp/YCyHdiv
      LUyLNOU4juM47dMnSRJCKEkSjuMmk8lgMJAkuV+n+he6hW2vUKaSxqGHiXaqzM8uRCcnx7XE
      GC2ITG/oVbbv4SGVSnm9vqdftwsghLFYDEVRLfmOJEkMwzQdCMMwQRCq1WoikVAURafTYRi2
      tQUTgiBa/KuWuKO9juN47zKXd0/3gLJ7t2+fef3Nn//8H9wuaykfN5q8CoakNjZMNFLcKMUr
      nFEqlzhseCLy1pvvMsQRj6yX6h9/djM4ODQa6chYUudm5202myiKmv/kuYEQptNpgiBcLlc7
      7UGWZa2TEgAAx3GbzWa1WrXuUoqidHRn0rZprbVPu/kSgiBajgRFUVrOzdYmTrIsYximJQO1
      xe45ljdFUarVqiRJW58uiqKWmNG9Qll4ZMLBKJyE6m02mgAWm6tSLi6l8uaQE0Dg9wcMEmkn
      vRYrdeSlBwAA0Fxq3R8Z2f764GBYa3n51L2g0WioqmowGLZ/Q5r0oCjq8/k63t1+CtMEYjeT
      1qREkiQt7J+eKTIAABsRSURBVL9er2tBXm00CdPScTSrNISQYRi/379L3QhCWK/X0+m0tr1q
      w2qro7Y/Qgh3G1AGACiXKxbL4S1iX6+WcZKuVqsWm71RrZhttma1LKqozWIqFfImqwPHniDr
      UvPzKzeNds/05HYZAmB3OpAkSYlEAsMwn8+3VSAghBsbGxzHBYPBrrL1Io/xqqqWSqVCoRAK
      hZ4qppIkJZNJCKHf798ej9upA+2mQtlhlh4g1e7NRiN28OVSCakVpr/xGqy2cIlbiZcsjHLl
      q5tun8/AksVcHpA0IvNWT3hscHPDSiTimWTS4gnt5fkEQYTD4Uqlsry87PF4TCaTlsJXLBYb
      jUY4HH7BrUy7gqKo3W7X6XTr6+sul8ts7h6koE27UCi43W7tF9lhzO4BZZf+8DFgzEGXcfbm
      gmUAT9asU4POWiY1fu51I30IDu7bwShU4eoc5nb7R46FE4WijmKX5udNDm88U3Y6TBu5nD7g
      rNdqqoE2KByyJU/e73USOpMqdS/CwfO8JEmFQmGXE7FaraVSKZlM2my2Vqsly7LNZiuVSk+6
      vnd5YTucwmw2W7FYzGazdrt9axtUQRDq9TrP8zabzWazybJcLBa7jtCZF3br1q1EIjE8PMzz
      /OnTp7/49Pez95dNXkNmuTB52nX1XuH4REAplsbf+dOpgcOU0bwfZBJr6VzJHYj4nNauFzzr
      MR5CWKvVNL1naGhoB4XjAC3R2t5arVZ9Pl+r1arX69pZwWAwGAyGpx4aOl0ZO1Qoe+lJxVay
      xXpkeNRi0HW8lUwmfT5/q/U8diDNtrmzunqwrgwIoZYhr+XGUxS1+7WwUwc6FAFlB4QvONSl
      zC9UiuXq/NyC3W7fyzF+55zo9jG+F+zGOs8wTCCw6fF8pvghzUwAnlih7PZtkqQQFDJ6EyJz
      goJbbBZC4ZPFpsBXhsKjJtPLb60mCHL3x/jno6crEACgdyNDCB/rlQEer1AWXZqTcGM+es97
      6g2dVGllEhlmaASNJxrmupg1ukYOVWmXnoBgRoPe+DWwtu+R7gFlb3/n+yiKLt0x6iIRj4GF
      It8QFAydOkbQgMDoHoj1oc1MBT1zpmq8JGV+D0VA2WGlHw+0nae0vFxfW0smEgCATCIpA9DI
      J5bXYtdu3Ikl4gCAeDLRo2n1OXJ0Dyi7c/2KhBvZmxcfzOUdHj2LQsE29S++OfWH3/7y8ue2
      JiaFPevvvvWNA535/iHVPrp4Mzg4NDYYePrFfR6ne0DZ9LlXcZwobsQ9oRMQqCSUKJPrzlx0
      /MxrK4sJvd1iNr/owOReguWSUf9g9yKbfXbmcAWUVctFjCAJSkcRj7Q/gWsWShWd3mgxGTiO
      0yqttFNUt95LUEy5XDYaTQzLljYyBGMwG5jcRsnlcuzk0JFaX167ZbC6T0w8lt0si3xTUEwG
      tq8DbecpAWWVchlFUaPJ1Gw0GL0eBaBarZlMvcknfDSp2sxC3ElWbyXhiJ9GCX1ho2i3MiRj
      LhdzFrNh9j5frW4EA6FMpS6VMqjR9523X2lnps4sxAft4PJiUctMFVvVUgvCWvbOQsKVs1NA
      KfKQQiS+kg+feD3genRQSMTXY9HolKOzfPHs7IOGoJ49Pa0oSqPRk0JsmiHxKGamdvZM7Qgo
      u/jRBxJu9FjQ2fnU5PRIrQZZrFbhyVSh+m/+8s97FQaHUZjSqvOyy2iu8Q2LqqbSRRnqPG6T
      zWaHYo0XZVbH5PNFWm8x2CzJfEUUWhul5oDXqd1ba+E+f9ATtGGIsrAU8wWDFRU30UixUreR
      oMkD1sKIktzRnNDvc7FGB1CkjukYWIZTJQxFURTtaY5w7w7bvZu2FiQJnlShTLNEF3PRUh0h
      9ayBpchmjmcHII6/ebYHjZ42UTLJDM6wBKoICkoCWQJYPp0ciAzzzZrRaERQTBB4iBCmbU6r
      vZBJrKVzRZc/stlkeBv9LWw7nVtYR8vLk6dOAQDA1Atu8Na8+Mllh9chI4KiEphQ8Y9MzN2b
      4RtN40Agen+mWKycPnsqurZ04fzZfXyqqkKA4gb9fgrl14dHluiOHw4CdPLkaQJpViWRAqBa
      BxRJjB0/FXIbFpMbAKoup31ladG4TVnZI/2eqXsBOVCJORr0t7DtdFqi+/R5PjYl9MHdW5yC
      nTp9cufzwK1rV9yhEZ/rkRWxVMqUSsrQ0EFWFzyimaka5XKZZVmCIPY9aPrFOFM3BWh1dVUU
      lNXYioXRiaKC0FhiNWqmkBinn3BjHM7KNe6f/w9/vrq66vY4/4+//lvWM0gDTm+0sjRfiBa+
      vGr7wU9+bGMOJlz6mXrkPB+92MLaCRuCIEiShKIoTdM6nY5hGIIg9p43+EJPYRarBaoI1Jn8
      ZjqxUbXpFIX3h4cnmKUlp89msdpqpSaBgPDwmJHG/aEwZnL7rRQCAQQti2X4wYO7ByU9vUS9
      cePWmTP7eeLbiiAI5XJ5cHBQ69SkKArP861Wq1AotJs7oShKEAT5EE2wcBw/2BwPbbabmYp7
      D+cQWrWagDgsRzZGUax9+OmN0PDQ+GDHYQxeuXzl1OnTHNeTrs1ra2sej2eHSGTte5JlWVui
      tNL3iqJo+/VTZUirQqetZO3MaJZldbpnNli060C0G1JpTfgghN0bzhWy6yplXrh112RhqpxM
      suYL06NfXrwUmjjhd9mSyVSpXNIhXLIKrSxdawnnXzknN/JruWalXNOTfFU1vnKye3biYQTB
      NlJrgeHtE0ZGx8a0kNb97VgIIczlclr+w25OYR3eyXbW8853aanN4GFBTI1cLmc0GtsZ1k9F
      lmUteYOmaYZhtJ5gOI63P5Pu4RwzM7MyDjPRuqPEccZQfnX2wvTg+noiMjUNANhILizEeTeZ
      yxGDXGlDlMW6eE7XKLz366tvHA+PTro53r2bye0vlWKeoHXFYtHp9lQKeYfbUy1tCArmdtpy
      mbTN5SGwJ6kUyPD4pCJ2qcNqs3W3Te8RnucrlcrISPdE2KeyyxT3R2HLON52PFsslnQ6HY1G
      A4HAUzuCaV3x7Hb76OhoxzLZPrV0bziXSqUg5GWRsRsUjvE0Mkt1CdRyWZ3JDCHU0Tq3x14q
      FxPZqpHCOEnR0TiBQINzIL62fvZkpCQbvOYXW15Zql6+tT5oVy8tFGFl48K739TTBlKtLybL
      08Oujz+7YbE7zAY6n91QCQoRW1bf4NRISLs1sTr32RfXjl14++RYaPvAu284t3tyuZzJZNJ0
      /wNJLKxWqzzPOxyOro/WMgyr1SqGYVartes1L13DOVX86upNix6roI6IFV3fqPh8gdjCXaPd
      raPJQqFQqjQDfntiPQ2MDoNac4bGBwObbVMhX3z/k1vBwcjx8e6dv/fRkKhtXqqqer1ecKCG
      RI7jYrGYw+GwWq3axZoK32q1eJ43mUxOp3OH2zsTC69fv95RH4g0ujCxSuiMsVjM4QkEvI4e
      /I6Hgkwims4VHL5IwPP8ztR2V6idpUH72kZGRrQ/64O1RCuKEo/HtcZ4GIZpRgSdTqfVLtp5
      8M5j/Pb6QKSJ1ekCiJqgGPwllh6glfrGcLOxu4i0Dx07DyJJUrFY1HpFUBSlHXY6VG8IYTwe
      9/l8mty0n94jK2i7FvgODAwMaLr2k1ScJ9Gedvf6QGaLhTA7Ub6Omax6+iV3dzzJmSryzWpL
      spoMWkWcnQfR6XRaiqdWsq7ZbJbL5e2ak9Vq7VjMnq/o027Y2uP9SSAI8nytFNuDP0N9oK8b
      tWp5dn7pwvnzz5cbvxteAmfqM9QH+lpRLW3EYjGMeekzcPdK9/pAn33yO73dT/B5Wqe/OF/G
      atGIjVoWvcP6Mk+5TQb96xdO7+88DltmKk6xgyMTAIByuaSpQT16UO+O8b0beevg3RvOIQCI
      kpDPVzAlpTZUknUDULYbqHyVNzl7MqcX4BB9Pli2n5XRhX59oGegL0Db6QwoazsLv4b1gYBY
      /eDDT+ZW1g96HkeSJ9QHunlVxg3F1JrTwvLGQHXuJhMccZmwxZXiaNieyLV0oKpSerFWQ1mG
      q6LuiGl06BhLHc2IDgTPp1aDXZypfZ7OI4Xmvffe4zhOO9yX64LHYSmXK6gq5rKZ9VhCVEFo
      KOSyeFfnZmmai6dbI5OTq/MPcrl8o1leiW8QxD5ITymfq1arnPiYNs01a9FoNF+qAgC0fRYA
      sL0HZSmfqzca0Wi0UqlKKkwl1vOlClSkeCKlPsVxjY4fOwHlzrBDWWgVK/W9/UIvP5s60M2b
      NzXRqdVqb7/9drWYq/DAqKNYEpEwqpTNbhSLQ2PjiAwVVSRRhDAYV+fnvV4vYzRkYymX385L
      hIndW882sXrlTtxJlq5H5UEfgRLGQi7vdOgp1taoFk0GOl/gqtVcMBBMFKpIPa/qPd9/9/VN
      W5lYvXInPmRXPpsvaJmpcm61CVgr2ry5nLSYzTSiFHlIImKzkBk6/c2w51FzwsTq3B8+u3Li
      1Xemx8Nbp3P3zk1OVE9Nn+R71jAVHOWeqdq0Nx8wMTGhBZQNDg4CAEw2V9sAQgLAhkIDodDD
      FzaVpPHJzayxQCQIANiHhn84gyn1Gqf47BYR4SwIXyw3AS75GKvFYoZiQ1JUi9lUrtTtNgfC
      gFSx+SgzFWcwpV5u4pHIsCPixFHl/uKad2CgQuAmGqs1OZwEggjMFlaidAz5mIfB73M7vGEc
      6SwPaNKzYkMicFzCsD22OngSR1eJbg/eveFcdHm+JmIGhiQIPB5dMLvCaqtEGq3NSgNDFFkV
      WLNnbCi037NSSvlSpV63Wq0QJSxGFgBQLpUs1u7Vd/cLzZlq94aD3u4lR/qnsO08peFcMl2Y
      OjH10fu/wY0Ovrzu4DmWDcPG+txsDAei3m6aPrU/PWwep/m7X/w31/R0OpVSMfqNV88CAHot
      PWDTmUrYjm5I7oHSvT6Qz2OLp/LnXn0DJ3BZGQUqaNVKhCFsZw01wOJqTUvp2G8wi8Ou1zGI
      oKLEi7Mr9jNT98LLElDWS/pb2Hae3nCOMDj1uNRQCKOOEHgBSjxrczXyBavP1yxmGgrh0OMK
      qVudmQmMTpr1h9QR0afXdA8oiycyKLEhKxBBESMFZ6NVtrFMjF4oXX/w3X/3b+YeLCAoUjIb
      EEQqVfDy7WtvvvHmAf4ORzozteMYDyGsVCosyz5fmM4OI+8vnZmp4PGAMijziM5ppqW6hOGI
      9Oq5yVxcZ3I7Fb9r8cEDI0s1JaxZrSo4Uis3B0a7hxK/MI5oZirYtoXJshyNRnEcLxaLsiyz
      LGs0GvV6/fPJwQt1pvYDyrrSbDZ1OvbFBJS1Wq1YLKb1GgMAqKrabDZrtVqj0dCyI8xm8zNJ
      0n4JkNadUwvLbIc49gPKtiBW3//kenh4aHI4/Pgb6mcXP3/3W+9oWaE9eri2+dZqtWw2GwwG
      KYpqb8daiDsAQBTFUqmUy+UYhrHZbLtMLX2mbV2TEm1jkiRJ+3drr0ythyYAQEu4BgDgOE6S
      ZPeAsr/9m7/2BwMzcf54WLecaZKkDudSA6PTXJ1nDDqUr4WOXYj4XpZKvwieT64GR8a3vYEG
      gwMEQUiS9NQ/fUEQtDz2Z3qyVmQzm80KgjAyMvKkpzAM4/P5vF4vx3GFQiGZTGoNwsGWLFUt
      jZB4SDujuf0Uja4iosmHJhBaKr6Wm9FOwt/alE77QZIkBEFEUeweUDY4cerCpHcmfp2TMb2O
      nhodLlTs77526v2Pr0JZkKHm1DxcAlTMZQgdm8tu+AYChVzGOxAob6RaMhbwuZOxdZc/SOJP
      CoVDp6ZPoUoXy9bUsWNgd3HviqJo6Z7PtNkpirK+vm4wGCKRyG4C4LVkD62hXTtDvj09TTga
      jUa70W57zHYnXu20RJKkJoJa5+XdB/ZvHVAb52UJKBMrV+4lh23Kxbm8Us6++UffozGaRlrL
      qcpU2PaHL26zRrPNzORSOYWgIF+zDYyeHI9otyZWZ3//6eWTr717aiLSdexd2oEEQYhGow6H
      Y5cJ0RzHab1LLRbLvidmbFVcwC4qMTwrL13DOYLF5XqpgQ0PjwWNI2vxhNcXWFqaNVqd8UzJ
      ZjNVqg1oJCVZQnQWEwm3ZoH5fB5vcIR8wh71TD1TrVZrKpVqNptPVVM4jqvX60ajcYe+pHvk
      xXjjH5X51QLKjEbjmTNnLn70gctpUa1jaDWaKzRsdlOjJeOETGCG6ZMvuHRrz8kkoqlc3u4J
      h3zd8yefyRINIcxkMq1WKxQKdf3+tDbyHMeFQiEMw466Jbp7QFmlXKZQtdoSN0pVtx7Op8rD
      Qc/qymJT7NVh5ABRVRXFSIdtfzJ4EATxeDw2m215eblcLnMct/U0JMvy6uoqgiCDg4O9+3Zf
      JN0DyirlspEl78wshMLhUrUZcBrXsxWnzYhAYLJYDr4B+gtCvXrl2oVXXnkOOxCEkOf5crks
      iqIoipo+SxAEz/Ner7fdjP0l8IX1G849AVVcT+Qzqfj0qel9qVCmpTxrYvTYc454Xlj3gLL1
      5ZloojJx4rhrnxb2I0qlUjGZzP3U5u08JaBsfXlmPU9PTb+4sgqHLTNVgyCIVqvZU2dq79aJ
      F+pM7QgoCw0fg3RF6EnUWHcObWaqRn8F6qBTB+oHlO1AP6BsO09vOAcB4OtlwugEMk+QRKNc
      oEwuDEgoqsaW1412e7FQHJs8llxb8g34FpfWxqaOs9TRPJeK1V9//NXgyPDkSHdLdJ8d6B5Q
      9tE//b+Dr7xTLwqImliYuzM2FgL6EXX1BkRVHS0sz1RPjG/E6vjsrf/61k9+8ME//BfCNynN
      RS9MD+/0qEMLgudTq+Gxl81A+mLA/uqv/goAkMlkSJL8xje+Ua1WvV6vjBCIKkOhQRqtgQFX
      vaUSfKmq0kZCJXRGmVPMZp1rYNhsogu5DYvZ6A+PMTravufEhnw2KYgyRAlii+OzVS+vRmMy
      RPUsU6/XtBStVqvVcR7OZ5OyAtfXYwiCETSdXFvmZERPY6vRhNli2skZBBWIUSRFOWyWrS9L
      fLNYbbE6WpKkvccHPvHhEB7RY/xjiYXbGs7tWP5nuv3TvvbJFisryZqbWPtwRQi6UIw0F3Ib
      bpeJMTiEVh1RuYXZ+WolGxwIRDfKJFeSGPeffPfNh5mplZVkbdhWvL+SV69cfucvfqajyYYk
      lzOJWCJZLJcYRCnwgESEWjYxeu7bg/5H/s5EbO32jevT3/h2x3QezM0Lsmpkj8uyXC6X9/M3
      3cJLkpl6KALKCBaTqhVJCbocuE404zDGq4VKZcDgMBiMUG5CAJ1OR70lhAJBpU5nisKjzFSC
      xaRqsY6PjU1Zhz04qtydX3b5fJAgTAzRECUKB4oCjVYTJgkGltn6WJ/PExqeYojOJcpqMuQb
      khbh1btDYu++5heamXrr1q12QNmZM2c++8MfRgZcCxsVRZRzqRhr9gTsxnQhYXAMv3Xh5JXf
      v0/o6fmMErGjMmKJxRa5Yjpw/Fxucf6N7/94cMD13LPayORL1arNZsMondXIAgCq1YrJ1FvL
      uOZMtblDYb+z6wX9U9h2Ok9h4PGAsnI+kyRwFCP0NpeBIVRRjOUKo4OD9xfjAJwEOAvFKoLo
      UARx+YMEIW3gMOR2sQoXS6b2IECtT371wcD5c9ncnAKxd956HQDQa+kBAKiqgmKUy2F5+qV9
      tvFsAWUyX783u+Tyh/yuXjSRaP7+V5+aIhETjQsKcnziOVtJ7Dv9FWg7nYbEZDKZy+UAADqd
      bnx8e3Tw15q+AG2ncwvrrFB2+7bbZqjyyvLSasTnq6M4Q+LHJ/rpPn06eSSh7733nsFg0JKS
      KuXyyVMnH3z0qV5Hr9y77j51PlfoYZGlPbJXR6zUuDEb97ptPnd37e1FZqZ2oKoqx3HNZpNh
      mKc24nimkfdIpzMVQjg8PAweHuMDA554unjuwllVVbFTJ1sqSgUABOBwhpLt9YwtgZX716zO
      H23bp9Tf/vaj733ve6CXzlQtSEjdgizLHMdxHCeKIoqimuhojd9kWW6/QtO01gezq41Ua9mk
      9cfsxbQ5jtMa/HSvUBYZmdh6w0vuXEWw0xdeI4C07Q3UZjELAi+K4l4s0ZpAaJ2UJEkCD3Mk
      2v9qvU62NqZkGMZisXT97tvdJ6vVqtYKU0vs0mYoSRKEcGuuT/tdiqJomm6PubXhYfvnri9q
      g0iSpHUkaieRaXLcPaDs1q3bDgPWQoylQj444F5aTwdtNDCFEKEcDofn5xfGxw+bPgQX52Z0
      jC6Zr3hdjkq5HBga58vpXJU/MRa6e++Bb3DSae6eKZFYnf3tR5+deuO7Z6cGOweFEADk+UJa
      q9VqPp/Xcmt0D9m+YOxRida+Pk2qtA6p7W2rvYVpq5GGtuBpF2ydSdcXwRYp11a7dodXWZZ3
      CihbuH0jY8bTMPiv3vRdiTXsDmd09hIImpHaenjA9cVHH9DOYNj2mD33gBGKNdHgNnKJjVp2
      Pf6tn/xIqTdIHDOyukQ6p6jw9rUvQz7bwuJ6TcV1SiM8de701Kbr1+fzDI2fZKkubqPnS6dq
      510EAgFtYXjSOE/te/pUtJG1RetJ7yIIoq0We3xW9wl0bXmZWJ3PF2uszVXc2GAZXIakmZaj
      uSZLYzoCC06eahRzfp+3FxN6TiBcmLuv07EI63AbkNmFteDQWHptjjDYwh7LzMKantUpALTK
      FYPTjYkNyuT0uzczazOJaCqbt7qDkW4mUK3lpap2luB8EqqqlkolWZZ32dj2qPvC+gFlAECY
      jK/bPAMM2eXjhhA2Go0Ot3bbCrLDK9s1Jy1bdOtlEEJRFDtKwD7f4Ntf4Xm+43ix3ezU1RC1
      mwm0B+/e8rJQKJAEkU3FVJTUzGhNTjYwgNTbDYTMIzoKVQkMrK3FLC5/yP/cvoujwR6V6B3Y
      LlL7SO+mvXXw7gFlv//1Pxk8Y41i/MJb3ykXK9XSqnNg9P6drwij06DDURRJLC3YQsfMBmz6
      ZZceAABJkvfv3LR5Qj63PZvNut3udCLKKQQCpUg4/PT7twPh3PyCgYJm/4SBIgAAQrOSq4oB
      b3dv7jORT65D1lrcyI6PjgAAoCrPPXgQHD2m33MjCqFeSFQUqVEaHx/XpCcdX+1eoWz85Ll8
      oUBYzKIoGE1GiiWnxoakVh0CqIotDlJTpy/k8wWj8TCpQb0kmUgoPPeHL6sWQvBHJscj3sXF
      +UvX7v/rv/yZ7nkCeeHczD0jrcJ4uZpcDJ359oSPzGZy+yJApWwh1VputODtLy8ynsg7r0yt
      R9O2wKie2qsSLTSq92fWFK4ZW7ybrmN/+uMfljdS/z9AYQJ1RegccwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ad Unit and Browser Worms' width='192'>
      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
      4igDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ad Unit and Browser Graphs' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9V3QcaXbn+YWPjAyT3gGZSHhD0IG22FVdpn1L
      6pbt1kgaaSXNzuyMjs7uPsw5+7Z63Z2z+7L2rJFZtXpaLd+muqralGMVPUjCe2QivY2MiIzI
      8LEPyUKhyAQIggBJkPi9EERmfPFF4uZn7nfv/0KO44Ajjtgr8NPuwBGHm3sGpEj8WjrX/rle
      r2++nEmt8ny9pdv3XebY5tLiomZ+5ve5jbV0tvjgPerlQlPVarVGoVDY2vjWn484pKDtf96/
      fGUs7vvPf3+H9dGYqfp9rAPTZycGfviPPzx+YjDNO+PDPTwvUDRRLZYikbgulofOXvzZD/62
      5eDd3Ym60Prilz4/u7DixZ1iKSfUym7C5es9jkjZfE3OpBd/89t/cO3Dv78xW7lwqgeFMYL2
      NQ3baGQifafOnxp9Kk+eWlmO9Q3iMFi6fZnuPe+HG6m6BcRK8sQJAgDg6AsLmXDE5/V6H7w2
      s3RbpXsH/fDf/eDtwfEzp0b7dndPe3Z2gXW7IlH/8kZjbDCxrw/0dLhnQAQKpQt12zJtUwMA
      qqzNJ1/+TWDBvcngSrroD4dS+Tqii3ZLW1vNR4fPe2F1eXGRJHDbxpaXVpsGsB3Qkho24aoW
      lnCSXl+8+/svv3b34ymJVyiP34XDUrX6+c+dqIpyYXk1HlerCvBRTqNee0oP7lz/8M2o9MsI
      v3Tt+vVv/PE5TasspjWQmc8JpdxabmR8vFKq/813//Lf/el/7A5g//S3/5CcOHvnFx+6Il1D
      YfLKtesvfeOPgaZNLawLGpSauuxPDBfWl6lgF0vgjmNiENRolLsGT2YX7qi4l3UEm+n6yqsX
      lxbmTTFruSK9o8e/852/TgyOrd6+2jc4uLqRh2DUH4nbjdSxS18bjIee0sfyyNwzoDe+9LWt
      v52dmRmKsQCAr/367953wRe+2v63/YRnt770zd/41r2fLG1mMe1CwMVXXt989dv/5r/et14/
      NtXU9DqPFK59wKF6VyQAAMBIV359FsjNriJ4/QsvT67m9KYT7wrTLqySXr1+565EMjgTRix5
      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
    </thumbnail>
    <thumbnail height='192' name='Fill Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exception Summary' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Blacklisted and Fraudulent Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Blacklisted and Fraudulent' width='192'>
      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
      Jojr/PVLk/8/h7V1zOGzlPsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Temp_Testing' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Temp_Testing2' width='191'>
      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
      y08eHa7eWP9vCOAYe4K29GsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Temp_Testing3' width='192'>
      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
      A/s1aG4TosIiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weighted Score' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weighted Score 2' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAQrElEQVR4nO3d6XPbZn4HcBzETYDgTUq0JEu2ZXnlI2ma7m6b
      2UynL9rOdvbFTjp90/+wM33dtMkeaeI48RnbknVSEu8DBEAcxEEA+4KTLNZHQpqQqSV/n/d6
      /JDzG+CLryE9aBAECABvC5v1BsBfNxggMJXYrDcAzlfjZA9JlHJsUOtZLGqdNno3b20PdWnv
      pLO9fYPA337l+tmR5aIwQHPum3t3PTqFOYPU5VuI3vqHjz/+/0//u9rqWwh3+PRu4WcfffTe
      tbdb2bUHe48fohCi51jgO8enLWRo9BVFXNrgcfu0IcUQ1wsQFGcp3OWSxdXl3NstXikf9JUe
      DBCYSgxBkCAITNOc9U7AX6U/X4GGlv7ds12GF2VJ+tuf/5yY5PlMaVXKbU1gqWJpjUbNpuxh
      /qBQLI7zs0HgH5dPc7ksS6OPHuyub22lBA5BkHrtrFFtCJnC+sZqt1pNlkokgjQbjR9ZNgi8
      43Ill8swRPD4yf7G1laSZxEEqVVPG7WmmC1eXl/pVKvpUol4ZSlLV/aOzlgmXiiKh8dVNEDy
      uVSrq9IxpLiU398vEwy3uXmNIX86NUqteld3UzytqHqaJz2Sb9bOSJodGNrltRV1EKCWml/d
      IOfiCfjPX8fxsweFzY+KcfSPXzQmmh4EQdR2VR9m9MOHXz3ZLzBms6EHfFrwuu//0ycrGe7H
      f9bs1b786v7qes5QZG8Y59j9T/fLtqImiqUrS1lHlT77/VHQ18jy/tFBTUjwqK3+8l8+WU6y
      ry6ldSp37z0slRJmX/MRkaV3P90/sTRDzBfXl7KW0vns84NA04ij/XK5kRA4z1R/9W//Xkgw
      CIKU9w/Xt28//N3/NZtkuaUtiWzftLZXUv9z93H17KzV665tvo+hY30vyUz2+YsvhtnlniTF
      Uf5U7i4tL7VO9yzLr7KS3JX2nz7/zX+upFlism/5Qnr5CrS8vjXQpLXV1YlWUdpVXFyWz3YO
      z5qm426trxtDlPD1/OpWiqd//Gc7rVZCZHcPzlIJLkYIiKt2VWPouGwiKXI0GgS9fs8eIGKG
      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
    </thumbnail>
    <thumbnail height='192' name='Request Errors Temp' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO29d4Ac1ZXofW+lzjlMzkmjGWUJSSByMmDAfDYY
      cFobb7CfvdjrtZ/XCdZe77fP6/WaNWuv7WcDBgM2GBFElMhCSBpJk0eTU09Pd0/nULnq3vdH
      i2Fy7tE09O8Paaq7+txTXadvOHXOuRBjDHLkWCnE+VYgR3aTM6AcqyJnQDlWRc6AcqyKnAHl
      WBU5A8qxKqj0f6Io5tbzOVYATNuNqqpZakAcx+n1+szJVxSFoqjslY8xRgiRJJkh+edUz1wD
      mYYgiEzfgGyXr6pq5prIzYFyrIqcAeVYFRnsPFePLPIqhvEkZ9QQiNIZtVQwHDUbNIJCIIkz
      2Rw0mfsBnGc2rgFhjE6/fSSsGDQ6AmFoYHQ1hfrj7eNai47BCiEkdSXbdtYVY4wzPf3Pavn4
      PTIkfwMbkMSxoiIqIoKUjiExAKKMRFEyE1pVIRRJNFGUJEmqqqqqmjk1EEJZLR+8N4/OkHC4
      kVfvGCEEsKogkgAYoGRSMhg0FEmoGAKkkjRNQJhKpYxGY+Z0kGWZpunzLj/dhxAQLld+pldh
      G7cHAgBAgiABIJlzLgabTZP+gwAAgGz1O6yMB94Z/tMpT6FVW2TVFVp0hVZdoVVX4TS4TJrz
      q9iGM6BUdCIpqLTB4jRn0D2YXaRE5YnTnsf+el9SkMdj/HhM8ES444PhE0OR+27fvrXYeh51
      22AGhHE0Eu7qG67aujdnQJO82O67uMZl09N2A1PmMEy+ftaX+OYTrb/57O5Cq+586bbBlsFY
      jUQTJqvNrGPOtyobBRXhx5s8n9pbCmdNgOoLzN+4pu7rf2pJCvJ50Q1MNyB1ZMQTDQUVBGQ+
      MTA8hpYvbmx0hEvFE6wIAPCO9Mc5aXmfh6SGIZPRcDTJLb/xDyZH+0Mldn2pfe7++LI61w1b
      C779l3ZZXcHtWgOmDmHqqaNv2vJKKdOQJjXRGyFKyouX2w/0d7fRGoMnpm6rKBgeOFOx12nR
      L0sGVmSJExWjITd+AQAAwvihY8N/f2XN7O4nDYTw03vLhkPszw73fuvauvlOyxxTeyBYWtuA
      5aTExpMiMpsMK9DFaMu3GWgdDTwTYb3RzCz7GS2kaQ2XisaS7PIb/wDS409KCtpSZFngHIKA
      37m+fjDIPnpydN0Um2RqD0Tv2bMDgB2rEbd7zx4AwOYVfx7JA4MDggzNBh2WuaZTpwVeZTG0
      6EhGb68tNLx2vKe4yMLLhBobL2i4qK7EuRptNzgY44eODX9mXxlJLPJbpkji/3x8y10PnSpz
      GC6qcqxnP7TBVmEQmi02BTKKokLKYLPaQnLMzICkCE1sgkvKeg0TSMlmKGo12nAklrJpZVmW
      5QxOITPtJl5Avj8udPkS93x001Iu0EDDn31iy5cebf7pJ7bUuKd5VhFCmXMXbzBPNFL9fr+C
      sNXh1hFyW2dPYVFRJME5DCSiGYlHLM8WOEwJiVDZiKukyqilP6ieaIzxz4/0OYzMZ/eXL1EU
      xuDMaPRHh7r+7+d2O42aSTkZ9URvMANaPh9UA+Il9ZZfvvOnv91v0S2v9WdavE+d8f7ms7s0
      FAlyAWUfWg42e6+sd5u1y77xN20r3FVm++FzXSpaj64hZ0AbEUlBf2oa/fS+shVMhyGEX768
      ihWVB94ZWofhJWdAG5G3+4LVblOBZYUPKCiC+PEtWw53BV7tnlhbxeZoK9MNbEwwxirGiopl
      FXGSGkqJoZQUTokJQZnxq0UqAgSBEFYxTv8rq5gVFbOWghASEKT/JSDUMaRBQxk1lFFDTf6h
      Y0iSgCSEJAFJAhIQKAgrKpZUlODlMCtNxDlBwSoGk00gjJ887b3nxpU7QwAABg113+077nqo
      Kd+s2ZSXwTnih2ISLavo2ZZxf0KIclKMk6OsFONlRUXpe6+lSYeRcRo1DoPGrKWI6U4XhFSK
      pEgCEDBtAZCAQFCQjiYRxhiD9L8qxryksqKSEhVWVFKSygpKSlQEOT0VwRgDnP4PQgIACKFJ
      SzmNjE1Pm3UMAWG6CYKAJIR2A3PT9sIVRP/MoG0s9t2D7b/9zK58a6Y8+9lpQBinUkmtwUgR
      xFIMSFLQweYxmiRsesaqp9P/aihysldYYKqxylUYxhhhgDBGGCMEEMbpRkkCppvN6CoPY/By
      p/8/D/deXOvcXWbfVmJ1mRiKWMt5S1YaEFLFN19+3lK1Z2ddyQd1Gb9WIIR8Ma7Ln2oajrZ6
      YqyobCm27C6z2w0MwulBE6D3Ruf08KogpJ77I91vTiPd6SKEEQYqwtk7B4IY41QqJQiCKIpp
      Xy1BEOkMyfQhSZIEQWCMFUWZfUhRFIRwMiR5xmH6pqqqKkkSTdNpP4qqqgghCGH6UFEUjPFk
      ozMOp+own0oURamqSpLknCqldZit0lQdFlUJIUQAsDOP2ZnnlnfaOEnt9LN9ocRZPyAAgAAQ
      EBAQQAggwAQAFAlJCAmIIUYEBBRJQgAQxhghAABBkhAAgDEACBKAZqhzPRDP85n22a8tbCqp
      NRhJCAVB0Gq1mWsofYOzVz4AACFErOmwNZWsHMKmkhvCFibnic6xockZUI5VkTOgHKsim1Zh
      XDz42rHWIrcpJRNqzFvQcOCDHVCWFWSTAVEavVMLxhOymRS1Gt0HPqBsrchoQFk2GRAE2JRX
      Wuc2J88FlJWlA8oyuooB7zlgslT+ugaUjfa3y4QFY0VKBHxJoq6qWFYBjaVUJBxTQXAiXFtX
      qyFgNBIpra5MRWKJ8DhjL3I5nXazYYE2MkpuGb8w65gbj9Hg8LgsD8fjsbySckFmkrFIe1ev
      1UhycbzjqksgofF2n9E7y30jvQk2PjY2oddp9HExMBG5ZN+qQvFzZC/v90BYlYPRFCknQ0nO
      YrFqDHY1FfCFWJpUdFqj3mpXFRlLXCgYNlgdWgaEJsJ2uy3JcQazs7TQtVYKRfweXoVAYyly
      mpZyfq4HWpj164EgSfhH+mmLq752UyIeTyUihQ4rD00k4gsLCthEPMLLxUUlBUUl6fMLC0vW
      Xh2kRiKhE2c69lx2/doLz5EBpmWmDg2Nbtpme/u1I5jR+ycit121fWhcovi+d4+8obHZo6Kg
      F2M7r7ix0KKjNNpFk5VWhqLChm3bneY5gvFSUf+7J9q0FiPChBobL2g8UF/qzoQOOZbOVAOC
      ZrNJFgSdQS9hbXFRHjY4iMQp2myprLZFOMHotOokgyjK8RhvcuTrmDkeAQqpiDcsWhkxKsBY
      NLpt+3Z6Wa5KCNlkbNQXpI1u+6zqHFq9Ka+ohGVjiswyOn0smkzZ9bll/KKs2zKevvyaa2a8
      feDSi5clTsG8p3+0PzGYt/VqBk/ICCzPgAB0OJ1xAdstcyzreDalKnJ1VaWokioXdRWV6TVU
      bhm/MOtZoUw+/PxhZ541KuvqSxw8Gxn0yUaKcxSW2Bx5rLeze0LdUleuIALzUQUy+cWl/R2n
      jFYngNSIZ+yKSw8AAIwmq92RMhYw4xPDAJLU8iuyCbwwMtxfUN1YYJ85NTbZ83bY8947yvmg
      NwRTDQhzPK9hnCP9I5SSSE2MUlrbAE8K6kgglKy0UZFobGhwUFIUxEcQqU/yFJ+KDY76KY1B
      Z5gswWHYur0OAFC5MnWQOjbu1eqMGjqbPJwfZqbeJ3LvRQccVh1lzPP1NTOOioaack5UMRJ1
      JqdVi/buzLcbiEBCsmgrAUExjElxNBZJckpAhmVmT84PlmUZA5ihGXqONWeDBZRhzLIphIFG
      p2eoOSbpyWSSgoiVCSQmrc58hlpSUP1qyPmBFmaKXIl9/sgbJqNpuG8gv7JcYlMRv2fbpR/b
      VlOYobbnAEKDcV7/oSKxR159qzDfJkgiIbKawsYdtUUIIYQyWJwrvdtNVsvPaBPT5kCSJNMQ
      210uvd7IJZLVdZvdtiW5g9cHijE4bSYSIhkRiGPNGia9S9U6VHrPdvnrUt4FKeE467BZAACB
      sWGksRS4bBlqdcWktU1n6kEI4Yem0PiKWcchjKDS1gMAyCsuz1B7qySdAQgBAOteDDDHnORC
      WnOsipwB5VgV2WlAGPvGRkU5mzIhP6hkpcMXIXGwu300pu6oLVIUheO49DI1Pa0GAMx5OJmd
      ucDh5IJl8lCWZYqipr47KXbG4cp0UBRFluVlqTT7cAGV0q+kJ9Fr+LVMHmZlDwQhyXGsTre8
      jOZzK7jJALrphwt/ajUS5pM2n4QVCFxYpYUFrvKisjU3fpJcbvyiZDQ3/twQptOdt+1eVk/O
      D7QAudz4HBuanAHlWBXZsQrrO9sa5sDmUtsbJ3rP7ZUR9RY0XlRT5Djfqn3YyQ4DslptlJFh
      434dQ/kSohmKGo02GIwWWDS5mOhFyaU240gkShtNMu0qKNYVOk0JiVTZkLu01KhjcjHRC7Ou
      qc3ZSO5p/MLkVmE5NjQ5A8qxKjbcHMg/OqASlESaKwo2XDhbjtlM64GC4wPjgWg4moj4h995
      91QwmpBkWZalsNfTebbj9TfeGguEZVke6O2TVFWWZP/oQJyT1TXcLxgpsWjoqYPPSudpD+Ic
      y2VaTHTfwKgi9QWDEzqrC9P2WGDk0KEOMy0S2NhwycV6Hve3HO2CZjEZ9E74ujq67TYLQbe6
      S2ov2dO4NupAkqZ1+y864DBl8PFWjjXkfQPCquwqKIdSgjGYnK48g61IigxVV5QbdBCrlIGh
      SbtV1VaEwnG7q96oBWTDZovVzMuKVv9+Ensq6hueEO0Uq5qK/J7hPbu2L1MfHAyHUrwUdZc4
      58puzrHRmFrehamprgAAVE++ZN9cVj3lXJcdgJLahcXpyODoWLevs3jXdXwivmx1ICwqKhoY
      HddqlrtjfY7zw9QhTPrzw4+7itxJ1bSl3JFKBAd8spESd112VWfTiS11pUMBlkZsUGAKNexI
      TDDqrQaD3shgRDICy1ZtatDRhFZrKi4v272jPEU6WEZatjoITfi8bW1t7ooGAMyTL3v7z3hS
      1jo3OnzsbGGhVZQBivvyGy/ZUpm/Bt9BjlUwbRVmceTXlBcePtk/qlHY4KjZ4PSlAE2Sqqry
      qfjI2ASDeFtRFUaYZAwaQulsb8krKI6Odqpap8FdXpFnAkBXU1MCADABAGzVc7e5EBhSmurK
      Kh0zzbfmdrtHE6LIc0aDIaVAPZQog5FluVQqlXuUsSjrtu03isWSRj0TjLKenmZV766vLBFl
      1WyzhbzDggrNRj0iaIokDAxF6gwqF5+I8oHRs9hUkGfWl1aUk6tPtVGlZ556MqmQV1xzfaHj
      /ZxGpIhJlkulZEUVXVZDUiZUPmHPK9LSZM4TvTAfskcZGMuKgjEmKYpcWhBdzoAWZj3rA20A
      IMz0k8sca0vuUUaOVZEzoByrImdAOVZFzoByrIqcAeVYFVlpQBjjgZ6uJJ9B/2GOJbLBlvFL
      AyMhOO4J8My2moL0tt/pbbMJ4lyy9pyHJElCCNN+kdmHk9nj6ZzwyUNJkiiKmtxjO515ns4l
      nXG4dB2mHqYzU6fqsKhKUw8XVSnt50s7R9bwa5k8zEoDgpCWZKnAZdPr9RhjgyGDz+0VRcno
      t5Rp+ekCiZnLns7lxi9CLjd+YXK58YuQe5SxMNk3hCVCY54o4kKjVY277KYstvs0GAMV4ewt
      rJ59BkQSRDQe0WHZ6w8z0Jrt4RxPNXvDrPw3F5dnrolcZuo0tAZLgUtNTbA2i8loNK5/ZmqY
      Fc+OJw7UrMEmjRjjZ9r8/rjw15dUMVRGpim5xMKZkBpDVVnJtj37i92W86LAwTPeHx06q6xF
      3og3xsuyekGF/a2+4OqlnReyz4DOL4qKXmj36TVkTyC5emmHuwJXbHLeeUHp4yc9Gyswa8nk
      DGh59ASSVj3z6b1lL7b7VykKYfxKV+CahvytxZYEL49EuDXRcJ3JGdDyeKZl/ObthZfWud7u
      C6LV9Rm+mKAiXGLTQwg/tqPo4BnvWim5nkw1IOWdN14/2dyeTMQkWY7FEl2dXbHQxKmm07yK
      j739WlfvgMDz497x1vY2WUz29I/29fbEY9FgcOLU6ea1yiRVFYllOUmZV14qMt7S2X/y6Gtj
      ocQatblUBFk9NhC6vM7tMDD5Fl2Hd/l5S1N4ocN3bUN+ev1+XWP+kbMBOQvzcadOzlEoFNEJ
      3IloOBHym52OsZHRktLqMV9g044doVDIXlBx8uhrHDbIWNhUVRyLJQDv6xnoiwXjpM60c9eO
      NVFopKcjEGeN+TXzpewwNB2NB40ID3v8Vi2xnsv4Y/3hTXkmHQUURbmm3vVC23h93gqfomAA
      Xun0//vHG9PyjQxsLDS9dtZ/Rd0aLO5msG7LeLK4uJAyWqCUKi/dHQzH9l5UAfmk02kDCBcX
      F0uSUFRaHedknZ6iNBY9NUi7S52lmkQwRNA6hMEaOMNUWcJw3Dexr3bbfKcwOmNpUSkbHC2v
      KjEadeu2jMcYP93i+9Te0vTh1Y0FD/z2+D9cs2lly+/BYIqhyHKXedIT/en9FT8/3Ht1QwGx
      pvvIrKcnmty1bz/GSEUYYFxdTSFVTZcmVxDauedCAICiKBAAgqIgAFu27z73ubLySRGSKKgY
      QowoRkORy/9mSdqg1RaVlCzkmaV0VWVFoKxo2cJXR4JXhkLs9lJr+tCkoUpt+q7xxOQry+Jw
      V+DqzXlTX2koNCcFxRPhyhzZlNM90zCVVOj5t1s1DFHqtAbHPbqSej0Jwv5Rvdm5Y+eOV154
      DkBNTX0lUlAkHKc0jM1iwpSutqIk/fFo0Nt6djDkn7jm5o87zct/xomRxzsuKFiefw50vni5
      y39ZnUvz3kacEMLrtxY83z6+AgPCGBw5G/jPT04rHEBAeMvOoqfOeL9+9cLp4xuL9zsJpMi9
      /QMAAKvdZdKgiWDC5w8P9Hb1DY/KAjc00CcoQGcwO20Wr29ipKdVSCWiSfaNd06MeMbeF8IL
      W/bs37WzbmhoRWsKSOQ5HbFYOJbiV31pawnG+LnW8Zu2Tdv98+Jq1/HByApmvkOhFEORRdaZ
      D/I+0pj/WveEsIE3kRFkNZAQpr7yfg9EUHRtdRVWlT3bLBDXihzL7N8jK4qKoZYmkqxgpMHe
      ffsICFVFUsF2kiAAhPt3bkXE+4UQbCVVGo2GEosrne6VKKiKLS2nJ1iwy7CxyrsMhzlZRdXu
      aY/9LXq6wmlo8cT2lNuXJe3FDv9HGvLhrLmOTc9sKba83Re8evNGzPlHGH/7L+0tnuizXz1g
      1p6bd05bxr/92qvHT7XxbBwDICMAAIYk47BZDEZTfp4LQmAwGHR6vdFstZjNRqPRaDCYLVar
      6f3yLlqtFkLoysunVzABAgAQ9MWXX5VvM83+cqeCMe5qa44k16+XOtQ2/tGthbO1umFrwfNt
      vmWtcRQVHekKfKRxbhO5Y0/p402eVXqYMgFC+Ccv9Vj19F0XV977bKeKzmk4bRkficTyjeb2
      M+8Oe5MlhdZgUrE73ddeduE6qql0dXU7C4o0Cy9tsBqaCOhdpQxU00GcmVUK4SNdgd98Ztfs
      hvZX2v/r1T5ZRUv/wQyGWLOOchiYGRvkpKkvMCV4eSzKl9jWJlJlBVsKzckjx0eGQqlf3LGD
      gPDEYPhgs/fjO4vAjFXYtl17yssKWpuh1So1d/Ts2X8hRWtW2fDyIJnLrrp2KSdazEael4wF
      jmQymdGIC4RQiydcYNE5DPTshvQ0Ue0ynhoKX1Cx1FHs+VbvtQ15CKmT8meIvWV74Z9Pjnzt
      qprVKw/WaFvxlzv9L3T4fv2pnQTAAON7b6z/qwdObc431OaZ3t8WeiqKLKVYHs353gYjmUwu
      ek5KkL/yxzPPtng5UVmufEmSvnew/eUO33wnvNLp//7T7UuUpqrolv8+6o/zU+XPOCfOSZf/
      9PVH3h1O8vJytZ0NQkiWVyWnaSh84y/eDkzRGWN8YjD88V++w0nK3B0vSdEGvTZbg+RmoWfI
      r11V0zQcue3Xx35/dCgpzOG5VlTUNR4/3OWfSAp4SofPSuqpkeil8zuID1Q7T49EeWlaL4Ix
      Hgqxb/YG45w8dfTo9ietesa9YAVIs45++At7x+PCrb8+dt+rfaGUuPQrXXMGg6l7nu382W3b
      3dOdMnvKbZdvcv/kpe4NVt5l+Sy9vAvGOMJKj54cfbHdf2md61MXlGpossefPDUSaR2LB+JC
      qV1vNzB9E0lJRTVu085S645SW+dYtN2XuvfGzQvM6//xidaP7Sg6UO0EACCE28ZiDx4bGY2w
      1W5jTyBFE7Au37S73L6t2PKnJk+123jr7pLJz84XE40xTonKk6fHnjrj3VFq/cy+smq3ceG1
      BXhvrjP1NLwKT3QwKd71UNP3P7p5zmWmivAXHzr1ITKgSZKCfKjN93jTKE0QdfmmXWW2bSXW
      Ypsu7STEGMd5uW8idWYk2jwa6/Ynfn77ju0lC3kLX++eOHw28MObG97uCz1wdIgiic/tL7+w
      2kGTBMI4nJJ6/IlTI9FWT2woxP3lS/sdxvdnlosG1fOyeqQr8MjxEQDA9hLrzjLbzlKb3cAQ
      EJxL4MLYHxdOj0TPjERbPDEdQ+4qs+0qs28vsVh1DIRgqgFhjDEAGAOEsaLiGC9FWTnKSVHu
      /T9inBzn5Rgnh1LiP12/aU6PQ5rxGJ+dBoRxOBQ02ZwMRWyEAlMpUbn5/qNmHV3hNNx1oGJz
      gXnRrmJZ8gEAGAN/gm/1xE+NRFo9MUlBVW5jmV3f4096orxZR+0qte0os20rtrKi0uKJnR6J
      to3FMAY1bmOFUy8oOMpJUVaKcrIgqwrCCsIAYIuOtukZm56xGRibnk7/YdXRFj1t1dEmLb1o
      tH9WGhBShaNHXtGVbNtZV8xxnMlkWvwzK2WJN/jtvmC5w1Bs0y3ddJYlfyoI45Sg9AaSQyF2
      c6G5zGEwMOTsdhHGcV7u8SX6J1IWPWMzMHY9Y9XTOoZkSIImCZqEy9V2NllpQBhJrx56xll/
      YV2xneM4AEA6ooMgiHSSXvqQJEmCIDDGkzm8Uw8pioIQTq6iZxymb6qqqpIk0TQ9mUeMEIIQ
      pg/TicOTjc44nKrDfCpRFJVOLJxTpbQOs1WaqsOiKqXX8AzDrO3XkhZL03RWGhDAWFEUgqII
      CDfCELaR5a9mEr0U3p9bZaiBDEG+V4fgfCvyYeecAQmCsHp/5XlBEITFT1oFudz4hcn63HiM
      cW4IW4BMD2G5rIwcqyJnQNkKxnhGbNd5IWdA2UqXL3HVz95sHo2eXzWyz4D8nqGegZGeztY4
      dz6fMp53fv3m4Nevqv3uwQ7PeU1pzb7qHFana7i1BQp8SNZvqy5Yh4CyDSh/MMT64vx/3Lq1
      ymX4hz+3/O5ze0zauW8lXqOAsvnIPgPq7WjVmPNYtq8wz2k0GtchoGwDyv+f1/s/f2E5BPii
      KvtopPCbT7Tcd/t2aq7nVngtAsomSfCyPyHU5r3/7Cg7PdFTWJknGmPcOZ4otOrshkW2Rsz0
      MntwIqEgWJu/jMd5I2H2a4+3PPF3+9OZdwjhH79wlqGIb15bNzspcQ2X8bKKvvTI6dEI98xX
      Dujoc74r8t5775084ciLh73hKI1lgtZ4vb7BgX4g8ydOnnaVVLzz6ou8CmkIRkc87Wc7C9yW
      rt6xoH+UY1PRePJU05myqoo1mU/JQioaS2KCZqgludckSUo/6Fk6GIMX2n3ffqq9fyJ1bUPe
      wg8U3x0Ih1kpz6Rd/XPHWWrgF9r933+m88UO/4VVjkVNeZL7Xu27enNeQ9G58kgQwgsrHQ8f
      HxFlNPnijIZW70hEGP//L3S7TdoKp2EoyO4oPbcp+7Rdm1mWVYHcqyj+198oqqzo7emLl9cG
      YjxNwxSbIgiq9dQ7ImEFNCIA4HgOsBP+aNQ/5NE789fKmeodGfKFY9biuvrSFSUGLQbC+IF3
      hl7rnnj6f130vYMdL3X4r9tSMN/JnePxH7/QXe40jEa4LUWWK+vzdpfZrHp69cbEisq/v9wz
      FuUe/KtdgaT8948333/nzgrn4jmp/jh/ZiT6vz+yaeqLNEX8+ye2fv7BphK7fn+VY5W6zckj
      x0d8cf4Xd+xMCfIdvz1x8/bCdFTT1B4IqJJoLyy3aEBd43ZFBQ2NW2xGTWGh22C0UliWMSgu
      KtUb9HlOu9XulpIhi7skPy/P5XTku1wWu21NcuM9Y2OBUKy8vNKkX1I8/7J6IEVF//FKb7cv
      +fPbt9v0zI5S2/ee7vhIY76emaOHTwryVx5t/ucb6//60uobtxWadfSbvcFfvTFw5OwEAKDa
      ZSRWdMHpaNevPHqmsdDygxsbDDRRZDdUOg3fOdhxWZ3LpF1ouMQY/+qNgQurHJMdwCRamtxX
      6fjWk61lDn26ZMzUTy3aA8U46fk2X02ecXYAEMb4aH/o4XdH/uuOnTqG1NIkAuDI2cDFNU4I
      4cygeqRISZZPpVIYY0ngJAVhhFIsm343mUxKfEpUMFJlnhdnB2AHA16Pb0IWWF5advh6mpHe
      znePHxvxR5d4/lKC6tNwkvKNP7d872C7rKiTLz51euzux86o6swEAlVF//jnloeODc0IelcR
      6vbFv/Vk6+2/ebd5NJoufLF0EEJPnRm7/r63Tg6F069Myn+rd+KmX7zti/HzfxqHU+L1973F
      ivMGyXeNx7/0yKlbf3Xs6eaxdAbBUoLqVRX9w5+aP/u7E7f+6ljTUHjGRfX4E9fd99ZYhJ18
      RZTVW/77aF8ggTGe1gMBABQ2fOjI26PesVQo0Ha6yZ8SPWPjo70dQ95gUWnpyePHrRq1uWfE
      P9YzOC5UlObNsFag8L1DPn/faV5f4jItPyUIo+6ujmAoXlhWaV7THijOy3c/1lxfYPrmtZum
      Vn2oyzc91zYOIJi6ssAYP3F6bCjEfvPaTRhPK/MOIXQaNVfVu6tcxp+81NMyFt9SZNHPFc81
      G1lB/3yoq30s/l+376h5r7nJMvKldr3DqPnR811XbHLP2SMCAH779uC2EuveinkHKZdJc/2W
      gt3ltpc7A65QaEgAABQpSURBVP/1al9KlMsdei1NLNwDvdwZaBuL/eazuxsKzT99pffkcGRr
      sSUdpBZKiV99rPnemxrq8t/fRJskoMuk+f3R4eu35M+RG19YVpVn04YjcZYTfGOj4WgcA+Qd
      HRIVkIyF+vv7E8lUIMoyc3XgofFAdV2lIKnJZGqh73I+IOGwWhKJSDi+oo/PAy+pf/fI6Wsb
      8v/X5dUzumgCwu9/dPMvXx+YmvzQF0g9fHz43psa5gvohBDuKLX94a4LGovMn/v9ycdOehbN
      kFdUdO9znQxJ/OKOHc65floQwmsa8j+3v/zLfzwT5+bYMT3GSS93+m/bXbxwQxDCSpfx3psa
      Hvz8HhWBzz3Q9PNX+ycTSWcTSon3v9b3gxsbSAI2Flke/PyevRX2zz/Q9NC7IylR+cafWz9/
      Ufmuspkj5qW1bk5Smoajs4YwhBRVVRRFliRFUWRZlmRZURRRlBDCkiiKoijLsiwr6d1xZ3WG
      Kkp7NmYNCktCEf7y2EO//d2DoxPx+U5Jhr3NHX0n3jriCcbx0oYwVUWjYXaB4ebZFu9X/nha
      URHGOM5JH7v/aMvouTF0dt7WVBBCkZT4g6fbb/2fY2fH4/M1oajonmc6fvB0uzLra5khHyH0
      5CnPzfcfferMmD/OTxX46zcH7n+tb8ELnQNWkP/3Ey0/fK5TVtXZ76oI3f1Y81OnPdN1wDFO
      +tFznfv/9ch9R3rnu6iu8fit/3Ns2jL+ledf9vpDWOEBQXq9XghQnFOsZkM6RBJCQJJkOgJy
      cseX2eY/ycI/lHl+PgRNU0hV84pK5x3CFKF3dEyD5LBA2k0aWZYpikILgjEyasgFTqhyGV5o
      9yOMq5y6Hx46e0G59Zp6d/qttKd7gc8yJLykxlnh0H3nYAdNEHVu/YwTVBX955G+SEr8/g31
      BJgparb8ujxjXZ6xaTD8P28OPNM6HkxKJg2pIeGPDp39znW1GhIufLEzICE4UGV/ocPX5k3s
      LbPMePflTn+HN373FVUz1KIJcKDace1m92W1zvku366nT49EpzoSpWeefK60ppqL+jp7ffV1
      xaMTXH6e68pL1jE3XpWbm8+ICq6oa8yzzeMeVPgBb4QNegpqt7nMurUKaZ1ICJ9/sOn6LQVn
      fYn7bt8xOXgt3ZEY46QfPNNJk/CeGxvMunMfQRjfd6RvOMz+7Lbtcw6IC8jHGIzHuNd7gq91
      T/RPpG7eXviNa+qWe104PSwA4ptPtla5jF+5onrS2RhICF94sOn3f7UnbwWVnAAAAPhi/NQh
      TPH5Ahgp3Z2dPR1nfv/7hwaGRwY986b0bhCWvgpblENt41f89I1watrqcuEhbAayqj50bOhj
      9x9tH4thjFWEfvVG/5cfOb3AmnQp8hFCMVYU5JUsbNF7qzBBVv72D6d+/WY/Qij9+lcfPfN0
      89gKZE7lQ/ooY04wxpykGjTTVkAreJTRNhb73tMdn9xTIsronYHQ/Xfs1DHz+lnXMyKRk5Sv
      Ptp8aZ3rM/vKDrX5Xu70T+1rV0bOgBZhZTc4Icj3PtMZ5aT779w5wyLXRP7SwdOfhaVE5cuP
      nN5X6TjU5nvoCxesxNUynZwBLcKKbzBCWMV40bpB6x8THeOkv3vk9Gf2ld2wtXCBDy6RnAEt
      wgcyqB7PqsGwYrIvHijH6lnDyILsC2kFAACMgwHfAtsh5Fg3stKAEBK7W0+19IxObmud43yR
      lUMYhITA8yaGURRFkqRwOJwrrnCeiyukfU2ZvvFrCFJVSJAQAlEUN0J5lw0rf85J9BqSlT0Q
      AIB4L8RCluVUai0f3c8glxu/MOcMKNMb3mQOhmFyy/gFyHQPlJWT6Bwbh5wB5VgVOQPKsSqm
      GhDq7+4cGZ+YPI6EIxLPTgQjCICh3q6u3kGMQSIejyUSSJWisWQsFgMAsKlEOBpbd81zbAim
      zq2Uzo5ujcU7PqilNdokJ8QjoZKSsp6e3htu/WR7Z0ftlt0dzScTAgyExq+/6kBPn4+QgilB
      QkA3MRG47Y5b12dFh5E8POoTk+H8ys1Ww/pu5ZFjFtNuOkWRFAApjkeJlAIhJul4KKg1mADA
      FEVJkpiMxeMSZbZYSErPJXwUSWrMdl9/v9HkABiAddkbYai3u3PE49bSYXV0W3XBOjijs1o+
      zlhxBYTxc22+7HsaH/SPdfQOMQpbuHlvRb4tmUxmtD5fzg80JzFe/vHzZ0V1VkSikgq+1TpC
      Q6nAbg37PJqiWj0JQ/5Ro8XV0FB//NixzeUuL0uSciTE6i++YPPaqgUA4OLhBK8wRovduKRA
      3UyHc0RSPEGQS6nZvjKyzg+EMT4xFPnX58/efkHpJ/eUvC8XKXL/8GhFnkngORUkxkU00jdM
      x0SDwcBIiYmJSFlNvaIoQjIyPK5QStjmqF8rnaYSjYT6R7zFtduXaEAZJcHLn/5dE00SkoLy
      LNpyh6HMoS93GLYUW5zGdZ1+pQQZQrhwcOOcSAoaCbM1ecvYfWFhab94re/EUOQ/btuWzo2c
      2QMhRYxzMkRKKhbWmyyCKMsImrREMJqqqa4c6e8SFMJqMWOSpgjC7VrrPH5VPnO6KcpK9Vt2
      FjrNi5+fyR5IRfgbf27ZU2a9c1+5gvB4jB8Oc8MhdjjMHusP/9vHt8xOUF8BS+mBVIS/9Mhp
      T4T7l1u2zM7xm/N8T4R7dzD8Zm9wOMSqCBfb9XdeUHpJrVMzq+YJwngwyL7Y4RuPCd+8tm6B
      IiG+OP+PT7RuL7HefWUt896WklMNCPV2dZIGe2VZ0YptFalSJMbRWKb0Oo83WFddsTy7x3ig
      u90bCBVWb60udi7lExkyIIzx402ek0ORf7tls2ZW6nS3P/GPT7T+03X1F1Y5VvnLXooBvdzh
      f7Z1/MuXVd3zbOdlde6/uaSSmWtLUBXh5tHoy53+puGoUUPtr3JcWuuqchlIiLsD7KMnRrt8
      iY9uLfzErmKbngYATCTFlzr8L7T7aJK4rjFfxfiJU2PfvaF+b4V9xkVhjI8PRv7l+a6vX117
      5Sb31Hen5YU9/8zLjE5vNcE4RyCVp2itCLTXXb5/6V9HJNjf0hUn4qO2iqrunpEbb7lRv6wJ
      IkbNJ94eGAvvu/yaYseSzCJDBtThjX/3YPsf7tqrp+Z+UDgW5b7yaPNfX1x5w9Z5q8MshXZP
      FBJE41x1fdIkBfnO35745ad2ltj1vKT+7HDvWV/iXz7WWD6lFkxKUJ5vH3/y9JjDoLlpe+G+
      SodNz6Tv8tQ5UCgl/uX02KE2X12+KcJKMU66enP+DVsKSuzn9ogZDKa+c7B9V5n9q1dUa98r
      IaUi/MA7Qy93+n/yiW2zC9BMNSD56FtNu/c0vvLCSzImSahSJqfbnX/B9mXNlJPH3x2xMSle
      a/R7vBdefrVZs5z5P8a9HWdOtrRtO3DdloolbX2dCQNKicqn/++Jf76pYVuJdYEeIpgU//7x
      5hu3Ft5xQckK+iFZRQ8eG3622ati8OvP7Cqx62efgzH+txe7XSbNFy+unHzl7b7Q/3mp+4sX
      V964rcAT4f/UNPp2X+jSWtcn95SU2vWzO48Zk2hRVo8Pht1mbY3bSM2K+Rdk9ZdvDJwYDP/o
      Y401bmOCV+55tkNLk9//6OY5Z2BzL+P5ZLRnaLyxsWHhzZPXHlV67um/+GPCdTd/vHieOVA8
      HGBVGohJe36xlibX3IAQwt9+qq2h0PLZ/WUQwoWHmDgvf+3xlr2V9r+5pHIy4zOcEjvGEy2j
      UQzAHReUzpn3OR7jv3uwvdSu/9qVVZ2+1H2v9v3+r/bMLg7UNZ74/jMdj35xr4ae1pOHUuI9
      z3b2BZIWHX3b7pKPNObPV1hoBaswjPHJ4eiPDnVd15j/Spf/1l0ld15QOl8xpGlD2LN/OUTr
      jLV15TStDUdiRoMGkxrMJyidMZHkzXpCFCRZY3EbyWg4WlJdb9Kt9foTKU0njoUiifpdF5Xn
      zz1bjEXDHR3tUOJI96addcVLDyhDGIsKEmRVkFVOUkMpsdiqL7BqZ9QV/HOT562+4C/u2JH+
      KS86RxFl9Vt/aTNoqBq3sXUsNhziSAI2FJq3FVsTgvx0s7fSZbxzb+nOUlvaEYAwfrHd99+v
      D3zjmtorNrkVRaEo6o8nRt8dCN93+/apXYKsos8/0HT3VTVz7jiJEPZEuRK7fnZdxKmseBkf
      5+X/fr3/hi0FW4stC/SvM3PjCZ1e5mJmszXB8iptdOtkwmAbaO+qqK0WMeLCIcaarwdxf1jY
      se+yurJ5t6JdIUgdGRmWVewqKLYY5l7Gt554k6PtqbHu/MYDdcUOnuf1+jk6/6lwkvr3j7f6
      EyJNQS1N6mhSR5M0SQQSAsZ4X4XtklrXliILTcLeQOrbBzt/99md6WkmWJqjT1LRw8c9Wpps
      LDSVO/SWKb8rWUUnh2OPNXnCKfHWnUUX1zj/80hfXFDv+egmt0kzKR9h8K8v9hg15N1XVk/e
      qydOj7V5kz+6abXukowGlE1bhcViSZoEiWRSazBHQ+GJwFhpTQMQEhqDlSIAz7OQ1Bj0DCY0
      kcB4QWk5Q57/jZ2XOIRxkqKlyBn9MMY4kBDf6Q+92Rvsn0hVuQzDYe6HNzdMXZ+vlaNvOMQ+
      enL0cFfgCxeV37m3bHbxBllFf/vw6Y9uLfj/dhYDAMIp8dO/O/HwXXtX6XDKdEDZVANS3n3r
      GG20NmyuIUlKlmSO54x6HYAkwliv0611ldK1YU3mQBhjQUbd/gQrqhdVT1uZr6GnGGMsq3jG
      RpNT5YdT4l0PnfreDfW7ymzffqp9T7n9E7sWKSe1lEbXzYCkt9487baCE829hUUFXm8gv9Au
      8ygUmLCWll5zxZUGZiMGD33AMlP7Asm7H2+560DFwWbvH75wwcrqeE5lPYPqCS2lcsC2a0cj
      xeiNBpPBZvF0ttgLSzdvqtkAg9WHgmq38dvXbfr6n1oe+eLe1VvPOrDg03iMghNBq9O1aIWA
      88gHrAdKE0yKTiOzJk+vzmtaDyRcebPqsObIPKuvurJubNyuZQEwxsP9PayonG9FcmSpASHB
      5xlq7R7mOC6jW+nkWJSszEyFkBYFId9m0Wg0oijmcuPPf248z/Mb56eMMV76/FFVVYtl3kfZ
      qyeXmbowcGrQdWjCT2qNNvO5RQ3P8QxNCpKqN+iiwYCMoFanM5lNUJVFFZAAk/Sc5epXxWhv
      53g4aiveVFeypHigeDyeuW8H5GKiF+PcVw8hBEB6/ZXDOndBsd2oM1rD0UQyHi7Iyz/b03fd
      x299/dWXqisr+gJqVamVjwbHo4KGwHuu+EjBSksMz40qJzg+lmDL9JoldkIURX3wlvFryLrm
      xhvMNi2WgjG2u6sjmYwGo/HgRBBQGgICV1Hl9s3VbCLmmwhFQqE8l43l1LX3dJG02WiwWS3K
      hhlPZ8NJSv9EBuuBZBdTHYmY5zhI0hCrFM1IkkxRJMAIA0hSNFIVmiJFSRkf6U0h3aaqUowx
      QVKzI5JWBUYnj77uC6d2Hbii2LmkII11diRGOelrj7d4o/wXL664bU/JwqEUK5C/5qxnD4T8
      /hBSBEhpkJiMsVLAM9jc1pYUVJKANE0DSGg0TEVt45ZNVTRNMwwz23pGBroHhkZON50Ix/mV
      qAMJu82aTEXXdreetSKYFP/24dPXbyl44u/2v9UXvPfZTkHeuD3l+jDVMFWPZxzI8eb2HorE
      lvIdxpRXIKjezpae3sE8u1mUOd8Ee/Mnby+0zRt/w3N8JBEUJbGnd+DCPY3LVkcV2zs6RRk6
      zItv/ri2CLJ6tC/U7o1/am+pe66JnSfCfeWx5i9fWnVNQx6E8Bd37PzVG/1feLDpJ5/YWjz/
      F/KBZ+puPdgzNCiq0O50aLU6m8Nl1DL123ZiNgYYrYbEKqEpKSktKyuenRoyCZuKiyrU0URx
      Re0S96ycBoQkQSCE3IWl5qXlva9g092pYIzDrPTwuyM/fv5sXJDtBs1PX+nxx4XNBWYNRaRd
      ICRJ9gaSdz/e8q2PbLq8zpWe3RMQ7im32w3MPx3sqHIZi6y6lT26QggtZRW2msrOeC023Z2P
      JaY2o5GBQUdRqVG78lu1JJDc1toqKrispt5tXWFWRtr1N+O7nm1n6dMGQ+wL7T6jhrppe6FN
      R6uqKmN4sNnLiuondhXbDYwgCDSjeejY8O5y29Zi62xpI2H2mZbxW3cUFNinqaEoCoRwhnHM
      VkMQBK12Zoc3+7ReX1Sv1czo6ua8qBmvIIQURVn0tCVKm31R2ZcbPwOWZQ2GaePdnD/W2c7J
      OV+Z/cHZ8lcjbfZpS5e/sotSVVWW5Rk2OqerdmUXlfUGlOP8MnPT3axD4aKPPXuE9Z6dEMh4
      PBwcD1qM6Onn38gvKdPNs3Xtohx96UmeMBx+7SilcPEkKwFSCo8e7/T6u86QeSWm5Seoz+DM
      u4dDKXD48GsGWo3EkkkRk0rszXfbRntbZMriWNrYvSDiH//wJMGOnQ3IyXg0Gpwwmg3tp496
      gmJzc0ttTeWq5acefugQTvT3RzM2t1pHMKNKQU7xj3m6uloC4RTi4hjiicjKHQGMvbCv5aTF
      Qg90tR072aY1mu0OF0FCt8uBwBp02Ii2+gdajRarZ6DrnWPHCY3RZLNrCSgjFPD5Vi8fAGDW
      4fEw6x8fa2tvCwSjGprW6Oz19dWm+VPfl4WFUcajfMDrzfohDKtyIpEQZIwVUcLQpDfabKaR
      ocHC0ooVB1LG43FVUQiSiEfCtM7kzsujsBxNiRqoEnqjdv5F6BJJJBKqLAOSSsbDNK21ufK1
      NIhGkzIf11jyLGtQdg1FwxEAMC/KgoJtZqPZwPR09+eVVhJIstlWXxNCiYbjGCNBVrLegHKc
      X7IyHijHeefoa4cxpdvUsOkDMAfKcR5ApKbMRnX2j+Z6oBwrwe0wx6CuKo/8fzAMcGR8nCRf
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='192'>
      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
      +N+yfJxNNb21bAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
