<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0605.2307                -->
  <repository-location id='AfTAdvertiserActivity' path='/workbooks' revision='1.3' />
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='audits' inline='true' name='mysql.41716.536882881941' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;a.entity_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;entities.name,&#13;&#10;&#9;a.user_id as &quot;User ID&quot;,&#13;&#10;&#9;users.email,&#13;&#10;&#9;(case when users.email like &apos;%intentmedia.com%&apos; then &apos;Internal&apos; else &apos;External&apos; end) as &quot;User_Type&quot;,&#13;&#10;&#9;a.Date,&#13;&#10;&#9;a.auditable_type as &quot;Auditable Type&quot;,&#13;&#10;&#9;a.audited_changes as &quot;Audited Changes&quot;&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;entity_id,&#13;&#10;&#9;&#9;user_id,&#13;&#10;&#9;&#9;date(convert_tz(audits.created_at,&apos;UTC&apos;,&apos;America/New_York&apos;)) as Date,&#13;&#10;&#9;&#9;auditable_type,&#13;&#10;&#9;&#9;audited_changes&#13;&#10;&#9;from audits&#13;&#10;&#9;where date(convert_tz(created_at,&apos;UTC&apos;,&apos;America/New_York&apos;)) &gt;&gt;= (date(convert_tz(CURRENT_DATE(),&apos;UTC&apos;,&apos;America/New_York&apos;)) - interval 30 day)) as a&#13;&#10;left join users on a.user_id = users.id&#13;&#10;left join entities on a.entity_id = entities.id</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Count (Audit)' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_8330401153211979]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([Date])' scope-isolation='false' />
      </column>
      <column caption='Most Recent (Audit)' datatype='date' name='[Calculation_8950401153357592]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='max([Date])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[User ID]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\audits.tde' schema='Extract' tablename='Extract' update-time='10/3/2014 7:00:21 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='978574' timestamp-start='2014-10-03 19:00:21.748000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='bulksheets' inline='true' name='mysql.41716.681430439814' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select &#13;&#10;&#9;bulk_sheet.Advertiser_ID,&#13;&#10;&#9;bulk_sheet.Date_Count,&#13;&#10;&#9;bulk_sheet.Most_Recent,&#13;&#10;&#9;entities.Advertiser_Name&#13;&#10;from &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;advertiser_id as Advertiser_ID,&#13;&#10;&#9;&#9;count(date(convert_tz(created_at,&apos;UTC&apos;,&apos;America/New_York&apos;))) as Date_Count,&#13;&#10;&#9;&#9;max(date(convert_tz(created_at,&apos;UTC&apos;,&apos;America/New_York&apos;))) as Most_Recent,&#13;&#10;&#9;&#9;case when locate(&apos;:updated_intent_targets: &apos;,result_summary) &gt;&gt; 0 &#13;&#10;&#9;&#9;&#9;then substring_index(substring_index(result_summary,&apos;:updated_intent_targets: &apos;,-1),&apos;\n&apos;,1) &#13;&#10;&#9;&#9;&#9;else &apos;&apos; end as updated_intent_targets&#13;&#10;&#9;from bulksheet_imports&#13;&#10;&#9;where processing_state_type = &apos;COMPLETED&apos;&#13;&#10;&#9;group by advertiser_id) as bulk_sheet&#13;&#10;left join&#13;&#10;&#9;(select &#13;&#10;&#9;&#9;id as Advertiser_ID, &#13;&#10;&#9;&#9;name as Advertiser_Name &#13;&#10;&#9; from entities&#13;&#10;&#9; group by id) as entities&#13;&#10;on bulk_sheet.Advertiser_ID = entities.Advertiser_ID&#13;&#10;order by entities.Advertiser_Name</relation>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Advertiser_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='In Last 30 Days (Bulksheet)' datatype='string' name='[Calculation_2420401092539390]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;, [Most_Recent], NOW()) &gt; 1 THEN &quot;FALSE&quot; ELSE &quot;TRUE&quot; END' scope-isolation='false' />
      </column>
      <column caption='Count (Bulksheet)' datatype='integer' default-format='n#,##0;-#,##0' name='[Date_Count]' role='measure' type='quantitative'>
      </column>
      <column caption='Most_Recent (Bulksheet)' datatype='date' name='[Most_Recent]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\bulksheets.tde' schema='Extract' tablename='Extract' update-time='10/3/2014 7:02:49 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='149' timestamp-start='2014-10-03 19:02:49.150000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='logins' inline='true' name='vertica.41716.521386944441' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;u.id as &quot;User ID&quot;,&#13;&#10;&#9;email as Email,&#13;&#10;&#9;first_name as &quot;First Name&quot;,&#13;&#10;&#9;last_name as &quot;Last Name&quot;,&#13;&#10;&#9;login_count as &quot;Total Login Count&quot;,&#13;&#10;&#9;last_request_at as &quot;Last Requested At&quot;,&#13;&#10;&#9;current_login_at as &quot;Current Login At&quot;,&#13;&#10;&#9;last_login_at as &quot;Last Login At&quot;,&#13;&#10;&#9;e.name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;(case when u.email like &apos;%intentmedia.com%&apos; then &apos;Internal&apos; else &apos;External&apos; end) as &quot;User Type&quot;&#13;&#10;from intent_media_production.users u&#13;&#10;left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;where e.entity_type = &apos;AftAdvertiser&apos;&#13;&#10;and e.active = 1&#13;&#10;and m.active = 1</relation>
      </connection>
      <aliases enabled='yes' />
      <column caption='Logins within 30 Days' datatype='integer' name='[Calculation_1720318123720903]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Last Login At], TODAY()-1) &gt;= -30 THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='Second Most Recent Login' datatype='datetime' name='[Calculation_8930401091743449]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='max([Last Login At])' scope-isolation='false' />
      </column>
      <column caption='Most Recent Login' datatype='datetime' name='[Calculation_9190401091634474]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='max([Last Requested At])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[User ID]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\users.tde' schema='Extract' tablename='Extract' update-time='10/3/2014 7:10:19 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='774' timestamp-start='2014-10-03 19:10:19.782000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='performance' inline='true' name='vertica.41716.488056666669' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    entities.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&apos;Flights&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;(case entities.advertiser_category_type&#13;&#10;&#9;&#9;when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;&#9;&#9;when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;&#9;&#9;when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;&#9;&#9;when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;&#9;&#9;when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;&#9;&#9;when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;&#9;&#9;when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;&#9;&#9;when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;&#9;&#9;else entities.advertiser_category_type&#13;&#10;&#9;end) as &quot;Advertiser Segment&quot;,&#13;&#10;&#9;ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;&#9;campaigns.name as &quot;Campaign&quot;,&#13;&#10;&#9;campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;acapra.date_in_et as Date,&#13;&#10;&#9;&apos;Total&apos; as Site,&#13;&#10;&#9;performance.&quot;Eligible Ad Calls&quot; as &quot;Eligible Ad Calls&quot;,&#13;&#10;&#9;performance.&quot;Non-Learning Impressions&quot; as &quot;Non-Learning Impressions&quot;,&#13;&#10;&#9;performance.&quot;Filtered Ad Count&quot; as &quot;Filtered Ad Count&quot;,&#13;&#10;        performance.&quot;Filtered Ad for Budget Count&quot;,&#13;&#10;        performance.&quot;Filtered Ad for Bid Count&quot;,&#13;&#10;        performance.&quot;Filtered Ad for Click Blackout&quot;,&#13;&#10;&#9;sum(acapra.impression_count) as Impressions,&#13;&#10;&#9;sum(acapra.click_count) as Clicks,&#13;&#10;&#9;sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;&#9;sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;&#9;sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;&#9;sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;&#9;sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;&#9;sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;right join &#13;&#10;                (select&#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;ad_group_id,&#13;&#10;&#9;&#9;&#9;campaign_id,&#13;&#10;&#9;&#9;&#9;sum(acisra.filtered_ad_count+acisra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;&#9;&#9;&#9;sum(acisra.impression_count) as &quot;Non-Learning Impressions&quot;,&#13;&#10;&#9;&#9;&#9;sum(acisra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;                        sum(acisra.filtered_ad_for_budget_count) as &quot;Filtered Ad for Budget Count&quot;,&#13;&#10;                        sum(acisra.filtered_ad_for_bid_count) as &quot;Filtered Ad for Bid Count&quot;,&#13;&#10;                        sum(acisra.filtered_ad_for_click_blackout_count) as &quot;Filtered Ad for Click Blackout&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_impression_share_report_aggregations acisra&#13;&#10;&#9;&#9;group by aggregation_level_date_in_et, advertiser_id, ad_group_id, campaign_id) performance&#13;&#10;&#13;&#10;on acapra.date_in_et = performance.date_in_et &#13;&#10;&#9;and acapra.advertiser_id = performance.advertiser_id&#13;&#10;&#9;and acapra.ad_group_id = performance.ad_group_id&#13;&#10;&#9;and acapra.campaign_id = performance.campaign_id&#13;&#10;&#9;&#13;&#10;left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;group by &#13;&#10;    entities.name, &#13;&#10;    entities.id,&#13;&#10;    entities.advertiser_category_type, &#13;&#10;    ad_groups.name, &#13;&#10;    campaigns.name, &#13;&#10;    acapra.date_in_et, &#13;&#10;    performance.&quot;Eligible Ad Calls&quot;, &#13;&#10;    performance.&quot;Non-Learning Impressions&quot;, &#13;&#10;    performance.&quot;Filtered Ad Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Budget Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Bid Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Click Blackout&quot;,&#13;&#10;    campaigns.precheck_eligibility_type&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;-------------------------------------HOTEL-------------------------------&#13;&#10;select&#13;&#10;&#9;entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    entities.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&apos;Hotels&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;(case entities.advertiser_category_type&#13;&#10;&#9;&#9;when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;&#9;&#9;when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;&#9;&#9;when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;&#9;&#9;when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;&#9;&#9;when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;&#9;&#9;when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;&#9;&#9;when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;&#9;&#9;when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;&#9;&#9;else entities.advertiser_category_type&#13;&#10;&#9;end) as &quot;Advertiser Segment&quot;,&#13;&#10;&#9;ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;&#9;campaigns.name as &quot;Campaign&quot;,&#13;&#10;&#9;campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;acapra.date_in_et as Date,&#13;&#10;&#9;&apos;Total&apos; as Site,&#13;&#10;&#9;performance.&quot;Eligible Ad Calls&quot; as &quot;Eligible Ad Calls&quot;,&#13;&#10;&#9;performance.&quot;Non-Learning Impressions&quot; as &quot;Non-Learning Impressions&quot;,&#13;&#10;&#9;performance.&quot;Filtered Ad Count&quot; as &quot;Filtered Ad Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Budget Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Bid Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Click Blackout&quot;,&#13;&#10;&#9;sum(acapra.impression_count) as Impressions,&#13;&#10;&#9;sum(acapra.click_count) as Clicks,&#13;&#10;&#9;sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;&#9;sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;&#9;sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;&#9;sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;&#9;sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;&#9;sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;from intent_media_production.hotel_ct_advertiser_performance_report_aggregations acapra&#13;&#10;right join (select&#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;ad_group_id,&#13;&#10;&#9;&#9;&#9;campaign_id,&#13;&#10;&#9;&#9;&#9;sum(acisra.filtered_ad_count+acisra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;&#9;&#9;&#9;sum(acisra.impression_count) as &quot;Non-Learning Impressions&quot;,&#13;&#10;&#9;&#9;&#9;sum(acisra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;            sum(acisra.filtered_ad_for_budget_count) as &quot;Filtered Ad for Budget Count&quot;,&#13;&#10;            sum(acisra.filtered_ad_for_bid_count) as &quot;Filtered Ad for Bid Count&quot;,&#13;&#10;            sum(acisra.filtered_ad_for_click_blackout_count) as &quot;Filtered Ad for Click Blackout&quot;&#13;&#10;&#9;&#9;from intent_media_production.hotel_ct_impression_share_report_aggregations acisra&#13;&#10;&#9;&#9;group by aggregation_level_date_in_et, advertiser_id, ad_group_id, campaign_id) performance&#13;&#10;on acapra.date_in_et = performance.date_in_et &#13;&#10;&#9;and acapra.advertiser_id = performance.advertiser_id&#13;&#10;&#9;and acapra.ad_group_id = performance.ad_group_id&#13;&#10;&#9;and acapra.campaign_id = performance.campaign_id&#13;&#10;left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;group by &#13;&#10;    entities.name, &#13;&#10;    entities.id,&#13;&#10;    entities.advertiser_category_type, &#13;&#10;    ad_groups.name, &#13;&#10;    campaigns.name, &#13;&#10;    acapra.date_in_et, &#13;&#10;    performance.&quot;Eligible Ad Calls&quot;, &#13;&#10;    performance.&quot;Non-Learning Impressions&quot;, &#13;&#10;    performance.&quot;Filtered Ad Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Budget Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Bid Count&quot;,&#13;&#10;    performance.&quot;Filtered Ad for Click Blackout&quot;,&#13;&#10;    campaigns.precheck_eligibility_type &#13;&#10;    &#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;--------------------------------------META---------------------------------------&#13;&#10;&#13;&#10;select&#13;&#10;&#9;entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    entities.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;(case entities.advertiser_category_type&#13;&#10;&#9;&#9;when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;&#9;&#9;when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;&#9;&#9;when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;&#9;&#9;when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;&#9;&#9;when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;&#9;&#9;when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;&#9;&#9;when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;&#9;&#9;when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;&#9;&#9;else entities.advertiser_category_type&#13;&#10;&#9;end) as &quot;Advertiser Segment&quot;,&#13;&#10;&#9;ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;&#9;campaigns.name as &quot;Campaign&quot;,&#13;&#10;&#9;campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;acapra.date_in_et as Date,&#13;&#10;&#9;&apos;Total&apos; as Site,&#13;&#10;&#9;sum(acapra.filtered_ad_count + acapra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;&#9;cast(null as int) as &quot;Non-Learning Impressions&quot;,&#13;&#10;&#9;sum(acapra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;    cast(null as int) as &quot;Filtered Ad for Budget Count&quot;,&#13;&#10;    cast(null as int) as &quot;Filtered Ad for Bid Count&quot;,&#13;&#10;    cast(null as int) as &quot;Filtered Ad for Click Blackout&quot;,&#13;&#10;&#9;sum(acapra.impression_count) as Impressions,&#13;&#10;&#9;sum(acapra.click_count) as Clicks,&#13;&#10;&#9;sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;&#9;cast(null as int) as &quot;Click Conversions&quot;,&#13;&#10;&#9;cast(null as int) as &quot;View Conversions&quot;,&#13;&#10;&#9;cast(null as int) as &quot;Click Revenue&quot;,&#13;&#10;&#9;cast(null as int) as &quot;Exposed Revenue&quot;,&#13;&#10;&#9;sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;from intent_media_production.hotel_meta_advertiser_performance_aggregations acapra&#13;&#10;left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;group by &#13;&#10;    entities.name, &#13;&#10;    entities.id,&#13;&#10;    entities.advertiser_category_type, &#13;&#10;    ad_groups.name, &#13;&#10;    campaigns.name, &#13;&#10;    acapra.date_in_et,&#13;&#10;    campaigns.precheck_eligibility_type</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Filtered Ads for Bid %' datatype='real' default-format='p0.0%' name='[Calculation_0110318160133069]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Filtered Ad for Bid Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='CTR' datatype='real' default-format='p0.0%' name='[Calculation_0190318160338913]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Filtered for Budget' datatype='string' name='[Calculation_1370318161034735]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Filtered Ad for Budget Count]) &gt; 0 THEN &quot;TRUE&quot; ELSE &quot;&quot; END' scope-isolation='false' />
      </column>
      <column caption='Filtered Ads for Budget %' datatype='real' default-format='p0.0%' name='[Calculation_2600318160217409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Filtered Ad for Budget Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Filtered Ads for Click Blackout %' datatype='real' default-format='p0.0%' name='[Calculation_2800318160231337]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Filtered Ad for Click Blackout])/SUM([Eligible Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Include Prechecks Data' datatype='string' name='[Calculation_3330814140104013]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='Case [Precheck Type]&#13;&#10;WHEN &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;No Prechecks&quot;&#13;&#10;WHEN Null THEN &quot;No Prechecks&quot;&#13;&#10;ELSE &quot;Only Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Impression Share' datatype='real' default-format='p0.0%' name='[Calculation_3400318120815249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Impressions])/SUM([Eligible Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_4790318160416073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Spend])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='Average Position' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_5060318120943624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Auction Position Sum])/SUM([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Total Click Conversions' datatype='integer' name='[Calculation_5490407144722358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Total(Sum([Click Conversions]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Pixel' datatype='string' name='[Calculation_5630401154754997]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_5490407144722358] &gt; 0 THEN &quot;TRUE&quot; ELSE &quot;FALSE&quot; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\aft_advertiser_activity__performance.tde' schema='Extract' tablename='Extract' update-time='10/3/2014 7:02:54 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3330814140104013]' formula='Case [Precheck Type]&#13;&#10;WHEN &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;No Prechecks&quot;&#13;&#10;WHEN Null THEN &quot;No Prechecks&quot;&#13;&#10;ELSE &quot;Only Prechecks&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2173381' timestamp-start='2014-10-03 19:02:54.293000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.308717' measure-ordering='alphabetic' measure-percentage='0.691283' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='mysql.41716.681430439814'>
      <column aggregation='Sum' datatype='integer' name='[Advertiser_ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Advertiser_Name]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Advertiser_ID]' derivation='None' name='[none:Advertiser_ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Advertiser_Name]' derivation='None' name='[none:Advertiser_Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='vertica.41716.488056666669'>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='vertica.41716.521386944441'>
      <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='vertica.41716.488056666669' target='mysql.41716.681430439814'>
      <column-mapping>
        <map key='[vertica.41716.488056666669].[none:Advertiser ID:ok]' value='[mysql.41716.681430439814].[none:Advertiser_ID:ok]' />
        <map key='[vertica.41716.488056666669].[none:Advertiser Name:nk]' value='[mysql.41716.681430439814].[none:Advertiser_Name:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='vertica.41716.521386944441' target='vertica.41716.488056666669'>
      <column-mapping>
        <map key='[vertica.41716.521386944441].[none:Advertiser Name:nk]' value='[vertica.41716.488056666669].[none:Advertiser Name:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <shared-views>
    <shared-view name='vertica.41716.488056666669'>
      <datasources>
        <datasource caption='performance' name='vertica.41716.488056666669' />
      </datasources>
      <datasource-dependencies datasource='vertica.41716.488056666669'>
        <column caption='Include Prechecks Data' datatype='string' name='[Calculation_3330814140104013]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='Case [Precheck Type]&#13;&#10;WHEN &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;No Prechecks&quot;&#13;&#10;WHEN Null THEN &quot;No Prechecks&quot;&#13;&#10;ELSE &quot;Only Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column-instance column='[Calculation_3330814140104013]' derivation='None' name='[none:Calculation_3330814140104013:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_3330814140104013:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='AfT Tracker'>
      <table>
        <view>
          <datasources>
            <datasource caption='performance' name='vertica.41716.488056666669' />
            <datasource caption='bulksheets' name='mysql.41716.681430439814' />
            <datasource caption='audits' name='mysql.41716.536882881941' />
            <datasource caption='logins' name='vertica.41716.521386944441' />
          </datasources>
          <datasource-dependencies datasource='mysql.41716.536882881941'>
            <column datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column caption='Count (Audit)' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_8330401153211979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Date])' scope-isolation='false' />
            </column>
            <column caption='Most Recent (Audit)' datatype='date' name='[Calculation_8950401153357592]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Date])' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_8330401153211979]' derivation='User' name='[usr:Calculation_8330401153211979:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8950401153357592]' derivation='User' name='[usr:Calculation_8950401153357592:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='mysql.41716.681430439814'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser_ID]' role='dimension' type='ordinal'>
            </column>
            <column caption='In Last 30 Days (Bulksheet)' datatype='string' name='[Calculation_2420401092539390]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;, [Most_Recent], NOW()) &gt; 1 THEN &quot;FALSE&quot; ELSE &quot;TRUE&quot; END' scope-isolation='false' />
            </column>
            <column caption='Count (Bulksheet)' datatype='integer' default-format='n#,##0;-#,##0' name='[Date_Count]' role='measure' type='quantitative'>
            </column>
            <column caption='Most_Recent (Bulksheet)' datatype='date' name='[Most_Recent]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_2420401092539390]' derivation='None' name='[none:Calculation_2420401092539390:nk]' pivot='key' type='nominal' />
            <column-instance column='[Most_Recent]' derivation='None' name='[none:Most_Recent:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date_Count]' derivation='Sum' name='[sum:Date_Count:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column caption='Filtered Ads for Bid %' datatype='real' default-format='p0.0%' name='[Calculation_0110318160133069]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Bid Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.0%' name='[Calculation_0190318160338913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Filtered for Budget' datatype='string' name='[Calculation_1370318161034735]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Filtered Ad for Budget Count]) &gt; 0 THEN &quot;TRUE&quot; ELSE &quot;&quot; END' scope-isolation='false' />
            </column>
            <column caption='Filtered Ads for Budget %' datatype='real' default-format='p0.0%' name='[Calculation_2600318160217409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Budget Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Filtered Ads for Click Blackout %' datatype='real' default-format='p0.0%' name='[Calculation_2800318160231337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Click Blackout])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Include Prechecks Data' datatype='string' name='[Calculation_3330814140104013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Case [Precheck Type]&#13;&#10;WHEN &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;No Prechecks&quot;&#13;&#10;WHEN Null THEN &quot;No Prechecks&quot;&#13;&#10;ELSE &quot;Only Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Impression Share' datatype='real' default-format='p0.0%' name='[Calculation_3400318120815249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Impressions])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_4790318160416073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Spend])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Average Position' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_5060318120943624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Auction Position Sum])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Pixel' datatype='string' name='[Calculation_5630401154754997]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_5490407144722358] &gt; 0 THEN &quot;TRUE&quot; ELSE &quot;FALSE&quot; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Eligible Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3330814140104013]' derivation='None' name='[none:Calculation_3330814140104013:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Calls]' derivation='Sum' name='[sum:Eligible Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0110318160133069]' derivation='User' name='[usr:Calculation_0110318160133069:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0190318160338913]' derivation='User' name='[usr:Calculation_0190318160338913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1370318161034735]' derivation='User' name='[usr:Calculation_1370318161034735:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2600318160217409]' derivation='User' name='[usr:Calculation_2600318160217409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2800318160231337]' derivation='User' name='[usr:Calculation_2800318160231337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3400318120815249]' derivation='User' name='[usr:Calculation_3400318120815249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4790318160416073]' derivation='User' name='[usr:Calculation_4790318160416073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5060318120943624]' derivation='User' name='[usr:Calculation_5060318120943624:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5630401154754997]' derivation='User' name='[usr:Calculation_5630401154754997:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[vertica.41716.488056666669].[Advertiser Name]' ordering-type='Field' />
              <table-calc field='[vertica.41716.488056666669].[Calculation_5490407144722358]' ordering-field='[vertica.41716.488056666669].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.521386944441'>
            <column caption='Logins within 30 Days' datatype='integer' name='[Calculation_1720318123720903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Last Login At], TODAY()-1) &gt;= -30 THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='Second Most Recent Login' datatype='datetime' name='[Calculation_8930401091743449]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Last Login At])' scope-isolation='false' />
            </column>
            <column caption='Most Recent Login' datatype='datetime' name='[Calculation_9190401091634474]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Last Requested At])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Total Login Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[User Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[User Type]' derivation='None' name='[none:User Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1720318123720903]' derivation='Sum' name='[sum:Calculation_1720318123720903:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Login Count]' derivation='Sum' name='[sum:Total Login Count:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Login Count]' derivation='Sum' name='[sum:Total Login Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8930401091743449]' derivation='User' name='[usr:Calculation_8930401091743449:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9190401091634474]' derivation='User' name='[usr:Calculation_9190401091634474:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41716.488056666669].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Eligible Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_3400318120815249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_0110318160133069:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_2600318160217409:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_2800318160231337:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_0190318160338913:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_5060318120943624:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_4790318160416073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Calculation_1720318123720903:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Click Conversions:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41716.488056666669].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Eligible Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_3400318120815249:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_0110318160133069:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_2600318160217409:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_2800318160231337:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_0190318160338913:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_5060318120943624:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_4790318160416073:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.521386944441].[sum:Calculation_1720318123720903:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Name:nk]'>
            <groupfilter function='level-members' level='[none:Advertiser Name:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Segment:nk]'>
            <groupfilter function='level-members' level='[none:Advertiser Segment:nk]' />
          </filter>
          <filter class='quantitative' column='[vertica.41716.488056666669].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Product Category Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Category Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[usr:Calculation_5630401154754997:nk:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_5630401154754997:nk:3]' member='&quot;FALSE&quot;' />
              <groupfilter function='member' level='[usr:Calculation_5630401154754997:nk:3]' member='&quot;TRUE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41716.521386944441].[none:User Type:nk]'>
            <groupfilter function='member' level='[none:User Type:nk]' member='&quot;External&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41716.488056666669].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Date:qk]</column>
            <column>[vertica.41716.488056666669].[none:Product Category Type:nk]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Name:nk]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Segment:nk]</column>
            <column>[vertica.41716.488056666669].[usr:Calculation_5630401154754997:nk:3]</column>
            <column>[vertica.41716.521386944441].[none:User Type:nk]</column>
            <column>[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41716.488056666669].[:Measure Names]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41716.488056666669].[:Measure Names]' value='36' />
            <format attr='width' field='[vertica.41716.521386944441].[usr:Calculation_8930401091743449:ok]' value='112' />
            <format attr='width' field='[vertica.41716.521386944441].[sum:Total Login Count:ok]' value='68' />
            <format attr='width' field='[vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk]' value='64' />
            <format attr='width' field='[vertica.41716.521386944441].[usr:Calculation_9190401091634474:ok]' value='112' />
            <format attr='width' field='[vertica.41716.488056666669].[none:Product Category Type:nk]' value='80' />
            <format attr='width' field='[mysql.41716.681430439814].[sum:Date_Count:ok]' value='68' />
            <format attr='width' field='[vertica.41716.488056666669].[none:Advertiser Name:nk]' value='148' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41716.488056666669].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41716.488056666669].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / ([vertica.41716.488056666669].[none:Advertiser Segment:nk] / ([vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk] / ([vertica.41716.521386944441].[usr:Calculation_9190401091634474:ok] / ([vertica.41716.521386944441].[usr:Calculation_8930401091743449:ok] / ([vertica.41716.521386944441].[sum:Total Login Count:ok] / ([mysql.41716.681430439814].[none:Most_Recent:ok] / ([mysql.41716.681430439814].[none:Calculation_2420401092539390:nk] / ([mysql.41716.681430439814].[sum:Date_Count:ok] / ([mysql.41716.536882881941].[usr:Calculation_8950401153357592:ok] / ([mysql.41716.536882881941].[usr:Calculation_8330401153211979:ok] / [vertica.41716.488056666669].[usr:Calculation_5630401154754997:nk:3]))))))))))))</rows>
        <cols>[vertica.41716.488056666669].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[mysql.41716.536882881941].[Advertiser ID]</column>
          <column>[mysql.41716.681430439814].[Advertiser_ID]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Audits'>
      <table>
        <view>
          <datasources>
            <datasource caption='audits' name='mysql.41716.536882881941' />
            <datasource caption='performance' name='vertica.41716.488056666669' />
          </datasources>
          <datasource-dependencies datasource='mysql.41716.536882881941'>
            <column caption='Count (Audit)' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_8330401153211979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Date])' scope-isolation='false' />
            </column>
            <column caption='Most Recent (Audit)' datatype='date' name='[Calculation_8950401153357592]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Date])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[User_Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[User_Type]' derivation='None' name='[none:User_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8330401153211979]' derivation='User' name='[usr:Calculation_8330401153211979:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8950401153357592]' derivation='User' name='[usr:Calculation_8950401153357592:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41716.536882881941].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41716.536882881941].[usr:Calculation_8330401153211979:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[mysql.41716.536882881941].[none:User_Type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:User_Type:nk]' member='&quot;External&quot;' />
              <groupfilter function='member' level='[none:User_Type:nk]' member='&quot;Internal&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Name:nk]'>
            <groupfilter from='&quot;Aeromexico&quot;' function='range' level='[none:Advertiser Name:nk]' to='&quot;Westin Hotels&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Product Category Type:nk]'>
            <groupfilter from='&quot;Flights&quot;' function='range' level='[none:Product Category Type:nk]' to='&quot;Meta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41716.536882881941].[none:User_Type:nk]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Name:nk]</column>
            <column>[mysql.41716.536882881941].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41716.536882881941].[:Measure Names]' value='91' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41716.536882881941].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / [mysql.41716.536882881941].[usr:Calculation_8950401153357592:ok])))</rows>
        <cols>[mysql.41716.536882881941].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41716.488056666669].[Advertiser ID]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Audits - External'>
      <table>
        <view>
          <datasources>
            <datasource caption='audits' name='mysql.41716.536882881941' />
            <datasource caption='performance' name='vertica.41716.488056666669' />
          </datasources>
          <datasource-dependencies datasource='mysql.41716.536882881941'>
            <column caption='Count (Audit)' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_8330401153211979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Date])' scope-isolation='false' />
            </column>
            <column caption='Most Recent (Audit)' datatype='date' name='[Calculation_8950401153357592]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Date])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[User_Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[User_Type]' derivation='None' name='[none:User_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8330401153211979]' derivation='User' name='[usr:Calculation_8330401153211979:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8950401153357592]' derivation='User' name='[usr:Calculation_8950401153357592:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41716.536882881941].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41716.536882881941].[usr:Calculation_8330401153211979:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[mysql.41716.536882881941].[none:User_Type:nk]'>
            <groupfilter function='member' level='[none:User_Type:nk]' member='&quot;External&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Name:nk]'>
            <groupfilter from='&quot;Aeromexico&quot;' function='range' level='[none:Advertiser Name:nk]' to='&quot;Westin Hotels&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Product Category Type:nk]'>
            <groupfilter from='&quot;Flights&quot;' function='range' level='[none:Product Category Type:nk]' to='&quot;Meta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41716.536882881941].[none:User_Type:nk]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Name:nk]</column>
            <column>[mysql.41716.536882881941].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41716.536882881941].[:Measure Names]' value='91' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41716.536882881941].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / [mysql.41716.536882881941].[usr:Calculation_8950401153357592:ok])))</rows>
        <cols>[mysql.41716.536882881941].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41716.488056666669].[Advertiser ID]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Audits - Internal'>
      <table>
        <view>
          <datasources>
            <datasource caption='audits' name='mysql.41716.536882881941' />
            <datasource caption='performance' name='vertica.41716.488056666669' />
          </datasources>
          <datasource-dependencies datasource='mysql.41716.536882881941'>
            <column caption='Count (Audit)' datatype='integer' default-format='n#,##0;-#,##0' name='[Calculation_8330401153211979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Date])' scope-isolation='false' />
            </column>
            <column caption='Most Recent (Audit)' datatype='date' name='[Calculation_8950401153357592]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Date])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[User_Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[User_Type]' derivation='None' name='[none:User_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8330401153211979]' derivation='User' name='[usr:Calculation_8330401153211979:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8950401153357592]' derivation='User' name='[usr:Calculation_8950401153357592:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41716.536882881941].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41716.536882881941].[usr:Calculation_8330401153211979:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[mysql.41716.536882881941].[none:User_Type:nk]'>
            <groupfilter function='member' level='[none:User_Type:nk]' member='&quot;Internal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Name:nk]'>
            <groupfilter from='&quot;Aeromexico&quot;' function='range' level='[none:Advertiser Name:nk]' to='&quot;Westin Hotels&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Product Category Type:nk]'>
            <groupfilter from='&quot;Flights&quot;' function='range' level='[none:Product Category Type:nk]' to='&quot;Meta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41716.536882881941].[none:User_Type:nk]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Name:nk]</column>
            <column>[mysql.41716.536882881941].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41716.536882881941].[:Measure Names]' value='91' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41716.536882881941].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / [mysql.41716.536882881941].[usr:Calculation_8950401153357592:ok])))</rows>
        <cols>[mysql.41716.536882881941].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41716.488056666669].[Advertiser ID]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Bulksheets'>
      <table>
        <view>
          <datasources>
            <datasource caption='bulksheets' name='mysql.41716.681430439814' />
            <datasource caption='performance' name='vertica.41716.488056666669' />
          </datasources>
          <datasource-dependencies datasource='mysql.41716.681430439814'>
            <column caption='In Last 30 Days (Bulksheet)' datatype='string' name='[Calculation_2420401092539390]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;month&apos;, [Most_Recent], NOW()) &gt; 1 THEN &quot;FALSE&quot; ELSE &quot;TRUE&quot; END' scope-isolation='false' />
            </column>
            <column caption='Count (Bulksheet)' datatype='integer' default-format='n#,##0;-#,##0' name='[Date_Count]' role='measure' type='quantitative'>
            </column>
            <column caption='Most_Recent (Bulksheet)' datatype='date' name='[Most_Recent]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_2420401092539390]' derivation='None' name='[none:Calculation_2420401092539390:nk]' pivot='key' type='nominal' />
            <column-instance column='[Most_Recent]' derivation='None' name='[none:Most_Recent:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date_Count]' derivation='Sum' name='[sum:Date_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41716.681430439814].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41716.681430439814].[sum:Date_Count:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Name:nk]'>
            <groupfilter from='&quot;Aeromexico&quot;' function='range' level='[none:Advertiser Name:nk]' to='&quot;Westin Hotels&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Product Category Type:nk]'>
            <groupfilter from='&quot;Flights&quot;' function='range' level='[none:Product Category Type:nk]' to='&quot;Meta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41716.681430439814].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Name:nk]</column>
            <column>[vertica.41716.488056666669].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41716.681430439814].[:Measure Names]' value='86' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41716.681430439814].[none:Calculation_2420401092539390:nk]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41716.681430439814].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / ([mysql.41716.681430439814].[none:Most_Recent:ok] / [mysql.41716.681430439814].[none:Calculation_2420401092539390:nk]))))</rows>
        <cols>[mysql.41716.681430439814].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Login'>
      <table>
        <view>
          <datasources>
            <datasource caption='logins' name='vertica.41716.521386944441' />
            <datasource caption='performance' name='vertica.41716.488056666669' />
          </datasources>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.521386944441'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Second Most Recent Login' datatype='datetime' name='[Calculation_8930401091743449]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Last Login At])' scope-isolation='false' />
            </column>
            <column caption='Most Recent Login' datatype='datetime' name='[Calculation_9190401091634474]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='max([Last Requested At])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Total Login Count]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Login Count]' derivation='Sum' name='[sum:Total Login Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8930401091743449]' derivation='User' name='[usr:Calculation_8930401091743449:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9190401091634474]' derivation='User' name='[usr:Calculation_9190401091634474:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Advertiser Segment:nk]'>
            <groupfilter from='&quot;Domestic Airline&quot;' function='range' level='[none:Advertiser Segment:nk]' to='&quot;Tier 2&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.488056666669].[none:Product Category Type:nk]'>
            <groupfilter from='&quot;Flights&quot;' function='range' level='[none:Product Category Type:nk]' to='&quot;Meta&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41716.521386944441].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[vertica.41716.521386944441].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Advertiser Segment:nk]</column>
            <column>[vertica.41716.488056666669].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41716.521386944441].[:Measure Names]' value='105' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41716.521386944441].[usr:Calculation_8930401091743449:ok]' value='148' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41716.521386944441].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.521386944441].[none:Advertiser Name:nk] / ([vertica.41716.488056666669].[none:Advertiser Segment:nk] / ([vertica.41716.521386944441].[usr:Calculation_9190401091634474:ok] / [vertica.41716.521386944441].[usr:Calculation_8930401091743449:ok])))))</rows>
        <cols>[vertica.41716.521386944441].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='performance' name='vertica.41716.488056666669' />
            <datasource caption='logins' name='vertica.41716.521386944441' />
          </datasources>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column caption='Filtered Ads for Bid %' datatype='real' default-format='p0.0%' name='[Calculation_0110318160133069]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Bid Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.0%' name='[Calculation_0190318160338913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Filtered for Budget' datatype='string' name='[Calculation_1370318161034735]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Filtered Ad for Budget Count]) &gt; 0 THEN &quot;TRUE&quot; ELSE &quot;&quot; END' scope-isolation='false' />
            </column>
            <column caption='Filtered Ads for Budget %' datatype='real' default-format='p0.0%' name='[Calculation_2600318160217409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Budget Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Filtered Ads for Click Blackout %' datatype='real' default-format='p0.0%' name='[Calculation_2800318160231337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Click Blackout])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Include Prechecks Data' datatype='string' name='[Calculation_3330814140104013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Case [Precheck Type]&#13;&#10;WHEN &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;No Prechecks&quot;&#13;&#10;WHEN Null THEN &quot;No Prechecks&quot;&#13;&#10;ELSE &quot;Only Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Impression Share' datatype='real' default-format='p0.0%' name='[Calculation_3400318120815249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Impressions])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_4790318160416073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Spend])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Average Position' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_5060318120943624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Auction Position Sum])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Eligible Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3330814140104013]' derivation='None' name='[none:Calculation_3330814140104013:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Calls]' derivation='Sum' name='[sum:Eligible Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0110318160133069]' derivation='User' name='[usr:Calculation_0110318160133069:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0190318160338913]' derivation='User' name='[usr:Calculation_0190318160338913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1370318161034735]' derivation='User' name='[usr:Calculation_1370318161034735:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2600318160217409]' derivation='User' name='[usr:Calculation_2600318160217409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2800318160231337]' derivation='User' name='[usr:Calculation_2800318160231337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3400318120815249]' derivation='User' name='[usr:Calculation_3400318120815249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4790318160416073]' derivation='User' name='[usr:Calculation_4790318160416073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5060318120943624]' derivation='User' name='[usr:Calculation_5060318120943624:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.521386944441'>
            <column caption='Logins within 30 Days' datatype='integer' name='[Calculation_1720318123720903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Last Login At], TODAY()-1) &gt;= -30 THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Total Login Count]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1720318123720903]' derivation='Sum' name='[sum:Calculation_1720318123720903:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Login Count]' derivation='Sum' name='[sum:Total Login Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41716.488056666669].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Eligible Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_3400318120815249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_0110318160133069:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_2600318160217409:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_2800318160231337:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_0190318160338913:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_5060318120943624:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[usr:Calculation_4790318160416073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Calculation_1720318123720903:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.488056666669].[sum:Click Conversions:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41716.488056666669].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Eligible Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_3400318120815249:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_0110318160133069:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_2600318160217409:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_2800318160231337:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_0190318160338913:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_5060318120943624:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_4790318160416073:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.521386944441].[sum:Calculation_1720318123720903:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41716.488056666669].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41716.488056666669].[:Measure Names]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41716.488056666669].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41716.488056666669].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / ([vertica.41716.488056666669].[none:Advertiser Segment:nk] / [vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk]))))</rows>
        <cols>[vertica.41716.488056666669].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='performance' name='vertica.41716.488056666669' />
            <datasource caption='logins' name='vertica.41716.521386944441' />
          </datasources>
          <datasource-dependencies datasource='vertica.41716.488056666669'>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column caption='Filtered Ads for Bid %' datatype='real' default-format='p0.0%' name='[Calculation_0110318160133069]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Bid Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.0%' name='[Calculation_0190318160338913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Filtered for Budget' datatype='string' name='[Calculation_1370318161034735]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Filtered Ad for Budget Count]) &gt; 0 THEN &quot;TRUE&quot; ELSE &quot;&quot; END' scope-isolation='false' />
            </column>
            <column caption='Filtered Ads for Budget %' datatype='real' default-format='p0.0%' name='[Calculation_2600318160217409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Budget Count])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Filtered Ads for Click Blackout %' datatype='real' default-format='p0.0%' name='[Calculation_2800318160231337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Filtered Ad for Click Blackout])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Include Prechecks Data' datatype='string' name='[Calculation_3330814140104013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Case [Precheck Type]&#13;&#10;WHEN &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;No Prechecks&quot;&#13;&#10;WHEN Null THEN &quot;No Prechecks&quot;&#13;&#10;ELSE &quot;Only Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Impression Share' datatype='real' default-format='p0.0%' name='[Calculation_3400318120815249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Impressions])/SUM([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_4790318160416073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Spend])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Average Position' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_5060318120943624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Auction Position Sum])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Eligible Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3330814140104013]' derivation='None' name='[none:Calculation_3330814140104013:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Calls]' derivation='Sum' name='[sum:Eligible Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0110318160133069]' derivation='User' name='[usr:Calculation_0110318160133069:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0190318160338913]' derivation='User' name='[usr:Calculation_0190318160338913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1370318161034735]' derivation='User' name='[usr:Calculation_1370318161034735:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2600318160217409]' derivation='User' name='[usr:Calculation_2600318160217409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2800318160231337]' derivation='User' name='[usr:Calculation_2800318160231337:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3400318120815249]' derivation='User' name='[usr:Calculation_3400318120815249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4790318160416073]' derivation='User' name='[usr:Calculation_4790318160416073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5060318120943624]' derivation='User' name='[usr:Calculation_5060318120943624:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41716.521386944441'>
            <column caption='Logins within 30 Days' datatype='integer' name='[Calculation_1720318123720903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Last Login At], TODAY()-1) &gt;= -30 THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='datetime' name='[Last Requested At]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Total Login Count]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Last Requested At]' derivation='None' name='[none:Last Requested At:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1720318123720903]' derivation='Sum' name='[sum:Calculation_1720318123720903:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Login Count]' derivation='Sum' name='[sum:Total Login Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41716.488056666669].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Calculation_1720318123720903:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41716.488056666669].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Eligible Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_3400318120815249:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_0110318160133069:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_2600318160217409:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_2800318160231337:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_0190318160338913:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_5060318120943624:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.488056666669].[usr:Calculation_4790318160416073:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.521386944441].[sum:Calculation_1720318123720903:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41716.521386944441].[sum:Total Login Count:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41716.488056666669].[:Measure Names]</column>
            <column>[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41716.488056666669].[:Measure Names]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41716.488056666669].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41716.488056666669].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.488056666669].[none:Advertiser ID:ok] / ([vertica.41716.488056666669].[none:Advertiser Name:nk] / ([vertica.41716.488056666669].[none:Advertiser Segment:nk] / ([vertica.41716.488056666669].[none:Product Category Type:nk] / ([vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk] / [vertica.41716.521386944441].[none:Last Requested At:ok])))))</rows>
        <cols>[vertica.41716.488056666669].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='logins' name='vertica.41716.521386944441' />
          </datasources>
          <datasource-dependencies datasource='vertica.41716.521386944441'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[First Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Last Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[First Name]' derivation='None' name='[none:First Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Name]' derivation='None' name='[none:Last Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41716.521386944441].[none:Advertiser Name:nk] / ([vertica.41716.521386944441].[none:First Name:nk] / [vertica.41716.521386944441].[none:Last Name:nk]))</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Comparison Sheet'>
      <style>
      </style>
      <size maxheight='1500' maxwidth='2400' minheight='1500' minwidth='2400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='93542' x='6458' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='93375' x='6458' y='0'>
              <zone h='100000' id='1' name='AfT Tracker' show-title='true' w='93375' x='6458' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='6458' x='0' y='0'>
            <zone h='4668' id='8' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Date:qk]' type='filter' w='6458' x='0' y='0'>
            </zone>
            <zone h='6734' id='10' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Product Category Type:nk]' type='filter' w='6458' x='0' y='4668'>
            </zone>
            <zone h='10334' id='9' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Advertiser Segment:nk]' type='filter' w='6458' x='0' y='11402'>
            </zone>
            <zone h='3467' id='6' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Advertiser Name:nk]' type='filter' w='6458' x='0' y='21736'>
            </zone>
            <zone h='534' id='7' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Calculation_5630401154754997:nk]' type='filter' w='6458' x='0' y='25203'>
            </zone>
            <zone h='5534' id='11' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]' type='filter' w='6458' x='0' y='25737'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Performance'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.681430439814].[yr:Date:ok]</field>
          <field>[vertica.41716.488056666669].[:Measure Names]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Segment:nk]</field>
          <field>[vertica.41716.488056666669].[none:Calculation_3330814140104013:nk]</field>
          <field>[vertica.41716.488056666669].[none:Calculation_5630401154754997:nk]</field>
          <field>[vertica.41716.488056666669].[none:Precheck Type:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
          <field>[vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk]</field>
          <field>[vertica.41716.521386944441].[yr:Current Login At:ok]</field>
          <field>[vertica.41716.521386944441].[yr:Last Login At:ok]</field>
          <field>[vertica.41716.521386944441].[yr:Last Requested At:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Login'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Segment:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
          <field>[vertica.41716.521386944441].[:Measure Names]</field>
          <field>[vertica.41716.521386944441].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.521386944441].[none:Last Requested At:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Bulksheets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.681430439814].[none:Calculation_2420401092539390:nk]</field>
          <field>[mysql.41716.681430439814].[yr:Most_Recent:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Audits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.536882881941].[none:Advertiser ID:ok]</field>
          <field>[mysql.41716.536882881941].[none:Advertiser Name:nk]</field>
          <field>[mysql.41716.536882881941].[none:User_Type:nk]</field>
          <field>[mysql.41716.536882881941].[yr:Date:ok]</field>
          <field>[mysql.41716.681430439814].[yr:Most_Recent:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Audits - External'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.536882881941].[none:Advertiser ID:ok]</field>
          <field>[mysql.41716.536882881941].[none:Advertiser Name:nk]</field>
          <field>[mysql.41716.536882881941].[none:User_Type:nk]</field>
          <field>[mysql.41716.536882881941].[yr:Date:ok]</field>
          <field>[mysql.41716.681430439814].[yr:Most_Recent:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Audits - Internal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.536882881941].[none:Advertiser ID:ok]</field>
          <field>[mysql.41716.536882881941].[none:Advertiser Name:nk]</field>
          <field>[mysql.41716.536882881941].[none:User_Type:nk]</field>
          <field>[mysql.41716.536882881941].[yr:Date:ok]</field>
          <field>[mysql.41716.681430439814].[yr:Most_Recent:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AfT Tracker'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41716.488056666669].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41716.488056666669].[none:Product Category Type:nk]' type='filter' />
            <card param='[vertica.41716.488056666669].[none:Advertiser Segment:nk]' type='filter' />
            <card mode='checkdropdown' param='[vertica.41716.488056666669].[none:Advertiser Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.681430439814].[none:Calculation_2420401092539390:nk]</field>
          <field>[mysql.41716.681430439814].[yr:Date:ok]</field>
          <field>[mysql.41716.681430439814].[yr:Most_Recent:ok]</field>
          <field>[vertica.41716.488056666669].[:Measure Names]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Segment:nk]</field>
          <field>[vertica.41716.488056666669].[none:Calculation_5630401154754997:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
          <field>[vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk]</field>
          <field>[vertica.41716.488056666669].[usr:Calculation_5630401154754997:nk:1]</field>
          <field>[vertica.41716.521386944441].[none:User Type:nk]</field>
          <field>[vertica.41716.521386944441].[yr:Current Login At:ok]</field>
          <field>[vertica.41716.521386944441].[yr:Last Login At:ok]</field>
          <field>[vertica.41716.521386944441].[yr:Last Requested At:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41716.681430439814].[yr:Date:ok]</field>
          <field>[vertica.41716.488056666669].[:Measure Names]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser ID:ok]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.488056666669].[none:Advertiser Segment:nk]</field>
          <field>[vertica.41716.488056666669].[none:Product Category Type:nk]</field>
          <field>[vertica.41716.488056666669].[usr:Calculation_1370318161034735:nk]</field>
          <field>[vertica.41716.521386944441].[yr:Current Login At:ok]</field>
          <field>[vertica.41716.521386944441].[yr:Last Login At:ok]</field>
          <field>[vertica.41716.521386944441].[yr:Last Requested At:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41716.521386944441].[none:Advertiser Name:nk]</field>
          <field>[vertica.41716.521386944441].[none:First Name:nk]</field>
          <field>[vertica.41716.521386944441].[none:Last Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Comparison Sheet'>
      <active id='11' />
      <zones>
        <zone name='AfT Tracker' param='[vertica.41716.488056666669].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='AfT Tracker' param='[vertica.41716.488056666669].[none:Advertiser Name:nk]' type='filter' values='relevant' />
        <zone name='AfT Tracker' param='[vertica.41716.488056666669].[none:Calculation_5630401154754997:nk]' show-domain='false' type='filter' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Performance' width='192'>
      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
      pYhecnb+B1T1x8CI4f1iAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Login' width='192'>
      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
      nnIp+P8BYlRNN0UAO4kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bulksheets' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9V3dk15Xnea73N7wPIOBNZiJ9JilDqlqipJaq
      VNVVU71mqnrWrPko9S3mZR76YdZUVU9JpW415WhEZjKBNPAeEYhAeO+vt2cekqIcCQKpDIIp
      4feAlQACO+65eeKevc/e578RCCG45JIXAr3oC7jkFeZy9lzy4lzOnktenMvZ8+cFdK29zdVM
      ofaH/q6hDiTVckytWq1trj4+ylef/7yQzx4f59yPX+Xk88VP/gS59Jr/rMitv98RryU5O3uw
      LTkMjtoiADruDiTd1fre2TdmiFrJ9JjDdD6vJqYncMPsDur9Vnf8yk2zU/aMzR0+WYnMLH7/
      23+BIgC/6OFc8oVCUrQuSxK0Ki2ZdgcVaImKgfl942NCocR6PcKwkWF9kWhwtpp9VKqUUdXm
      PagmdTsDFR0O2vmCJzrmKJ1sNoeil8+ePzegWzrJEmKYchXZJXnU6Axtj4elKdyyXd1GBdjb
      q1lB1mW9EWAMLYRiKcx1AYoCS1cxzoc6NoK4z2fN5ey55MX5eOWyLEvTtIu9lEteOS6fPZe8
      OL/jNSudyqPd8lvfeO3lxPHQ+fDdX0ZT08WTbGhsIUr0S3bALOzPvPkfpMMVO3pnIS6cy96T
      D36uQ0KIziQFx2GCOHBFllBMJ3eUDkf8DCcKgqhIQ48vgGNIeuMxEpmNC/j27tH8wjTNiCxN
      vJRhfSrGoPbuo63ZxSu9SlbWLV8o2qpWr966kT08Mg3TG/Q128Ov3LvxZG3vO9987Z1fPvz2
      f/w2hnymNcfSn370fsvgcavDcjwrCIx/ApXL1Wqd9QYWlm4HeGp0YzkNR33nF7/0JqZbJ4Wb
      X//G78wegmZjkfBL2wJybYphy+UyRLHswXoNMdD4dT+GSv36zkEuyi6Ac84eaTjAuMDeyofK
      bCRb3bsyPV7JbbUVcjwZ7BY2WkSU0Ye1vnLr/hvzk5FKZwCHe1lZNSytfLIfnXv9jbsLL2tk
      f4jrOAAgu5vP5q69HrZbqD+Fq63jdHZy4aZUzVTbnTDLdyzUtdS9tWft/tByIIZ/5vTBCHph
      fpodioXtoo6iGIFB3ULk4aA/ZDwBHMNGN5DTcS1d0V2816NFqlpr/87sITnf0oLvZb0ThADD
      UQwSLGH4w1cDhFwyKC/uoRhxcX5aOeWj9xl4grFr998srj/GAoxqDju9XiCS9BMCCWzX8XLR
      KadVprzhkJeTu03WG0XMQQdFUYKOJzjTNl/WuD4VguZYEmVIP4UMNzO1a4t0S7ZthNRamXxT
      Ho8FC5XeFZ+nLvCJqdl6R/1cgxhO0RQeiKXmpuOlptKpHqEE4/NwCAJUVfcw/EiH89kgDMcR
      BAZtFEGRS7/nkhdnJLuFEELDMEZh+ZIvFaPaa0bRywzaiwAhNM3RLrIvkdGuXK1aySV4YMhc
      IDJsVinBpw57gWi836j5Y2M0cb4ZNhz0OVFQJF0UOeiYqgk4hgQQDiVZFH/jgEPX6Q9ln9dj
      6aqNkgz5BWVjNHmAUnynUQvF4po0GEhKLB6VBv2hbETDvnZPjkdD0lASPOJwMBBFD/Jpjt/z
      x7brWOVSyQY4QyCa6UbCAYiSiGNoijRU9Eh8nKMvIMVk6bKNMlKnJgajnWqJC8Swf/qnfxrV
      u7n6z3/6jkdkDvKlSi5zcJiPRIOONdzePNjb3TKZSDJ0vpjr0XtvK7Z1sJNvNwqdev5ny0dB
      DrS7g0K9Vc7ud3vDakeKhQNqt/rug7WAj1n54EFDUkqlWjQWxdFzO+nnwnWMX/7onx2CPc7n
      JMmsVCv1/LGJ4IVy3RrUV/eO+u02QmLvfbAyFRf//e0Pry1d+awrchwHADBonFT7aOF4N+gl
      Nnf2FZfvlA52dvYgRgQiMZr44sMu59m7/31okyelYqNU3tkvTM7OjHD2QNcVfJ69/UMfRw8U
      +/79K3sHBZog4yHaYT2WBifHwucymM8dJ6cmyjvbTGq6cXRAM0RN0U+O6xQwFMMonWQ109GV
      frVc1gz9MH2cTKYkVWm12xOTs+d9zp0XBMWNQd0mOARH25VacvZKiAc7B/mrS1d0E2FxC0fx
      4OSC3CypUr9aa81fv059RtTpOA6CoMBSDETs1zKN9mBsPGlC2lE6poteu3HTw3PYiD8MnwaK
      WEPVIlwCNyXr1p3JvYPKCFcu6DqZgx3CE9U6VX9ysl3MMh5frVpPjE/0G5Wx+etBkT6XwUox
      H07EG5VWp1mJpSZ6wyGKMDhiEhjuAIhaigT4K9PJarUWCwdyJ/leTwpHg822dP3GNfL8GwTn
      pVPN455o7nA3GEn4fMzhfjYYiZGufFLtTU4m683BjaXFcqk4nkrVypVoIvGpE+CTgMNQ+rJJ
      qFInFg1Um0OlW0eFMK63O5IxPnMl6r+AiF3u1gzc1zzZC03MVrLp+PTVy4j9y8WrFa6OxPly
      XVeW5VFY/nPgud/zSnD57LnkxRlp4OeuLj8UI+PtSt4fTcndsurQFFRcyosYPTo8d3MueS5z
      u6uPBiY6c+VGxMv+3q8OD/cDgXAoFHz+rdKr5Bru0sJYKXfgTy5y5MsZzylA6O6vL4cmru1v
      rV+9c6+a3usrxuziYuUkq+h2Ihmu1Huv3bm2tZO5f//62pP1O/fvneL4Opa+9uSjvsUxQIEo
      Ho6ECSGKqo1mo+lg5PwFZUkL+6uOkGyXjhAmoPWqifl7o5w9jjGQVBupdWStmcndnAqQ0YVh
      YS88d612sJEcj57XXr1aJvzj7XJm4+nA0dumRRLYIFOx5id9Pdkaj3TTZquFxP/TW68VCrWh
      AR6+v1dv99C1LcKX+qu3vjLSoAu6dq9e1VGW8Xu3n25GUhNTnm4xnw8kZz3t3OHRcUT05DtS
      o1EtpvFCvXMLglNmD0bQs1NjxaFY2HnfFwyVy0U+JqD9eqlUi6YmLyhL6gy7DcDNeXnWG/V9
      cLhFBIcjvKUQol6f2O7LAZ70h6KNgRHx0n3d9jGEZLkide6JiwAEwzBdlm3HNi0bAIiS/I2l
      BcSFCIJYpp4vN221vb6+kS/XtF79pDpAECQaT/ZbDffzzf9RoBjp8fCs4C1msqalo07v0XbB
      1HWzk90u9CJ+vtDqxQJBCkddCKR2XbPPdEUU50vEQoIn0CrsNwcWgQEUwzRNH/FoPhXM5/MA
      ALqqI2AmKXoNRRql3wOhC12AoMB1ERQFACAIAiH85Ot57bmuCyEEAEFRZGtz/er1WzgCXAAQ
      ACAACAAAQoCgnxiGEEIInn+LoCPfIYHQBQBxXRdBUARA99djhBAiKAIhQBEUQhdBUeC6v32d
      n2ENfvy3zzPZH48EQggQFP2cPx4NzwcIAEAAcFwXRdGRzJ5LT/zPhFHl2BVFGYXlP3kghJZl
      XfRVnJXRRuyOYwOAAugiKPb8Aey6DopijuNgOH7ex69tWS6EGE78/j49hC6En2T1oeu6EKIo
      9rF5CB3XxTAMui5EPm/BeFEghLZt4zgOIQQAAghsx8FwHEDouhDH0OfX4LouimGu4/zm8v7A
      jmEYEELbtiBAUARACDAMe74+Q9d1XBfHidGvw592ba4LEcR1bBTFXcdGcXyEMRd09F+984Ev
      HKqVC2J0IYZWT1TOUgap5NhwUHPoiTfuzpzLYCG7/tFK/s79qyzDtVudUCIeoJCBbg01p1Up
      j8e8dCA5bBRQHN9a30jdenPaT4mhKFBaP37n2fe+/bXNlfeJ6BIB7BvXFl56nkhtZX+2fJhK
      pRxLLR+mX/vOt3dWHiQXbjQqFWgoDkEqinn/3o2Hyxv/+a/e/NcfvfcP//j3n12YClzb3Fx5
      r6KK7rAUjYY02xWjV9BhrliqhZOpxaXbfn70mxC/j/PknR+yk/eruXQiLJ40+tHYzChnj6F2
      FU3OZfyTM0oxszqo6wjtCQSaAych+oSx+HkNTi9cKdfwRrkwNztXzW32ZFNzHadbIBg/QcFC
      A8gHu97wIgtqLkbbw/ZqQ43Xm5bWdUzp7V9+MJf015r1Yas5NT/rPX/Edzok5/NxZD6zu/Ta
      d8Gwy/uCgfiUF9P91282Cieq2gvQXsAHAwL5dHlZVSXNdgXyMwNejKBmZ2dpSSjuljvdfmI8
      6QDoOi6KYjTDEPiFROzY2HiyNuioLmz2dC/P9jrNEebYEZyE2lCMTeJKL37lztduX/FExjFT
      9ghUpS35/QEPz5zTJDQNKHoYlsQVB51fugYsOBHzQUqIhcOopQTG5h2lhdBiwO8TRQpi3js3
      r6i6/fWv3TWG8lDVwpEogRPjqSTxsovXoGPV6+14cnJqJgVNQ/QKAKNxDDflZnugJ5PxjmIu
      Tk9YpnH79a97eTYSDn3WEvo8U+G6NoIzLMfevnVNM3GjX0P5oI/DLQeygo9nvvhnD3Btk/Yn
      Ub0bjo8Zijx77cafbKai22qw3tCoCzNeOq9WlnQks+cyS/rHYNv2RV/CWfmTffZc8gUwyspU
      CPPpvY4GgdaTLXi8v224IHt4gDJeV6oPbPq8xbm61N3Y3EYZj8BSpXLZI4qtRnEg2wL/O0lT
      Uxu0+ybPfUoeUepUGkNX7rV5UUQQUKlWReF3qmOVbr1vYtz5T506lra+ts6I/mb5JJ3JUhx7
      uLfHCkI5n8vkShQJDjPFUNB3clL0+b2545zX5z9l68Cx9I3VleNis9son+TLKAYUE1H6zeJJ
      9jiXZ31h9osq1v5tevW8ZCJHO1uQ8ijNEmS9o4y5zOHGfjY1i3WqGXLq7sTk2NpW7s61xPZR
      1mlseW/+ddhzvkTx+rPVq6+/8fRXP122vdrgJDpxjdZyhYE3IjgTN78xGSQeffCuS4ryoI2g
      nGY7b333u1Y7t7p7gmNQNcE3vvUtuZ57mHETonO4u2ZT3nIxc3Pxqo3RRrepOACFEMPMjsV/
      /603hXPObLWVbyt269HDQDCaCHNPHn5oEwLLFHSU9VHSg+VnUa83V6ltbu4IpP14bT81NX16
      lnRqLFwcitX0k7nZse2tTd/4DbR/XCxeZJY0s/OMmHhzaia5fZTR8/sLP5gcpVOJoCzH1yrV
      eCKCQHtzfX9udmx162Qyzqk20ul2z2uPZahmow5QlOG9NMXZumRByOIo4EK4Wktn0pV69+Q4
      w3oCGE7YqryzuZY5KbMMXqr3oj7x8GCn0h7OTsZy5Xqj1ccJOhSMlo6PpHZeB5jgYYulZjgS
      VmTZBefeDaK9UdKSNGkg+MTDk+7MRJwjnPWdY560qxKSingkTfcHox6WaHd6ptQ7Y5bUdaxK
      rRWJRuV+c6hYFMNOTE7hyIU4G1g8HkOgtbZ2uHhlPp4II6P2e/qdJiR5DoemAzutJkExpqEJ
      /rCXRg2EYsnzfYZcx6xU6oFw2LJcW+u7OE8TrtKXVMsOhGMCi9drTV7kZUkSeGEwlKPxGOqa
      tUZXEFgMxQiGBabqYIyhSsAxXZyDto5hGI4iFMc0ai2PwOMEbjsQJ2nmnBtC0HXqtRon+nDE
      qje7gVBEGfY50YvaWqsnh8IBWdGj4ZA0HAgejyJJHC+cvultW7rlYJahCgI3lDVTGSCMBzXl
      vqwFIgnPp63Lo8bUZMOGnXaL94U4DGKscOk1X/LiXNY1f+m4jNgveUFerd3CUQZ+rrn88BEb
      SsB2nhm/2s7tkN54u5wNJ8YbjcbE/J2r05Fz2Vt+93/aTMC0jNu37hGoywt8s1oWApFeqymK
      oqQoGIr6guEv4OjWH2JInZXHK0x4zumXNNP2BKLtavnKrZvZdNrSdd7naXfkr7x2Y+Xpzve/
      /dWf/uzDv/zB9069TPNnP/5pKDU5FQ9uHtdnPBhMzOLtk0y1HQv5N4/K83MzN67MXUSJGKhn
      1k4URu/Wx2aWRjh7XF0qtbpBjJ0UOAXQczPjT57tRucWatkSLZKFXP68s0dVFYJL4EDZ31tH
      EPar16OrB8UotqvQvszqRmJ2yrad5NXXb074RzSiU6AEv8cTHI9RdW4xrNfp6BRldY7T2Zkr
      t/qlTLPfjYncEFI4sLaePu4OhobjsvgpAS9UVY2guEoxpw61FmQ9UTcQDFHNrq2rim5iFyQA
      5RqDzZ0jySEA6+H7gxFG7CgtpCJ+kqB5j5dC9ONCIzox2ysVphbnCAhmF2fPazAQHXvt3q2A
      zycCMzQ525MhYQ0QLqD0+uMzExMTE+Nj51ZWeGm4Ds55jaFKo4P9QlvrVVqSA1BSax1Xemos
      Gm6pZswr+HzeuaVb02OxT6/u+Q3I2PT8jcVJF+NuLaRkXc/tbWdOyhDFAEp4eEbTdQguwOVA
      cPbuvdvJ6YUQg5AE+Ur6PdnjzMTUzEWc5R45r5bfM6osqa5fSN3/K89lZSqAEL5Cx2kveWFG
      uHK5tnmcSSOMl3Z1T3RcaZcpb7jfqMZSqfLxsT85FRDPVx3W67ZFr7fbaNLekMB8eiKz3WkH
      A0EAAHSsdl8JBbyGIjk4w77sYsLfA7r2STYXm5gyVQ1xLZoXyqXS2PhYv9PuDrXxRKjWHEyk
      Ev1ez+f39zodnz9wiufj2mYmfWRCgqcxWbfHx2IApRFbk4e9zkAZn17wsCNUDz6dWjFH+WJy
      sxwanx7hPUUwPOBhDo5zKgTOzraBUBHPsUEK6YODhor8dercXvP6o18J8WQ5XQ2OJVzHEARh
      0B9gGCDYQNJPVboDQ7V6w9a1xRszM5PdWn5lt3J/aXx1eZ2JxQiM+sprd4iRuUpy7ei4Lucr
      y7zAF3Z2r967Xmt22+2BBYCIqG/v7/k51kXsx483f/Ctuz/5+eP/cmpdM4LhAuWWJLKU27tx
      NfXw4YPgxC20f1wsVsNjk8nzp+FeFlBrLq8dzCTLTR3J1e0RRigIgjbrnWt3bvOYqxk6LYqd
      voGaskOI33lj4emzg/MaxEhmenYKM6TjXDEWZB6vHPq8LkFSm3u5Sql4Um7zuNXudpu94c7W
      xs5+BjH7D5bXw7G4oWnNZsOyRxgf0L4Yrvc7jXIgMT+WDDnQpSiyUqmNJaM25U+FBBLHWV80
      KFLHmayty6dnSREEZRiaphlbGzxZ2x9Lxm3bNA2L4jw3bt4U6QvUazZpj7+YTZM041jWiHUL
      W61g0J/e2w2Oz/YrGTY41q4UU7OzJ4cHqcXrXvZ8xbn1ajkYDddyxfTeAZJIzodDDI85DqZp
      ervT9wYCHhrr6zZPEuFIqNnshHx8uVbvdIahkLczNK9dmfm8OPnFcR1zb2cvEI6HYpF+rcIH
      ApmjdDASQ41BrtKZmp5otgZXr8zWq9V4ItGs10OR6OnPQUMdKBahy71I2F9rDZVOFRWjuN6u
      d+WJuaVY4IL0miHMHm6z4cl++Tg+d/2VjNhdx0FQ9AXOMl/ycrnMkn7pcN1RSza8NF7JZ8+f
      MK/WbuEo65oBLKc3axLIbD1RANfJ7eiUP7f2BA/FDpY/YhNj5e1HOj8uUGddgPa21k1d6ZsY
      /+u6Ywih67pbm9uRaARAZ3Xlo8xJNZZMoABur64clurjifgnL3v+D+i6AEGAazx+tFxo9JKx
      MPwtPhbegM9fCHOHe7INeI55bgIC5LOWSwjdrce/IvzJo42Vw/Sxbpjra+usKOxsrKczOd1Q
      t/bSkZD38dOtsbHI8kcrifHxUxV3rYfvvt8ayDyNb2eKmNyVCNZsl9a3djRNfbK2rRp2JHRa
      zD8iXGO48uRpX0OQYaGqMyPdBYGWrbZbZUfwl9JHEdpwVU0dyqqpSX1p0K8dHGXmxr4KhLNG
      ENXc4TYa+sEb3H/9v/5v3/Q9P4skI/y/v7+R4gyb9N69kgQIxAny6Yfv9IdqU1aBrRi9HkoC
      HGVb+R0d94YTgYP1jaU3/uZOSCYS127HmAfv/byrQkcbOBAKLIsxnKWrvaF2Z2nuw+UnIufh
      QoE9x3Kh1e6bwWji+299zXFcDMN/738Ouo426HW7bdybmgv0S812r9vL5/LR6WtWI3OcL4R5
      sdTXBoN2bn+n1hn+Rhvm03GbzfZMfLJVKxuK0VIdxhMjAIAAoVCr0ZXGUxcTdqGUeOva7G6m
      ctTKEzOxkeYUUY/oIVlRLufZYNTj5VGM9IgsglFekXUgSlP4cNA/uznaE7g3H37w4WOC90xP
      RXsqWszl/ALPBWKW0oPQtSxH6TUMFwUYGUuMJ8JRx1FJy2V4RAc0tJHx8cT0wvVUPChGU43D
      1QePnrooiqCo4I+ILImiOIGjECC8L6R16rzHK3q8KIqhKIKgWCQxLdKurcsHmRwEoNPtdn+r
      NBvFCFHkO7U6DgYP1rM0iTIcXa11tObRTqEfCYiFdj8WCNAETjKMMezqn7d94AsnbyxOVmtN
      3FaL9ebB9kap0cNwpFlvYyh6UVlSW+3+5OcPeUGgaFIaDl9Vv6dXzw1BMBUVX5bB7Z3t60vX
      X5a1F+bV8ntGled6hQKHLxWvVpeTUak/XebY/xwY7crlOrYDEdvUcZKxTQ0jKFNTMYI0TYOk
      GRKFECPP3n8Euo4sqzRDAQT7QxUSU9c0w8QwnGYYHEMMw6IoEgAAILRshyA+/pzYpgFwEkcR
      0zQJgnxZYQuEUFVkiuGg6wAIMYJ0LBMjcMswTdthaUo3LJalLcsiSNIyDIKkTn1rqMqy5QKe
      Y23HxRAIMByFrqyoLMuqqoKgOM9xF7JdqshDBCMs0yQpZqQRu7v16KeFjnO4u1art9LptG3K
      D5e3QuFAdvtxB4rpB//mRG8F2LPeg+0nH7UltZLZfrSdCwYDx3s7JMftb64blnmcK7oAvv/+
      uyTq9BWjWKlsbaxzHF8rHg/67Xc/2jTlHiEGWArfXnmnbvB6u/Dg8SbU+wbCnl8I5lOwlMa/
      /+h/6ICtVQpPf/VhaHryF//2o0gy8mxtu144PsieZI5PWI7++bsP51LBf/3RL0/pkQMAAMD4
      4T//0MEpwlE+XD3A+9Ue5R9kt3ZzJaj1/sf7qzRNxyLBC5g9rvLjf/ufnkCweLBaN/iRzh6E
      QI1Oz8REXikXDIJSJHNhOlBo2DRDTHrhk600H5tJBn5fuvuzyBymb9x/zeyUAMsfPF5u6tAc
      9vutymG2GJkY73YhR8MxP/Phavb61cmdtSc0L24fHELbgQgi9ZrtngyhfZguDIbd/lChCagM
      un0DmUyeWzn6D9F79ZoEjWE9NnOLNLvh6WtGp2IhaGJixrEdHJgizXpSs3Kz1G3Wqo3OwvUb
      n9UjBwAAgH10kJ2aX6hm97u9AYISfDQRD3h1ZdDvdmWHmp8e93k+5zzhKIC2jRJ4rtRiWO7u
      zcWRzh4AoUNwQTBsji3dYaEajCXl/nB8Zo6j8XhqbioZ9AQTHHnWe+Dhqd2dA94f9gXD4XCM
      gGZyLKG5mAC1hoTcvLlI44jX6xVFvtbsTs7Me3hWoMlgYoLCUY6mU/NLMQEJTCzFvQyGOijj
      9XK0NxwP+l5C4IYSRK/d9gXi0zMp1HVEfxCFDsF6gNpu9bWxseRAc+Ynx6Dr3Lj3esAjhoKf
      s9eH4vTc9JiF0K/dnO/LSqteMw1TVo2x8ZSuyZaLJGLhC8j0QbtYKMQn5gSO9nm9r2rE/tsY
      ytAleeZVE3r6E+BS/elLxyv0ef5TePb8KfFq7RaO1u/pNwptFdW7ZdklcnsbNkEfrK+jDHu0
      vU76olLlyKCCLHHWxTu9+2xzJ835I5YywGgaQxAI7f39dDgc1Pr1jo7zNN5qNTmOG92IPgsI
      Yel4zyW4nfU1PhAsHR+lMzlWEPLH6Uy2iGHu/lE+HPQdpXPBkO9o/9AfPE310rH0rbXHx8Vm
      p14slMoQOrKJyr16IXd8UiyznhBzTvmRlwZ0D7bXB4qWzRwODGy0HZZqpfSAmiOah0hIkSBW
      /egjBSXEStqm2fWnG2Z9a/67C2eP2OeuLdRa6fzWw5aCYojhutTdpUSu3CGgepjJGFhoccKX
      b/Vh773Q5MKwUSVYyrDFt751/5QK4pcFdK3M7qZPsS0C23y6Jfh9yRBzdHAkBKNBp/5kdTPq
      8eTqrb3DIy8DN/aPZxYWT1d/mhyLlCShevR4PBU7PDrwxq+hw0KpVAuPT17UQVIAgCvX9gqt
      xcVQUGS4UGC0WdJwJIICLBINYgStdluEGFqcCudLnV69Bl3LQdAX0IBSLRjgaUkzCNfZzhQ9
      tLa8vM17hMRYaDPdYBFTFNhqpYxgRK/T9IViX8DUAQCgGBkO+Uma6TXbsjxgGWT3pIsjNuVK
      +Y6dDIkdWQ0GwgKNDyVZH3TOqP4EEFRVjWAwPOxU+7JFUnQ4HEHghYlsIDglsEy1WmnLdkgY
      8VlSxzYsB8MR20EIXe7TvCj3+7zPrw56vDeA2LqL0+cRLXA11YTAQRF0bfXJ3NXbPEPQNK0p
      kqqbgui1bQtFoKVrGM1bmkwyDIoSNPUFHV4xNAUlGanfY1gOgXZ/KFMsT6HOUNZFj6jrps/r
      UVWF5Thd02iaOaXTAADAsU3bRR3bZGhK1U3bUBGSRW1d0U3B42fPr6z4spD6XZwREWjTNH3p
      NX+5eLW85su65i8dr9Dn+fLZc8mLM9qYa//pewozZbWPETGm9RrhcChzeBCcvOq0czYTxp2B
      N3Xn5kz4jOZ2nj5oSbajWRN3b/koEkeAMuiw/tigWQlFY+VyNRTw94ayV+AGihYLeWttSWQQ
      hPIEPBwAoJ551qXmlPLeUNUCHiY+dyvseQn50edoneIvHu1Mz82ZqlTPZl//3veXf/bzr3/n
      L9ZXNy1dZ0Sh21O+8tqN5Sfbf/0fv/7jn/zqb//uB6f4e46lP3nwy5omoFrD6/NiFMWH55Bh
      vlyq+aKJxesX09UWAAAt5dHDB0Rw0a+n+4E7I509SDAclCVqbm7yyequ7KKGrmM0gxMcG4gt
      3bmX313lAsLnm/k1ifGJ7t5hd9h9ur47F+IN0xjUSzhJ4KF5yyrsbqwZkAxHw9VyM570P13p
      AZKEpvW9v/vbVrXg0n7o2rYDTdPsNkqKO3ldpF/iUFGCYmniaG998eY3vGIdIWivwDRqtbml
      O51Cpiv1kooeSF0AACAASURBVD5BxQWGgGsrjwbDgW673GenVjCCXlyc54ZiYbsiy3KIYy3b
      RQzDMEwAwAXpNQMAAEJw83PT67t7J7Wi99ooz7EDgNCchzec45NqbHJB61UxWtTkgSiwiCmo
      tUy6rtxJniP4bLeaGEn5Q3Eu5AlSVguZCLmWS7LDfnUABNoT9pDE2FgSuvhYwu/hvUPNZjCM
      pQjgD0OMQMjZw2ebJO+bnOPGI+JJbTgd97ysoWI4SWJoIjoxNh5BByECxfyhkANJrZVtScZY
      LFaodq+JXCcYXFq6ijF7nxtpEhQncGRicn52Kp6vDXutY5QSYxELIEBVdQ9zMWdJoSmnTyrh
      sfl7V6fKziubJS3nT8JjExciUXjJJ4wqS6qq6ks3e8mXjVFVxb+ij7QL53K/ByDIx2cuLU2S
      LbRbyYvhaOkkywfjQO5Gp+erx4fxyalsOruwdP3sdTntdjsQDP72WlVv1MNevt5TRG+Qvzhd
      EgAAdO3Dvf3U/BWl26zV2zNXFqVmrd6V52bH84Xa3NxMt90OhkPtZsMfjGCfPWIIIYqijmXs
      7+0YkBQZTFLtqakxgDLAVqRep9mTphev+7gL6A0IAADQSe/vBcbnRFSX4Ijrmrcf/7IqM4TV
      PumC2QglydrW5oZuO4e7u7LDzMXwzYKZip7VdX3/Zz+u9jS5XT4utQf1fLbaPdp6hGHks5WH
      tphi1MqDp7ua1Ds4LpTzmcOjdLHaGU8lv5iaMam8f9Q2i8fpoaTEgszhcaU9UAK09dHqDmKb
      Q8N6tPxsKun78c/eu3Lt+mlSuwA4joOgGAFlxfVVi8dXpkNPVjd11NOvpg+PjmlejMQSFyUN
      61oapOidrf12dq1LjvbeouMTExiEodS00WsW64OoCMYWrlQO9yaWlrR+L1OzvnI9eXZzCEYj
      jpqr9w2pWepISq/eqVcsU9MhwXFsKVeevTpXqLY4t3vSMVmSJmz9CzsZxQQSiNTqd+rB5ES9
      a8d9WCQa6dvs/JgfAMD5ImEvU8zngaVJ+ueHmQiCoAiKoKgh9z56vD02lrAsQ9cthvfduXf/
      AtWfEJysnRSvzcU7Guh1e6ONuUxtIJt4r3riTUwDWwt4xcP9/fjUXOX4yBsMlEqV8Zmr0TML
      GVXyx7JLhTjQM0kvrg9dlsEc1NFthDRNyx/wFwrVVMJb6eg+gSZQDADgDQW/mDsNXftw/yAQ
      ThCons6WAqGEyDgnxebU7HS72Z6bm223muFIpNdpeXyh01eu536PpcuqjRvKIBj0NTuS1quj
      YgTTO/WONDa9GPFdQA0TAMDWpO39I29kLBVkBjb1qkbsf6pces2XWdI/ilfoEPfls+eSF2e0
      6k+F/WdVhcKk4l6xfXKw2ZbM/OFGsdnP7u+4bGBz+aPY9NTvK+F8Nq7R/2BlV6BRF8Pq6Y2V
      vQKCExQGEATRDTO7vVVp15ZXVi0bEb28q8nre9lw0GcYhtTKl7ouQ6I4jo/oDJQhdVZWHrUV
      2Dg5PDzY1RA6s/Vc90lb3djx+70rj9dSE4mPPvwgNjZ5it/za8x33/55a6jwJLq2n8Ok1pDg
      9cbJs80tTVUerKxrphMLX8BZUmgpjx5+2B1qRwe7kjXa1roQQZ1ht9uoHzihhesT0f2GGxQ8
      41dv9I+fVRttVTccCM4uPlzKndimtLN32Ow1YiymolEGs3/2w//HZiIDzQwR8Ot//Zc9yTFb
      5XfL2UTQv/5s3VXbj59uxBNB06I+MJ3/9R//3jMa2W9K8Ht4IRamG8S4CMohxkEnFtFhuVAp
      R0Wx1NE0dVg43C43u5YDz5BgcdvtbiA1W68UNElv6oDzpxiSRBEUd/VOX56+oEQpQnDzU4nd
      qnNjbrwswdFG7ILowXEiEgkaUue41MRRaECMtvr5pozhhF883zn+RmcQC7LFcpsRfPFI8Pqd
      10Qw0AkPL/pF3OL9AehCkiAIkqRJTDftxFjSMKyZ+StzM5PeQFAgoGmPrP+Ba1soa3S6kagH
      MB6lP7AGpd1CNx4JntTayWiQY2jeG+RwaJ6pohkJJydvXZ1u96QAi1bb3cOttXylhWBIvy+R
      JK5p2oWoP0FTThcajlT9xcNtUbisTL3kj2BU+j2vUHPNS16Yy9nz5eKyw9JvcGzTchFd6qMU
      Z+sKI3oNeUALXn3YZwRx0O2K/hB9zmORmqYxzG8qSiGEqqZx7KfLuLi2aTgICm3bcSmSsFyE
      Gc0BHQjdbqcr+vy2rsqq7vGK/W7P4/fbhq7qltfDSbLu84qapjEsq6kqw7CnnMiBrt3pdByI
      kThi2q7HIwAEB65lGrqmmx5/kCYuLFlhm5qLUnKvTQne0dY176z8QuVnyoe797/2mip18svL
      Nk5NxQLZWncmwq/n5R9875tnnz21QqYuw8Lh2sTCXS9pSi7LOAOL9B3vr968/XqzWgqFw+X2
      kLDU8YUbz/fypdbJbgNjtFKpPhT8vhu3749o9ij1zPJ2xe8RHF3iGLw30Ac6+ub9ub1MmbSV
      tmahEL16fXF5ZfNvv/uVf/vJg388tUcOhLBdTlcUUW1npyZi21sDb+IaOswVS7VwMnWF91/c
      7HEe/+JHgetvbi2vfet73xm5+lNPoWcm/UfZWkhgfCLdN+xG7oTy+/p9uDTBZltwIuY7o7n3
      fvH2ULMN08aBWe0M9WGnK6nDTr10tO0L+reO63a/bnOBfjUH2CBhdGsDUyDs+sBB9H5/KCME
      NTU1RZ2e4H7hoaJorVxuNspTV+8D05icnSad/uZBaenGddOCFGqyBOVLzcnN0qDTrDbap6g/
      Pc+x48B0CP+wke30lXgiZiOsq3Q105manfd7PfiFFVWiwOiZZGwsSmVyrdGqIAAEECQz6DTC
      kXC90RLDY5Srz956DVUHqenJdme4eGWBPfOzh2NIjPWGeJzyxsYCLC6EwzzGhcZn5uZZTuAI
      ZGxy2u8PYNCNJcci0ajfwxM0P2gUMDE2kYxdnZ/sDE2v8NLOUfwubrfbn5hc8DB2ud7leb4/
      1FMTU4Q9aPXl8dS4bIK5iQSKIku374UCvqDfd4oKAgDPbx3r9Xpu37puuqQrNyl/PCTg3YFE
      816euaD6HgAAQGiOb1WrE3MLlxH7l4vLLOlllvSP4hVq6Xr57LnkxRmt39OuHLdUeLy1ZgAs
      u79t4cTe2oYDwNHeZkc2Mru7YnTs7HXN2fSBa5k9HYjsb52khPDwMB0MBSF09jZXs6VWLB5F
      EZDZ3czVO4nIZxxUda2ttdVyW45Fgqf4n5V8TtJtnuc+10e19eHyyhNK8HZb7Wo+S3Lsxuoa
      w/OZw/3jbAEAe/cwFwn5dvfT4UhwZ3MnFImckqVxLH3tycPDk0azlM0XSpZjSQY6bJWzmcOT
      Ypn1hdnRJihPo5zZUgC9vfoE54Ojjdi7zWLXMTvdPheBET9zdHAkK0qMFLwcB/S6N+hfOyi/
      dTt1RnMn+5tdNPS9N5b+5b/+izB+PcgioQD3zsp+EJc1SN2cT3T7fUqIrK980O6rjW7HtlSl
      28UIgEGiU0mbhMcb9BaODubvf+ead6AJE1ci1OMH73VUAPW+5bgszXEiJ8mqqmpX5qdXN7Yx
      iHgTyaMd3QGw21MC0fG33rz/qdem9+tdxXq28lF8bLKRzprQaA51oVwivbEwUl7f3ouKnpNm
      N3dyEuSQw1zpyvXrp6s/zUzEi0OxtP8glohmj9NigkL7pWKxFk1NXuBZUgCcej6DqGjPQgZr
      G6PNkgaCQYDgY8lIPpvuKLZlWqmYp1Co9XUnEQ3lc7mA/xxqtzgjLo6JT1ZWddeJhjzlnlXM
      HkPHQklaVyQIIM8JvVq+NTRQCP2RsXgoIg8aZr/v4lZPMfsdORQWhWDcyzOML9wtpre39yXd
      dCwdoQSWxEjUGagG6po2zmntqgNdjvdYlm5Yrq0pnH8Mh4qlDjZ2D1wIhsPhUBp+cm2UGOJQ
      09b1yMSsz8fRrIC7ys5hAdGa6YaaCAj1vhQOhFkSUw1T6bXOqP6EETRJED5/qFfLdSSLJHHR
      47EvcjMaC4X8tBjigeYNRr6ITgOWoeEUbesaQbOGptIsB12HwHFZVlieQ8+cZzdNg8AJwzBs
      x1EHtZ7lm4xxpg0IHEUQhCQIXVNtgNIEaliQwFHoOgBBEQRBUVTXdQzDSIrSVYViOBxDdVV2
      UYJAoeUgGIpsbK4uXbtFk5huOTiGogg0LRfDUAgQFDgQwRAERQAkyY9D5ef5BIL4pM+cqyoK
      QdIESdimgeGEqqoESSGurRkmwzCW5bAsY5oGSVHWGZocuI7tQsR1bIIkTNN2bAPBKcSxDMum
      WY4iLmzlciwTorihKjTHX3rNl7w4lxH7l47LLOklL8irtVs44rOkyz/LD8DagwcUy+6tLmcb
      cnH38XGtXz45yB4XDzPHpBjxnvlQbXr30U/eXqZY4jiTg4hdbw38nPP//vjDq1PR1Y/ey/Sw
      EA+2DzKm1LUwul7MuQhWKTe8fu877/wiysF3Pviw1jba/WEs/PL7wZpK65fvfIRS5P7m6u7W
      9kBVHz1aJil6fW0tvb9bqJTXN/c9HvZn7zyYn4r+t397+8rVz1TcdRwHAOPH//JD2XIIaHz4
      bB/r17qkZ5jfWdtLW3Lv7V89AwhyIV1tAXBWfvb/Kbhv+cG7KvCMdr8Hg1pPIv0eUGrp12Zj
      jb7lEdi7r90H6sBQBpJlQdybDJ817AqEfYM+GLQLACBH+RIuSbVOfdjvprO1YNzTa3ayxaai
      dvuNaqFSdhx8Z2PZQr2q1O8N+qmIN1eu5/ONm/funn2+nh2lnt0s9HSpGZu+7afUfKkxPpnM
      pUvX770GbNO2tBAv0IlJqVFqlfPlRm9h6fopWVIAnL3t/VByol/NNtp9EieZUDQR9HbbTcc0
      az01GY+Gg/6LmD2Iq7ZVA5DRmFTpjjbH7liGBXF50BW9nka94Y+O0RTGI9r6UW1iekrvDxNT
      075ziKi5imJzPCmKnkatiIuhQCD0xtfvDxuVgWzNXrsBLTPi4wgcF/wxU+qEk8lQdHx+OokY
      0lGxM5Uam79xr1fJh6Mvv7sMznBSs06SYjIunBSbM3PztXI9mhzDjHZzYCTj4cZQuzo7panK
      3a98naWIWCzyWcGm4zgAQMvBb1ybHerw3tJMvdVpt1vycGg60O/z66ZJ0nQ8GrqAHjkAsQ2F
      DKS6mb3UtZuvqt9Tr9Ui0diFNMcbKa+W33PZI+dLx2XMdcmfBaP1mnWp29fswtHOQDVz6YOe
      YtQKOYIXs3vbJC8e7myLwejZtQfL2YO9o2NSCPB/oLNfr1c1zeC436pudq1KrY27ZrPVcXG8
      0+4IAj+6hc51zJ2tLdbr7zYqmXSO5pjdzS3O621WSsf5MsfgmWw5GPTVqjVB5KulCi+Kp2dJ
      N9eenpSbg049my/TFK5aiDbsVIv5o+PcBWZJIXQOdzZRxls43KG8odFG7Hur79eHyHE6O7Vw
      1U/bmksmI9zGs+2TQk7VteP0MRWeiHjOqnz79KP3Ae0BllYs13OZvcPjstKvbRwUevWT1Z00
      S1GNUuakpSWjQQAAcLRHT/Z8uLm9f/h093Bu4ZrAjLC3g1w9PGoZxWxGM9xEiFlf2+7oSFTA
      awPLgyiPNvYJ1zYQZOXxWtxH/fLB2rVrp/XIQTGcRlQNCdYK6fmp0Ormro55+9X00VGW8/hi
      8eRFqT8Bx+w0S0f7hxrFlE96o82SJsfHUYT62hu3tze2S7XBVDKwf1SdnfAm5xaK+4ezV+fa
      jXP0yMEp7sq1pZiPOik3ZUljHWPrKGMpcm2g+Xiy3WwWS8VKrW5InY29DEBxDFq9oUTgeDIR
      qdaaI12iaX8cU7tSv+2LRPM15e5rd5fG2V8tbwW9dMeiJ2Ne07a9wZhfoKrVuq0Oz5glNTVp
      cyeTSCR0ZahqFs2JV5eWzt7R7OXjOlxw3JTbtqFjBD5av8fSJdXCB62yEB5DHIPBQSZXDEQS
      Wr8VGU9V8oXUzBx15hZIrWqh3hkynDfiFx4tP5i5cjfqwVsK9JB230B8HD3sd2lPMBLwPn99
      r1VtS3Y8KAKK0+Wh3z/C7TXo2ifZE28gjKNmoVSPxBP9TicQCiOWXGn0EmOJfl+ZSCV7nbY/
      GBz0eh7vZ9Y1P8cyFN3GTU3y+cROX9EHLZQPYUav1Vdi49NBz1kbSb9sYCGb9sYm+7V8aHzm
      0mu+5MW5zJJ+6bisa77kBXm1dgtHq9+T3V5RmTGpdsx7A41a1ReKG4MqZENWv+GJxBv1xsKt
      r05GztroZGN9fXpmCsFIx9AsuVlSucmIiKKINhzg3gDm2BRFYADZ3NhYuH4dAajIs5oydFAK
      mhpGUqahIwhK0uyvj5MOV5YLCcHKdozUdNCBntnxs3br+UOMQf295c3ZxauDeqHXkxfv3D3Z
      3TJsNxQJlyqN+/dvr2/sfvtbX//Ve++9+c3vfu4JNsfS1x4/aBscYfVoluUEgfalUKVSqzUY
      0T939aafv6jzXHB35R02datyuBGavTfabQOKxqu1aq3TjyG4i2CVemsq4p9cutnNPtvPN3AK
      Zo6Kk5GrZ7Q2HA4Pt59lKh17OIxE/J2hVvX6ddse1CUqyPkIrI8QCzx93K1njw9NzPsP//CD
      5Ycroai/0hwY3apLCy5AfL7JN16bkQ3X53EHAzmAGO12J9/t/O9/85d/zEhdx3Ih2Nl8Onft
      KwksXchmw1PX3H6p2m4k/EJtYDmmmt1br7Z6huWSnycehhH03MwkIwnF3Q8QFEFx1GFMRBoO
      +gNK9F9gV1sAIIkCExGmU6FCtzfaHjm84BFNwrF6LkLwtBUOTjlmjzR7+brk8fk1qTt+Zfzs
      5hiWalZaXtFDeWgMZRgTTs9M9TUTDo9pT2AyQJd6UqmnRIIB14ScNzLs9xkKVUwXhxbuCXjj
      Sei4wMRd2zYMBwAPjXWzPTIeCE0tTW4dnty9OvXCQyVoniMxhvCKnHt8YjgA2FL5uDqYT0WO
      spU3lu4MK3wwnoqWm+7ZVJtQnKAIzB9Ozk7Fym21U82gBC0KHAKApmkX1SMHAFTwemVrcFId
      sAH/pd/z5eLS7wEQQtP8wmTa/6R4tW7dqHrkvEK34JIXZrQrl23quml32y2S8/p50sWpYbvh
      CYY7jUYwGuvUq/5o4uySKJIkoSjKcb8vsu9auqSZg4EciwZarX4oKLa6SsjHtvtaNBL4Ynb1
      oevUarVgJGYZBuI6BEM3G81wJKJKw6FiREKeTl+JhoOyLPOCIA2HgnBaltR1rEq5bAOMIVDN
      dMNhP0BI4BiaKkuKHo6PcaNRfj07tXKeFsOjPUu6++QdRViKk52CZB0er3tmrrYaNYKuUXrt
      MJOTDf0G6UuFz+oAFo53N48Kk9FUOOHpylbQ4wW20u32/Bx+0CbGueHmlkpThGm4JAVQiDuI
      Q371mwHui7jRcj29edjmT0o0TRT29u++8drDh09v3r3bH0isq6xtqjROaFfmVx5v/M23X/v3
      tx/9l1PVnxCAmFK9JItS7WhhLvnhh9v+8Rto/7hYrIbHJr3hJHcxTW1/jT14//2Vb/3VD0ab
      JR2bSBEYLqnO0sLMxOQYtA3e47VMd+bKfC1zIPJMrtg8u7nOQPJ5qIFi9Rr19OFxs5Yppfc2
      s41iucoJnEX4JwOMx8NJsikIlKLZPEdYzhek2k97IrSrNqonvvj8WCIkScOxVPI4k52YTGF8
      KOZjBYamvOGAQO3v7VuafHqWFMFwv9/v8/qhpe7s52LRsONYlmUTND89O8NRF9mJDAAAXeyr
      b97fWN8cbX0PgqI0wzMc4/OIKIqLkaTRbc1dmSudlG+/+Q2j11u4Os+cWf0Jx0mBZyKRBEMA
      bzQxGQ1GF25zUE1NLzjaQNWMsekZSTJfvzffl5E71yeHGj49Hj2lEOIlgiCg35emZ68mkyEK
      J8LxpDSUJ6dnSFtq9aTxyQndQafHYiRJXLl+OxoO+n2e07OkCIJRNBMIBu/evWm5JKq02FAq
      4iHqjRbF+wX2AtWfAACgeJKbWli6jNgveXEus6RfOi575FzyglzuFv6GRn5/AD1SM6dDBnNU
      MTYTwvodm+vXckx4xupUll5/jTpzydbe2nJXdcbnllKRX9d/lQ9zDU3SlOT43Mzn5ThrhRwb
      GfP8QU30S8HW+h893pi7dqNbPu4OtWRqvHhSvnH7WvboSNHsZDJSrnfv3762vZe5d3dp/enG
      7Xt3T3HIHEvfXH08sFkGqC6Kh8Mhgg8jWqvdbNkoMXvlwrKkrik/W9vyhJNysxQYXxxtxC4N
      Wz1ETPg9rmciQCpbB+Vm50RY/A8iyyVi3ve21xYhoM7s1ba7/bvfeOtX//2ff1LtLn3lLTm/
      KhkozvgZP1Ot1o6f/cJmAuViY3I8cJCr/W//x/8ZFSkAgNyr/vC/vR0Yi8t9hePXNDT4v3z/
      L7CX7Uvrw1ZfNVefPEpNXZ1JqvlKVTb0SrEoxqbFzsneYToqiPn2sFarlNJ4vtq6CcHp6k/T
      E4mSJJT2HvhDwXK5yEc4dFgvlWrh8ckLzJIiBLt0Zfbpo486QBSi9mgjdp/PhwBQ7ahhznr7
      5w88Xh4C2O50hqYr8oKfP2s9/HNsXd549oTk/LGJ2QCp1VVgyAoAgKA4XapUuyYEqI8F7YEx
      v7jAkljucLvZV5ulEwtgkqpjGBoIJ4a9xiiieEoICrgLDZvA9IcbuXA0xGHW3lHJ7uV3S4Oo
      ny92+tFgkMZR24VSp3HGumaSFcNBnyD62+V0a2jjOEoQhGHoL38AZ8PRBz/95cP41CyDWvV6
      a7R+D4QuhAgAEEGAZdkohmEo8vwnKIo6joOi6NmP0zq27biQIHDbtjEMcxwHRRCAII7j4Dj+
      3JrruhiGOY6L4x+3jYOua3/8K4iiiAshjp29o9zZRwpt20ZRDEGgbTsYhrmui6IYAK7juBiO
      u66LY7jrOiiGQcdBUOyUTgPg17cOQvf5lUPoAARDoOu4LobjGHoxZyogdG3LRjAMQBfFRlwV
      f8l5ufSaLyP2PxdGvXJBAIDrus+Xp08WKQhdBEGh6yLnWbkghK7rPl+tXkA+4rdGCl0XoOiL
      GDnF+PNB/dZbQARFn78riiAQwo/fDkGA6wLkNL3G5yMFACAIAiFEf71OQQiff3sR6hm/c4Gu
      6yIIOtqYa+ujt2VunpCyPZuTmwV/aknN7V/55uv7W5mJiHd9a+/6N//uZsp7RnPrH73bMzFr
      oCTu3PRTJIGAQbsmRifaxWxicuo4k41Ho81uL+QTO0NlMhnKV3o+DsX5UCzoAQDUDlda1BWl
      uGmYiovRN19/M8C9tOhdbeV++mh/cmrS1pXyUfr+t9/aXv5wfPFWvVJydRVQtCTrr9+/+XB5
      4+9/8I1//eE7//CP//mULKlrG08+/HlZ9UCpFImGTBeI8WufZEmv3rgbEC40U2FLP/zXH4Wm
      Xx95j5yhJQqEOzs70egMKMYTE3ADGq2+0qm2PEE/wwfiwbNWxXMc021WG81eXbVZV2+0Wp1a
      uXyy7/qmUbWTOz5M54osR6+u7fEsePx0Wze1XLZ8/e7NVj49sHDc7CpowOjX5xfnu/UKFRj3
      vzwZKATAZqNZq+RT8/dIqxdfWNIVM8SDcGoBOjYCjQAv8GPTcrPcqhSqzf7iZ/fIAQCgGM7T
      CMEnlHZeNexoNOwSIlA7kqT6QuFoNE5d1ElkAAAAjtLN1hWGpUdcFc/5ggjrGn6/1+sXeW8k
      JFgkE4/J3XXf1HSrXouEPGe31m42EEqYmQ8yXo5zB8AzwyIQF729Rl7z+YVAPESSsXgMAWQ8
      5vV6Au2BmozECRRJTM4DAGxhIbu6zQTi3Vad4H0vV0EMQTGSIGdnlsaSAUJOEq4RTCQQxzC7
      RUm3xpLjxWo3KjD/f3vn9RxHdp3xTtM9093Tk3MCMCAIEiC5lFZa70q2JEsOJZdDucoPevR/
      5xdLsixplXaXmQRI5DQzmJxj55yuH1ZWaVcSCNCcxcLC7xl1p7vQffuc+53zHSGbXbtzJ14q
      Ua/79+NkIAx70Vv3igvJRl8Qpi2YSiwUMMO2FFVjLq2uGYIgCPExUcYbTSSvas41GgyiyeQf
      z3qv+aL47dNjWZamaZd9MddcMa7q3vP/lat13vOZqNmx1M1nz1lZkyXBsBw/TUGuWWv0wqHA
      eDTy0Rd1TwKl/S1OcwaNU8fja5YOIZysHR8gJFM93PMG4xcdrtlptxm/7+ioHIhEMASGIGg2
      mRAUhfzvxTc741Dw8w6sAjeBPT5szkVirqXtbO/4AmGB5fjJyLDU3Z19GPdN+51qveMlkFK1
      HYuEmq1OMBRo1htneGg4juNY+v7Oy3p3wk36zXYPQ2HFhFVh0m016s22LxA7f0nd2wU45uHe
      jo1ROjsA5Gen2tqmfHhS+8Zfxvb294MBanvTABg26PSPkoluu728nFGh4D/+3bfOa/bl6OXT
      1o0VrCcop6WfUumF5oPfqIYx5VhfKLK9V/vr91cvdOnDdt3RuFJjOhp3MMijyCzCLMHmBkCD
      f//db46bp6WuKg3rnZkAI1g0xPTGPE3AOElhEAxwKkJYXRH+2z8x5Ob/iDJujFV79ORxLJns
      Hh1+699+EKR6kC4IFhbErU+ebqSCgVqP3tnapT3W05eHuYWls1XShUy0I/kH1VcrN7J7+3vh
      7B1ErF+6Sgq5bm5x4eD4xOg2Vr+f/3zkn8gvF3Nx4Nj9Tt3FSEEQIsk8YpnheASHnUajbp1P
      3oMgCADk3lfeqbe6ftQhY1kSMm3HjOcLuqQqooB7L1zYfXMp9ZuXtWyIYBUDhpwQiYxngmpj
      XswCwC3Xu7gx2S91k4kQw/hLlQbmwSTJon3wmFcSEX+j2Z5MJnP6TntDKdwQVYmL51eSiRCw
      VcnxaSIf8IGhgi4kAopuhiKJIIWPJzNL4s+pkrq22e6MkomkIs4k1cJ91OLiEo5cWvkYgNzD
      3cOV3sW98wAAD+JJREFU23fS6Rj0ubjHdSxR1hnaxwuipXEffvhRbOnu+/dvIcCxTAPxoLqF
      pBPR8yY6AExGPYwKmyJLR+PSdBSIJrjxIJjICON+OJm98HhiYE9nEunFdMsGyvSnv37+7X/4
      ZwYHKIL4/bQsqxRJTMYzmqFcF4KAy0s6QxGYB3UsS7Fg1FZhgoqGg/P4hgHX6fd6dCBMM7Qm
      8ARFG6YNA8cxlDErxRNxSdbSybgg8IFgUBZF+k905Pwu7rFN3XQR29D8fkqQNFPhYV8QtSRe
      1iPxdOCC5QlvC8fU2t0BFYj4cQglmeuo+cvF1Yqar1XSLx1X6H2+3nuueXPmqXMB++Nf/txw
      3K1XGywrHOzvCaK4vfFMwUJifWMMxWLMxQLnzRfPY2Hy5W4NAjaAEWBZuqHOeBlYqiArima6
      piIoJkVeQkwAXPvJL35ExIu1ysnBxkY0n914+PC0csoJ/KutPX+QefDohQ/RH23uLSwsnOP4
      wPzpf/6YUw0f6j7braDCkMcZpVt+uX9kKOKvHr20HCgVP3cA+vZwDfHJs+f9yXj3xbY/lp6n
      zuU6/kCg3elhHrzdagTC4WrpgCAZYVCvNhsp6jaUOa8++ikBAnq+eRBLpZ/8+r+ozD0CB4tx
      6pfPD7NBH4BhxEstJ/ybldG//+Bf53RDZwHDJOER2BHqC3k9LXY8TN24a7HtCc/lYsGZCqGQ
      lVlcLh/XFcs5R7rgyrKa8VK9VlUVtLHrCyTdSDhKDGaOoSiqcVlJO0Iwt4q5/kwxw75ObzRH
      qRYACIIhL0mTOFZcXSc9SPHmOkVT/mD8q/ffxHu7eHN5KlgMrHmDsZWVtGFi3GyWjEQjyUy+
      UMgkIjNWiIRDl/IlhmE0EI5oopLJp4PhsKoYttRrjuV0KtWdidlEOBQM9BpVFz/nuSWSX169
      v1a0YN+9lZygqtWD7UqjCxDEhVCG9mmaBs7nIvV2sdXZk81DHMcQGMFx/KrGPdyobXnj8XP7
      zF8zD+Y1I+cKpZ3XvDFziXtgGMawSzaYubpcoRdvvl+u2bDr4H6dn/jjWR9suhgJ6QpKUcNW
      M5ZbJC8o9c2GneFMZMJxyusJh4KQY7CiFQoQkqwYBkTikMcfxBFIEkWKYX4/oHMtXdCcEPN5
      26i3CHDtVqOZzC/qIjdl+XQ2PeyPcoWcwM44Sculo8OJmM+lBJ4PhkI8ywZDf3wu5Kenha5t
      Nuo1E/JQBKLqTiadAAgBO5oiiZyoZBeW5zqx5UxAt9kIJrOzXieeX5zjDgEs+fnmTjKXT0Tp
      rVdbGNeJf+27tU9+tf69D54/fVr8OvneavpCC+5sPEUjxeFoLxSOlI9kgrB2Dsd3bkTqM23W
      mL33lUU4EjdlvVPdX7r/vh+DgWWxsynFMBI/G8ruNz/4IBmeV0mePKiUu0K9O8AROBEhX+1K
      FttWLZMXFAZSfnZ4ECBJG5gvXuz+0/fe/cmHL17j/oRgPtScSUS7erK2mnv67EkkdxcR6+3O
      IJ4tpMCl1cQBW2en3VpfpMFkaFHzzLkcGyLI8XAgc9K9+/cXFnMwQiwU0go/za2uytMLTMf5
      FMxLra3f9nmQQW1PQoPT4SCVX5H4AUNRSzcWKqXK7vY2Oxl6/PFxs9QslzqjDuql916+JJhI
      r9VC5vkx9YaSHlOcDTvR3LKso3duLRSLuePDUj6XdrzRfIz2ejAylIwyRKVctfXXuT8hCEmS
      PpK0dWl7r5JJJW3HMg2bIJnba+u09/I0dgClFlZ1cVRYuaWM+/P8cgHQrp0YiI8d9UOpxZQf
      dbwhV5p6gsHG8XHu5p3QBf3TBr1OLJVjx33TMjcef0Imi+uraygkKopFkmHYFiEMm4pWhIRN
      F/Z5vQTt79VPA+Goz0fqho4RdDJ6gTLqC+HaxuHBUTiW9uJWudrJLyxOhsNYMo3ZYqPLLhYL
      44mwvrYy6HYzudxoMIgnU380c/+dzmWogmJ5dJlLxMODiaiwQ5SJo9psIqj55dvz20TPBgCn
      fLgfziyOWrXsjSvq/gSAYRgYTrx1M4NL52qppNdTbb90XM/IuebPgnmeygBn7+UmoIK2OCWY
      qDgdRAvFXqW6ene9Vj5KL90r5iIXWu94f6d4e7VWHt5eW/zsD4HRaIB6yGjkM22ph9svMsV1
      B4Cgx9ytjtdur/guWEl9fiyFffhs++add2btMicb2YXFXrO5sna7Va1oupPOxntD7v13727t
      lb7xwVc2nmy+9433z3Z/2nrxmLUoL5BgFI/Go7g/haij0XAE4b6bd74SoS/Hctc1xGcb2z46
      ZGksGliY49PjakKlO0xHtD4r3Qhmb+Sj+7Wm5ZrN452JjsQv7qLTb1YmIqdIWP3go6nizSwn
      bQFEc+GHz/feKUYJMsZ1j2THayHYvXe/fbdASqpVKx3VahWCDrGcVK3sOraH9ugnLXk1T4Lg
      8r9874O3JVObCidq1tbm0+LN+zcjwmHpQIOpSb+XWFq3R6eVWiPhD7Q4lecmzZOD/kxwATij
      kR31eG8U822Rae1/RIciw2GfAkGEH/f7w2RhEbtE9yfc/9V7q/t1zu/1ZW8U5pixI4QvRBKs
      rPm9yKDTqHanLnD8PlQHhMfVxhPuogviVOBr773rNbmxgWUK6SkLFEsWuvUQTQEYsTV2qiCw
      axdv3nANc9xrSgbcbzcgBM3lcyiKoAS1nE+jZPBrX79fLC4L0/Fb/GYTdDjkQ1AXRiHxwVYt
      m8tBBl+qD7RRea/FJSJMc8KloxEcQxEPrnATzX7Nj39q9EAGYivFLO2PTFpHE9HBPTAEQap6
      ee5PGvvD//44FA7KNsLgyHXcc82bM68ZOdcP5Z8D83p6VFWdx8p/Dlyh8ULzPmsuOb6IKw2J
      cIbvVP3JAj/s5lduNsul4to7zAWlPuCazdaYoTAqHPdiCARBAIBOt5vP5X73N6Nug45mFEWJ
      B8h6uxdNZhjyi0hPXNvY3ztYvLVuyDIGGRgd4frtMa+u3Cg0mr3ba6vD/iCbz/bbrVR24YzB
      kp+eFjqWfrC3qwHcT0CK7i4uZCEPDZsSz045SVu+PMddCIIshZtoWAhTJTgwx7pmYIoPnm2h
      rnbaGvowcFLp5HJZS+iXTuuO19esT5cXUxdakOvWtittXeQtYD56tMlN2o2+UNl9jAcSp7vP
      pzqRCJP7O9uaAfrdSvmo3uj2RHZ4cFSRJfbV9qEwGxxWewuF7FmuXW+KPKiUR1qndmo57tH2
      BkoGZ4IW89kbO8c44gqGs7W1m4/Tv/jk+a219bMLUx3HQVDMC2s6HB22Tpfy4f2jsokExFGt
      Wm34AqFEKuO9JP8eANyjFx93NHJWfsZ7s/O8CBj2Uv5hr0P56W539Bfv39nb3mUSSQAIILM+
      mrzoetV602sL5dak02pOR2MHgceTiSoJmsK3e+PheKZy/ZFg1arl8XRIBmKupgynfDIUPD4p
      u45rA4hlp447l73WG0phOq+IMwzHDMctl8rBgK8vwsvZsKqbgUgy4vcOhyPXlCXdPv+ytqlW
      ap1UKqXJvKxaBOm/sbLixS4tpnR1gVXscbsimhDHcnOu7xn1ABFwVdbjjyqzIRNLcaN+LJMd
      9/rpQuG1o4E/hyAIDEMNemOS9PCiQdOY4eA+D4QgEM+JwUjEhwHXQ9syr7m210MaugohiBfH
      AeTOODkWJGeSmc8k59GKAFyn3WoHQhF/kLFUSdFdFOiDMZfKZAReyOYyIscFw2FJ4GkmeMY5
      4e/1kmqGg1q6wgRoXlQNiUPIEGKKrKjG0/mQ3/f27+Gc2IZgAL/HVRzPdcb+5eJqqaTXvaRf
      Oq7Q+3y991zz5syzl9S1Np48mYhyrXQoqvrO5jPOJIzBYc8gjx8/oBeXyAvGPY42+/WjPZqA
      DddxHFhnu8+2DjjZoDxAtRxVFFwYVQTWBog46Z60xjjsQBjhwb4IVchS2Q9/9nMLoevH2+XK
      6Xgy3j84xr3E3s5OpVSe8ezOfikS9j94/HKpkPzlLz5ZWi6eWZtk/vxHP2EVnUTB8/0KKox5
      j1/tVV7uHeqq+JvHr0wHXEov6W9xtIcfP9IhfJ4qqS61RrOgJPC648KYbtnCqNUbNyJrGRxF
      7Ivvec1qzdL5gxOdFaff+c73G8e1r37rO4gqV/Y2jjozEsH8sQTlsPWBGEskEYJk6ztw8u7f
      vHd7Hnf3OWxD0S1oOmxF0zfj5ohXLdjVX73afff9vxR7pwN2lqBozsaArR1ubU55wXIAekZh
      M+SKopzyUv12XRO0sYMzCTcYDOH9KTBVSdEv0wAKgmy+1xYMQpDmqZJ66Uw04KHDiSAJIISi
      KB8dWrt900cQoXDwDQaNiLp753aBnUnBcCzEkDdvLb56/PT4tD1hhXAokMkXApSHk41YPArb
      pgd2VBslv6jJ0zCMUjSligoBCfu1ERMMejxkNBbXJqftqZKKx4ayngoyAcafX15NRV5bIItk
      l1burxU1B10txDlJPj3Yrjb7AEFMC9Ck97J6ST8FCyTTNApB8HXcc82bMy+d6wqlnde8MfPa
      2JFLGiB11QEAXKukv4WbDFycNiWOZELT8cDHhIEuh5JZftQNxLPUBYMSx9LbnX4sHgMI8YcD
      yQEAo34bJcOxkB+CgChKDPN59925osk8Qvgnw14inTFUHQK2l6IlnuVlPZ0IT2ZyJh0XRZEJ
      BASeDwSCZ/aSWp12y4IwEkdUw0kmoxCMQ46hKZIga8nsAj3nERFn4Fq6bMIkZusAn6dKaskf
      P3iuy3xrNOt3JxHKHc2E3VcveVGsdUckHQkHLiZ1vXr60B9L9E62n+yUfBR1enQAYfjx7itW
      EMqVusIP+xI2qu67KHp4fKorfLXeisST+EW9Nd8I1zF+9cP/sD1kvdUUBGMyG798/CSWjpVq
      XVccbx6WhdkM9qAfPXixlGZ+/LOH63du/6mM/dOeCnHaGgiedvUoHiZ29o8U4Ge7JwcHxxCG
      RxPpy1JJIQiUNz+qCARfejSCU3PtJbVcjJiynN8D647Dy/ZinEwWl/l+lw5QjXr3ogualhuO
      RGHIzhdSuw8/qg3ZWuloOOjt7R/645HSYdUfjFI43Op0m6Vyd9jjNfeirfJvDIIShXzasS2K
      pkedVjy3kk1FRsNRoZCDqGg2TFEE7g0lowxROilZr+8lRRk/4/f7HVPZP6qmUgnHsUzTJnz0
      ys1Viri0dN1R2caQHzePuqzGcXNVSQFonh47vrDBDqOFFVeX4tHQwd5+urg6rJeSxfVY4GJS
      nybNDk/q2WwK8hCOYY/77dziYqvTtaetCZb5q/fu9mvHKJOkgDyVLIYhEcxXyCbndHN/yGzQ
      8gQS9dJRNJ5JZJLTbgt4SMjgGj1ucTE3mgh311d7nXauUBj2eol05jW9pAovW7gmzZKJ8GAi
      KewA8cdRbTaT9EvsJYUgCDKlvgjFfdbMJv8HkKqIjT2SLSMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Audits' width='191'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Audits - External' width='191'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Audits - Internal' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='AfT Tracker' width='192'>
      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
      vlUhzgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparison Sheet' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
