<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.1' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8000.13.0712.1936                -->
  <repository-location id='AfTQTDTrip-BasedCPVReport' path='/workbooks' revision='1.3' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.1'>
      <aliases enabled='yes' />
      <column caption='Yesterday or Reference Day' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
        <calculation class='tableau' formula='&quot;Yesterday&quot;' />
        <members>
          <member value='&quot;Yesterday&quot;' />
          <member value='&quot;Reference Day&quot;' />
        </members>
      </column>
      <column caption='Reference Day' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2013-07-31#'>
        <calculation class='tableau' formula='#2013-07-31#' />
      </column>
      <column caption='Aggregated By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
        <calculation class='tableau' formula='&quot;Month&quot;' />
        <members>
          <member value='&quot;Month&quot;' />
          <member value='&quot;Quarter&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='for_graphs' inline='true' name='transaction_data__calculations_for_graphs' version='8.1'>
      <connection class='vertica' dbname='intent_media' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='no' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;dimensions.Date,&#13;&#10;&#9;dimensions.&quot;Site ID&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;acuvqa.count as &quot;Unique Visitors&quot;,&#13;&#10;&#9;acuva.count as &quot;30 Day Unique Visitors&quot;,&#13;&#10;&#9;(case dimensions.&quot;Product Category Type&quot; &#13;&#10;&#9;&#9;when &apos;FLIGHTS&apos; then &apos;Flights&apos;&#13;&#10;&#9;&#9;when &apos;HOTELS&apos; then &apos;Hotels&apos;&#13;&#10;&#9;&#9;when &apos;PACKAGES&apos; then &apos;Packages&apos;&#13;&#10;&#9;&#9;when &apos;CARS&apos; then &apos;Cars&apos;&#13;&#10;&#9;&#9;else dimensions.&quot;Product Category Type&quot;&#13;&#10;&#9;end) as &quot;Product Category Type&quot;,&#13;&#10;&#9;(case dimensions.&quot;Segmentation Type&quot;&#13;&#10;&#9;&#9;when &apos;HIGH_CONVERTING&apos; then &apos;High Value&apos;&#13;&#10;&#9;&#9;when &apos;LOW_CONVERTING&apos; then &apos;Low Value&apos;&#13;&#10;&#9;&#9;else dimensions.&quot;Segmentation Type&quot;&#13;&#10;&#9;end) as &quot;Segmentation Type&quot;,&#13;&#10;&#9;(case dimensions.&quot;Pure Group Type&quot;&#13;&#10;&#9;&#9;when &apos;PURE&apos; then &apos;Pure&apos;&#13;&#10;&#9;&#9;when &apos;NOT_PURE&apos; then &apos;Not Pure&apos;&#13;&#10;&#9;&#9;else dimensions.&quot;Pure Group Type&quot;&#13;&#10;&#9;end) as &quot;Pure Group Type&quot;,&#13;&#10;&#9;t.&quot;Transactions&quot;,&#13;&#10;&#9;t.&quot;Transaction Contribution&quot;,&#13;&#10;&#9;t.&quot;Pages Served&quot;,&#13;&#10;&#9;t.&quot;Net Media Revenue&quot;&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;dates.date_in_et as Date,&#13;&#10;&#9;&#9;sites.site_id as &quot;Site ID&quot;,&#13;&#10;&#9;&#9;products.product_category_type as &quot;Product Category Type&quot;,&#13;&#10;&#9;&#9;ifnull(pure_groups.pure_group_type, &apos;Total&apos;) as &quot;Pure Group Type&quot;,&#13;&#10;&#9;&#9;ifnull(segmentations.segmentation_type, &apos;Total&apos;) as &quot;Segmentation Type&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations) dates,&#13;&#10;&#9;&#9;(select 2 as site_id&#13;&#10;&#9;&#9;&#9;union&#13;&#10;&#9;&#9;&#9;select 3 as site_id) sites,&#13;&#10;&#9;&#9;(select distinct(product_category_type) as product_category_type&#13;&#10;&#9;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations) products,&#13;&#10;&#9;&#9;(select distinct(pure_group_type) as pure_group_type&#13;&#10;&#9;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations) pure_groups,&#13;&#10;&#9;&#9;(select distinct(segmentation_type) as segmentation_type&#13;&#10;&#9;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations) segmentations&#13;&#10;&#9;) dimensions&#13;&#10;left join&#13;&#10;&#9;-- performance data&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;t.*,&#13;&#10;&#9;&#9;media_revenue.&quot;Pages Served&quot;,&#13;&#10;&#9;&#9;media_revenue.&quot;Net Media Revenue&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;t.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;&#9;t.site_id,&#13;&#10;&#9;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.segmentation_type, &apos;Total&apos;) as segmentation_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.pure_group_type, &apos;Total&apos;) as pure_group_type,&#13;&#10;&#9;&#9;&#9;sum(bookings_count*cookie_bias_adjustment_factor) as &quot;Transactions&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_conversion_sum*cookie_bias_adjustment_factor) as &quot;Transaction Contribution&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations t&#13;&#10;&#9;&#9;group by t.aggregation_level_date_in_et, t.site_id, t.segmentation_type, t.pure_group_type, t.product_category_type) t&#13;&#10;&#9;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id as site_id,&#13;&#10;&#9;&#9;&#9;sum(ad_unit_served_count) as &quot;Pages Served&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_revenue_sum) as &quot;Net Media Revenue&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id) media_revenue&#13;&#10;&#9;&#9;on t.site_id = media_revenue.site_id&#13;&#10;&#9;&#9;&#9;and t.Date = media_revenue.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and t.segmentation_type in (&apos;LOW_CONVERTING&apos;, &apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.pure_group_type in (&apos;NOT_PURE&apos;,&apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.product_category_type = &apos;FLIGHTS&apos;&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;union&#13;&#10;&#9;&#13;&#10;&#9;select&#13;&#10;&#9;&#9;t.*,&#13;&#10;&#9;&#9;media_revenue.&quot;Pages Served&quot;,&#13;&#10;&#9;&#9;media_revenue.&quot;Net Media Revenue&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;t.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;&#9;t.site_id,&#13;&#10;&#9;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;&#9;&apos;Total&apos; as segmentation_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.pure_group_type, &apos;Total&apos;) as pure_group_type,&#13;&#10;&#9;&#9;&#9;sum(bookings_count*cookie_bias_adjustment_factor) as &quot;Transactions&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_conversion_sum*cookie_bias_adjustment_factor) as &quot;Transaction Contribution&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations t&#13;&#10;&#9;&#9;group by t.aggregation_level_date_in_et, t.site_id, t.pure_group_type, t.product_category_type) t&#13;&#10;&#9;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id as site_id,&#13;&#10;&#9;&#9;&#9;sum(ad_unit_served_count) as &quot;Pages Served&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_revenue_sum) as &quot;Net Media Revenue&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id) media_revenue&#13;&#10;&#9;&#9;on t.site_id = media_revenue.site_id&#13;&#10;&#9;&#9;&#9;and t.Date = media_revenue.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and t.segmentation_type in (&apos;LOW_CONVERTING&apos;, &apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.pure_group_type in (&apos;NOT_PURE&apos;,&apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.product_category_type = &apos;FLIGHTS&apos;&#13;&#10;&#9;&#13;&#10;&#9;union&#13;&#10;&#9;&#13;&#10;&#9;select&#13;&#10;&#9;&#9;t.*,&#13;&#10;&#9;&#9;media_revenue.&quot;Pages Served&quot;,&#13;&#10;&#9;&#9;media_revenue.&quot;Net Media Revenue&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;t.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;&#9;t.site_id,&#13;&#10;&#9;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.segmentation_type, &apos;Total&apos;) as segmentation_type,&#13;&#10;&#9;&#9;&#9;&apos;Total&apos; as pure_group_type,&#13;&#10;&#9;&#9;&#9;sum(bookings_count*cookie_bias_adjustment_factor) as &quot;Transactions&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_conversion_sum*cookie_bias_adjustment_factor) as &quot;Transaction Contribution&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations t&#13;&#10;&#9;&#9;group by t.aggregation_level_date_in_et, t.site_id, t.segmentation_type, t.product_category_type) t&#13;&#10;&#9;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id as site_id,&#13;&#10;&#9;&#9;&#9;sum(ad_unit_served_count) as &quot;Pages Served&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_revenue_sum) as &quot;Net Media Revenue&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id) media_revenue&#13;&#10;&#9;&#9;on t.site_id = media_revenue.site_id&#13;&#10;&#9;&#9;&#9;and t.Date = media_revenue.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and t.segmentation_type in (&apos;LOW_CONVERTING&apos;, &apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.pure_group_type in (&apos;NOT_PURE&apos;,&apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.product_category_type = &apos;FLIGHTS&apos;&#13;&#10;&#9;&#13;&#10;&#9;) t&#13;&#10;on dimensions.&quot;Site ID&quot; = t.site_id&#13;&#10;&#9;and dimensions.&quot;Segmentation Type&quot; = t.segmentation_type&#13;&#10;&#9;and dimensions.&quot;Pure Group Type&quot; = t.pure_group_type&#13;&#10;&#9;and dimensions.Date = t.Date&#13;&#10;&#9;and dimensions.&quot;Product Category Type&quot; = t.product_category_type&#13;&#10;&#9;&#13;&#10;&#9;&#13;&#10;left join intent_media_production.air_ct_unique_visitor_qtd_aggregations acuvqa&#13;&#10;&#9;on acuvqa.site_id = dimensions.&quot;Site ID&quot;&#13;&#10;&#9;and ifnull(acuvqa.segmentation_type,&apos;Total&apos;) = dimensions.&quot;Segmentation Type&quot;&#13;&#10;&#9;and ifnull(acuvqa.pure_group_type,&apos;Total&apos;) = dimensions.&quot;Pure Group Type&quot;&#13;&#10;&#9;and acuvqa.date_in_et = dimensions.Date&#13;&#10;&#13;&#10;left join intent_media_production.air_ct_unique_visitor_aggregations acuva&#13;&#10;&#9;on acuva.site_id = dimensions.&quot;Site ID&quot;&#13;&#10;&#9;and ifnull(acuva.segmentation_type,&apos;Total&apos;) = dimensions.&quot;Segmentation Type&quot;&#13;&#10;&#9;and ifnull(acuva.pure_group_type,&apos;Total&apos;) = dimensions.&quot;Pure Group Type&quot;&#13;&#10;&#9;and acuva.date_in_et = dimensions.Date&#13;&#10;&#9;and acuva.lookback_window_type = &apos;THIRTY_DAYS&apos;&#13;&#10;&#9;and acuva.destination is null&#13;&#10;&#9;&#13;&#10;left join intent_media_production.sites s on s.id = dimensions.&quot;Site ID&quot;&#13;&#10;&#13;&#10;where dimensions.Date &gt;&gt;= &apos;2012-07-01&apos;&#13;&#10;and (dimensions.Date &lt;&lt; &apos;2013-09-01&apos; or dimensions.Date &gt;&gt; &apos;2013-09-30&apos;)</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[30 Day Total Contribution]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3290821170222367] + IFNULL([Calculation_9010821170044926],0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[30 Day Transaction Contribution Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM(IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transaction Contribution] END), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[transaction_data__calculations_for_graphs].[sum:Blank 2:qk]&quot;' value='  ' />
          <alias key='&quot;[transaction_data__calculations_for_graphs].[sum:Blank:qk]&quot;' value=' ' />
          <alias key='&quot;[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:13]&quot;' value='Total CPV' />
          <alias key='&quot;[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7]&quot;' value='Total CPV ' />
          <alias key='&quot;[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]&quot;' value='Transaction CPV ' />
          <alias key='&quot;[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:4]&quot;' value='Transaction CPV' />
        </aliases>
      </column>
      <column datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
      </column>
      <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Media CPV' datatype='real' default-format='C1033%' name='[Calculation_2910821171109948]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9010821170044926]/SUM([Calculation_7240828115529651])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day % HV Unique Visitors' datatype='real' default-format='p0%' name='[Calculation_2980821172402082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_6040821172211288])/SUM([Calculation_8480925162233995])' scope-isolation='false' />
      </column>
      <column caption='30 Day Unique Visitors Not Pure' datatype='integer' name='[Calculation_3050821165802553]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [30 Day Unique Visitors] END' scope-isolation='false' />
      </column>
      <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Transaction Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3290821170222367]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Transaction Contribution]), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Total CPV' datatype='real' default-format='C1033%' name='[Calculation_4120821171146573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([Calculation_2910821171109948],0)+[Calculation_7590821170252787]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Unique Visitors Pure' datatype='integer' name='[Calculation_4320821165739256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [30 Day Unique Visitors] END' scope-isolation='false' />
      </column>
      <column caption='Pure Group and Segmentation Type' datatype='string' name='[Calculation_4590821170423927]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Pure Group Type] + &quot; &quot; + [Segmentation Type]' scope-isolation='false' />
      </column>
      <column caption='30 Day Transaction Contribution Pure' datatype='real' name='[Calculation_5240821114941248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM(IF [Pure Group Type] = &apos;Pure&apos; THEN [Transaction Contribution] END), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction Contribution Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5330815143130820]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transaction Contribution] END' scope-isolation='false' />
      </column>
      <column caption='30 Day Normalization Factor' datatype='real' name='[Calculation_5580821165830179]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_3050821165802553])/sum([Calculation_4320821165739256])' scope-isolation='false' />
      </column>
      <column caption='Running Sum Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_5800816173221279]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Net Media Revenue Total' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5890816143403022]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; and [Segmentation Type] = &apos;Low Value&apos; THEN [Net Media Revenue] END' scope-isolation='false' />
      </column>
      <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Unique Visitors High Value' datatype='integer' name='[Calculation_6040821172211288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Segmentation Type] = &apos;High Value&apos; THEN [30 Day Unique Visitors] END' scope-isolation='false' />
      </column>
      <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.00%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Transaction Contribution Total Segmentation' datatype='real' name='[Calculation_6620925162506596]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM(IF [Segmentation Type] = &apos;Total&apos; THEN [Transaction Contribution] END), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transaction Contribution Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_6790821115212496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5330815143130820]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total CPV % Difference' datatype='real' default-format='p0.00%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Flight Unique Visitors' datatype='integer' name='[Calculation_7240828115529651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Product Category Type] = &apos;Flights&apos; THEN [30 Day Unique Visitors] END' scope-isolation='false' />
      </column>
      <column caption='30 Day Transaction CPV' datatype='real' default-format='C1033%' name='[Calculation_7590821170252787]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3290821170222367]/SUM([Calculation_7240828115529651])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date Filter' datatype='boolean' name='[Calculation_8020925165403569]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([Date]) &gt;= DATEADD(&apos;day&apos;, 29, WINDOW_MIN(ATTR([Date])))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day % HV Transaction Contribution' datatype='real' default-format='p0%' name='[Calculation_8390821172531482]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9280821172245147]/[Calculation_6620925162506596]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Transactions' datatype='real' name='[Calculation_8400821170710101]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Transactions]), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Unique Visitors Total Segmentation' datatype='integer' name='[Calculation_8480925162233995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Segmentation Type] = &apos;Total&apos; THEN [30 Day Unique Visitors] END' scope-isolation='false' />
      </column>
      <column caption='30 Day Net Media Revenue' datatype='real' name='[Calculation_9010821170044926]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Calculation_5890816143403022]), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='30 Day Transaction Contribution High Value' datatype='real' name='[Calculation_9280821172245147]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM(IF [Segmentation Type] = &apos;High Value&apos; THEN [Transaction Contribution] END), -29, 0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Unique Visitors Not Pure])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Unique Visitors Pure])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Total' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Site ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Site]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Transaction Contribution Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transaction Contribution] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Transaction Contribution]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Transaction Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transactions] END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Transactions Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transactions] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Unique Visitors Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Unique Visitors] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Unique Visitors Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Unique Visitors] END' scope-isolation='false' />
      </column>
      <column-instance column='[Calculation_4590821170423927]' derivation='None' name='[none:Calculation_4590821170423927:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
      <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4120821171146573]' derivation='User' name='[usr:Calculation_4120821171146573:qk:13]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_2910821171109948]' ordering-type='Rows' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9010821170044926]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' tc-options='NullIfIncomplete' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' tc-options='NullIfIncomplete' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7590821170252787]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_4120821171146573]' derivation='User' name='[usr:Calculation_4120821171146573:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7590821170252787]' ordering-type='Rows' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9010821170044926]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_2910821171109948]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_7590821170252787]' derivation='User' name='[usr:Calculation_7590821170252787:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_7590821170252787]' derivation='User' name='[usr:Calculation_7590821170252787:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' tc-options='NullIfIncomplete' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\data\Tableau\data_extracts\PreQA Site\transaction_data copy 2.tde' schema='Extract' tablename='Extract' update-time='12/11/2013 5:35:02 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Blank 2]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Blank]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Calculation_3050821165802553]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [30 Day Unique Visitors] END' />
            <calculation column='[Calculation_4320821165739256]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [30 Day Unique Visitors] END' />
            <calculation column='[Calculation_4590821170423927]' formula='[Pure Group Type] + &quot; &quot; + [Segmentation Type]' />
            <calculation column='[Calculation_5330815143130820]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transaction Contribution] END' />
            <calculation column='[Calculation_5890816143403022]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; and [Segmentation Type] = &apos;Low Value&apos; THEN [Net Media Revenue] END' />
            <calculation column='[Calculation_6040821172211288]' formula='IF [Segmentation Type] = &apos;High Value&apos; THEN [30 Day Unique Visitors] END' />
            <calculation column='[Calculation_7240828115529651]' formula='IF [Product Category Type] = &apos;Flights&apos; THEN [30 Day Unique Visitors] END' />
            <calculation column='[Calculation_8480925162233995]' formula='IF [Segmentation Type] = &apos;Total&apos; THEN [30 Day Unique Visitors] END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Transaction Contribution Not Pure]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transaction Contribution] END' />
            <calculation column='[Transaction Pure]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transactions] END' />
            <calculation column='[Transactions Not Pure]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transactions] END' />
            <calculation column='[Unique Visitors Not Pure]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Unique Visitors] END' />
            <calculation column='[Unique Visitors Pure]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Unique Visitors] END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='35928' timestamp-start='2013-12-11 17:35:02.115000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.331818' measure-ordering='alphabetic' measure-percentage='0.60303' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Product Category Type:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Cars&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Packages&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Flights&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4590821170423927:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Not Pure Total&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Total Total&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Pure High Value&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Not Pure High Value&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Total High Value&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Total Low Value&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Pure Low Value&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Pure Total&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Not Pure Low Value&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>&quot;[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Site:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Orbitz&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Bookit&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;CheapTickets&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Hotwire&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Expedia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Expedia.ca&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='for_tables' inline='true' name='vertica.41410.553173333334' version='8.1'>
      <connection class='vertica' dbname='intent_media' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='no' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;dimensions.Date,&#13;&#10;&#9;dimensions.&quot;Site ID&quot;,&#13;&#10;&#9;dimensions.&quot;Site&quot;,&#13;&#10;&#9;(case dimensions.product_category_type &#13;&#10;&#9;&#9;when &apos;FLIGHTS&apos; then &apos;Flights&apos;&#13;&#10;&#9;&#9;when &apos;HOTELS&apos; then &apos;Hotels&apos;&#13;&#10;&#9;&#9;when &apos;PACKAGES&apos; then &apos;Packages&apos;&#13;&#10;&#9;&#9;when &apos;CARS&apos; then &apos;Cars&apos;&#13;&#10;&#9;&#9;else dimensions.product_category_type&#13;&#10;&#9;end) as &quot;Product Category Type&quot;,&#13;&#10;&#9;(case dimensions.segmentation_type&#13;&#10;&#9;&#9;when &apos;HIGH_CONVERTING&apos; then &apos;High Value&apos;&#13;&#10;&#9;&#9;when &apos;LOW_CONVERTING&apos; then &apos;Low Value&apos;&#13;&#10;&#9;&#9;else dimensions.segmentation_type&#13;&#10;&#9;end) as &quot;Segmentation Type&quot;,&#13;&#10;&#9;(case dimensions.pure_group_type&#13;&#10;&#9;&#9;when &apos;PURE&apos; then &apos;Pure&apos;&#13;&#10;&#9;&#9;when &apos;NOT_PURE&apos; then &apos;Not Pure&apos;&#13;&#10;&#9;&#9;else dimensions.pure_group_type&#13;&#10;&#9;end) as &quot;Pure Group Type&quot;,&#13;&#10;&#9;acuvqa.count as &quot;Unique Visitors&quot;,&#13;&#10;&#9;performance.&quot;Transactions&quot;,&#13;&#10;&#9;performance.&quot;Transaction Contribution&quot;,&#13;&#10;&#9;performance.&quot;Pages Served&quot;,&#13;&#10;&#9;performance.&quot;Net Media Revenue&quot;&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;dates.Date,&#13;&#10;&#9;&#9;t.site_id as &quot;Site ID&quot;,&#13;&#10;&#9;&#9;t.display_name as &quot;Site&quot;,&#13;&#10;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;ifnull(t.pure_group_type,&apos;Total&apos;) as pure_group_type,&#13;&#10;&#9;&#9;ifnull(t.segmentation_type,&apos;Total&apos;) as segmentation_type&#13;&#10;&#9;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;distinct(aggregation_level_date_in_et) as Date&#13;&#10;&#9;from intent_media_production.air_ct_transaction_performance_aggregations&#13;&#10;&#9;where aggregation_level_date_in_et &gt;&gt;= &apos;2012-06-01&apos;) dates, &#13;&#10;&#9;(select&#13;&#10;&#9;&#9;s.display_name,&#13;&#10;&#9;&#9;actpa.site_id,&#13;&#10;&#9;&#9;actpa.product_category_type,&#13;&#10;&#9;&#9;ifnull(actpa.segmentation_type,&apos;Total&apos;) as segmentation_type,&#13;&#10;&#9;&#9;ifnull(actpa.pure_group_type, &apos;Total&apos;) as pure_group_type&#13;&#10;&#9;from intent_media_production.air_ct_transaction_performance_aggregations actpa&#13;&#10;&#9;left join intent_media_production.sites s on s.id = actpa.site_id&#13;&#10;&#9;where actpa.site_id in (2,3)&#13;&#10;&#9;group by&#13;&#10;&#9;&#9;s.display_name,&#13;&#10;&#9;&#9;actpa.site_id,&#13;&#10;&#9;&#9;actpa.product_category_type,&#13;&#10;&#9;&#9;actpa.segmentation_type,&#13;&#10;&#9;&#9;actpa.pure_group_type&#13;&#10;&#13;&#10;union&#13;&#10;&#9;select&#13;&#10;&#9;&#9;s.display_name,&#13;&#10;&#9;&#9;actpa.site_id,&#13;&#10;&#9;&#9;actpa.product_category_type,&#13;&#10;&#9;&#9;&apos;Total&apos; as segmentation_type,&#13;&#10;&#9;&#9;ifnull(actpa.pure_group_type, &apos;Total&apos;) as pure_group_type&#13;&#10;&#9;from intent_media_production.air_ct_transaction_performance_aggregations actpa&#13;&#10;&#9;left join intent_media_production.sites s on s.id = actpa.site_id&#13;&#10;&#9;where actpa.site_id in (2,3)&#13;&#10;&#9;group by&#13;&#10;&#9;&#9;s.display_name,&#13;&#10;&#9;&#9;actpa.site_id,&#13;&#10;&#9;&#9;actpa.product_category_type,&#13;&#10;&#9;&#9;actpa.pure_group_type&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;select&#13;&#10;&#9;&#9;s.display_name,&#13;&#10;&#9;&#9;actpa.site_id,&#13;&#10;&#9;&#9;actpa.product_category_type,&#13;&#10;&#9;&#9;ifnull(actpa.segmentation_type,&apos;Total&apos;) as segmentation_type,&#13;&#10;&#9;&#9;&apos;Total&apos; as pure_group_type&#13;&#10;&#9;from intent_media_production.air_ct_transaction_performance_aggregations actpa&#13;&#10;&#9;left join intent_media_production.sites s on s.id = actpa.site_id&#13;&#10;&#9;where actpa.site_id in (2,3)&#13;&#10;&#9;group by&#13;&#10;&#9;&#9;s.display_name,&#13;&#10;&#9;&#9;actpa.site_id,&#13;&#10;&#9;&#9;actpa.product_category_type,&#13;&#10;&#9;&#9;actpa.segmentation_type) t) dimensions&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;left join&#13;&#10;&#13;&#10;&#13;&#10;&#9;-- performance data&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;t.*,&#13;&#10;&#9;&#9;media_revenue.&quot;Pages Served&quot;,&#13;&#10;&#9;&#9;media_revenue.&quot;Net Media Revenue&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;t.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;&#9;t.site_id,&#13;&#10;&#9;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.segmentation_type, &apos;Total&apos;) as segmentation_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.pure_group_type, &apos;Total&apos;) as pure_group_type,&#13;&#10;&#9;&#9;&#9;sum(bookings_count*cookie_bias_adjustment_factor) as &quot;Transactions&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_conversion_sum*cookie_bias_adjustment_factor) as &quot;Transaction Contribution&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations t&#13;&#10;&#9;&#9;group by t.aggregation_level_date_in_et, t.site_id, t.segmentation_type, t.pure_group_type, t.product_category_type) t&#13;&#10;&#9;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id as site_id,&#13;&#10;&#9;&#9;&#9;sum(ad_unit_served_count) as &quot;Pages Served&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_revenue_sum) as &quot;Net Media Revenue&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id) media_revenue&#13;&#10;&#9;&#9;on t.site_id = media_revenue.site_id&#13;&#10;&#9;&#9;&#9;and t.Date = media_revenue.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and t.segmentation_type in (&apos;LOW_CONVERTING&apos;, &apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.pure_group_type in (&apos;NOT_PURE&apos;,&apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.product_category_type = &apos;FLIGHTS&apos;&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;union&#13;&#10;&#9;&#13;&#10;&#9;select&#13;&#10;&#9;&#9;t.*,&#13;&#10;&#9;&#9;media_revenue.&quot;Pages Served&quot;,&#13;&#10;&#9;&#9;media_revenue.&quot;Net Media Revenue&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;t.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;&#9;t.site_id,&#13;&#10;&#9;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;&#9;&apos;Total&apos; as segmentation_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.pure_group_type, &apos;Total&apos;) as pure_group_type,&#13;&#10;&#9;&#9;&#9;sum(bookings_count*cookie_bias_adjustment_factor) as &quot;Transactions&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_conversion_sum*cookie_bias_adjustment_factor) as &quot;Transaction Contribution&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations t&#13;&#10;&#9;&#9;group by t.aggregation_level_date_in_et, t.site_id, t.pure_group_type, t.product_category_type) t&#13;&#10;&#9;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id as site_id,&#13;&#10;&#9;&#9;&#9;sum(ad_unit_served_count) as &quot;Pages Served&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_revenue_sum) as &quot;Net Media Revenue&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id) media_revenue&#13;&#10;&#9;&#9;on t.site_id = media_revenue.site_id&#13;&#10;&#9;&#9;&#9;and t.Date = media_revenue.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and t.segmentation_type in (&apos;LOW_CONVERTING&apos;, &apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.pure_group_type in (&apos;NOT_PURE&apos;,&apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.product_category_type = &apos;FLIGHTS&apos;&#13;&#10;&#9;&#13;&#10;&#9;union&#13;&#10;&#9;&#13;&#10;&#9;select&#13;&#10;&#9;&#9;t.*,&#13;&#10;&#9;&#9;media_revenue.&quot;Pages Served&quot;,&#13;&#10;&#9;&#9;media_revenue.&quot;Net Media Revenue&quot;&#13;&#10;&#9;from &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;t.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;&#9;t.site_id,&#13;&#10;&#9;&#9;&#9;t.product_category_type,&#13;&#10;&#9;&#9;&#9;ifnull(t.segmentation_type, &apos;Total&apos;) as segmentation_type,&#13;&#10;&#9;&#9;&#9;&apos;Total&apos; as pure_group_type,&#13;&#10;&#9;&#9;&#9;sum(bookings_count*cookie_bias_adjustment_factor) as &quot;Transactions&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_conversion_sum*cookie_bias_adjustment_factor) as &quot;Transaction Contribution&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_transaction_performance_aggregations t&#13;&#10;&#9;&#9;group by t.aggregation_level_date_in_et, t.site_id, t.segmentation_type, t.product_category_type) t&#13;&#10;&#9;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id as site_id,&#13;&#10;&#9;&#9;&#9;sum(ad_unit_served_count) as &quot;Pages Served&quot;,&#13;&#10;&#9;&#9;&#9;sum(net_revenue_sum) as &quot;Net Media Revenue&quot;&#13;&#10;&#9;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;s.id) media_revenue&#13;&#10;&#9;&#9;on t.site_id = media_revenue.site_id&#13;&#10;&#9;&#9;&#9;and t.Date = media_revenue.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and t.segmentation_type in (&apos;LOW_CONVERTING&apos;, &apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.pure_group_type in (&apos;NOT_PURE&apos;,&apos;Total&apos;)&#13;&#10;&#9;&#9;&#9;and t.product_category_type = &apos;FLIGHTS&apos;) performance&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;on performance.site_id = dimensions.&quot;Site ID&quot;&#13;&#10;&#9;and performance.segmentation_type = dimensions.segmentation_type&#13;&#10;&#9;and performance.pure_group_type = dimensions.pure_group_type&#13;&#10;&#9;and performance.product_category_type = dimensions.product_category_type&#13;&#10;&#9;and performance.Date = dimensions.Date&#13;&#10;&#9;&#13;&#10;left join intent_media_production.air_ct_unique_visitor_qtd_aggregations acuvqa&#13;&#10;&#9;on acuvqa.site_id = dimensions.&quot;Site ID&quot;&#13;&#10;&#9;and ifnull(acuvqa.segmentation_type,&apos;Total&apos;) = dimensions.segmentation_type&#13;&#10;&#9;and ifnull(acuvqa.pure_group_type,&apos;Total&apos;) = dimensions.pure_group_type&#13;&#10;&#9;and acuvqa.date_in_et = dimensions.Date&#13;&#10;&#13;&#10;where dimensions.Date &gt;&gt;= &apos;2012-07-01&apos;&#13;&#10;and (dimensions.Date &lt;&lt; &apos;2013-09-01&apos; or dimensions.Date &gt;&gt; &apos;2013-09-30&apos;)</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;' value='  ' />
          <alias key='&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;' value=' ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_1720904144131349:qk:6]&quot;' value='Media Multiple' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;' value='Conversion Rate' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;' value='Net Media Revenue' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;' value='Media CPV' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_5240821114941248:qk]&quot;' value='Transactions ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;' value='Transaction CPV ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;' value='Conversion Rate ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;' value='Transaction CPV % Difference' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:3]&quot;' value='Total CPV % Difference' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;' value='Transaction CPV' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;' value='Transaction Contribution  ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;' value='Contribution per Transaction ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;' value='Total Contribution' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;' value='Transactions' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;' value='Transaction Contribution' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;' value='Transactions  ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;' value='Transaction Contribution ' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;' value='Contribution per Transaction' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;' value='Conversion Rate % Difference' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;' value='Not Pure Unique Visitors' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;' value='Pure Unique Visitors' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;' value='Total CPV' />
          <alias key='&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;' value='Transaction CPV  ' />
        </aliases>
      </column>
      <column caption='Blank 2' datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
      </column>
      <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
      </column>
      <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Keep Unique Visitors' datatype='boolean' name='[Calculation_0210829182311913]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date] = DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;,[Date]))) OR [Date] = [Calculation_7620829182138850]' scope-isolation='false' />
      </column>
      <column caption='Media Multiple' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1720904144131349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_8040816160013695] &lt; 0&#13;&#10;    THEN [Calculation_3210821115936427]/(-1*[Calculation_8040816160013695])&#13;&#10;ELSE NULL&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ref Day Label' datatype='string' name='[Calculation_4620830171209702]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Site] + &quot;&apos;s Report as of:&quot;' scope-isolation='false' />
      </column>
      <column caption='Running Sum Transactions Pure' datatype='real' name='[Calculation_5240821114941248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Pure]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction Contribution Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5330815143130820]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transaction Contribution] END' scope-isolation='false' />
      </column>
      <column caption='Running Sum Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_5800816173221279]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Net Media Revenue Total' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5890816143403022]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Net Media Revenue] END' scope-isolation='false' />
      </column>
      <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Transaction Contribution Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_6790821115212496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5330815143130820]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Month Name' datatype='string' name='[Calculation_7050830184752473]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH([Date])&#13;&#10;    WHEN 1 THEN &quot;January&quot;&#13;&#10;    WHEN 2 THEN &quot;February&quot;&#13;&#10;    WHEN 3 THEN &quot;March&quot;&#13;&#10;    WHEN 4 THEN &quot;April&quot;&#13;&#10;    WHEN 5 THEN &quot;May&quot;&#13;&#10;    WHEN 6 THEN &quot;June&quot;&#13;&#10;    WHEN 7 THEN &quot;July&quot;&#13;&#10;    WHEN 8 THEN &quot;August&quot;&#13;&#10;    WHEN 9 THEN &quot;September&quot;&#13;&#10;    WHEN 10 THEN &quot;October&quot;&#13;&#10;    WHEN 11 THEN &quot;November&quot;&#13;&#10;    WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Ref Day' datatype='date' name='[Calculation_7620829182138850]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Reference Day&quot; THEN [Parameters].[Parameter 2] ELSE TODAY()-1 END' scope-isolation='false' />
      </column>
      <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
      </column>
      <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Contribution per Transaction Not Pure' datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Conversion Rate % Delta' datatype='real' default-format='p0.000%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Not Pure] END)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Total' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Site ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Total CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Transaction Contribution Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transaction Contribution] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Transaction Contribution]' role='measure' type='quantitative'>
      </column>
      <column caption='Transactions Pure' datatype='real' name='[Transaction Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transactions] END' scope-isolation='false' />
      </column>
      <column caption='Transactions Not Pure' datatype='real' name='[Transactions Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transactions] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Unique Visitors Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Unique Visitors] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Unique Visitors Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Unique Visitors] END' scope-isolation='false' />
      </column>
      <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
        <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:2]' pivot='key' type='quantitative'>
        <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1720904144131349]' derivation='User' name='[usr:Calculation_1720904144131349:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_3150815160754245]' derivation='User' name='[usr:Calculation_3150815160754245:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_3210821115936427]' derivation='User' name='[usr:Calculation_3210821115936427:qk:1]' pivot='key' type='quantitative'>
        <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_3770816160300935]' derivation='User' name='[usr:Calculation_3770816160300935:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_5240821114941248]' derivation='User' name='[usr:Calculation_5240821114941248:qk]' pivot='key' type='quantitative'>
        <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_6030815161525903]' derivation='User' name='[usr:Calculation_6030815161525903:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_6170815163232541]' derivation='User' name='[usr:Calculation_6170815163232541:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_6830816161441689]' derivation='User' name='[usr:Calculation_6830816161441689:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Total CPV Delta]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_7940815161426556]' derivation='User' name='[usr:Calculation_7940815161426556:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_9100815150524583]' derivation='User' name='[usr:Calculation_9100815150524583:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_9530816160217591]' derivation='User' name='[usr:Calculation_9530816160217591:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Contribution per Transaction Not Pure]' derivation='User' name='[usr:Contribution per Transaction Not Pure:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Conversion Rate % Delta]' derivation='User' name='[usr:Conversion Rate % Delta:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3150815160754245]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6170815163232541]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Last Unique Visitors Not Pure]' derivation='User' name='[usr:Last Unique Visitors Not Pure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total CPV Delta]' derivation='User' name='[usr:Total CPV Delta:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
        <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
        <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
          <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
          <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
        </table-calc>
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\data\Tableau\data_extracts\PreQA Site\transaction_data.tde' schema='Extract' tablename='Extract' update-time='12/11/2013 5:32:03 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Blank 2]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Blank]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Calculation_4620830171209702]' formula='[Site] + &quot;&apos;s Report as of:&quot;' />
            <calculation column='[Calculation_5330815143130820]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transaction Contribution] END' />
            <calculation column='[Calculation_5890816143403022]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Net Media Revenue] END' />
            <calculation column='[Calculation_7050830184752473]' formula='CASE MONTH([Date])&#13;&#10;    WHEN 1 THEN &quot;January&quot;&#13;&#10;    WHEN 2 THEN &quot;February&quot;&#13;&#10;    WHEN 3 THEN &quot;March&quot;&#13;&#10;    WHEN 4 THEN &quot;April&quot;&#13;&#10;    WHEN 5 THEN &quot;May&quot;&#13;&#10;    WHEN 6 THEN &quot;June&quot;&#13;&#10;    WHEN 7 THEN &quot;July&quot;&#13;&#10;    WHEN 8 THEN &quot;August&quot;&#13;&#10;    WHEN 9 THEN &quot;September&quot;&#13;&#10;    WHEN 10 THEN &quot;October&quot;&#13;&#10;    WHEN 11 THEN &quot;November&quot;&#13;&#10;    WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Transaction Contribution Not Pure]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transaction Contribution] END' />
            <calculation column='[Transaction Pure]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Transactions] END' />
            <calculation column='[Transactions Not Pure]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Transactions] END' />
            <calculation column='[Unique Visitors Not Pure]' formula='IF [Pure Group Type] = &apos;Not Pure&apos; THEN [Unique Visitors] END' />
            <calculation column='[Unique Visitors Pure]' formula='IF [Pure Group Type] = &apos;Pure&apos; THEN [Unique Visitors] END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='35928' timestamp-start='2013-12-11 17:32:02.935000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.30832' measure-ordering='alphabetic' measure-percentage='0.486134' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Yesterday or Reference Day' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
          <calculation class='tableau' formula='&quot;Yesterday&quot;' />
          <members>
            <member value='&quot;Yesterday&quot;' />
            <member value='&quot;Reference Day&quot;' />
          </members>
        </column>
        <column caption='Reference Day' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2013-07-31#'>
          <calculation class='tableau' formula='#2013-07-31#' />
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
          <calculation class='tableau' formula='&quot;Month&quot;' />
          <members>
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.41410.553173333334'>
      <datasources>
        <datasource caption='for_tables' name='vertica.41410.553173333334' />
      </datasources>
      <datasource-dependencies datasource='vertica.41410.553173333334'>
        <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column datatype='string' name='[Site]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]'>
        <groupfilter function='member' level='[none:Calculation_8450829182739988:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[vertica.41410.553173333334].[none:Date:qk]' included-values='all'>
      </filter>
      <filter class='categorical' column='[vertica.41410.553173333334].[none:Site:nk]'>
        <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='30 Day Transaction CPV' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='30 Day Transaction CPV' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='30 Day % HV Transaction Contribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='30 Day % HV Transaction Contribution' datatype='real' default-format='p0%' name='[Calculation_8390821172531482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9280821172245147]/[Calculation_6620925162506596]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8390821172531482]' derivation='User' name='[usr:Calculation_8390821172531482:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9280821172245147]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_6620925162506596]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='13' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='10'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='8'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;CheapTickets&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Expedia&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Site:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[usr:Calculation_8390821172531482:qk:1]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day % HV Unique Visitors'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='30 Day % HV Unique Visitors' datatype='real' default-format='p0%' name='[Calculation_2980821172402082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_6040821172211288])/SUM([Calculation_8480925162233995])' scope-isolation='false' />
            </column>
            <column caption='Date Filter' datatype='boolean' name='[Calculation_8020925165403569]' role='measure' type='nominal'>
              <calculation class='tableau' formula='ATTR([Date]) &gt;= DATEADD(&apos;day&apos;, 29, WINDOW_MIN(ATTR([Date])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2980821172402082]' derivation='User' name='[usr:Calculation_2980821172402082:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8020925165403569]' derivation='User' name='[usr:Calculation_8020925165403569:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='13' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='10'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='8'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;CheapTickets&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Expedia&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[usr:Calculation_8020925165403569:nk]'>
            <groupfilter function='member' level='[usr:Calculation_8020925165403569:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[usr:Calculation_8020925165403569:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Site:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[usr:Calculation_2980821172402082:qk]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day Total CPV'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='30 Day Total CPV' datatype='real' default-format='C1033%' name='[Calculation_4120821171146573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([Calculation_2910821171109948],0)+[Calculation_7590821170252787]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Pure Group and Segmentation Type' datatype='string' name='[Calculation_4590821170423927]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Pure Group Type] + &quot; &quot; + [Segmentation Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4590821170423927]' derivation='None' name='[none:Calculation_4590821170423927:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4120821171146573]' derivation='User' name='[usr:Calculation_4120821171146573:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_2910821171109948]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9010821170044926]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7590821170252787]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='12' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='9'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;High Value&quot;' />
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' value='Pure Group and&#10;Segmentation Type'>
              <formatted-text>
                <run>Pure Group and&#10;Segmentation Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:4]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day Total CPV by Site'>
      <layout-options>
        <title>
          <formatted-text>
            <run>30 Day Total CPV by Site&#10;</run>
            <run fontsize='9'>Segmentation Type: &lt;[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='30 Day Total CPV' datatype='real' default-format='C1033%' name='[Calculation_4120821171146573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([Calculation_2910821171109948],0)+[Calculation_7590821170252787]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4120821171146573]' derivation='User' name='[usr:Calculation_4120821171146573:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7590821170252787]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9010821170044926]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_2910821171109948]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='13' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='11'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Total&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='8'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;CheapTickets&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Expedia&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Site:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day Total Contribution by Site'>
      <layout-options>
        <title>
          <formatted-text>
            <run>30 Day Total Contribution by Site&#10;</run>
            <run fontsize='9'>Segmentation Type: &lt;[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[30 Day Total Contribution]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3290821170222367] + IFNULL([Calculation_9010821170044926],0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[30 Day Total Contribution]' derivation='User' name='[usr:30 Day Total Contribution:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9010821170044926]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='13' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='11'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Total&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='8'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;CheapTickets&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Expedia&quot;' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[transaction_data__calculations_for_graphs].[usr:30 Day Total Contribution:qk:3]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Site:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[usr:30 Day Total Contribution:qk:3]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day Transaction CPV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>30 Day Transaction and Total CPV</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='30 Day Total CPV' datatype='real' default-format='C1033%' name='[Calculation_4120821171146573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([Calculation_2910821171109948],0)+[Calculation_7590821170252787]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='30 Day Transaction CPV' datatype='real' default-format='C1033%' name='[Calculation_7590821170252787]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3290821170222367]/SUM([Calculation_7240828115529651])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4120821171146573]' derivation='User' name='[usr:Calculation_4120821171146573:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7590821170252787]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_9010821170044926]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_2910821171109948]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_7590821170252787]' derivation='User' name='[usr:Calculation_7590821170252787:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_3290821170222367]' ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='12' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='9'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;High Value&quot;' />
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]' scope='rows' value='30 Day CPV' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]' scope='rows' value='true' />
            <format attr='display' class='0' field='[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([transaction_data__calculations_for_graphs].[usr:Calculation_7590821170252787:qk:2] + [transaction_data__calculations_for_graphs].[usr:Calculation_4120821171146573:qk:7])</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day Transaction Contribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='30 Day Transaction Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3290821170222367]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([Transaction Contribution]), -29, 0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Pure Group and Segmentation Type' datatype='string' name='[Calculation_4590821170423927]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Pure Group Type] + &quot; &quot; + [Segmentation Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4590821170423927]' derivation='None' name='[none:Calculation_4590821170423927:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3290821170222367]' derivation='User' name='[usr:Calculation_3290821170222367:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='12' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='9'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;High Value&quot;' />
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[transaction_data__calculations_for_graphs].[usr:Calculation_3290821170222367:qk:1]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[usr:Calculation_3290821170222367:qk:1]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='30 Day Visitor Mix'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column datatype='integer' name='[30 Day Unique Visitors]' role='measure' type='quantitative'>
            </column>
            <column caption='Pure Group and Segmentation Type' datatype='string' name='[Calculation_4590821170423927]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Pure Group Type] + &quot; &quot; + [Segmentation Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4590821170423927]' derivation='None' name='[none:Calculation_4590821170423927:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[30 Day Unique Visitors]' derivation='Sum' name='[pcto:sum:30 Day Unique Visitors:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[transaction_data__calculations_for_graphs].[Calculation_4590821170423927]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Pure High Value&quot;</bucket>
              <bucket>&quot;Pure Low Value&quot;</bucket>
              <bucket>&quot;Not Pure High Value&quot;</bucket>
              <bucket>&quot;Not Pure Low Value&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='12' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Not Pure&quot;' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Pure&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='9'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;High Value&quot;' />
              <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[tdy:Date:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[transaction_data__calculations_for_graphs].[pcto:sum:30 Day Unique Visitors:qk:3]</rows>
        <cols>[transaction_data__calculations_for_graphs].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Diff Cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Blank 2' datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate % Delta' datatype='real' default-format='p0.000%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Total CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3210821115936427]' derivation='User' name='[usr:Calculation_3210821115936427:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3770816160300935]' derivation='User' name='[usr:Calculation_3770816160300935:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830816161441689]' derivation='User' name='[usr:Calculation_6830816161441689:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Total CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9530816160217591]' derivation='User' name='[usr:Calculation_9530816160217591:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Conversion Rate % Delta]' derivation='User' name='[usr:Conversion Rate % Delta:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3150815160754245]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6170815163232541]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Total CPV Delta]' derivation='User' name='[usr:Total CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:4]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Cars&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Diff Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Blank 2' datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Media Multiple' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1720904144131349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8040816160013695] &lt; 0&#13;&#10;    THEN [Calculation_3210821115936427]/(-1*[Calculation_8040816160013695])&#13;&#10;ELSE NULL&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate % Delta' datatype='real' default-format='p0.000%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Total CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1720904144131349]' derivation='User' name='[usr:Calculation_1720904144131349:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3210821115936427]' derivation='User' name='[usr:Calculation_3210821115936427:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3770816160300935]' derivation='User' name='[usr:Calculation_3770816160300935:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830816161441689]' derivation='User' name='[usr:Calculation_6830816161441689:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Total CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9530816160217591]' derivation='User' name='[usr:Calculation_9530816160217591:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Conversion Rate % Delta]' derivation='User' name='[usr:Conversion Rate % Delta:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3150815160754245]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6170815163232541]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Total CPV Delta]' derivation='User' name='[usr:Total CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_1720904144131349:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_1720904144131349:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Flights&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Diff Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Blank 2' datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate % Delta' datatype='real' default-format='p0.000%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Total CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3210821115936427]' derivation='User' name='[usr:Calculation_3210821115936427:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3770816160300935]' derivation='User' name='[usr:Calculation_3770816160300935:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830816161441689]' derivation='User' name='[usr:Calculation_6830816161441689:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Total CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9530816160217591]' derivation='User' name='[usr:Calculation_9530816160217591:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Conversion Rate % Delta]' derivation='User' name='[usr:Conversion Rate % Delta:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3150815160754245]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6170815163232541]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Total CPV Delta]' derivation='User' name='[usr:Total CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:4]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Hotels&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Diff Packages'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Blank 2' datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate % Delta' datatype='real' default-format='p0.000%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Total CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3210821115936427]' derivation='User' name='[usr:Calculation_3210821115936427:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3770816160300935]' derivation='User' name='[usr:Calculation_3770816160300935:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830816161441689]' derivation='User' name='[usr:Calculation_6830816161441689:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Total CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-address='[vertica.41410.553173333334].[tmn:Date:ok]' level-break='[vertica.41410.553173333334].[tmn:Date:ok]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[tmn:Date:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9530816160217591]' derivation='User' name='[usr:Calculation_9530816160217591:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Conversion Rate % Delta]' derivation='User' name='[usr:Conversion Rate % Delta:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3150815160754245]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6170815163232541]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Total CPV Delta]' derivation='User' name='[usr:Total CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:4]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Packages&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Difference'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Blank 2' datatype='integer' name='[Blank 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Media Multiple' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1720904144131349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_8040816160013695] &lt; 0&#13;&#10;    THEN [Calculation_3210821115936427]/(-1*[Calculation_8040816160013695])&#13;&#10;ELSE NULL&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Net Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3210821115936427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_5890816143403022]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Media CPV' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_3770816160300935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3210821115936427]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total CPV % Difference' datatype='real' default-format='p0.000%' name='[Calculation_6830816161441689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total CPV Delta]/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Total Contribution' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_9530816160217591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8040816160013695]+[Calculation_3210821115936427]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate % Delta' datatype='real' default-format='p0.000%' name='[Conversion Rate % Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3150815160754245]-[Calculation_6170815163232541])/[Calculation_6170815163232541]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Total CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Total CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Transaction CPV Delta]+[Calculation_3770816160300935]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Delta' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank 2]' derivation='Sum' name='[sum:Blank 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1720904144131349]' derivation='User' name='[usr:Calculation_1720904144131349:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3210821115936427]' derivation='User' name='[usr:Calculation_3210821115936427:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3770816160300935]' derivation='User' name='[usr:Calculation_3770816160300935:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830816161441689]' derivation='User' name='[usr:Calculation_6830816161441689:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Total CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9530816160217591]' derivation='User' name='[usr:Calculation_9530816160217591:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_8040816160013695]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Conversion Rate % Delta]' derivation='User' name='[usr:Conversion Rate % Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3150815160754245]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6170815163232541]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Total CPV Delta]' derivation='User' name='[usr:Total CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Transaction CPV Delta]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3770816160300935]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_3210821115936427]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6030815161525903]' ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_1720904144131349:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3210821115936427:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_8040816160013695:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9530816160217591:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_1720904144131349:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3770816160300935:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Transaction CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Total CPV Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[sum:Blank 2:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Conversion Rate \% Delta:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6410816161218463:qk:4]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6830816161441689:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='P v NP Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Contribution per Transaction Not Pure' datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3150815160754245]' derivation='User' name='[usr:Calculation_3150815160754245:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6030815161525903]' derivation='User' name='[usr:Calculation_6030815161525903:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6170815163232541]' derivation='User' name='[usr:Calculation_6170815163232541:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_7940815161426556]' derivation='User' name='[usr:Calculation_7940815161426556:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9100815150524583]' derivation='User' name='[usr:Calculation_9100815150524583:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Contribution per Transaction Not Pure]' derivation='User' name='[usr:Contribution per Transaction Not Pure:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Flights&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='height-header' value='10' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='P v NP Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ref Day' datatype='date' name='[Calculation_7620829182138850]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Reference Day&quot; THEN [Parameters].[Parameter 2] ELSE TODAY()-1 END' scope-isolation='false' />
            </column>
            <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Contribution per Transaction Not Pure' datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3150815160754245]' derivation='User' name='[usr:Calculation_3150815160754245:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6030815161525903]' derivation='User' name='[usr:Calculation_6030815161525903:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6170815163232541]' derivation='User' name='[usr:Calculation_6170815163232541:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_7940815161426556]' derivation='User' name='[usr:Calculation_7940815161426556:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9100815150524583]' derivation='User' name='[usr:Calculation_9100815150524583:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Contribution per Transaction Not Pure]' derivation='User' name='[usr:Contribution per Transaction Not Pure:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7620829182138850]' derivation='Year' name='[yr:Calculation_7620829182138850:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:3]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[yr:Calculation_7620829182138850:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Hotels&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='height-header' value='10' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='P v NP Packages'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Contribution per Transaction Not Pure' datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3150815160754245]' derivation='User' name='[usr:Calculation_3150815160754245:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6030815161525903]' derivation='User' name='[usr:Calculation_6030815161525903:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6170815163232541]' derivation='User' name='[usr:Calculation_6170815163232541:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_7940815161426556]' derivation='User' name='[usr:Calculation_7940815161426556:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9100815150524583]' derivation='User' name='[usr:Calculation_9100815150524583:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Contribution per Transaction Not Pure]' derivation='User' name='[usr:Contribution per Transaction Not Pure:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Packages&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='height-header' value='10' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='P vs NP Cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Contribution per Transaction Not Pure' datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3150815160754245]' derivation='User' name='[usr:Calculation_3150815160754245:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6030815161525903]' derivation='User' name='[usr:Calculation_6030815161525903:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6170815163232541]' derivation='User' name='[usr:Calculation_6170815163232541:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_7940815161426556]' derivation='User' name='[usr:Calculation_7940815161426556:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9100815150524583]' derivation='User' name='[usr:Calculation_9100815150524583:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Contribution per Transaction Not Pure]' derivation='User' name='[usr:Contribution per Transaction Not Pure:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;Cars&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Product Category Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='height-header' value='10' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Pure vs Not Pure'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Running Sum Transactions Not Pure' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transactions Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Transaction Contribution Not Pure]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transations Pure Normalized' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Running Sum Transaction Contribution Pure Normalized' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]*[Normalization Factor]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Not Pure' datatype='real' default-format='p0.0%' name='[Calculation_3150815160754245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation1]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_6030815161525903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Conversion Rate Pure' datatype='real' default-format='p0.0%' name='[Calculation_6170815163232541]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5240821114941248]/[Last Unique Visitors Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Transaction CPV Not Pure' datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Calculation_7940815161426556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Last Unique Visitors Not Pure]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column caption='Contribution per Transaction Pure' datatype='real' default-format='C1033%' name='[Calculation_9100815150524583]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6790821115212496]/[Calculation_5240821114941248]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Contribution per Transaction Not Pure' datatype='real' default-format='C1033%' name='[Contribution per Transaction Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]/[Calculation1]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3150815160754245]' derivation='User' name='[usr:Calculation_3150815160754245:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6030815161525903]' derivation='User' name='[usr:Calculation_6030815161525903:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6170815163232541]' derivation='User' name='[usr:Calculation_6170815163232541:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_7940815161426556]' derivation='User' name='[usr:Calculation_7940815161426556:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_9100815150524583]' derivation='User' name='[usr:Calculation_9100815150524583:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation_6790821115212496]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation_5240821114941248]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Contribution per Transaction Not Pure]' derivation='User' name='[usr:Contribution per Transaction Not Pure:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[vertica.41410.553173333334].[Calculation2]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
              <table-calc field='[vertica.41410.553173333334].[Calculation1]' level-break='[vertica.41410.553173333334].[Calculation_8180830174726291]' ordering-type='Field'>
                <order field='[vertica.41410.553173333334].[tqr:Date:ok]' />
                <order field='[vertica.41410.553173333334].[Calculation_8180830174726291]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_3150815160754245:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation1:qk:1]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Contribution per Transaction Not Pure:qk:8]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation2:qk:2]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_7940815161426556:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6170815163232541:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation3:qk:6]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_9100815150524583:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation4:qk:5]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Calculation_6030815161525903:qk:5]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='height-header' value='10' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='false' />
            <format attr='display' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Ref Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Blank' datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Ref Day Label' datatype='string' name='[Calculation_4620830171209702]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Site] + &quot;&apos;s Report as of:&quot;' scope-isolation='false' />
            </column>
            <column caption='Ref Day' datatype='date' name='[Calculation_7620829182138850]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Reference Day&quot; THEN [Parameters].[Parameter 2] ELSE TODAY()-1 END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4620830171209702]' derivation='None' name='[none:Calculation_4620830171209702:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7620829182138850]' derivation='None' name='[none:Calculation_7620829182138850:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[vertica.41410.553173333334].[sum:Blank:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_4620830171209702:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[vertica.41410.553173333334].[none:Calculation_7620829182138850:ok]' value='normal' />
            <format attr='text-align' field='[vertica.41410.553173333334].[none:Calculation_7620829182138850:ok]' value='left' />
            <format attr='font-size' field='[vertica.41410.553173333334].[none:Calculation_7620829182138850:ok]' value='9' />
            <format attr='font-weight' field='[vertica.41410.553173333334].[none:Calculation_4620830171209702:nk]' value='normal' />
            <format attr='vertical-align' field='[vertica.41410.553173333334].[none:Calculation_7620829182138850:ok]' value='center' />
            <format attr='font-size' field='[vertica.41410.553173333334].[none:Calculation_4620830171209702:nk]' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='5' />
                <format attr='maxwidth' value='5' />
                <format attr='minheight' value='20' />
                <format attr='maxheight' value='20' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41410.553173333334].[none:Calculation_4620830171209702:nk] / [vertica.41410.553173333334].[none:Calculation_7620829182138850:ok])</rows>
        <cols>[vertica.41410.553173333334].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Transaction CPV % Difference'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='Transaction CPV % Difference' datatype='real' default-format='p0.00%' name='[Calculation_6410816161218463]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_7940815161426556]-[Calculation_6030815161525903])/[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6410816161218463]' derivation='User' name='[usr:Calculation_6410816161218463:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation2]' level-address='[transaction_data__calculations_for_graphs].[Date]' level-break='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field'>
                <order field='[transaction_data__calculations_for_graphs].[qr:Date:ok]' />
                <order field='[transaction_data__calculations_for_graphs].[Date]' />
              </table-calc>
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_6790821115212496]' level-address='[transaction_data__calculations_for_graphs].[Date]' level-break='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field'>
                <order field='[transaction_data__calculations_for_graphs].[qr:Date:ok]' />
                <order field='[transaction_data__calculations_for_graphs].[Date]' />
              </table-calc>
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_6030815161525903]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='14' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[transaction_data__calculations_for_graphs].[usr:Calculation_6410816161218463:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[transaction_data__calculations_for_graphs].[usr:Calculation_6410816161218463:qk:3]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Calculation_6410816161218463:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Calculation_6410816161218463:qk:3]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([transaction_data__calculations_for_graphs].[usr:Calculation_6410816161218463:qk:3] + [transaction_data__calculations_for_graphs].[usr:Calculation_6410816161218463:qk:3])</rows>
        <cols>([transaction_data__calculations_for_graphs].[qr:Date:ok] * [transaction_data__calculations_for_graphs].[none:Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Transaction CPV Difference'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.000;(&quot;$&quot;#,##0.000)' name='[Transaction CPV Delta]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7940815161426556]-[Calculation_6030815161525903]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Transaction CPV Delta]' derivation='User' name='[usr:Transaction CPV Delta:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_7940815161426556]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation2]' level-address='[transaction_data__calculations_for_graphs].[Date]' level-break='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field'>
                <order field='[transaction_data__calculations_for_graphs].[qr:Date:ok]' />
                <order field='[transaction_data__calculations_for_graphs].[Date]' />
              </table-calc>
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_6790821115212496]' level-address='[transaction_data__calculations_for_graphs].[Date]' level-break='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field'>
                <order field='[transaction_data__calculations_for_graphs].[qr:Date:ok]' />
                <order field='[transaction_data__calculations_for_graphs].[Date]' />
              </table-calc>
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_6030815161525903]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='14' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2]' scope='rows' value='false' />
            <format attr='display' class='0' field='[transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2] + [transaction_data__calculations_for_graphs].[usr:Transaction CPV Delta:qk:2])</rows>
        <cols>([transaction_data__calculations_for_graphs].[qr:Date:ok] * [transaction_data__calculations_for_graphs].[none:Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Transaction Contribution Difference'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_graphs' name='transaction_data__calculations_for_graphs' />
          </datasources>
          <datasource-dependencies datasource='transaction_data__calculations_for_graphs'>
            <column caption='Transaction Contribution Difference' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8040816160013695]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]-[Calculation4]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8040816160013695]' derivation='User' name='[usr:Calculation_8040816160013695:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation2]' level-address='[transaction_data__calculations_for_graphs].[Date]' level-break='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field'>
                <order field='[transaction_data__calculations_for_graphs].[tqr:Date:qk]' />
                <order field='[transaction_data__calculations_for_graphs].[Date]' />
              </table-calc>
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation4]' ordering-type='Rows' />
              <table-calc field='[transaction_data__calculations_for_graphs].[Calculation_6790821115212496]' level-address='[transaction_data__calculations_for_graphs].[Date]' level-break='[transaction_data__calculations_for_graphs].[Date]' ordering-type='Field'>
                <order field='[transaction_data__calculations_for_graphs].[tqr:Date:qk]' />
                <order field='[transaction_data__calculations_for_graphs].[Date]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[transaction_data__calculations_for_graphs].[none:Date:qk]' filter-group='14' included-values='all'>
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[transaction_data__calculations_for_graphs].[none:Site:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Orbitz&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Site:nk]</column>
            <column>[transaction_data__calculations_for_graphs].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[transaction_data__calculations_for_graphs].[usr:Calculation_8040816160013695:qk:3]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[transaction_data__calculations_for_graphs].[usr:Calculation_8040816160013695:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[transaction_data__calculations_for_graphs].[none:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[transaction_data__calculations_for_graphs].[none:Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[transaction_data__calculations_for_graphs].[none:Date:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Calculation_8040816160013695:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[transaction_data__calculations_for_graphs].[usr:Calculation_8040816160013695:qk:3]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([transaction_data__calculations_for_graphs].[usr:Calculation_8040816160013695:qk:3] + [transaction_data__calculations_for_graphs].[usr:Calculation_8040816160013695:qk:3])</rows>
        <cols>([transaction_data__calculations_for_graphs].[tqr:Date:ok] * [transaction_data__calculations_for_graphs].[none:Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='UV Cars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Not Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Last Unique Visitors Not Pure]' derivation='User' name='[usr:Last Unique Visitors Not Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Normalization Factor]' derivation='User' name='[usr:Normalization Factor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Pure Group Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pure Group Type:nk]' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[none:Pure Group Type:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
              <lod column='[vertica.41410.553173333334].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='UV Flights'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Flights</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Not Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Last Unique Visitors Not Pure]' derivation='User' name='[usr:Last Unique Visitors Not Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Normalization Factor]' derivation='User' name='[usr:Normalization Factor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Pure Group Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pure Group Type:nk]' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[none:Pure Group Type:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
              <lod column='[vertica.41410.553173333334].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='UV Hotels'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Not Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Last Unique Visitors Not Pure]' derivation='User' name='[usr:Last Unique Visitors Not Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Normalization Factor]' derivation='User' name='[usr:Normalization Factor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Pure Group Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pure Group Type:nk]' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[none:Pure Group Type:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
              <lod column='[vertica.41410.553173333334].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='UV Packages'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Packages</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Not Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Last Unique Visitors Not Pure]' derivation='User' name='[usr:Last Unique Visitors Not Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Normalization Factor]' derivation='User' name='[usr:Normalization Factor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Pure Group Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pure Group Type:nk]' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[none:Pure Group Type:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
              <lod column='[vertica.41410.553173333334].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Unique Visitors'>
      <table>
        <view>
          <datasources>
            <datasource caption='for_tables' name='vertica.41410.553173333334' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41410.553173333334'>
            <column caption='Month' datatype='string' name='[Calculation_8180830174726291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN &apos;Month&apos; THEN [Calculation_7050830184752473]&#13;&#10;    WHEN &apos;Quarter&apos; THEN &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Keep Date' datatype='boolean' name='[Calculation_8450829182739988]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date] &lt;= [Calculation_7620829182138850]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last Unique Visitors Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Not Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last Unique Visitors Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX(IF [Calculation_0210829182311913] THEN [Unique Visitors Pure] END)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Normalization Factor]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Last Unique Visitors Not Pure]/[Last Unique Visitors Pure]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Pure Group Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segmentation Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Total' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_8180830174726291]' derivation='None' name='[none:Calculation_8180830174726291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8450829182739988]' derivation='None' name='[none:Calculation_8450829182739988:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pure Group Type]' derivation='None' name='[none:Pure Group Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segmentation Type]' derivation='None' name='[none:Segmentation Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Last Unique Visitors Not Pure]' derivation='User' name='[usr:Last Unique Visitors Not Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Unique Visitors Pure]' derivation='User' name='[usr:Last Unique Visitors Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Normalization Factor]' derivation='User' name='[usr:Normalization Factor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41410.553173333334].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41410.553173333334].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Not Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Last Unique Visitors Pure:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41410.553173333334].[usr:Normalization Factor:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Pure Group Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pure Group Type:nk]' />
              <groupfilter function='member' level='[none:Pure Group Type:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41410.553173333334].[none:Segmentation Type:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Segmentation Type:nk]' member='&quot;Low Value&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41410.553173333334].[none:Date:qk]</column>
            <column>[vertica.41410.553173333334].[none:Site:nk]</column>
            <column>[vertica.41410.553173333334].[none:Pure Group Type:nk]</column>
            <column>[vertica.41410.553173333334].[:Measure Names]</column>
            <column>[vertica.41410.553173333334].[none:Segmentation Type:nk]</column>
            <column>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41410.553173333334].[:Measure Names]' value='176' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#ffffff' />
            <format attr='background-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.41410.553173333334].[tqr:Date:ok]' value='*yyyy\ \Qq' />
            <format attr='text-align' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='center' />
            <format attr='font-weight' field='[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41410.553173333334].[Multiple Values]' />
              <lod column='[vertica.41410.553173333334].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41410.553173333334].[:Measure Names]</rows>
        <cols>([vertica.41410.553173333334].[tqr:Date:ok] / [vertica.41410.553173333334].[none:Calculation_8180830174726291:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='30 Day CPV Metrics'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='10' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='84000' x='0' y='5000'>
                <zone h='47500' id='1' name='30 Day Total CPV' show-title='true' w='42000' x='0' y='5000'>
                </zone>
                <zone h='47500' id='7' name='30 Day Transaction Contribution' show-title='true' w='42000' x='42000' y='5000'>
                </zone>
                <zone h='47500' id='8' name='30 Day Visitor Mix' show-title='true' w='42000' x='0' y='52500'>
                </zone>
                <zone h='47500' id='9' name='30 Day Transaction CPV' show-title='true' w='42000' x='42000' y='52500'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='16' is-fixed='true' type='layout-basic' w='16000' x='84000' y='5000'>
                <zone h='47500' id='4' param='vert' type='layout-flow' w='16000' x='84000' y='5000'>
                  <zone h='8000' id='19' name='30 Day Transaction Contribution' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='filter' w='16000' x='84000' y='5000'>
                  </zone>
                  <zone h='8125' id='18' name='30 Day Total CPV' param='[transaction_data__calculations_for_graphs].[none:Date:qk]' type='filter' w='16000' x='84000' y='13000'>
                  </zone>
                  <zone h='14625' id='6' name='30 Day Total CPV' param='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' type='color' w='16000' x='84000' y='21125'>
                  </zone>
                  <zone h='16750' id='15' type='empty' w='16000' x='84000' y='35750'>
                  </zone>
                </zone>
                <zone h='47500' id='17' param='vert' type='layout-flow' w='16000' x='84000' y='52500'>
                  <zone h='7750' id='12' name='30 Day Transaction CPV' param='[transaction_data__calculations_for_graphs].[:Measure Names]' type='color' w='16000' x='84000' y='52500'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='30 Day CPV Metrics by Site'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='84000' x='0' y='5000'>
                <zone h='47500' id='1' name='30 Day Total Contribution by Site' show-title='true' w='42000' x='0' y='5000'>
                </zone>
                <zone h='47500' id='7' name='30 Day Total CPV by Site' show-title='true' w='42000' x='42000' y='5000'>
                </zone>
                <zone h='47500' id='8' name='30 Day % HV Unique Visitors' show-title='true' w='42000' x='0' y='52500'>
                </zone>
                <zone h='47500' id='9' name='30 Day % HV Transaction Contribution' show-title='true' w='42000' x='42000' y='52500'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='16' is-fixed='true' type='layout-basic' w='16000' x='84000' y='5000'>
                <zone h='95000' id='20' type='layout-basic' w='16000' x='84000' y='5000'>
                  <zone h='95000' id='4' param='vert' type='layout-flow' w='16000' x='84000' y='5000'>
                    <zone h='8125' id='10' name='30 Day Total CPV by Site' param='[transaction_data__calculations_for_graphs].[none:Date:qk]' type='filter' w='16000' x='84000' y='5000'>
                    </zone>
                    <zone h='10250' id='17' name='30 Day Total CPV by Site' param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' w='16000' x='84000' y='13125'>
                    </zone>
                    <zone h='7750' id='6' name='30 Day Total Contribution by Site' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='color' w='16000' x='84000' y='23375'>
                    </zone>
                    <zone h='68375' id='19' type='empty' w='16000' x='84000' y='31125'>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='External Total CPV Statement'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total CPV Statement: Flight Path Visitors, All Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='left' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_11' value='top' />
          <format attr='vertical-align' id='dash-text_13' value='top' />
          <format attr='vertical-align' id='dash-text_12' value='top' />
          <format attr='border-style' id='dash-text_12' value='none' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='2200' minheight='800' minwidth='2200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='27' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='26' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='23' type='layout-basic' w='99818' x='0' y='5000'>
                <zone h='4000' id='10' param='vert' type='layout-flow' w='99818' x='0' y='5000'>
                  <zone fixed-size='61' h='4000' id='22' is-fixed='true' name='Ref Day' w='99818' x='0' y='5000'>
                  </zone>
                </zone>
                <zone h='91000' id='24' param='vert' type='layout-flow' w='99818' x='0' y='9000'>
                  <zone fixed-size='1946' h='91000' id='5' is-fixed='true' param='horz' type='layout-flow' w='99818' x='0' y='9000'>
                    <zone h='91000' id='3' type='layout-basic' w='99818' x='0' y='9000'>
                      <zone h='13875' id='1' name='Unique Visitors' w='93704' x='6114' y='9000'>
                      </zone>
                      <zone h='27125' id='7' name='Pure vs Not Pure' w='93704' x='6114' y='22875'>
                      </zone>
                      <zone h='46000' id='8' name='Difference' w='93704' x='6114' y='50000'>
                      </zone>
                      <zone h='50000' id='11' type='text' w='6114' x='0' y='50000'>
                        <formatted-text>
                          <run>Difference</run>
                        </formatted-text>
                      </zone>
                      <zone h='12875' id='12' type='text' w='6114' x='0' y='22875'>
                        <formatted-text>
                          <run>Not Pure</run>
                        </formatted-text>
                      </zone>
                      <zone h='14250' id='13' type='text' w='6114' x='0' y='35750'>
                        <formatted-text>
                          <run>Normalized Pure</run>
                        </formatted-text>
                      </zone>
                      <zone h='13875' id='14' type='text' w='6114' x='0' y='9000'>
                      </zone>
                      <zone h='4000' id='28' type='text' w='93704' x='6114' y='96000'>
                        <formatted-text>
                          <run bold='true' fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>NOTE: </run>
                          <run fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>Q3 2013 includes only July and August 2013 because pure group (for measurement) was removed for the rest of the quarter.</run>
                        </formatted-text>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Quarterly Transaction CPV by Product'>
      <style>
      </style>
      <size maxheight='1200' maxwidth='1300' minheight='1200' minwidth='1300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3332' id='9' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96668' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3332'>
              <zone h='96668' id='3' type='layout-basic' w='87692' x='0' y='3332'>
                <zone h='34220' id='1' name='Transaction Contribution Difference' show-title='true' w='87692' x='0' y='3332'>
                </zone>
                <zone h='30161' id='7' name='Transaction CPV Difference' show-title='true' w='87692' x='0' y='37552'>
                </zone>
                <zone h='32287' id='8' name='Transaction CPV % Difference' show-title='true' w='87692' x='0' y='67713'>
                </zone>
              </zone>
              <zone fixed-size='160' h='96668' id='4' is-fixed='true' param='vert' type='layout-flow' w='12308' x='87692' y='3332'>
                <zone h='5333' id='12' name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='filter' w='12308' x='87692' y='3332'>
                </zone>
                <zone h='6833' id='11' name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' w='12308' x='87692' y='8665'>
                </zone>
                <zone h='8499' id='6' name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' type='color' w='12308' x='87692' y='15498'>
                </zone>
                <zone h='5416' id='13' name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Date:qk]' type='filter' w='12308' x='87692' y='23997'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total CPV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total CPV Statement: Flight Path Visitors, All Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='left' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_11' value='top' />
          <format attr='vertical-align' id='dash-text_13' value='top' />
          <format attr='vertical-align' id='dash-text_12' value='top' />
          <format attr='border-style' id='dash-text_12' value='none' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='2200' minheight='800' minwidth='2200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='27' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='26' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='23' type='layout-basic' w='91045' x='0' y='5000'>
                <zone h='4000' id='10' param='vert' type='layout-flow' w='91045' x='0' y='5000'>
                  <zone fixed-size='61' h='4000' id='22' is-fixed='true' name='Ref Day' w='91045' x='0' y='5000'>
                  </zone>
                </zone>
                <zone h='91000' id='24' param='vert' type='layout-flow' w='91045' x='0' y='9000'>
                  <zone fixed-size='1946' h='91000' id='5' is-fixed='true' param='horz' type='layout-flow' w='91045' x='0' y='9000'>
                    <zone h='91000' id='3' type='layout-basic' w='91045' x='0' y='9000'>
                      <zone h='13875' id='1' name='Unique Visitors' w='85468' x='5577' y='9000'>
                      </zone>
                      <zone h='27125' id='7' name='Pure vs Not Pure' w='85468' x='5577' y='22875'>
                      </zone>
                      <zone h='46000' id='8' name='Difference' w='85468' x='5577' y='50000'>
                      </zone>
                      <zone h='50000' id='11' type='text' w='5577' x='0' y='50000'>
                        <formatted-text>
                          <run>Difference</run>
                        </formatted-text>
                      </zone>
                      <zone h='12875' id='12' type='text' w='5577' x='0' y='22875'>
                        <formatted-text>
                          <run>Not Pure</run>
                        </formatted-text>
                      </zone>
                      <zone h='14250' id='13' type='text' w='5577' x='0' y='35750'>
                        <formatted-text>
                          <run>Normalized Pure</run>
                        </formatted-text>
                      </zone>
                      <zone h='13875' id='14' type='text' w='5577' x='0' y='9000'>
                      </zone>
                      <zone h='4000' id='29' type='text' w='85468' x='5577' y='96000'>
                        <formatted-text>
                          <run bold='true' fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>NOTE:</run>
                          <run fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'> Q3 2013 includes only July and August 2013 because pure group (for measurement) was removed for the rest of the quarter.</run>
                        </formatted-text>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='197' h='95000' id='15' is-fixed='true' param='vert' type='layout-flow' w='8955' x='91045' y='5000'>
                <zone h='8000' id='17' name='Pure vs Not Pure' param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' w='8955' x='91045' y='5000'>
                </zone>
                <zone h='10250' id='18' name='Pure vs Not Pure' param='[vertica.41410.553173333334].[none:Segmentation Type:nk]' type='filter' w='8955' x='91045' y='13000'>
                </zone>
                <zone h='8125' id='19' name='Pure vs Not Pure' param='[vertica.41410.553173333334].[none:Date:qk]' type='filter' w='8955' x='91045' y='23250'>
                </zone>
                <zone h='6125' id='20' param='[Parameters].[Parameter 2]' type='paramctrl' w='8955' x='91045' y='31375'>
                </zone>
                <zone h='6500' id='21' param='[Parameters].[Parameter 1]' type='paramctrl' w='8955' x='91045' y='37500'>
                </zone>
                <zone h='6500' id='28' param='[Parameters].[Parameter 3]' type='paramctrl' w='8955' x='91045' y='44000'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total CPV by Product'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_21' value='top' />
          <format attr='vertical-align' id='dash-text_22' value='top' />
          <format attr='vertical-align' id='dash-text_26' value='top' />
          <format attr='vertical-align' id='dash-text_27' value='top' />
          <format attr='vertical-align' id='dash-text_35' value='top' />
          <format attr='vertical-align' id='dash-text_34' value='top' />
          <format attr='vertical-align' id='dash-text_28' value='center' />
          <format attr='vertical-align' id='dash-text_31' value='top' />
          <format attr='vertical-align' id='dash-text_32' value='top' />
          <format attr='vertical-align' id='dash-text_36' value='center' />
        </style-rule>
      </style>
      <size maxheight='2400' maxwidth='2600' minheight='2400' minwidth='2600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='1668' id='9' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='1209' id='37' name='Ref Day' w='100000' x='0' y='1668'>
              <layout-cache fixed-size-h='21' type-h='fixed' type-w='fixed' />
            </zone>
            <zone h='97123' id='7' param='horz' type='layout-flow' w='100000' x='0' y='2877'>
              <zone h='97123' id='5' type='layout-basic' w='93846' x='0' y='2877'>
                <zone h='5637' id='1' name='UV Flights' show-title='true' w='88961' x='4885' y='2877'>
                </zone>
                <zone h='11332' id='3' name='Diff Flights' w='88961' x='4885' y='17280'>
                </zone>
                <zone h='8766' id='4' name='P v NP Flights' w='88961' x='4885' y='8514'>
                </zone>
                <zone h='4384' id='21' type='text' w='4885' x='0' y='8514'>
                  <formatted-text>
                    <run>Not Pure</run>
                  </formatted-text>
                </zone>
                <zone h='4382' id='22' type='text' w='4885' x='0' y='12898'>
                  <formatted-text>
                    <run>Normalized Pure</run>
                  </formatted-text>
                </zone>
                <zone h='5637' id='23' type='empty' w='4885' x='0' y='2877'>
                </zone>
                <zone h='10783' id='24' type='text' w='4885' x='0' y='17280'>
                  <formatted-text>
                    <run>Difference</run>
                  </formatted-text>
                </zone>
                <zone h='6312' id='25' type='empty' w='4885' x='0' y='28063'>
                </zone>
                <zone h='4292' id='26' type='text' w='4885' x='0' y='34375'>
                  <formatted-text>
                    <run>Not Pure</run>
                  </formatted-text>
                </zone>
                <zone h='4666' id='27' type='text' w='4885' x='0' y='38667'>
                  <formatted-text>
                    <run>Normalized Pure</run>
                  </formatted-text>
                </zone>
                <zone h='4125' id='28' type='text' w='4885' x='0' y='43333'>
                  <formatted-text>
                    <run>Difference</run>
                  </formatted-text>
                </zone>
                <zone h='6042' id='29' type='empty' w='4885' x='0' y='47458'>
                </zone>
                <zone h='5667' id='30' type='empty' w='4885' x='0' y='67458'>
                </zone>
                <zone h='3946' id='31' type='text' w='4885' x='0' y='53500'>
                  <formatted-text>
                    <run>Not Pure</run>
                  </formatted-text>
                </zone>
                <zone h='4404' id='32' type='text' w='4885' x='0' y='57446'>
                  <formatted-text>
                    <run>Normalized Pure</run>
                  </formatted-text>
                </zone>
                <zone h='5608' id='33' type='text' w='4885' x='0' y='61850'>
                  <formatted-text>
                    <run>Difference</run>
                  </formatted-text>
                </zone>
                <zone h='4261' id='34' type='text' w='4885' x='0' y='73125'>
                  <formatted-text>
                    <run>Not Pure</run>
                  </formatted-text>
                </zone>
                <zone h='4342' id='35' type='text' w='4885' x='0' y='77386'>
                  <formatted-text>
                    <run>Normalized Pure</run>
                  </formatted-text>
                </zone>
                <zone h='5064' id='36' type='text' w='4885' x='0' y='81728'>
                  <formatted-text>
                    <run>Difference</run>
                  </formatted-text>
                </zone>
                <zone h='5763' id='38' name='UV Hotels' show-title='true' w='88961' x='4885' y='28612'>
                </zone>
                <zone h='8958' id='40' name='P v NP Hotels' w='88961' x='4885' y='34375'>
                </zone>
                <zone h='4114' id='42' name='Diff Hotels' w='88961' x='4885' y='43333'>
                </zone>
                <zone h='6053' id='43' name='UV Packages' show-title='true' w='88961' x='4885' y='47447'>
                </zone>
                <zone h='8833' id='44' name='P v NP Packages' w='88961' x='4885' y='53500'>
                </zone>
                <zone h='5115' id='45' name='Diff Packages' w='88961' x='4885' y='62333'>
                </zone>
                <zone h='5677' id='46' name='UV Cars' show-title='true' w='88961' x='4885' y='67448'>
                </zone>
                <zone h='9542' id='47' name='P vs NP Cars' w='88961' x='4885' y='73125'>
                </zone>
                <zone h='15750' id='48' name='Diff Cars' w='88961' x='4885' y='82667'>
                </zone>
                <zone h='13208' id='50' type='empty' w='4885' x='0' y='86792'>
                </zone>
                <zone h='1583' id='51' type='text' w='88961' x='4885' y='98417'>
                  <formatted-text>
                    <run bold='true' fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>NOTE:</run>
                    <run fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'> Q3 2013 includes only July and August 2013 because pure group (for measurement) was removed for the rest of the quarter.</run>
                  </formatted-text>
                </zone>
              </zone>
              <zone fixed-size='160' h='97123' id='6' is-fixed='true' param='vert' type='layout-flow' w='6154' x='93846' y='2877'>
                <zone h='2667' id='8' name='P v NP Flights' param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' w='6154' x='93846' y='2877'>
                </zone>
                <zone h='2709' id='20' name='P v NP Flights' param='[vertica.41410.553173333334].[none:Date:qk]' type='filter' w='6154' x='93846' y='5544'>
                </zone>
                <zone h='2167' id='39' param='[Parameters].[Parameter 3]' type='paramctrl' w='6154' x='93846' y='8253'>
                </zone>
                <zone h='3417' id='49' name='P v NP Flights' param='[vertica.41410.553173333334].[none:Segmentation Type:nk]' type='filter' w='6154' x='93846' y='10420'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Ref Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[none:Calculation_4620830171209702:nk]</field>
          <field>[vertica.41410.553173333334].[none:Segmentation Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Unique Visitors'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Pure Group Type:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card param='[vertica.41410.553173333334].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41410.553173333334].[none:Segmentation Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[my:Date:ok]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8450829182739988:nk]</field>
          <field>[vertica.41410.553173333334].[none:Date:qk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[none:Pure Group Type:nk]</field>
          <field>[vertica.41410.553173333334].[none:Segmentation Type:nk]</field>
          <field>[vertica.41410.553173333334].[none:Site:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pure vs Not Pure'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' />
            <card param='[vertica.41410.553173333334].[none:Segmentation Type:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[none:Segmentation Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Difference'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Total CPV'>
      <active id='29' />
      <zones>
        <zone forceUpdate='true' name='' type='text'>
          <formatted-text>
            <run>Difference</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' name='' type='text'>
          <formatted-text>
            <run bold='true' fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>NOTE:</run>
            <run fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'> Q3 2013 includes only July and August 2013 because pure group (for measurement) was removed for the rest of the quarter.</run>
          </formatted-text>
        </zone>
        <zone mode='radiolist' name='Pure vs Not Pure' param='[vertica.41410.553173333334].[none:Site:nk]' show-all='false' type='filter'>
        </zone>
        <zone mode='radiolist' name='Pure vs Not Pure' param='[vertica.41410.553173333334].[none:Segmentation Type:nk]' show-all='false' type='filter'>
        </zone>
        <zone name='Pure vs Not Pure' param='[vertica.41410.553173333334].[none:Date:qk]' show-null-ctrls='false' type='filter'>
        </zone>
        <zone mode='datetime' name='' param='[Parameters].[Parameter 2]' type='paramctrl'>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl'>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='UV Flights'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='P v NP Flights'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Diff Flights'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='UV Hotels'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='P v NP Hotels'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' />
            <card param='[vertica.41410.553173333334].[none:Product Category Type:nk]' type='filter' />
            <card param='[vertica.41410.553173333334].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Calculation_7620829182138850:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Diff Hotels'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Product Category Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='UV Packages'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='P v NP Packages'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' />
            <card param='[vertica.41410.553173333334].[none:Product Category Type:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card param='[vertica.41410.553173333334].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Diff Packages'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Product Category Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='UV Cars'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='P vs NP Cars'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Site:nk]' type='filter' />
            <card param='[vertica.41410.553173333334].[none:Product Category Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Diff Cars'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41410.553173333334].[none:Product Category Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41410.553173333334].[:Measure Names]</field>
          <field>[vertica.41410.553173333334].[none:Calculation_8180830174726291:nk]</field>
          <field>[vertica.41410.553173333334].[none:Product Category Type:nk]</field>
          <field>[vertica.41410.553173333334].[tmn:Date:ok]</field>
          <field>[vertica.41410.553173333334].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Total CPV by Product'>
      <active id='51' />
      <zones>
        <zone forceUpdate='true' name='' type='text'>
          <formatted-text>
            <run>Not Pure</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' name='' type='text'>
          <formatted-text>
            <run bold='true' fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>NOTE:</run>
            <run fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'> Q3 2013 includes only July and August 2013 because pure group (for measurement) was removed for the rest of the quarter.</run>
          </formatted-text>
        </zone>
        <zone mode='radiolist' name='P v NP Flights' param='[vertica.41410.553173333334].[none:Site:nk]' show-all='false' type='filter'>
        </zone>
        <zone name='P v NP Flights' param='[vertica.41410.553173333334].[none:Date:qk]' show-null-ctrls='false' type='filter'>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl'>
        </zone>
        <zone mode='radiolist' name='P v NP Flights' param='[vertica.41410.553173333334].[none:Segmentation Type:nk]' show-all='false' type='filter'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Transaction Contribution Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Date:qk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[tqr:Date:qk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Transaction CPV Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Date:qk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Transaction CPV % Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Date:qk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Quarterly Transaction CPV by Product'>
      <active id='13' />
      <zones>
        <zone name='Transaction Contribution Difference'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Transaction CPV Difference'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Transaction CPV % Difference'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='radiolist' name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' show-all='false' type='filter'>
        </zone>
        <zone mode='radiolist' name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' show-all='false' type='filter'>
        </zone>
        <zone name='Transaction Contribution Difference' pane-specification-id='3' param='[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]' type='color'>
        </zone>
        <zone name='Transaction Contribution Difference' param='[transaction_data__calculations_for_graphs].[none:Date:qk]' show-null-ctrls='false' type='filter'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day Total CPV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' type='filter' />
            <card param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' />
            <card param='[transaction_data__calculations_for_graphs].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day Transaction Contribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' type='filter' />
            <card param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Product Category Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day Visitor Mix'>
      <cards>
        <edge name='left'>
          <strip size='275'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day Transaction CPV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[transaction_data__calculations_for_graphs].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='30 Day CPV Metrics'>
      <zones>
        <zone name='30 Day Total CPV'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day Transaction Contribution'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day Visitor Mix'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day Transaction CPV'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='radiolist' name='30 Day Transaction Contribution' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' show-all='false' type='filter'>
        </zone>
        <zone name='30 Day Total CPV' param='[transaction_data__calculations_for_graphs].[none:Date:qk]' show-null-ctrls='false' type='filter'>
        </zone>
        <zone name='30 Day Total CPV' pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]' type='color'>
        </zone>
        <zone name='30 Day Transaction CPV' pane-specification-id='6' param='[transaction_data__calculations_for_graphs].[:Measure Names]' type='color'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day Total Contribution by Site'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Calculation_4590821170423927:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Date:qk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day Total CPV by Site'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' type='filter' />
            <card param='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day % HV Unique Visitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[usr:Calculation_8020925165403569:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='30 Day % HV Transaction Contribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[transaction_data__calculations_for_graphs].[none:Pure Group Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[none:Site:nk]</field>
          <field>[transaction_data__calculations_for_graphs].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='30 Day CPV Metrics by Site'>
      <active id='7' />
      <zones>
        <zone name='30 Day Total Contribution by Site'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day Total CPV by Site'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day % HV Unique Visitors'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day % HV Transaction Contribution'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='30 Day Total CPV by Site' param='[transaction_data__calculations_for_graphs].[none:Date:qk]' show-null-ctrls='false' type='filter'>
        </zone>
        <zone mode='radiolist' name='30 Day Total CPV by Site' param='[transaction_data__calculations_for_graphs].[none:Segmentation Type:nk]' show-all='false' type='filter'>
        </zone>
        <zone name='30 Day Total Contribution by Site' pane-specification-id='5' param='[transaction_data__calculations_for_graphs].[none:Site:nk]' type='color'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='External Total CPV Statement'>
      <active id='28' />
      <zones>
        <zone forceUpdate='true' name='' type='text'>
          <formatted-text>
            <run>Difference</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' name='' type='text'>
          <formatted-text>
            <run bold='true' fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>NOTE: </run>
            <run fontcolor='#1a1a1a' fontname='ArialMT' fontsize='10'>Q3 2013 includes only July and August 2013 because pure group (for measurement) was removed for the rest of the quarter.</run>
          </formatted-text>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='24' name='Ref Day' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='104' name='Unique Visitors' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Pure vs Not Pure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Difference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total CPV' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='UV Flights' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='P v NP Flights' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diff Flights' width='192'>
      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
      /weVvDaBPUv/gQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='UV Hotels' width='192'>
      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
      yi3q+ejakwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='P v NP Hotels' width='192'>
      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
      fn7+u7Tp/wfsr6iaMEO4ZQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='84' name='Diff Hotels' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='UV Packages' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='P v NP Packages' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Diff Packages' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='104' name='UV Cars' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='P vs NP Cars' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Diff Cars' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total CPV by Product' width='192'>
      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
      AdsAcm7IbIat1IBtAFZq06aVcxqwDSDnhsxm2EoN2AZgpTZtWjmnAdsAcm7IbIat1IBtAFZq
      06aVcxqwDSDnhsxm2EoN2AZgpTZtWjmnAdsAcm7IbIat1IBtAFZq06aVcxqwDSDnhsxm2EoN
      2AZgpTZtWjmnAdsAcm7IbIat1IBtAFZq06aVcxqwDSDnhsxm2EoN2AZgpTZtWjmnAdsAcm7I
      bIat1IBtAFZq06aVcxqwDSDnhsxm2EoN2AZgpTZtWjmnAdsAcm7IbIat1IBtAFZq06aVcxqw
      DSDnhsxm2EoN2AZgpTZtWjmnAdsAcm7IbIat1IBtAFZq06aVcxqwDSDnhsxm2EoN2AZgpTZt
      WjmnAdsAcm7IbIat1IBtAFZq06aVcxqwDSDnhsxm2EoN2AZgpTZtWjmnAdsAcm7IbIat1IBt
      AFZq06aVcxrIGgO4ceOG6K+9vT31nv/jX/yOf/HHHv2Oxyc6Rj9OH6H4z0d/SzSKyc7XeUk2
      8mavk4z3+OsY4dfqmZhOTiuuZ7Vc8fPkKH/6tbLCAMLhcXnjjTfkrTffkl/98lfywfsfyLu/
      elc+/vhj+fDDD+XNN9+UxoYGGR0dlcXFJcm7mCcXLlyQ4uJi+d3vfider1c+/s+P5d1338W5
      70tdXZ38/j9+L4WFhfLHP/5RgsGg+P1+WVlZkdXVVfH5fKBxUZaXl9UrLy9PfcffeMzW1pZ6
      LS4uqhd/u4Rj1tbWZHt7W9bX16W+vl6dW19XL42Njeq7nZ0ddT5fS0tL6vi8vEsyPh6Wvr5+
      +fSTT/Z/5zGkvQIa+vu2tjaZnJyUK1euyvuQ45e//KWUlpTIJzivBP8pq7Pbuc8Lr8/r6nKt
      LGvX5iv+N/JFfvTfdLn4eXd3d//6+vcaXxp/pD81NSU//clP1XXn5ua07yGbzreuNx6rX5f/
      dT3EX4/vyYt+LI8LhUJSgrGsra1VOlP04q7PY3Td6ryRhs4f3/MYnsvztDEekqtXrmCOlEhz
      U9P+WPK4qqoqNT+i0ahkhQH09vbJX/7lX8pf/Plf4PXn8v5778l9990vL7zwgjz//PPyla98
      RWqqq8XtdktnZ5e88KMXMEmuQIj/kB/hvcvlkouY0F/9ylflmWeekfPnz8sjDz8iLc0t8tyz
      z+K3PPn6V78GmvfJY489Ju+8/Y78t//yX+WxRx+Tu++6W/71X/5Vvv1v/yZPP/20PPXUU1JV
      WSkXMdgvvfSS3HLLLfLNf/2mfOl//E95FMc7HA6JRCLyLOg+8fjj8jd//b/kH//P/5Vncd3u
      7m75wQ+elFu++U154P4H5KGHHpI7vnuHOJ3d8uMf/0S+BVo/+uGP1G+89u233Sb3ff9euefu
      uyHHj+RrX/u6tLW1SkNDo9xxxx1y1/fukvfef0+ee+45qcagUdZLly4pmg8//LA88/Qz8sgj
      j8hHf/iD/PD5H8qt375V0Sa9l8E7f3/55ZelorwC/D0rd+P7c4+ek298/RvqOB5Tj5vFT3/6
      U/mnb3xD0eSNiPLe9/375Dbw94tf/ELp88t//2XQvUd+9rOfKX1xEj2Pa95///2K7qOPPipP
      P/W0+sz3L734kjz80MNy6623gt/vyrnHzsk999yjxuDBBx6U7935PXnqySeVLF+H3Hd857vy
      +muvy8UvLirZb7/tdnUM+XzllVeko6NDXY86pcwct/vx2/ehv7feekvJzjF/FL89iTF48smn
      5DmMyROPP6Guw7EkPZfTiXH4lhqzO++8MzsMYGjIL/dCEDL0fSjpx6+/rhTIu/d7MAYqlArw
      eDy4W4zJz3/+czVh3sZg8PfOzk6lBD45KGhFRYW8+cabcu1avnz4wQdy5fIV+edv/JNS5oMP
      PKAMjIOsTxYq9KEHH1R038QE4J2ORkNat916mxpEKpwDOTE+gSfTeTVRHj/3OCbT1+V+GCsN
      jU8aTnB+dw4TnBORE4+8c+L8AROV17zrrrvkQVzvH778D2pQ7sek4B2WE6arqwt3/w/kD7//
      gzz/3POYEF/IB5CBE5+yVuNGQJrUydtvv61uELwRvPjii/Kd229Xk1Snx0n329/+Fk+RUsX7
      Qw8+pK7/z//0z0o2/tbS0qIM67//1V8pGm//7G3Q+Y6agH/7N38r77zzNgzgE7kTE5XGRJ1z
      AtHYSYMTjDJQ7p/85Cdy7tw5+cETT8iLL7yodH3LN2+RRyAX9cWbBnXGF6/x7//+7+qYO++4
      U43nj1//sbpp0fCp88dxg7nv3nvVubU1tfLqK6/Kq6++qq5DXT3x+A/kuzAc6vZJTHLeMPme
      eiFv7/361xjr99Xx/PwAjDOCp9lrr74GY3lY8Z0VTwA+hvnY4ouPRv0RyeXGxsaG+rzMRzge
      XzyWx/DxNTMzox6zfDzy0bYae/TzM4/hI5H/uZxZ4mNd/X6wTNCXBfHLA76PXwLxM18DAwPq
      KUSMQZqbm5uK3sLCgloC9ff1KWyyv7SJWwrpcmxtbavfuYxowDmffvqpzM7Oqscz5dN5jV/G
      kBfqQF/q6MsZ/XP8Ekhf0sXTo07Hxsb2l01KHiwjeR5/oz6KioqkCMtF6kvXBZc952Hoc3Oz
      WAJFJD8/X+lYP//69evakuPIkktfmujLMvKiL5H0Y1dXtKWmvkzi+5GREbV0pXw8XqetyxI/
      pjqdlRgdfb7oetLPpYz6d2rphOtwjPTlFz9nhQFYAaBuNo1UIDAT8HYSoDJeJ6l41DcdkgFF
      HZifhI5v9jWO0rcN4KQ1bl8vqzTw/wB+2CdDbSEqGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Transaction Contribution Difference' width='192'>
      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
      geD2/wE0CY8h+aSdPAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Transaction CPV Difference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transaction CPV % Difference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Quarterly Transaction CPV by Product' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='30 Day Total CPV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='30 Day Transaction Contribution' width='192'>
      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
      K4ErTgL/Dx4tRmYpfHjdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='30 Day Visitor Mix' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='30 Day Transaction CPV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='30 Day CPV Metrics' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAEXGSURBVHhe7b0HdyvHlS56/999d637
      ZuaG9e7MGtuznP1sOciWZEmWbY0tWbKlo5OTTuZhzjkHgABIggQB5gQikARAEIkkwIjvfrtB
      kAAIEg0QPIc66l6rF4BGdXV11f6qdu34X+Lx+HcPDw8faqfWB99GGvgv8tLQDq0HvqU9oAHg
      Wzrw2msnekADwBWhhL29fSwvO+B0LGN/bw9b21Es2e3Y8K+DbKrSyjWvD0tLS1hbXcHBwUHO
      lu/vH8DlXuE9i/Cv++B0uZT7132J74GNDURjMT53GTs7MaW+UDisXI/FduDzeXkl8Ww5pB0+
      3zrCoeDxNXnG0LAZbqcjZ3uuYgENAFdkVLzrflz76gZ++dZb0A/04s79r/Hxxx/j/ffegcth
      x+FhHP+4cQe//MXP8dFHf0RLQy2cThfs9iX4/X44HA7EottYXVtDJBxSyLa7V4df/vJXuHf3
      Llqam/Crt9/Fe+++i9/99m389rfv4ua1v2PQNIJ3fvc2/CR2IfCS8mrc+PJzdHT34+M/fsi6
      wnCvrCogkue9/c7vUfHyOYHgw8LiIqamp/HXTz+Hvr8HPr6DlPN5vWyPEy6CQg1QX+cQaAB4
      nb2f8mwhvqGRMfzoRz/Gy5IX+M53v0ui6scPfvRTdLU2KwD4z8++wCd/+hB9OiN+/dbPcePW
      Hbz/wYf45OM/4Z33PkBVRRl//wGT42PY2trGb955H88f3VdWlEAwjB/+5Gf4/NNPWfd/4NO/
      foKf/PjH+P37H+HuzWs42N+HrEIf/eUz/Pj738Nv3/kAP/r+d/HyZRneIoh+9atfExAf4f/7
      1+/weX9ESVkFfviDH+Cra1/iLf537/ZN3vMern35Bf78pz/jJz/9GUpfPOVKEr0iPZy9GRoA
      rsjwyEzpJrvyNon2/Xffwb9/5zsKAH7445+lAeCvnJXrm9rw/f/4Lon3Q/z8F2/hFz/9Ie7c
      e4jvfY+E++u3EAz4FQDIjF9dVqKwM2seL370s1/gg9+/h+bGes7OLvz8V7/D//yXf8bYsFHp
      BQHJT3/+S/zTP/0z/p//+l/xT//vf8e//tt38Iuf/QQPHn6NGyT2//Nv30VjTQVqGlrw2Scf
      c9WJ4rMvvsIvuDL9+Af/gdUVN+bmF/H5P67hxvUvyU6tX5Ee1gBwpQfCOjGFz//+D7z77nuo
      qSzDf37yGVmgP+OPf3gf3rWVNBboXbIxjx4+wP//1q/w1lu/xK9+8TMYDUb8279/D1/fvcGy
      hwo709TWRZD8HteuXcOTRw/xc5Zva6xT/pOzvKoeH33w3jFPv2h34u2338YXJOg/fvg+fv/B
      R/jNr39DNuqXuE7iHzIa8OGf/oIP338X//nxX/Hg7k2Fxblx5z7u3bmFX7KsrAC3b93Ejdt3
      8c5vfwOnffFK97u2AlyR4Ynt7BxvgvfIsoQjm+Tv7crmNXMTLLPs/v4eVsjvL5IPX+LZ0dWL
      n/70J5idmjh+I2VVIf8u9WxwY7vMfUIoeLKBlY126kZX2rDidiMSicDr8Sirxgb3F7I5lzqi
      29vwbwSUZzqdTuVeaZuXm/NQMHC8V7Bzo72wsKisBtoe4IoQ2JvcDBESyQoyYR0nH7/3Jr9q
      0d9NWwGK3qVahd+kHtAA8E0aLa2tRe+BNAAkeU1lk3T0qOSG6awnJ/9P3nuqHOuSZTmzvsz7
      jnQ9RX/BN6nCSxkfFR103tjkoo9k9VJOxLHZ6eRE2aaiOUUtcgyArZAfnR3tWLAvo7+nCyPj
      UzigNMFi7EdjSxtca+vKJkiIeY8yY3kZkTbMWkdRUV6OftOoor0Ukduq24FAaBPbLL8T3YTB
      oMfuQRyRgBddHW0YHbehq60Jbe2dMAyNwOdZw8ziclFf7E2r7MLjYxxBZHNbGR8ZF9Hgioxe
      fu9SCxzb2VV+71IXcHCwr5RZcS1jlVrn2aXl4zK7u7yfos9Dmdhi2zDqejHAuqPcQEd5XehD
      7t2KhLDsdCti0q3NMKZmJqHv6YdnI6TQzj5paDMcgN3hwuLCLALhLeU+oS2hM2nHqziOAXCw
      t0N5cz1lzM3o1Q2ivrEJkegOelrqMDw8hFpeL33+GB18CZ1eDx3LbO3sYWc7jKb6RjhcbsqX
      a1FTW4dHD26itXtAKd8zYEB7ewtie4cYM/bBbJvFumcFz6igeV7yEk3UULa1tWNuefVVvO83
      9hkXHx8XqkvLMGweQ9nzJ+js16O2ohxVVdWoqa6AzjSGzuZaVNa3QNfXiebWDjx5eIui0ho0
      cqKSsa2tb0BDTTVKqQRbdHnhXppGZ5+Rsn4/dL0dqGBd7VTalbwoQSVFubepza4tL0NrRyf1
      BvWoev6cCrRKtLa0YHzciqrKEty69wDVNVXoH+hDOSfSNk7CZSUlaOnswx4nzcs+jgEQ9HvQ
      XFfDF29HbW0tGls7EdvdQ3cTO4hEXc8X+OqLz1De2IHOxio095g4C9A+5GAXfd298HhWUV1d
      hZqaWjTUVaKRALrG8qXVjejobEd07wBzNjMam1ppO0JAsaxj1Qffih2V1fXYJpi04+weuOj4
      +Na9aGvphGNpFtc5Ls9p8tDa3AndQCca6+tQXlmJh/du4yYVajVCkHoTOlpq0dndg+b2NgKl
      SiHU6ooaDA0ZYJ2jaHXNidqaegwOcsKsreH/pBWWMxpNqGuoQ0V1NRqqa7FG+6Gu7nY0EUxV
      vFZBUJSSyF9WVHDs69Dd1YpmToSVvFee09s3yPJdiO7mtne6KM0cA2CXy5mbMuAol0QviTkU
      2WLdcQT9PrhW1rg8bcHtcpLQPUR7N1Z8wcSzuRRGwhEum4fYYCd71ze4tAW5dK7CxfLr/gCC
      oRDZqTjV7Xtkj1y0GdlAiNcEQIeH+1ya5VnacV4PXHR8RG8QDoUVVkbGUex2Qvy9SVZFjOvk
      t3yuenwsJzL9NUW2L7oA0UnI2HpYJhwMUcu8pdBJPH5IGyIP9REsw3tWVsUOKaz8L0Z1nrVV
      6gr8ClsT5u8N6jSk3q3NiGIntE6dgoe6DD91FFtbmwr9hUlLET4vHAkrbNZlH3lLgWQTs7u7
      m7apVfYF2nkpfSD7rHyOzPHJdq+U0cYrQbPnAIAzO81eA4GgYvknmsStaAxRIlWubRC9e9xI
      JTc9O9wEFatTpa6rXp9MAsV832z1SR/EaK5c7KPYY1bM8ZJ+KNbYq2nX2QAgazI2NAjLxDTM
      wyaMmM2YWaCKe3aSm6Q+Wi6OYtVHe3Lu8uWUXb3MVsU4pa6rXp+o+IvxrlKHvGu2+uS6DGKx
      DwGA1Jvv6nJWO5L9UIx2yupULPMJNe06EwDx+AFmbKMwmcfhoOXgpG0c07Tym6c4y2gwEBCj
      8FGkpQHg4qDXAHACnSsDAGmSeAntUBIkSBL5767C58sSlVimFFlwkWcTea4a5OYz2xS7Ppmh
      zlT85dOwo7LBzR2KnE9LwaTd2gqQf4cKXQY2dzHhCMKyFMDu/tn7qLw3wZnN0QCQ/wBl3jE8
      v4GxpeCpijQApHYJJUJ7dK7Z26bk8TRB71DMLmJTkTbavVu41jCLD0qs+FPZBDzBs/dRGgAK
      oN9irwDGWT9GFjY0ALAHsrJA3I9izUYfz78A7R8AqxayCSeaYpnh+ya8KOlfRoXeiU+rp/D7
      5+O43TKH+23zCiDOOjQAXAEAmOYKA8Bpe6qEo0uqfU7q7yTbVuxVu5gsZlYAhGklUP0joOK7
      QNX3gZofA/4FZeRkdq8zuZXZ/rePx/DrR2P4w0srWkeph1rfQtf4GiadIQ0AxZJ4SE8WewUQ
      AAgblHmcxwLt78YwPjaKqclJzC06qKDyw0Z/AJvVinGbDbaJSbo4BjDB75MTNlgs47BabQjR
      HugbBwDvJND2PuAeATboYdbzCWAfEB0sms2rymxfY3ThZvMcvmyYgfSnsETSf4YZH2r53/ZO
      dq2ytgJcgRVgiAM2VAAAjPp+GIxDGKczjNNpx+iICX36QUaD6MaYxaKEQBGQ9FNsPcBrYgfk
      ovmJeHwphmdHRmlJsXOhn0l9SKH3Z94nuoDUa4eL/Ti0Vh9fO1zoxaGtFp7AFh50LOBe2wJ8
      oSgcXnqyBWnwR7MauV/aZVn040OuDjMuGuEdiddTPzUAXAUAkPjzBcAhLTaXFudpbuJWnOnX
      aFIg8X0krpCTpg7ixrhKd0i5JqYPy8uJa1FK8L5RK8ABpWMjjwGH4Xik4msTiBieolLvwPWm
      OfjCYpZx2mxCVgBPMIpb3AtkW2GlQg0AVwAAMjiybOfDAqWXTfD9mcdZotpvDgD4TutzwMAX
      QCzBxwvP36W30pK4Gp/VTGOJG9yzbIYEAGKjZrEHuUn2ZR3pnKYQYtQUpCN1kPzkWaYQxdQq
      SiuLuam6jPqKvQe4OADyQ/FVB4D4Kih4DruB1t8DtirlBWMUc95vX8DvHo/iT491aDHO0xzn
      bBl/ko4W1zbxtMdOXctpH4OcphA9vX20/ddheGRYM4U4MvU4S3NbqGmE7AEMM+unTCu+raYQ
      M64grNNLCdZHAECJj8zy1uUg7hEApQMO3HrWjO2loXORnxwPWTU+q5nClDN8qnwOUwgzuugA
      M0L7/aHhYc0U4pIAMDyvASBJmf7IjiK/v/G0BaslbwGuYYW9WyMRX2+aRYdlTdHyjvW343Ci
      XhUARDk2MOVD57iHjlnp0qBz9wCKKYSYPXBXvkvTB80UItHfxWaBRAlmoDKs8D3Aa2aBxDBw
      rzhWqyIMuF7SjX88omdZkxGxrYjC94uIs5xKrmMnGQ9Fo7JCZNEKJ3sjlZVe9Gzi4/IJDGco
      HLVNcH60cykAMAsAyAJ9UwEQD68gbriT2LCeQ5C5ulrYfpnhrY0PsTZYidtNU3jRZ8f1xll8
      zg2vbGaPD1GOdf4psU8440gFgEiK/rNiUtEbpIoLNADkGpUs/xd7BRhdDGDwmwqAIMOi9/wV
      ePbPQO3PCIJZ8ZMtoFdF+BFHnX4Brtq/4tA3h3aCQWx5Pqmagpl9JKzM8SHi0dFnwEK3KgDs
      079YTE6qDC7sUzKUPDQAFDBUGgCOOk1mX5mFn/1LgvgrvsfPnwDTTcAWV7Tj1UAIN3me3eE7
      DJxQ0WpCoPsmRT5hRcLTP+nDlCtMos3iHuk2A+NlR3WfrjdTmij7C9EU1w+5lT2BgEoDwBUB
      gH76irFAYnnJ2V0kUeHtvfTZV/psnzy/iCdb3sXhbBv2/ZTaiLKq6TeJ1aD5d8oGFst6wPKS
      oGgAzE+Bpf4z2SS3P4rSiibEHKMnEz1n/TN9gwN2wHQvzTAudTgzASBi1Ge9drzz1ILfPbEo
      JhQaAK4AAMZos64KAJSGSOwe8dG4yJFTDyDsxdBDhCp/jaquMXxFHnyBsnTZgB7PxAtdOCz7
      LvYcwwhEYmgxr2DFT6XU+jzvvQ80/hp4+X+AF/8bePLfgef/gt2n/wvrdX/EFoMmZDtGKA0b
      KL2BAx/rUHPEWI/YBR0ZxmXekk2fFNzaQ/vYGv5eO41HXUsaANT0c2aZYrNAAgAdl+RsA5jq
      ELOzHcEoPfFWPH5yF4fMA5BIZSSBqvbpqCR+26KwlCgc4rcthB5gGUlplOnHfa7ykjb34eaP
      8ejrF/jgsQHvPjKRD5/EXdrciCgxzJj/ob670FXex7P2CSqZlvDuM4tihix7mWhsN7EX6Poz
      oP9KYVMOK7+Psa46/OVpH551z58SR8q791hcsNV8hYOIpGZScQiLNcWVZaYla+GzFKqy15ig
      hegGxanaCqCiny8bAOK1pAYAu4yyp2cAqZlFpxKVTcfvtvFx6IbG4Ftz03fbCN2gAX39fRgd
      peEb84CNjZqhpyIzLz/ubXpS1d3F38pH0dJlRF/1M3zyqAPvfG0i6zCKR9X9uP+kCu/wu5gg
      //bJGP5MEeNHpTa892xc0bra7AyiwJl+myFSnKvrGGx4ic/LRnC9YQrXqsewurGdpvgTk4XG
      wTks9pZjf4eR51T6l8dXLIhzM3zIsC+H+wk/50OuYIexyInxHO2m4iKhcpoQj6yl1Z3bFIKx
      Y2T20EwhTmBQ7BXAYg8om7JcK0BsKwSDfoBa0gXs00V12KSnknIExhELnMtLMFNbbzQNwWAy
      KgCQOP4CgKEhY15+3DvhDTyu7lWcTJTICg4z7JV/QuPz+3j8qAQfP+7DRyXjeNi5iFqTS2Ep
      pjijiqZW2Ir3yFu//8KKx12LeEhrzT+V2fDhi3FFju/1M5Jguw7Vgwy3SJOHJKHvUkFV3WPF
      2qzlOOymGhDEA8uI66/j0DWCw4FrOJxsoKVoDQ67Psb+yjj25TdFtHHxIXj+PxBv+xCH/sXj
      5+Y0hRikue2QyQQzO1KLCpFwgC+2KYRlaUMhtswBzzSF2PC60cOIabbZJUU7GmVSPBHpCasj
      wQmEWBWFJRWXEk5FTJ7lMxFqRL0fdyzoQ0nzkGJlqRyyISbRHCzpEO38FAvmfsw5mYYpxugd
      EvCMbZC2i/2ObJiFpXvRt6w4pvyZYsy/180oSijZ5IpkyGeswLPKdkW7mzxkg1rRNoKQez6/
      qBBiJCfmEiKFevzfgKf/lNh30HEmXvbviD//n0DpvwK9fwMm6xLONEMPAK4E2PSezQIlo0Lo
      jcOwWkY1U4iUJbn4AAioAkCEhNnb3Ymh8emEsViBR65NcMS/ivL20dOhCUW+Hw1Q6pIu58/G
      a2/t7GOa4st5bp43IruKOfI2r8kRd5OeSr9At8V9rJRaDURRVteFHb8zPwDIPoCzP6p+APT/
      AxikCHWuHRAnmo4/ACUEg+E2IzxsJqRPdKTBSwKihuLahl+evwc4NoXg7KGZQlweCySsQ9/k
      6Y1fpkeYeIGNDhtgm+EKUCDxKxN6jkgeG6sOVHVbz42mkPr4vK13uaJ42q+jusvCALgJpdTg
      lAeDVQ/Io3vyA4DczPi0mKjhrE7tsPgKJxVxAoyxEhJ/5KS5m57EiiEAoJRK2wQXQEjF3gMo
      ACALlGsPEN5gXNaBfoxPzV/qCuBZXkBtn4THVwezvAFA+G7O6VHWOKCwUSLnb9BNw9FyE/Gd
      rfwBoCwrAqT09iob40wbJSm3Tbsr0WDTuT4dAAWsq7lmkwLo61vnD2AjAHpVAMDrtjOUfBum
      5i+WlT3XmDnnp9GgVw+y/AFAPVrAhZq6FqxscO8iGuA26hNm9Ip497VFhosENxgd2KskS1B7
      5OpMtfVcaEnN8ZBCBui8Kou9AtgYwKnXlnsFkCQZAwMDmLOfbQCmpr9zjdn8xDjah+2q2ayC
      +nd7Az11ZRDwh7hxLm8xIuqnUd3rDI24zUweCwvzSshDtUeuzlRbz7cZABLBrEcFAAKUArU0
      N1MKROJUx51k7f7zxywOm3kIfdYV1UNXEAC4D5hofYpm0xLB70FVfQf2qX94jQCIw708D9vU
      rCLaUntoAFDbU2eXSwCAm7OMI3MTLHoAUWo5VlRqSs945LljRh55hNEmjAwnovYoCAB8TsT4
      HI/K23G7Zhir7beUqG+vFQD2+Skl/dFqMvmFih7QAKCik3IUmSQAuq2eUyxHJgB2oxEYjxRh
      l7YCUKKi7+6gLP90nKKzXqMgAMiWdb4TLSUPcfdZPXYNDxXx6msEAOBbdcPBbOLLLioJVB4a
      AFR21DnFJHKZGgDsRLeYUG4ObiYsvMhx3pjFd7eZK66VMnz1bHChAEDICWfNxxgsv0VThYQB
      3GsFgGfFiZmZGSw6E5sRSZCxycyPkh4pxMgQWlSIBNkVexMsZgRdNDLLZDwzVwC3Y4kBsJyY
      ZSQ4JRPMkdZXMiqK9ETRBEsU76MkE4dkMxLX1GuC49EQGpk7zOFTn7aqYABQXh+nifRhJ43m
      aMfz2gGwvRWGg4GUAuFNdmgiQYbZYkNfTyejQmimEMmBLrYmWFigTno/SVraVHOITFOI7c0Q
      5mZn4PHT0nNnG4ZBHaampmCxTjNX1xptgYZgElsgowGjYxbmc1s7sgUysexRTodAWAGFmEgk
      gZwaP3QvvI7q5gFGWIulxRnNjDGa+lvqyVbXefcc/0fXxvjKmJJvTK4lTU1U3ZsSBzVbeTXt
      StMDRAI+tDTUQm+eIAASCTJ0NIUwGSQsyogWFeKSokJMOYPoGFvNCYBUc+h9prUd4riMjU9g
      nPFAl8UYjpl8BsQalFaiqcZwet0AdLQQHZasPl5JSMckd0dZfZJEkvzcEjOIFhMkZ0Hmf2f9
      ToYaVFv+vHLJkIbFqis5WZ1VXxoAtjeDJHY9xibnFDGbmELI8npIhGumECdcd7FZoBl3SPF/
      zcUCpZpDH3KCWmfmxkTQMtr785S8bcFAwh9AfAOSZ+jYH2DjOK/bWf4AkfWV7HZA52w6CmaB
      stT5WvcAAb58OzWNE3nImbVN8EW2o4l7Z91htHEFyJTsnJICxTYxZh6hVa7sAQp/7nljlrAD
      sqm2A5JWvDEAiDHr+9joyNEmS10HawBQ10/nlZpbCSvx7HMBILThJS+vxzQBcJHjvDFbc9DG
      v39atR3QGwQAppZZmIaVobbXfDR5VXloAFDZUecUm18NKz61uQDg9zjR3tGB0YnZS1sBnAuz
      9MxSbwf0BgGAzgzM9i1ZwfNxutYAcHEALK5F0DSSGwB7sS0MDvTCMrVwaQCYn55K2AHlwWK9
      MSzQwf4ulpcWsbLmTQsedN4QawC4OACWCIDGYTqHZBDdaVOIMLrbm6EbseZFoJktPHvM6Cxu
      GUPveH7Gdm8MAMQZWRyrrVNzNFE9HUo621BrALg4AOyeCBoYrEkNALramqAfsV0OANiAUeoQ
      DNP52Rq9MQCQTXA/7UBMlinVHawB4OIAWGZqn/ohV04A7AoLpOtXokJc5DhzzChaNfT1wrxw
      OlDvec97YwCw4V2hA7yRHZxQtYspRJBRIYLBEE0htAQZSSIoth7A4d1kpsPcABBrUB39AZac
      6m218lq1Ge2tl5tssU7N53hDAJCQAk1StS5hNyQHlZhCjNmmMGzUwzSkJci4LFMISe5WY3Ry
      33USJiRpEpAaGEsA0N7ccGl7gDjjcbY1tTIKXIoPrQokvCEAYDzTSFBJqrYRjBybQgwOjTL4
      khYVItNGR1aB1GsX+e4UABjUAWB0dJT+AAnfATU5gfPJE3y4uY66xk7FTTGf4w0BQBzOpVna
      kIxSE7x4bAqRiCejRYVIJYhis0BuJnSWPLeZTuiZUqAN36pi9yOhEZN5gufn5zE7v0gTiIvn
      Cd4NrqGyqV8JGZjP8YYAgOFVlmbodN2OKe4B1B7aJlhtT51dToLKygpwPgCERZ1RiH2dFp0C
      AMkTbLEyUfYCRdeu5QvnCQ57llFGQ7jw9k7WnLpn5QEWGpDzsvIEF1qvmnalGcNt+DxY8/D0
      qZcCaAC4OADWGCezWmGB0jMeZq4AEg7R52Oia2Z7P2DID8kTLCuA3eGEpwh5ggPuJVR2jedl
      B/RGaYILGUoNAIX0Wvo9kt28apABbzNSfmYC4ICzvoUO6yKYiDIb+slRnDzBa0vTjAc0mZcd
      kAaAHFHGCiGPYvKUxR4gqa/Ye4D1UFTJer6bAwCip+ntbLu00IiO6XElQnM+ZhDF7t/Xag5d
      CLFqK0AhvZZ+zwYTTFQQADsZKTxPmUIwP8CEdRz2PHy2s7Uu+5jFMTtuRqeZ0ZbzfKViTlga
      ANj5xezQYs9Ql7ECiPdVuc6hZEJPPdIBEIeDUrqpaepq5hJSukKPrABghWPMBa1njM58j2KO
      lwaAbyEAItu7KBtYZvTk8wDACOX0+11YYBbFVfUxe1SvAPTJHdQzr8Ci+nAoybrfTACwQ9bc
      TrhXVhiJwAEnw6WsB5h6x++lsoyhU3hKKhyNBcp3vjxdfiu6q6wAkWh67q9MFsi35sLExARZ
      IEZBvsCRdcyYVaWnbxASoiXf480EAKNCWEYGMWKZxMyEBUPMPjI9t4D56UkM9HZj2DymxKc5
      z8G6UMfmYjpZSxuKXV9S5l3o+2Xet0m5e7luGf5wIlJD8pTnSPSG5OEiC9Tb04OJOXu+NJpW
      PhsA4gxV2NoxgEXG88/3eCMBIGEqFmcmYGIKHgvzUE1O2LBgd2J5cQ7jFiusVhuCke1zQ2wU
      GtpCTTiLfOoudn0CKBn0fNpwXtkoNe2Vgw5mZEkPRSLtPrEFisNln1OiPczZTxvO5UO02QBw
      GA2jrqU/bzOIYu+xrtQeQEAgsdvPGjx5eY0Fyof0spd1hBy42zOcljIoSVipxnB7R0Gv8one
      rXYPsMt4QFUtg5Bk0vkeb+QKoLYTNACo7amzy+lW+/B+Qzlc/u20Qpl7gIs/KVFDtjHbYvKN
      8nYzJLVRvocGAEYak04o1lHMDi32Ei31FVsRNrjWjw+by7DoSee/zwOApAJ1LNvhl1hA4Qhi
      TKEqUf1EWOFg+EQHzSMkSZ7EenW7yLrmEFyse1ZR1Tt1ShutZkyLOV5XigVS8/LaCqCml84v
      Y/To8HF7OaaYVC71OA8A4r6qo4P85OQ0DeSW4aWEaHTEhH79ILoppBizWBTT9vGxUfT39ecU
      XDhZtlY3rwTOyndzX0whw2uNDFfIUGoAKKTX0u+Zdg/gRnupkl5ULQAkgIHVYuZsv0pDOC+t
      QR2w0VTaSk2x1WbjSXGpnQmreW1ywppTcDG/YEfrkJ0r+dl7vrP2gsUUMiQdgYohYFDTLi1J
      XgH0W2wWaH+uDd1Nj2GYTQ97nmsPkJBEiWOM5C5OxNZPPWU2VesQY5u2o99WmH5BY4G0PUAB
      MDq5JT7XgaG2R6dyBOQCQKEPPb1qx2lgN4ehDACqrV8DgAYAtbSStdwhM6XYur9GA2MDpWan
      emUA4MrRP0Rf8CX1fiCZrFqxhCBXZxN8ZArhXfczCrEfqysuzRTiaNSLzQIdLHRjYeBrRRmW
      ahL9qgAgRNdhmIbEKC3kuPQVQPyvwyEc0GHrwO/DIRO2HFAKtnMQw/Y+Q73vR3lSKcvfMX6P
      7IWxuuWGK+JEaCfISeVsCeXZe4AjU4hR6wRGzaPcXFk0U4gjM4Vim0LsLvTAbbiP0gE7AjSN
      PssUohDizHZPJgsUZwQQSVTtpG/y8SGbC9lDHOXtyvps2XPQXONgcxP7DKEjhBlnSP34Hn2K
      RSwudchn6pnDjHWPOcoCW+sIeJewNT+BLX0P/BWPYb/+EUa/+g3qS97Gi64/o8R8A/eGP8Ut
      y+e4P3kDdye+Uj7vTVxXPm9YP8dt25fK7+blOsyHZhWgpIMhfnam+KQpxMzCMmf/VczNTGmm
      EEebzGKbQuzbB+AbusfwiC4sUReQ3Limm0IUi/xPK8L2SbA1PVZ4AglF3CGJeHWgEcbm66gZ
      vo2K6cfocbbBtMaEHOsjmPQyUshsF3NJPEd3xzU0V3+EsoYPUN72R1R3fYrGni/Qo3+Aof4n
      GG++i+n6O1iue4jZ+nsY05XA6tApM7TM2MnjkBOuM7SIyuknuGf+HLf0f8Tdxl/hYemPcbvh
      Ldwa+AOeWK6j09EMI9thGCnF9O0PYS+5DucYI1k4KPZdHIJrZQJ+/zIi6y5EmHfYYTej1XQf
      t1p/g/vGv6JuvhR97g70uNrQQmCcKwVKpq2RRmYTS8l1TQx6ccI8dBjhH7rDvFybtAc6MUV4
      VSzQDg3uKnomEdxKzNzu0S7cbnsbTyduo9PZgsGVXnTZSlE1fh8lllt4NnEXL3hWzjxDh6MJ
      3QSHYW0AQx499Ku9GFjp5vVGlE0/wvPxW3g8+iVu9n+Ax+YvUDJxD09st3Bv5DM8t92BdX0U
      cxtTaJgpwZ3RzzDk7MVGeA2BnQ24Np1YCi/As72qsDV7hynWspKtJ7CBXdMgtp59jc3b17B5
      60ts3ruBzQe3sHn/pnJGbn6BzYe3sF5yD3N196Br/hLtL3+PhuoPlE9NDFoA/RZ7D3DoMsNv
      vE7aSzdDeFUAiFCTXN4jfsb72Fy1o6TlQwx7BnHAJHapLJFiG0Z26YDtFFaCDFBixThKHZXZ
      lUrOL9YhhJsg4F1FZCv3b8dCmHKbUDHxECXWO9A7OuGPepW6pH/zOYQNi0fCiG9GcCisGKMY
      HvL3AT/ljItFrcKSsc0sK/uJw61NHLK8BoBzelqGd/8grjiqyJmM2nAeAITFlfAmkeg+7J4t
      TDP7i5g4uBn5QWbYKL2+xMAw9ThYm4Bv4G/YO0g3RHtVAPD4w6gemEeM4fE7u75C43x5+myb
      gxovsgkWMOxzQ0vqVJ5ydaRAKiH4TWaBEkqk5BknAZLQyQ+Hozuwkx3pGF/Bo95JfNEyhC+a
      R1FCIplfjSiRs2WgjvlXfveGYjDN+VFrcuBZ/yyut43gWocO93tGca/HjLvdZjzumcWT3jm0
      WlwERRjrW6yL4U32ffNY7f4I0T31tkAqhydrscwxs69scBM8g2FTGZ6av0RoN5hX9RcBQLZV
      I98V4KzGqmnXN3YFSCfeE0JO7QwhUSm3Sy3pVmxPmYEdvm3F62lwxocakx3lg4uoMsgnl37d
      HB722BQiFYItZdrRjnmmHnWPY8Q1jQ76R9zpMlNe78AMZ3ax3rR7t9BlXcXfm0242deDFyN9
      aJkZgnVtHsFYkBs9piRl0NntvRgisR14Qpvopda1VD+P+8zF9YzpiLoMZiw2v4259THspqwC
      xVoBogRaMome2PpkAsDtC+FlVzUejfwDa9sreRH/eSxQ3hW9qStAklj3GPjJE9qCZXmdkgA/
      2YItrNP+XAjTE4ySmDY5i66jkwkaum1umgZ4ld+meR9Pfp/nd86yfRNe1A45FOIt1S+gjJ/V
      JOYq4zLvXVVMCgwz62gedfG/BTwfmMGdDhuutw/hVrcJX+tMqGP+Y+PSEkZpOTm8tIZRKoGW
      OeuvMUaPuCZGmYY0jQdWFuk4Z+0QapiD9xq9pz5r6cM/2vvw2MisLatzJPLtNN74LAJIsFaH
      CNEX2LEegdnQD9fLH+IlN4HuLdfJynKU/LoQQkq9Z35yjO6OAzBTnL3q21BSpIbD4WNvPod3
      AQ+Hv8Ccdxrb0W3l/3xO8QpMegbmc1+2smLBukmx6kXrkfvVtCvnCiBy4GQGcrE32eeSnYgX
      ShNoUnbmbCLX1jjLCeHqp33KWc8ZU4izVLeIRz0zKNMnCPdB9yS+7logazCPB11TymzYYXXC
      SAKWc5BE3DrmRh2JvdHsUP7rmlxGm20OjbYx1E4MonFyCD2z09AxZKBh3o1Opg8qNw+jngQ+
      MLeE4eVFWFeWsUCH8pWID5u7W5xlZTNWeFiFXRqihXfC8G1TXs1ZPk06UQC17pj0iN36MXbt
      fWly6uKsAPQkW5xBV3c3RggA30boFACCET+84RXFfLoQwlNDaGrrvXIACHjdGNDp6Ipnxry4
      RM5PH2cdX2cU6UwABLejeNw3herhGVQwMXPD2BSGFlYwveoh+xHE5hZnSfLZBwRWdHdXYU0i
      UbIIEoCX4EpIGrhRFEnAsXHXifvhybUTw68URj4xT8t9KdFtTnjBNKY/dQOg7vtRndk3wXnU
      rdRzAsBdmwXRR58CA18A2yfmCMUBAEXV9CSLkf06a9IqALNpt6jhtdU+48ptgiNMzdnV1Y5B
      owlTs/OYm7IdZx33+jn7ZUSG22cWk4ClHQcjJTg03seh6QniVIrEB+4Ahnsc5OuI91/j97uI
      D95H3PQU8ZEXiA/x0/gYccNDHOru8LzF/+/wZDk9P41fsyzrkrLmEsRHS5UT8n2Y1+T68DPA
      WsPEu60ADcySZ3ymDfHJBsTHylnmOet7yHrZJv1tQH+TbbuBuDxPdztxGvgswyO2ic8zPQT4
      HjA9AEZLgKlGHM60Ij7XflR/GzBZl6hbKc97jbyX7wHdVyd1Sr18X+W9zS8Rt1QANraV7d3r
      f4HNm3/DTiVFoa6ZorNAmcRXbMHFGw2APWoFvQzIGmAG8sjmFjYpXw0EJCv5BgM57Sl8ViQS
      UZZPmWFioXXELA2IjtcjZm3g2YLYRBdi0/2I2kcQc9uw455AjBq6qFwbb0XU0ojYOE/55Lk9
      Wo/tsaP7x1kHTykTZb3yPVFv8jvLHZWRa1EpO1qNmOklYsYSxIbKEB2pQnSsjnU38f8W1tOK
      bVsnohPdiE72IGrt4vdeXpPvHYlzrElpS9SSUr+8l7kWW4MliOqfImp8gZi5SmlLWtuUdvJe
      9kFUeWYz65N3k++Jdzl+B967bWvD5qgRISbA216hhlT6kbJrYRtSfYLVzqK5ygkAhM9Ojpk8
      Q87k85K/s12TdsmZWkbqyawrW7nM+s8qIzR1Xhsu0q7MNuTcA5zXmcnlapesjJxJJUaqR1Fy
      dkj9L9e11PqSZZN15ro3mzdTMepTnntkCyQDJ3uh4zalhDJR277Ucon6qGA6qie1ry6yVzlz
      E04WMVufJE08UtuWeS3bOKjtXzV1SRnpj/PaIP+pqUvNO14IAMkOlkESdXqauYTw+OQ7FTEZ
      tYcyQwSplcvMQSyb7CBXl23uA4T/31GARHk8f8sh/8u9kqNMVpxcx24sqliv7lJWvyfAPJLZ
      xzibJuLvx+k/G8U2NYESZjz3Ie+2k/JuifeJHsXrUb6zvlAwqDwr1yEhzmX1lLJy7x4/xRYn
      2S/yPUpJTJD1HRTRzzqzXYWOWTHHK9tYJccn/7HKNk5Cgwk6OmucigKAA0pVJhivZoEueBK+
      e5qBm7bCG8w1lsg4vkW2yDY1DTvj2a9400PvhbjHmGOM+7ERGllNTWJ4zMZUTQFYJhPZ0KPy
      ndnrl5cYEpCBuHIdq455Zb8yZh6Bnpv3QdMIwmTdZhlRLcIAVOJMPsUYR04nE0ow6NdBDmnQ
      8bsxf/LosEnJ0Lid8m6RgA+T03OYmbTCmbN9lMg4FhnTfw7mETOjvFmVhITrHhcWHAn5u2/V
      gdmFJYwzU08grAaguXok+/+Fjlkxx6uYY1XoOBUFAL5VJ0zGIRhJeEaTAXOzdi6xMdgpY9/a
      ijKbSRRLJCArA2xtUA+QemyFA5hmwNcxs1nxZZ2cXWD5HSwxqoFIjA4oj1+0L9G3dRwidcp1
      +L30kfV6SaxG6OggbmRyv0BkC17y1hsUAUoiujX6NrgY7nFqehb7qR4oWSo/eTfmzzUMMhsL
      4/invNvejkRecGJ+buYUuLO11bPixBQTEY4wEO3EJIHtXkN0KwwnLW4l1OT2ZlCJ6jA1SeM0
      Bh67rKPQMSvmeBVzrAodp6IA4IBL+e6RNEg2WAlVdlzhk0X8JlP5AXk7YRWEANMP8qPcgO3x
      f+HZ5DOxt0iwGcr35L3UQ+Q6hD+Ue4SVkPpkw6QYZYlSifUJW5HgIfdUsSyn302cK07e7WQf
      JKFhcusW4ny29Eky+kHSl3fviA1K1ie6lsvg/5P9V/iYFW+8ijlWhY5TUQCQiyi1/7UeuKo9
      oAHgqo6M1q5X0gMaAF5JN2sPuao9oAHgqo6M1q5X0gMaAF5JN2sPuao9kAaApNQhYUyWOJLK
      rTNf4EiOnlkuHwlGPmWvake+inYVMj6pyslC25iv4axIZBRp37Ex49nSMZHGJT3kzvI7v0z6
      OAbAVsiPzo52KrOW0d/ThZHxKUVkaDH2o7GlTVFCRamRVbJvUyy5L76V/H9xdhJrXh9jT1pg
      ozx/i9agomWdnplhcFaG+QhvKZpXEZPKp2g8ReO7MDsDt5sKoKVlzPD71nZMqfsgI1l0oYP2
      pt1X6PjMWkdRUV6OfuOIovkWEaxo1kX8GqPWXH7v0t5Lcg7Ib9FQCwFLGck+v7q6glmOUbLM
      LnU02xzHRN6IQ4UmUusSkfW0bQRTVPB5mXi7tqoSze09CNBEXsTgAb8Hq17SktAEaWHcrGdm
      HNJVbBtGHR3qDUMY0veiobGFehy9Qls2KkLFNfUyjmMAiMKpq7Ue9U3N6NUNor6xiWbKO+hp
      qcPw8BBqeb30+WN09PQrDdOxzDadqB1zE2hta0Nf/wDvbUBLUy26+3Sob6jH88d3UdPQgqqq
      CjS1tKL8ZSlsc8s4oGKs7OkjDsxLvCir5n1NGDLoUNvQzIgAl6f8uYwOfFV1FjI+W0ymvcPc
      wk31jXC4XKguLVNSW5U9f4LOfj1qK8o5NtWoqa6AzjSGzuZaVNaT8Po60dzagSeMplBeVYPG
      dv5urEVtfQMaaqpRWlaBRZcX0c1Ael3Vtehsb8PDh/dgos+G6GIMrMs2swR9bzsqKqtQUfoE
      JVWkk/oqVDaQbrqasbZBn2km6e7sM9LQcgPNVSV4/PQ5GkgXQlvG0QnFKuAyjmMABInM5roa
      vng7amtr0djaqdjedDexg2rrFIL+6ovPUN7Ygc7GKjT3mJQwfrvs4OrKCkWT2dXdAV1vJ2rY
      4W2dnehqa0BdXQMqqqrY0ZVoaOigD+whTQnWUc9nyLV6dmozO22wrwuPnrzEeoam+DJe+ptY
      Z6HjE6eZSl93L3zrXrS1dCqpVq9zHJ+XV6O1uZMh1jvRWF+H8spKPLx3GzfvPURNTRXDrJvQ
      0UKC7u5RxqeKY1jN69UVNRgaMsBKcxePcy69rv52PHv+HC9LX2B0alEYaFjNRiw5V9DeXM/7
      q9HS0oiauno8vHsTtx48QU9XK1b9EWysOVFbUw+DyYTWhhqM8/5NWgkIba2s55+4T+0YHwNg
      l0uQ2+1WDNi8TJYQovmAvECQoehcK2tcEreURAsej4dE3o0VOrcc7RJoWhtRtL9hhpvweT1Y
      Z9IGcbmLhIM0S/BxGXXTJzWEUIihKyRqgnhU0YRazF7FiCxAQ7cN3hNiSIttmgNox+keKHh8
      2OES9kR47TD7X1gZGUcfDQZlPDYjIayRzZHf8rnq8bFcgNlB1xQDxDWPl2O1iQ0CyMMyYY6j
      4v5IOhGTkLS6SAdBzuDLTMqxRe5BjijZ4Z3dfdp3BbGySrMP0pEEWluhOUriWaGjIAOHTAPr
      wcqaR6GDPU6UQn8KbanQsBdKM3lLgWRDIiYGil8r+T1lT6Cdl9YHss+SQyYYNf0sYyMEKnsu
      NeW/7WXyBkAq0sSpQmxtitmJYgtezPqS9kDFrLPYbUw6f2S2MekYkw8AMutIOocXc5y+CX2q
      dowuBACZaZIzVKFLUOZ9sqoU8yimj2myXcVu41kuhcXwCS62+6P0wTehT9WO0TkAiJMH3IB/
      fR125o+SfFNOmukKH7d9xN9pACgOVDUAJNjpYh5q6zsbAJIoe34S4+NWGPQD0BuHFXv4Lkp3
      puftlBvvcLNC+/ojV759yo7nAtMY9houdJpW9Re6P+35HgMDtg4yqvFRnfw9fN4pbZf/k++Q
      Wfbo+qk2Jssl7095rkRUljYc13tUNtEuRjl298K8MgizxwSz18RgWoxnmRKGPTVTfCEEoq0A
      5/fauSxQKLAOJ5VZ45ZxBQgrlAgsLcwpHlASYUz2AMkQIXv0tGpZqsVD6/W082vbdTyevI3H
      U3fwaOLWqf8fWq7h65G/49Fw4vz66Ez+LvTzmf5veNH/iXI+MX4G+V3C73Imr2d+lvR/yvCH
      n+LxENtioqgwsyzrSLTxc6Wd8v2x6fPj+uT+ZJ1lPZ+goeWvylne9Vfleur/pT3y31/QX/Mp
      hltuo2TkuhKW0BVcLGp4dA0AFwBAUsx5lplDKgskPpfzuiqMVP8j7Ryq+QdlwJ9Rv/Apuhv+
      dur/scovsFh6HUsvbyROxns//p68dvRpz/idrZyUkXPtxW34n99VTueLm2m/k9ezfa6zvOPl
      TSyzDt/zO8d1SFkvf0vdiyltdJTchNyTWdfGs3vYfPqA50ME+f2s/7f4//rLp7CX38Vy6S1E
      3fbjEdP2AIWseYl7Ls4CqXh22h5AvPnbmiADmnkKESTPbP+nXtt88iBrHbnuO+//YtdZzPoC
      X9/HREUDQiXPlDj3+/RVTh4aAFQQ4RlFrhQA8iHeYhJX8rnFrrNY9YUf3Yf10Uv0MDtL6OVz
      DQCF0/upOzUApKxExSLYYgJK2rTw8Clq223o0M1qALhyUiAVaFTLAmkrwGm20PfgPjpqdSjT
      LWsAyINnV0GWr2cPECeCN5qb4b13R9XpY7nA/TsI3b+N0AN+Hp3rNMhKq+Muy/Faapms31nP
      +t2Me5NtOev6OW3deHD3+JlBtlPae9yuLPXJ/8Gjd1mXd1Peh+1WrqW3f4P1DT+vQ0X/IgHg
      QDtXAN+Tx/A9uIcd2tFoewC1ZH52uVfOAonBkn54EY3NZtVnR80Aeiq60FvReXy21DHkeUYd
      HTX9aWVSyye/97COlnpD1mc3NI2oblPy2W2sK1l3V1UvmlLqyFZfU9MwpJy8T0uDCZ1ss7Qp
      8/2kzq6qHlR1M0w8iV/OBibo6GocpMn4KO3fT3L1nr8JppEbjcaC1MVI3FaJrrfFaHpifJaI
      3RpQRNWaGPTCYtCzK0hlgQQA3VbP8aAmBzffz9KB5QvXkfnMYtdZ7PpqTS4lSXa53gG3P6pu
      BWBurbGhQYzZpjE5PsoAYEOYYUS5BToo6fr6MMTQ9MlkGEo8Jq7QqfE2L/JddD/FrE/aIkC9
      SJsy71VbX9FsgTQAJGbzQs5CABBn9sUZ2yj6dQaMjY3xHKWGnmEXZyZhNBjSkmFoAEgEQ8t2
      agAogGivxArAdWKHtv1RYXuOwqgnTKAlGt7ZGXwuzl1/a4zhcneVxgIVNuNnrhKFrAC5RydR
      QtsDFGEPkO6tf1KhBoAiAIB7nhrdPCr1y/ntAVQiQAPABQEQXF+DhVGdrVYrz3FMTM0cuUsy
      7HmKP4C2BygADCT+8g4LhukwXqNf0gCgEtRqihUkBj2g3+iqm36/64HjZ7jt8+ju6qKUwYwx
      hj7pk5ApjKsvIjcxh5YZRh4m4U46LasQ/vgi58t+5tC9YB2Z9xe7zpz18R1K+hZR0jmJEqZn
      fd49hxe9i0i7j2XKOq2Yan+BgKGEABCdwDIcTBUr/Zl0N9XModWQ++kyBQEgxhy4/XR4t9Hj
      PxmGYotO0y6G1BCHmACdqNd9XjrFeJS4MN/kFeBl3xKJckEhynwlN6c2wQTsSyH4njmUtVtQ
      0TaMjtY2OLoeY6X7IaY7SmDuqGZ0hT5UdFlRymeWd0/A0l6Bg4GvEDaVoHZQWwEKI/XsdxUE
      AIkhYzQa4fbkzsQij73KABAiKzkicGXm5fmSyqeKDjPq2pg5pq0eEx2ljIXUhopOxsrpHEdZ
      z3TKLM3yBElp9zRKO23MpD6l1CdgSQOAsDFdNpjaajHb+QLrPfcQ6r2NPWbDhI7ZMFNOuebt
      eYDetlZMdZZi/6iMBgD15stqQVIQAHajERjp/WWdXlAViKioAFBm0aUE0Q0IG5RghRIER2Jm
      Mu2XJMSqNmZ5b9OjoV1Hwh3HSxLlSTnW0TvPGXgEPSQyIXADCb2ppRudJPS5jmcI9t5BrP8G
      07B+pRCnzMByzU/CdXY/ga6tET2tLQRGK4bbq7HU+ZREe58z+deY6CxDY6cx0U4BWM8s6tv1
      mO14znpOE3wmAJK/5ZnJ58s1AYCwQOW9s1hl5njNFEItmRfZFGKT4RENg3pMLzheKQBkdq5u
      H4aZBNfb2qQQoJxNrb0KsXeTGG3tpVjrpoNJ3y2FgHd4bvTeg6WjAm0M4lXbNkinmx6MtlUg
      QIIWIhPiivPc7f/q+PdZRJm8LuXlPOT98plZ3t97n89rR39rI2Y6XiDC2T5buVzPSf0/zHSr
      TV0GTHe+xN66XQPAxem/MIcYj4sbtRfP0GcaLxgAMhur5atl9q5sH0FraxdcXUwwzVn5cOBL
      haDkFJZBma2PiPm8GVXKSflsxBhnnfkQ5Hllk4CStharzs3BR3D3MlG4nquIf0EDwOsCwM52
      BPr+XlgZy1FNLMZMFqh3dEmZjetb+4755cwN5sv+JUVCUkbxn7GtRuGZU/nlYhLr8axeRAAo
      q0qR6zs03cPBoGSt1wBQBNpXqihoDyCZ9gy0I1le8apqRyoAJNvixLBBmbHDfbcxQnamqa0P
      VR0j3IAKX8/NIiUfwuKY2yux3Pk4K1tSbOK6DIItdhvjBEB88JYGAFVUp65QQQCQdJ2S7lOs
      CNUcqQCI0zpxZ7z2mC0QFmGv/zr58bvoZoTfutYBTLS/zMmLF5u4NAAwQjRD2BQzgNkbGxhr
      ezOMIAOpqs1QnuYRRgDAWpmVLxYWJ9p/U9VmUQOA+j3AnpJW9kAJTSNx++W7BMHVjOEKZIH2
      Ge3XRrNau8ujZgFI0wPgHADks1nUAKASAOzvcYYen5xhnKbJaSWz/ApX7uWFaUryjsyhA2Fl
      9hdtcjJ+U7YsLPleS+RZTuRzLtYpFgXFqkvqUVtfmjn0XmyL7EozRpjcIN9NsAaA0yJTtcAv
      ZA8g/gDT1hFm8pnELEEwNzuF2UU75qZs0PX3YVgcYrwbiVDmRw4xyYhzF/1MmmlctJ7U+yXg
      7uuoLw0AkoVEOnBsUgPAuaLQIkuB1AJA0g+dZKNn7NYA4/VvMgUVZ/gITVY2t7YZ7z985BK5
      oblEquBj0gCwQ1ugns42dA9QmsOkBnIcHh4c85SC0j3mkEpuqNTuAdTOhJexYb2MOovNpqkF
      wCYTV0ig4kTyEnWHZg59fj+lAWB7Mwj9QC9ssyd6gJXlBRhNQ3SxMyuudgZ+9/qDCghSY4PG
      GRv0rE2wBoDz2aNUAMTX58+MDRpmrNb5hUWEmOxO7aEBIB8AMCfTQF8vZhadR3fFYZ+fwsDA
      AEHAzH8zs4qtkGnEwlRG6dGhhX2Kj1coSqKLnIf9X1zo/mzPLnadRa/PeBeHepGSURPumzsj
      OnQcjsVZjDNj4m4emTQ1AOQBgA2PE/V1dVwBTuxR9uh3qoTe2NhQ8kJtc1MlOaMkRZLGAhW+
      8U1dFdWxQHE4meBOp9fBseJTuwBoLpE5eiqNBYptb9IhxoGJmfytQTUpUOFgUAcAYI1js7a2
      hiWH+ziReS4kaCtAHiuAssmy2+EPngRnOu92bQUonOjzXwHAjJ1eTDMZ+YrXn4vuj//XAJAH
      ACR96fLSIlNVepmZO5GdUAPAaSJ/XVKgA4Y8sS8uqB4fGTsNAHkAYH8nCvOwEdapOSV3a65D
      WwFe7QqQ7/hoAMhFwUDGHiCMfmZ7N1mmNE1wFmeYSzOvVmkNKi6rAz2dqsdHA0CeANjwrmDI
      ZKQYlB5hue/VpEDngCQv3YdKAGxRTD1hs8K5qs5cXQNAbiJOWQEo86ch1eTUVEE+wZoUqHB2
      SJ0UKI4l6mSmOD7jU6Isyz24GgBy91EaC7QVCSrhTzaCJ47Z2ib46myCIyFaezJr5/pGKPfI
      HpXQNsGqN8EJRcsozWonZiVVZ+4+1jbBhc/6+YtB43DTLMXC4GTTC8vK+Cjmw0fDJN8Tx4mJ
      srYC5KbhtBXAtTSDtrZ2THEPoObQAPAqAQBIlL5OSVROU5U4jRRnJ61YXHbCvrSsmEM7VjxY
      cSwSJBLK0qbYDGkrgOoVANjwebDm4elTp2jRAPAqARDHqov2/vPzWHKtKACYGKORosWG8TEL
      xq0WTM3O05x9AgOM7jdsHoNr1Ucz6Qi2txNASIZcLManWAYXo55kHeK48zrqS1sBolsROB3L
      p3hMsUOXBmrm0AmCf12KMLHAVZxG+EkEEBDLWGEUv1AwRBMWFzy+dfg8q9wnOHk6EGWeAG0F
      yGMFCPnXUF3+El2Do8d7AIkXOmQwYZSukpo59OUD4DxzaDVsaWYZDQB5AGAztA6T0ZDwBzi6
      z+teQlNDM02gzZo59JGp9+sxhy6E/DVTiFy9lsYChQNedLa3MTDWiRRIpAtR8pCBgGYO/bo1
      wbkGM9v/2gqQxwqwS6f4GW6ilt1aVIir6BOsAUB9DxQQGEs0wTOYmVvAekCdokWTAr1KKZD6
      wU8tqa0AeawA/nUP/CR+yfai5tAAoAFADZ2oKaN2xlZTl5RRW1/aHmDNtUSXu0EaW6lzudMA
      oAFALUHmKqeWYHPVk/xfbX3pYVGYIMM8LBnH888PoBnDFQ4GdcZwaoc+vZzGAuXBAh0ytIlz
      eYma4PyD42oA0ABQGEQTd6mdsdU+Q219GXGBwpiesNAfwKXqORoLVDjR528Mp2pIThXSVoA8
      VgC3fRbt7Z1YdK6p6m0NABoAVBGKikJqZ2wVVeW1oqStAGJv7iX7c6DCIV6eogFAA4BagsxV
      7koAIFcjM//XAHA1AHASVlxGSPMHyGdPkbYCaABQR9Cvyxo02/iEN7wYpZPMhNUKD2O2rjo1
      f4CiAmA3FlXCbYstUIghEiMMiygRojUWSB1Y1DjHX0QMGqYFb3dPN0ZorDhvd2j+ADTdF3ZK
      rX9BzhVAIhGMjphgHB6BXjeAnt4+OGgrtMeHiLOFPEzs1A8ZVEsLjltYYODDlOC4Yg6t9OdR
      FhYZyPOOGPO6iZPMysoKfP4NzR/gqLPU7ilyAmB9zUVfAAvM9BVeopOFdcyMkVEr8wfsaQC4
      YCTsZCTriwAgF9uqiUHzEINmK7rPcHzRaEzJQrJPb6RkehyNBboaLJAGgOw9ULQV4LwO1qRA
      xQHBRfYAGgA0AGRNzZqmaS12Tq9i16cyMlwuYs/2v8YCXZAF0laAqxMYSwOA+h7QWKCUuJ1F
      l9trK4ASnaKYh1qCVftMtfXllAJpK4C2AmTSgGieNQCwV7RNsLYJVjsj5yqndsbOVU/yf7X1
      aStAASHOi85SaZvgq+EPoBZdyXLaCvBmrABJlkZCKIpGeX4uoVlOavpPjO0ShnaipRbpUuZ1
      JUBvRlDl4yC+Esj36Myqb6JFQbIdEoFQNOBCX8FgEBvMUOr3+5UEgS6XC8v2ZSwtLmFhYUHJ
      mWalHZTNxhCR4+NKjrtQKEzdVVRpZ2p75f2kruTp8/nSM8RoAFBH0N/0FUAIzMMYsEtLS5in
      GcUY44jqdYPo6xmAQT+E8VEbTIPD/N3PxOmDMI+MYnhohEHThnkOMUKgCYODhqPv/D1IUxnD
      EJOrDMPMhOoTExOYnJgkUU7w9yhGhkeVe+W+Yeabnp6egdvlPiFoWhhMsLw8Q9rR09WntEXO
      7o5edLXxd5cOgzqD8ixpm2mQFgmGMRoBTmN2eo7nPGZn5jAyNIb+Xh162fZBfbKNpsS17n50
      trG+9l6lPl3foFoAxLXYoJcpVboACyRBchNxWyW4rGjq9/g7MYMecsbN1APsMNezQW/CQL9e
      IaZRJj23Mxq4f32DOaA5ax75ghwexhGL7mCdGSnt9BFfnF9igo5lJut2w+1YxYprjbFJPQyp
      v8Jk6pyVF1xYnFvGwvwCI1UzSC/PeYbYWZhfxDKjWbvsq8q99gUnpmwzGDKaE8RM4JhNFkxa
      Z+BaXlGeF2T+g83INnZiu9jd2VPO/d0DpW3pq87pKVv+3+X7y/t41nxw2lfgYUad4AZXha1Y
      Wn0H+4fqALAb28S4ZSwtNqhmCqFutbhsa9CA140BnY55HcQalEFx56dh4Ow8wpl3nYlOMgEg
      m0P/egD7tOjNxrKo4QKKIQVKsCZJtuiK+ASf9fIxJmezEABTM7Mw6gdgMo9jn43X9gDFAcFF
      TCEi9Afo6mrHoNF0FB7dBl1/H4bJtnjpH6BpgougCY5zMxEMBBDl8rnNjUk4HGHwrF3FP0A2
      FrLc7kT5OdeHmKVaOXfGT85s1+T/6FhVWjm5tj1aeeqa2jrPKhcdS6/zIvWd1cZs76L2OdGJ
      JkTH6/netdjxO5T+FOPDZN/KECYJWenrlHMzHITD6SI/vQrfuh9+nxerax6srq5ic2tbmaSS
      OQJS75P65Szkmmwwpd5C7pV75P5T77G5mbO+bPdmew8pt5lR31nPLVgMKjts2UzJqdivUzMo
      p+QSkPPw4OQ84PfMa/K/8Kup5eS7BOLNvKbUmVKf/H/mtYxn71NaEaNTT1p7VLbxrHZna2O2
      d1Hbxl3h4YVnP+rD4zwA/J1MfZT0Ecj3UxRWaeN05Gug5BmQ5x39Tn1mrmvCRgnh5SqX7RlJ
      P4fM90hKbZLX1d57VrnM+s567v8FGNCqAEtSG+YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='30 Day Total Contribution by Site' width='192'>
      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
      6JfugZuuB/4/FqO0mDhwlyMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='30 Day Total CPV by Site' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='30 Day % HV Unique Visitors' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='30 Day % HV Transaction Contribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='30 Day CPV Metrics by Site' width='192'>
      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
      Ji3opSv2/f8BG9JjX/S5+u4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='External Total CPV Statement' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
