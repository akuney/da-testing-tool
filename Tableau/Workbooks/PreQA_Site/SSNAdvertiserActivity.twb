<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.1015.1338                -->
  <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/t/PreQA/workbooks/SSNAdvertiserActivity?rev=1.0' id='SSNAdvertiserActivity' path='/t/PreQA/workbooks' revision='2.7' site='PreQA' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Quarter&quot;' />
        </members>
      </column>
      <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
        <calculation class='tableau' formula='&quot;All Markets&quot;' />
        <members>
          <member value='&quot;All Markets&quot;' />
          <member value='&quot;Global Top 10&quot;' />
          <member value='&quot;Global 11 - 50&quot;' />
          <member value='&quot;Global Top 50&quot;' />
          <member value='&quot;Rest of Asia Pacific&quot;' />
          <member value='&quot;Rest of Europe&quot;' />
          <member value='&quot;Rest of Latin America&quot;' />
          <member value='&quot;Rest of Middle East&quot;' />
          <member value='&quot;Rest of North America&quot;' />
          <member value='&quot;Other&quot;' />
        </members>
      </column>
      <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OTA&quot;' />
          <member value='&quot;GDS&quot;' />
          <member value='&quot;Distinct Hotels&quot;' />
        </members>
      </column>
      <column caption='Graph Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Time&quot;'>
        <calculation class='tableau' formula='&quot;All Time&quot;' />
        <members>
          <member value='&quot;All Time&quot;' />
          <member value='&quot;Year over Year&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='advertisements' inline='true' name='mysql.41534.565411180556' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;a.id as &quot;Advertisement ID&quot;,&#13;&#10;&#9;c.advertiser_id as &quot;Advertiser ID&quot;&#13;&#10;from advertisements a&#13;&#10;left join ad_groups ag on ag.id = a.ad_group_id&#13;&#10;left join campaigns c on c.id = ag.campaign_id&#13;&#10;left join entities e on e.id = c.advertiser_id&#13;&#10;where e.ssn_channel_type = &apos;OTA&apos;&#13;&#10;and a.deleted = 0&#13;&#10;and a.paused = 0</relation>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__advertisements.tde' schema='Extract' tablename='Extract' update-time='3/10/15 6:22:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18858' timestamp-start='2015-03-10 18:22:38.826000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='budget_changes' inline='true' name='mysql.41534.586332928244' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;count(1) as &quot;Budget Changes&quot;&#13;&#10;from hotel_ssr_advertiser_changes&#13;&#10;where change_type = &apos;Budget Changed&apos; &#13;&#10;and convert_tz(created_at,&apos;UTC&apos;,&apos;America/New_York&apos;) &lt;&lt; convert_tz(CURRENT_DATE(),&apos;UTC&apos;,&apos;America/New_York&apos;)&#13;&#10;group by advertiser_id</relation>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__budget_changes.tde' schema='Extract' tablename='Extract' update-time='3/10/15 6:22:48 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5572' timestamp-start='2015-03-10 18:22:48.023000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Brand_Data' inline='true' name='mysql.42071.931415601852' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>SELECT&#13;&#10;    e.id AS &apos;Advertiser ID&apos;,&#13;&#10;    e.name as Advertiser_Name,&#13;&#10;    hpa.active,&#13;&#10;    hp.name as Hotel_Name,&#13;&#10;    br.brand_name,&#13;&#10;    br.chain_name&#13;&#10;FROM&#13;&#10;    intent_media_production.entities e&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.hotel_property_advertisers hpa&#13;&#10;ON&#13;&#10;    e.id = hpa.hotel_ssr_advertiser_id&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.hotel_properties hp&#13;&#10;ON&#13;&#10;    hp.id = hpa.hotel_property_id&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.brands br&#13;&#10;ON&#13;&#10;    br.id = hp.brand_id&#13;&#10;WHERE&#13;&#10;    e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;AND e.active =1&#13;&#10;AND hpa.active =1</relation>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal'>
      </column>
      <column caption='Chain Name' datatype='string' name='[chain_name]' role='dimension' type='nominal'>
      </column>
      <drill-paths>
        <drill-path name='country, state, city_name'>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\Brand_Data.tde' schema='Extract' tablename='Extract' update-time='3/11/15 4:49:26 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6153' timestamp-start='2015-03-11 16:49:26.026000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='advertiser_performance' inline='true' name='vertica.41422.531214282404' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-with-failover.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;users.&quot;User Name&quot;,&#13;&#10;&#9;users.&quot;User Email&quot;,&#13;&#10;&#9;users.&quot;Is Primary User&quot;,&#13;&#10;&#9;users.&quot;Distinct Hotels&quot;,&#13;&#10;&#9;users.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;users.&quot;Known Rotator Type&quot;,&#13;&#10;&#9;users.&quot;Phone Number&quot;,&#13;&#10;&#9;users.&quot;First Auction Participation&quot;,&#13;&#10;&#9;performance.*,&#13;&#10;&#9;&#13;&#10;&#9;CASE WHEN (performance.&quot;Click Room Nights Sum&quot; is not null and performance.&quot;Click Room Nights Sum&quot; !=0)&#13;&#10;&#9;THEN COALESCE(performance.Clicks,0.0)/performance.&quot;Click Room Nights Sum&quot; &#13;&#10;&#9;ELSE 0 end as &quot;Clicks To Booked Room Night&quot;  /* Added  by SR for Pivotal story: 83344234*/&#13;&#10;&#9;&#13;&#10;from&#13;&#10;(&#13;&#10;&#9;&#9;select&#13;&#10;&#9;&#9;&#9;entities_to_users.*,&#13;&#10;&#9;&#9;&#9;(case when entities_to_users.&quot;User ID&quot; = primary_users.primary_user then 1 else 0 end) as &quot;Is Primary User&quot;,&#13;&#10;&#9;&#9;&#9;hotel_count.&quot;Distinct Hotels&quot;,&#13;&#10;&#9;&#9;&#9;hotel_count.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;&#9;hotel_count.&quot;Known Rotator Type&quot;&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;(&#13;&#10;&#9;&#9;&#9;&#9;select&#13;&#10;&#9;&#9;&#9;&#9;&#9;e.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;&#9;&#9;e.telephone as &quot;Phone Number&quot;,&#13;&#10;&#9;&#9;&#9;&#9;&#9;(u.first_name || &apos; &apos; || u.last_name) as &quot;User Name&quot;,&#13;&#10;&#9;&#9;&#9;&#9;&#9;u.email as &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;&#9;&#9;u.id as &quot;User ID&quot;,&#13;&#10;&#9;&#9;&#9;&#9;&#9;e.first_auction_participation as &quot;First Auction Participation&quot;&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;&#9;&#9;inner join intent_media_production.memberships m on m.entity_id = e.id&#13;&#10;&#9;&#9;&#9;&#9;inner join intent_media_production.users u on u.id = m.user_id &#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;&#9;&#9;&#9;and m.active = 1&#13;&#10;&#9;&#9;) entities_to_users&#13;&#10;&#9;&#9;left join &#13;&#10;&#9;&#9;(&#13;&#10;&#9;&#9;&#9;select &#13;&#10;&#9;&#9;&#9;&#9;entity_id as entity_id, &#13;&#10;&#9;&#9;&#9;&#9;min(user_id) as primary_user &#13;&#10;&#9;&#9;&#9;from intent_media_production.memberships&#13;&#10;&#9;&#9;&#9;where active = 1&#13;&#10;&#9;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;&#9;entity_id&#13;&#10;&#9;&#9;) primary_users &#13;&#10;&#9;&#9;on entities_to_users.&quot;Advertiser ID&quot; = primary_users.entity_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#9;&#9;(&#13;&#10;&#9;&#9;&#9;select&#13;&#10;&#9;&#9;&#9;&#9;u.email &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;&#9;(case when u.strategic_account = 1 then &apos;Strategic Accounts&apos; else &apos;Other Accounts&apos; end) as &quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;&#9;&#9;(case when u.known_property_rotator = 1 then &apos;Known Rotators&apos; else &apos;Other Accounts&apos; end) as &quot;Known Rotator Type&quot;,&#13;&#10;&#9;&#9;&#9;&#9;count(e.name) as &quot;Distinct Hotels&quot;&#13;&#10;&#9;&#9;&#9;from intent_media_production.users u&#13;&#10;&#9;&#9;&#9;left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;&#9;&#9;&#9;left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;&#9;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;&#9;&#9;and m.active = 1&#13;&#10;&#9;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;&#9;u.email,&#13;&#10;&#9;&#9;&#9;&#9;u.strategic_account, &#13;&#10;&#9;&#9;&#9;&#9;u.known_property_rotator&#13;&#10;&#9;&#9;) hotel_count&#13;&#10;&#9;&#9;on entities_to_users.&quot;User Email&quot; = hotel_count.&quot;User Email&quot;&#13;&#10;) users&#13;&#10;left join &#13;&#10;(&#13;&#10;&#9;select &#13;&#10;&#9;&#9;isra.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;e.last_auction_participation as &quot;Last Auction Participation&quot;,&#13;&#10;&#9;&#9;e.name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;&#9;isra.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;imhpm.intent_media_market_id as &quot;Market ID&quot;, &#9;&#13;&#10;&#9;&#9;ifnull(imm.name , &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;&#9;&#9;ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment Name&quot;,&#13;&#10;&#9;&#9;z.can_serve_ads as &quot;Can Serve Ads&quot;,&#13;&#10;&#9;&#9;(case isra.advance_purchase_range_type&#13;&#10;&#9;&#9;&#9;when &apos;WEEKDAY_TRAVEL_LESS_THAN_OR_EQUAL_TO_21_DAYS&apos; then &apos;Weekdays within 21 Days&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKEND_TRAVEL_LESS_THAN_OR_EQUAL_TO_21_DAYS&apos; then &apos;Weekends within 21 Days&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKDAY_TRAVEL_GREATER_THAN_21_DAYS&apos; then &apos;Weekdays 22+ Days Away&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKEND_TRAVEL_GREATER_THAN_21_DAYS&apos; then &apos;Weekends 22+ Days Away&apos;&#13;&#10;&#9;&#9;&#9;when &apos;DATELESS&apos; then &apos;Dateless&apos;&#13;&#10;&#9;&#9;&#9;else isra.advance_purchase_range_type&#13;&#10;&#9;&#9;end) as &quot;Travel Window&quot;,&#13;&#10;&#9;&#9;min(atwra.click_count) as &quot;Clicks&quot;,&#13;&#10;&#9;&#9;min(atwra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;&#9;&#9;min(atwra.actual_cpc_sum) as Spend,&#13;&#10;&#9;&#9;min(atwra.click_conversion_value_sum) as &quot;Click Conversion Value Sum&quot;,&#13;&#10;&#9;&#9;min(atwra.exposed_conversion_count) as &quot;Exposed Conversion Count&quot;,&#13;&#10;&#9;&#9;min(atwra.exposed_conversion_value_sum) as &quot;Exposed Conversion Value Sum&quot;,&#13;&#10;&#9;&#9;min(atwra.click_room_nights_sum) as &quot;Click Room Nights Sum&quot;,&#13;&#10;&#9;&#9;min(atwra.exposed_room_nights_sum) as &quot;Exposed Room Nights Sum&quot;,&#13;&#10;&#9;&#9;sum(isra.impression_count) as &quot;Impressions&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_count) as &quot;Filtered Ads&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_budget_count) as &quot;Filtered Ads (Budget)&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_bid_count) as &quot;Filtered Ads (Bid)&quot;,&#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_hotel_unavailable_count) as &quot;Filtered Ads (Hotel Unavailable)&quot;&#13;&#10;&#9;from intent_media_production.impression_share_report_aggregations isra&#13;&#10;&#9;left join intent_media_production.entities e on e.id = isra.advertiser_id&#13;&#10;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;left join intent_media_production.intent_media_hotel_properties_markets imhpm on imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;&#9;left join intent_media_production.intent_media_markets imm on imm.id = imhpm.intent_media_market_id&#13;&#10;&#9;left join intent_media_production.z_hotel_ssr_advertiser_status z on isra.advertiser_id = z.advertiser_id&#13;&#10;&#9;left join &#13;&#10;&#9;(&#13;&#10;&#9;&#9;select&#13;&#10;&#9;&#9;&#9;date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;advance_purchase_range_type,&#13;&#10;&#9;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;&#9;sum(click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;&#9;sum(actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;&#9;sum(click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;&#9;sum(exposed_conversion_count) as exposed_conversion_count,&#13;&#10;&#9;&#9;&#9;sum(exposed_conversion_value_sum) as exposed_conversion_value_sum,&#13;&#10;&#9;&#9;&#9;sum(click_room_nights_sum) as click_room_nights_sum,&#13;&#10;&#9;&#9;&#9;sum(exposed_room_nights_sum) as exposed_room_nights_sum&#13;&#10;&#9;&#9;from intent_media_production.advertiser_travel_window_report_aggregations&#13;&#10;&#9;&#9;where date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) &lt;&lt;  date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), &#13;&#10;&#9;&#9;&#9;advertiser_id, &#13;&#10;&#9;&#9;&#9;advance_purchase_range_type&#13;&#10;&#9;) atwra&#13;&#10;&#9;on atwra.advertiser_id = isra.advertiser_id &#13;&#10;&#9;and atwra.advance_purchase_range_type = isra.advance_purchase_range_type&#13;&#10;&#9;and  atwra.date_in_et = isra.aggregation_level_date_in_et&#13;&#10;&#9;where isra.aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;group by &#13;&#10;&#9;&#9;isra.aggregation_level_date_in_et, &#13;&#10;&#9;&#9;e.name, &#13;&#10;&#9;&#9;e.ssn_channel_type,&#13;&#10;&#9;&#9;e.last_auction_participation,&#13;&#10;&#9;&#9;isra.advertiser_id,&#13;&#10;&#9;&#9;hpa.hotel_property_id,&#13;&#10;&#9;&#9;imhpm.intent_media_market_id,&#13;&#10;&#9;&#9;ifnull(imm.report_segment, &apos;Other&apos;),&#13;&#10;&#9;&#9;ifnull(imm.name , &apos;Other&apos;),&#13;&#10;&#9;&#9;z.can_serve_ads,&#13;&#10;&#9;&#9;isra.advance_purchase_range_type&#13;&#10;) performance&#13;&#10;on users.&quot;Advertiser ID&quot; = performance.&quot;Advertiser ID&quot;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.0%' name='[% Coverage Loss]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Availability]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Hotel Unavailable)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Bid]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Bid)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Budget)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='date' name='[1 Day Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -1, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[30 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -30, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[31 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -31, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[60 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -60, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[7 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -7, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;' value='Number of Active OTA Ads' />
          <alias key='&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;' value='Number of Budget Changes' />
          <alias key='&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;' value='Number of Days Active' />
          <alias key='&quot;[vertica.41422.531214282404].[max:Can Serve Ads:qk]&quot;' value='Can Serve Ads' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;' value='Clicked Revenue' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;' value='Click Room Nights' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;' value='Exposed Conversions' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;' value='Exposed Revenue' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;' value='Exposed Room Nights' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ad Coverage]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - First of Month])/sum([Clicks - First of Month])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Days Active' datatype='integer' name='[Calculation_0020917140720157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[First Auction Participation], TODAY()-1)' scope-isolation='false' />
      </column>
      <column caption='ID' datatype='integer' name='[Calculation_1151030171422328]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='real' datatype-customized='true' name='[Can Serve Ads]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Click Conversion Value Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Click ROI Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Click ROI] &lt; 2 THEN &quot;1:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 3 THEN &quot;2:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 4 THEN &quot;3:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 5 THEN &quot;4:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 6 THEN &quot;5:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 7 THEN &quot;6:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 8 THEN &quot;7:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 9 THEN &quot;8:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 10 THEN &quot;9:1&quot;&#13;&#10;    ELSE &quot;10+:1&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Click Room Nights Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Clicks - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [First of Month] = [Date] THEN [Clicks] END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Distinct Hotels]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Eligible Ad Count]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Filtered Ads]+[Impressions]' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss Total from Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Bid Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Est. Revenue Loss Total from Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Est. Revenue Loss from Bid Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Exposed Conversion Count]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Exposed Conversion Value Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Exposed Room Nights Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' datatype-customized='true' name='[First Auction Participation]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' name='[First of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Impression Share Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Impression Share] &lt; 0.5 THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF ISNULL([Impression Share]) THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF [Impression Share] &lt; 0.7 THEN &quot;50% to &lt;70%&quot;&#13;&#10;ELSE &quot;Greater than 70%&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Impression Share]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' />
      </column>
      <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' datatype-customized='true' name='[Last Auction Participation]' role='dimension' type='ordinal'>
      </column>
      <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Market ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Past 30 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversions] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 30 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Clicks] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 30 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversion Value Sum] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 30 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 30 Days Conversion Value Sum])/sum([Past 30 Days Spend])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 30 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Spend] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 31 - 60 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 31 - 60 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 31 - 60 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 31 - 60 Days Conversion Value Sum])/sum([Past 31 - 60 Days Spend])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 7 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 7 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 7 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Past 7 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 7 Days Conversion Value Sum])/sum([Past 7 Days Spend])' scope-isolation='false' />
      </column>
      <column caption='Past 7 Days Spend' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 7 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Percent of Budget Spent Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Percent of Budget Spent]) THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.1 THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.2 THEN &quot;10-20%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.3 THEN &quot;20-30%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.4 THEN &quot;30-40%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.5 THEN &quot;40-50%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.6 THEN &quot;50-60%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.7 THEN &quot;60-70%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.8 THEN &quot;70-80%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.9 THEN &quot;80-90%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 1.0 THEN &quot;90-100%&quot;&#13;&#10;ELSE &quot;100%+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
      </column>
      <column aggregation='CountD' datatype='string' name='[Phone Number]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Potential Media Revenue Gain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)])+sum([Filtered Ads (Budget)]))*sum([Spend])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[ROI % Difference]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Past 30 Days ROI]-[Past 31 - 60 Days ROI])/[Past 31 - 60 Days ROI]' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Spend - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [First of Month] = [Date] THEN [Spend] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_0020917140720157]' derivation='Max' name='[max:Calculation_0020917140720157:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Can Serve Ads]' derivation='Max' name='[max:Can Serve Ads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Click Conversion Value Sum]' derivation='Sum' name='[sum:Click Conversion Value Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Click Room Nights Sum]' derivation='Sum' name='[sum:Click Room Nights Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversion Count]' derivation='Sum' name='[sum:Exposed Conversion Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversion Value Sum]' derivation='Sum' name='[sum:Exposed Conversion Value Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Room Nights Sum]' derivation='Sum' name='[sum:Exposed Room Nights Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads]' derivation='Sum' name='[sum:Filtered Ads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impression Share Bins]' derivation='User' name='[usr:Impression Share Bins:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__advertiser_performance.tde' schema='Extract' tablename='Extract' update-time='3/10/15 6:22:57 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_7481226122412498]' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
            <calculation column='[Eligible Ad Count]' formula='[Filtered Ads]+[Impressions]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='12763594' timestamp-start='2015-03-10 18:22:57.362000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.446174' measure-ordering='alphabetic' measure-percentage='0.407263' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[tmn:Date:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>#2012-04-01 00:00:00#</bucket>
            </map>
            <map to='#17becf'>
              <bucket>#2012-08-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2012-10-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2013-04-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2013-07-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2011-03-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2013-02-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2011-12-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2011-08-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2011-06-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2011-04-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2013-03-01 00:00:00#</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>#2012-05-01 00:00:00#</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>#2012-09-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2012-11-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2013-05-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2012-02-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2012-06-01 00:00:00#</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>#2011-09-01 00:00:00#</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>#2011-07-01 00:00:00#</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2013-08-01 00:00:00#</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>#2012-03-01 00:00:00#</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>#2012-07-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-10-01 00:00:00#</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>#2011-11-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2012-12-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2013-06-01 00:00:00#</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>#2011-05-01 00:00:00#</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>#2011-02-01 00:00:00#</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </map>
            <map to='#404040'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Budget:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Impression Share Bins:nk]' type='palette'>
            <map to='#309343'>
              <bucket>&quot;Less than 50\%&quot;</bucket>
            </map>
            <map to='#d82526'>
              <bucket>&quot;Greater than 70\%&quot;</bucket>
            </map>
            <map to='#ffc156'>
              <bucket>&quot;50\% to &lt;70\%&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
            <member value='&quot;Distinct Hotels&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='mysql.41534.586332928244'>
        <column datatype='integer' name='[Budget Changes]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Budget Changes]' derivation='Max' name='[max:Budget Changes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41534.409827615738'>
        <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[Aggregated Budget]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IFNULL(SUM([Calculation_5810917111000078]),0)+IFNULL(SUM([Calculation_0211011162411911]),0)+IFNULL(MAX([Calculation_2131011162824636]),0)' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='hotel_status_changes' inline='true' name='vertica.41534.409827615738' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-with-failover.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>/* Main Select - from [users, imm, hpa, z, status_changes] */&#13;&#10;/* Author :Sushmit Roy*  Story id : 78843182*/&#13;&#10;/* Refer documentation https://docs.google.com/a/intentmedia.com/document/d/1YwAY_fjGeP1H1kFw5GgjHXuSb4XAc6qnvZnY2aI1zOQ/edit*/&#13;&#10;select&#13;&#10;    users.*,&#13;&#10;    (case when users.&quot;User First Auction Participation&quot; = status_changes.&quot;First Auction Participation&quot; then 1 else 0 end) as &quot;First Advertiser for User&quot;,&#13;&#10;    (case when users.&quot;User First Auction Participation&quot; = hotel_property_status_changes.&quot;First Auction Participation&quot; then 1 else 0 end) as &quot;First Hotel Property for User&quot;,&#13;&#10;    ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;    ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment Name&quot;,&#13;&#10;    hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;    z.can_serve_ads as &quot;Can Serve Ads&quot;,&#13;&#10;    status_changes.Date,&#13;&#10;    status_changes.&quot;Advertiser Name&quot;,&#13;&#10;    status_changes.&quot;Sold Date&quot;,&#13;&#10;    status_changes.&quot;Is New&quot;,&#13;&#10;    status_changes.&quot;Advertising Status&quot;,&#13;&#10;    status_changes.&quot;Budget Type&quot;,&#13;&#10;    status_changes.&quot;Budget&quot;,&#13;&#10;    status_changes.&quot;Previous Advertising Status&quot;,&#13;&#10;    status_changes.&quot;Previous Budget Type&quot;,&#13;&#10;    status_changes.&quot;Previous Budget&quot;,&#13;&#10;    (case&#13;&#10;        when &quot;Advertising Status&quot; = &quot;Previous Advertising Status&quot;  then &apos;No Change&apos;&#13;&#10;        when &quot;Is New&quot; then (case when users.&quot;Channel Status&quot; = &apos;Latter Channel&apos; then &apos;New Channel&apos; else &apos;Brand New Hotel&apos; end)&#13;&#10;        when &quot;Advertising Status&quot; like &apos;%Active%&apos; and &quot;Previous Advertising Status&quot; like &apos;%Paused%&apos; then (case when &quot;Change Yesterday or Today&quot; then &apos;Manually Reactivated&apos; else &apos;Reactivated No Traffic&apos; end)&#13;&#10;        when &quot;Advertising Status&quot; = &apos;Paused with Zeroed Out Non-Recurring Budget&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Paused for Budget&apos;&#13;&#10;        when &quot;Advertising Status&quot; = &apos;Manually Paused&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Manually Paused&apos;&#13;&#10;        when &quot;Advertising Status&quot; = &apos;Paused No Traffic&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Paused No Traffic&apos;&#13;&#10;        when &quot;Advertising Status&quot; = &apos;Suspended&apos; and &quot;Previous Advertising Status&quot; != &apos;Suspended&apos; then &apos;Suspended&apos;  -- Change this to suspended&#13;&#10;         when &quot;Advertising Status&quot; != &apos;Suspended&apos; and &quot;Previous Advertising Status&quot; = &apos;Suspended&apos; then &apos;Manually Reactivated&apos;&#13;&#10;&#13;&#10;        else &apos;No Change&apos;&#13;&#10;    end) as &quot;Advertising Status Change&quot;,&#13;&#10;    (case &#13;&#10;        when hotel_property_status_changes.&quot;Hotel Property Advertising Status Value&quot; &gt;&gt; 0 then &apos;Active&apos; &#13;&#10;        when hotel_property_status_changes.&quot;Hotel Property Advertising Status Value&quot; = 0 then &apos;Paused&apos;&#13;&#10;    end) as &quot;Hotel Property Advertising Status&quot;,&#13;&#10;    (case &#13;&#10;        when hotel_property_status_changes.&quot;Previous Hotel Property Advertising Status Value&quot; &gt;&gt; 0 then &apos;Active&apos; &#13;&#10;        when hotel_property_status_changes.&quot;Previous Hotel Property Advertising Status Value&quot; = 0 then &apos;Paused&apos; &#13;&#10;    end) as &quot;Previous Hotel Property Advertising Status&quot;,&#13;&#10;    (case &#13;&#10;        when hotel_property_status_changes.&quot;Hotel Property Is New Value&quot; &gt;&gt; 0 then &apos;New&apos;&#13;&#10;        when hotel_property_status_changes.&quot;Hotel Property Advertising Status Change Value&quot; &lt;&lt; 0 then &apos;Paused&apos;&#13;&#10;        when hotel_property_status_changes.&quot;Hotel Property Advertising Status Change Value&quot; &gt;&gt; 0 then &apos;Reactivated&apos;&#13;&#10;        else &apos;No Change&apos;&#13;&#10;    end) as &quot;Hotel Property Advertising Status Change&quot;&#13;&#10;from&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;-------------START 1st main subquery [users]----------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;(&#13;&#10;    select&#13;&#10;        entities_to_users.*,&#13;&#10;        (case when entities_to_users.&quot;User ID&quot; = primary_users.primary_user then 1 else 0 end) as &quot;Is Primary User&quot;,&#13;&#10;        hotel_count.&quot;Distinct Hotel Properties&quot;,&#13;&#10;        hotel_count.&quot;Distinct Entities&quot;,&#13;&#10;        hotel_count.&quot;User First Auction Participation&quot;,&#13;&#10;        hotel_count.&quot;Strategic Account Type&quot;,&#13;&#10;        hotel_count.&quot;Known Rotator Type&quot;&#13;&#10;    from&#13;&#10;    (&#13;&#10;        select&#13;&#10;            e.id as &quot;Advertiser ID&quot;,&#13;&#10;            e.telephone as &quot;Phone Number&quot;,&#13;&#10;            (u.first_name || &apos; &apos; || u.last_name) as &quot;User Name&quot;,&#13;&#10;            u.email as &quot;User Email&quot;,&#13;&#10;            u.id as &quot;User ID&quot;,&#13;&#10;            e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;            channel_types.&quot;Channel Status&quot;&#13;&#10;        from intent_media_production.entities e&#13;&#10;        left join&#13;&#10;        (&#13;&#10;            select &#13;&#10;                e.id as advertiser_id,&#13;&#10;                (case&#13;&#10;                    when multi_channel_hotel_properties.hotel_property_id is null then &apos;Only Channel&apos;&#13;&#10;                    when multi_channel_hotel_properties.min_first_auction_participation = e.first_auction_participation then &apos;First Channel&apos; &#13;&#10;                    else &apos;Latter Channel&apos; &#13;&#10;                end) as &quot;Channel Status&quot;&#13;&#10;            from intent_media_production.entities e&#13;&#10;            left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;            left join &#13;&#10;            (&#13;&#10;                select&#13;&#10;                    hpa.hotel_property_id,&#13;&#10;                    min(first_auction_participation) as min_first_auction_participation&#13;&#10;                from intent_media_production.hotel_property_advertisers hpa &#13;&#10;                left join intent_media_production.entities e on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;                where e.active = 1 &#13;&#10;                    and e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                group by &#13;&#10;                    hpa.hotel_property_id&#13;&#10;                having count(e.id) &gt;&gt; 1&#13;&#10;            ) multi_channel_hotel_properties&#13;&#10;            on multi_channel_hotel_properties.hotel_property_id = hpa.hotel_property_id&#13;&#10;            where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;            and e.active = 1&#13;&#10;        ) channel_types&#13;&#10;        on channel_types.advertiser_id = e.id&#13;&#10;        right join intent_media_production.memberships m on m.entity_id = e.id&#13;&#10;        right join intent_media_production.users u on u.id = m.user_id &#13;&#10;        where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;            and e.active = 1&#13;&#10;            and e.first_auction_participation is not null&#13;&#10;            and m.active = 1&#13;&#10;            &#13;&#10;    ) entities_to_users&#13;&#10;    left join &#13;&#10;    (&#13;&#10;        select &#13;&#10;            m.entity_id as entity_id, &#13;&#10;            min(user_id) as primary_user &#13;&#10;        from intent_media_production.memberships m&#13;&#10;        where m.active = 1&#13;&#10;        group by &#13;&#10;            m.entity_id&#13;&#10;    ) primary_users &#13;&#10;    on entities_to_users.&quot;Advertiser ID&quot; = primary_users.entity_id&#13;&#10;    left join&#13;&#10;    (&#13;&#10;        select&#13;&#10;            u.email &quot;User Email&quot;,&#13;&#10;            count(distinct(hpa.hotel_property_id)) as &quot;Distinct Hotel Properties&quot;,&#13;&#10;            count(distinct(e.id)) as &quot;Distinct Entities&quot;,&#13;&#10;            min(e.first_auction_participation at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as &quot;User First Auction Participation&quot;,&#13;&#10;            (case when u.strategic_account = 1 then &apos;Strategic Accounts&apos; else &apos;Other Accounts&apos; end) as &quot;Strategic Account Type&quot;,&#13;&#10;            (case when u.known_property_rotator = 1 then &apos;Known Rotators&apos; else &apos;Other Accounts&apos; end) as &quot;Known Rotator Type&quot;&#13;&#10;        from intent_media_production.users u&#13;&#10;        left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;        left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;        left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;        where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;            and e.active = 1&#13;&#10;            and m.active = 1&#13;&#10;           &#13;&#10;        group by&#13;&#10;            u.email,&#13;&#10;            (case when u.strategic_account = 1 then &apos;Strategic Accounts&apos; else &apos;Other Accounts&apos; end),&#13;&#10;            (case when u.known_property_rotator = 1 then &apos;Known Rotators&apos; else &apos;Other Accounts&apos; end)&#13;&#10;    ) hotel_count&#13;&#10;    on entities_to_users.&quot;User Email&quot; = hotel_count.&quot;User Email&quot;&#13;&#10;) users&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;-------------END 1st main subquery [users]------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#13;&#10;left join&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;-------------START 2nd main subquery [status_changes]-------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#13;&#10;(&#13;&#10;-----------------This the scond part of the query  For definitions refer to SSN definition doc&#13;&#10;----------&#13;&#10;------------URL https://docs.google.com/a/intentmedia.com/document/d/&#13;&#10;-- 1YwAY_fjGeP1H1kFw5GgjHXuSb4XAc6qnvZnY2aI1zOQ/edit- Author Sushmit Roy Changed on 13th Feb 2015-------------------------&#13;&#10;SELECT&#13;&#10;    status_change_each_previous_day.Date                          AS DATE,&#13;&#10;    status_change_each_previous_day.&apos;Advertiser ID&apos;               AS &quot;Advertiser ID&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Advertiser Name&apos;             AS &quot;Advertiser Name&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Hotel Property ID&apos;           AS &quot;Hotel Property ID&quot;,&#13;&#10;    status_change_each_previous_day.&apos;First Auction Participation&apos; AS &quot;First Auction Participation&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Sold Date&apos;                   AS &quot;Sold Date&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Is New&apos;                      AS &quot;Is New&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Advertising Status&apos;          AS &quot;Advertising Status&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Budget Type&apos;                 AS&quot;Budget Type&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Budget&apos;                      AS &quot;Budget&quot;,&#13;&#10;    status_change_each_previous_day.&quot;Change Yesterday or Today&quot;,&#13;&#10;    LAG(status_change_each_previous_day.&apos;Advertising Status&apos;,1) OVER(PARTITION BY&#13;&#10;    status_change_each_previous_day.&apos;Advertiser ID&apos; ORDER BY status_change_each_previous_day.Date)&#13;&#10;                                                           AS &apos;Previous Advertising Status&apos;,&#13;&#10;    status_change_each_previous_day.&apos;Previous Budget Type&apos; AS &quot;Previous Budget Type&quot;,&#13;&#10;    status_change_each_previous_day.&apos;Previous Budget&apos;      AS &quot;Previous Budget&quot;&#13;&#10;FROM&#13;&#10;    ( /* Inner Query 4 : starts  */ &#13;&#10;        SELECT&#13;&#10;            status_change_each_day.date_each_day_et                              AS DATE,&#13;&#10;            status_change_each_day.advertiser_id                                 AS &quot;Advertiser ID&quot;,&#13;&#10;            status_change_each_day.name                                        AS &quot;Advertiser Name&quot;,&#13;&#10;            status_change_each_day.hotel_property_id                         AS &quot;Hotel Property ID&quot;,&#13;&#10;            status_change_each_day.first_auction_participation     AS &quot;First Auction Participation&quot;,&#13;&#10;            DATE(NEW_TIME(status_change_each_day.first_auction_participation,&apos;UTC&apos;,&apos;EST&apos;)) AS&#13;&#10;            &quot;Sold Date&quot;,&#13;&#10;            CASE&#13;&#10;                WHEN (status_change_each_day.date_each_day_et &lt;&lt;= DATE(NEW_TIME&#13;&#10;                        (status_change_each_day.first_auction_participation,&apos;UTC&apos;,&apos;EST&apos;)))&#13;&#10;                THEN 1&#13;&#10;                ELSE 0&#13;&#10;            END AS &quot;Is New&quot;,&#13;&#10;            CASE&#13;&#10;                WHEN (status_change_each_day.pa_date IS NOT NULL)&#13;&#10;                OR  (status_change_each_day.date_each_day_et &lt;&lt;= DATE(NEW_TIME&#13;&#10;                        (status_change_each_day.first_auction_participation,&apos;UTC&apos;,&apos;EST&apos;)))&#13;&#10;                THEN &apos;Active&apos;&#13;&#10;                WHEN suspended_status_daily = &apos;Suspended_Status&apos;&#13;&#10;                THEN &apos;Suspended&apos;&#13;&#10;                WHEN (status_change_each_day.pa_date IS NULL)&#13;&#10;                AND (status_change_each_day.advertiser_budget_type =&apos;MONTHLY&apos; or status_change_each_day.Last_Budget_Type =&apos;MONTHLY&apos;) -- Review and check if status != suspended&#13;&#10;                AND (status_change_each_day.advertiser_budget &lt;&lt; 0.25 or  status_change_each_day.Last_Budget &lt;&lt; 0.25)&#13;&#10;                THEN &apos;Active with Zeroed Out Recurring Budget&apos;&#13;&#10;                WHEN (status_change_each_day.pa_date IS NULL)&#13;&#10;                AND (status_change_each_day.advertiser_budget_type !=&apos;MONTHLY&apos;  or status_change_each_day.Last_Budget_Type !=&apos;MONTHLY&apos;)  -- Review and check if status != suspended&#13;&#10;                AND (status_change_each_day.advertiser_budget &lt;&lt; 0.25  or  status_change_each_day.Last_Budget &lt;&lt; 0.25)&#13;&#10;                THEN &apos;Paused with Zeroed Out Non-Recurring Budget&apos;&#13;&#10;                WHEN (status_change_each_day.pa_date IS NULL) AND (status_change_each_day.advertiser_budget &gt;&gt;= 0.25 or status_change_each_day.Last_Budget &gt;&gt;= 0.25)&#13;&#10;                AND (status_change_each_day.max_change_date &gt;&gt;=&#13;&#10;                        status_change_each_day.max_participation_date or (status_change_each_day.max_change_date is not null and  status_change_each_day.max_participation_date is  null))&#13;&#10;                THEN &apos;Manually Paused&apos;&#13;&#10;                WHEN (status_change_each_day.pa_date IS NULL) AND (status_change_each_day.advertiser_budget &gt;&gt;= 0.25 or status_change_each_day.Last_Budget &gt;&gt;= 0.25)&#13;&#10;                AND ((status_change_each_day.max_change_date &lt;&lt;&#13;&#10;                        status_change_each_day.max_participation_date ) or (status_change_each_day.max_change_date is null and  status_change_each_day.max_participation_date is not null))&#13;&#10;                THEN &apos;Paused No Traffic&apos;&#13;&#10;&#13;&#10;                ELSE &apos;Invalid Status&apos;&#13;&#10;            END                                           AS &quot;Advertising Status&quot;,&#13;&#10;            status_change_each_day.advertiser_budget_type AS &quot;Budget Type&quot;,&#13;&#10;            status_change_each_day.advertiser_budget      AS &quot;Budget&quot;,&#13;&#10;            CASE&#13;&#10;                WHEN (status_change_each_day.date_each_day_et =&#13;&#10;                        status_change_each_day.max_change_date)&#13;&#10;                OR  (status_change_each_day.date_each_day_et =&#13;&#10;                        (status_change_each_day.max_change_date + interval &apos;1 day&apos;))&#13;&#10;                THEN 1&#13;&#10;                ELSE 0&#13;&#10;            END AS &quot;Change Yesterday or Today&quot;,&#13;&#10;            LAG(status_change_each_day.advertiser_budget,1) OVER(PARTITION BY &#13;&#10;            status_change_each_day.advertiser_id ORDER BY status_change_each_day.date_each_day_et)&#13;&#10;            AS &quot;Previous Budget&quot;,&#13;&#10;            LAG(status_change_each_day.advertiser_budget_type,1) OVER(PARTITION BY&#13;&#10;            status_change_each_day.advertiser_id ORDER BY status_change_each_day.date_each_day_et)&#13;&#10;            AS &quot;Previous Budget Type&quot;&#13;&#10;        FROM&#13;&#10;            (/* Inner Query 3 : starts  */ &#13;&#10;                SELECT&#13;&#10;                    advertiser_each_day_table.*,&#13;&#10;                    hpa.hotel_property_id ,&#13;&#10;                    pa.advertiser_id                AS pa_advertiser_id,&#13;&#10;                    pa.aggregation_level_date_in_et AS pa_date,&#13;&#10;                    MAX(aggregation_level_date_in_et) OVER (PARTITION BY&#13;&#10;                    advertiser_each_day_table.advertiser_id ORDER BY date_each_day_et ) AS&#13;&#10;                                                         max_participation_date,&#13;&#10;                    max_date_calc_table.advertiser_id   AS max_date_calc_advertiser_id,&#13;&#10;                    max_date_calc_table.date_in_et_hsac AS date_in_et_hsac,&#13;&#10;                    MAX(date_in_et_hsac) OVER (PARTITION BY advertiser_each_day_table.advertiser_id&#13;&#10;                    ORDER BY date_each_day_et ) AS max_change_date,&#13;&#10;                    budget_table.advertiser_id  AS budget_advertiser_id ,&#13;&#10;                    budget_table.date_in_et     AS budget_date_each_day_et,&#13;&#10;                    budget_table.advertiser_budget,&#13;&#10;                    budget_table.advertiser_budget_type,&#13;&#10;                    LAST_VALUE(budget_table.advertiser_budget_type IGNORE NULLS ) OVER (PARTITION BY&#13;&#10;                    advertiser_each_day_table.advertiser_id ORDER BY date_each_day_et ) AS&#13;&#10;                    Last_Budget_Type,&#13;&#10;                    LAST_VALUE(budget_table.advertiser_budget IGNORE NULLS ) OVER (PARTITION BY&#13;&#10;                    advertiser_each_day_table.advertiser_id ORDER BY date_each_day_et ) AS&#13;&#10;                    Last_Budget,&#13;&#10;                    suspend_status_change.advertiser_id AS suspend_status_change_advertiser_id,&#13;&#10;                    suspend_status_change.date_susp_day_est,&#13;&#10;                    suspend_status_change.suspended_status,&#13;&#10;                    LAST_VALUE(suspended_status IGNORE NULLS ) OVER (PARTITION BY&#13;&#10;                    advertiser_each_day_table.advertiser_id ORDER BY date_each_day_et ) AS&#13;&#10;                    suspended_status_daily&#13;&#10;                FROM&#13;&#10;                    (/* Inner Query 2 : starts */&#13;&#10;                        SELECT&#13;&#10;                            id AS advertiser_id,&#13;&#10;                            name,&#13;&#10;                            first_auction_participation,&#13;&#10;                            DATE(slice_time) AS date_each_day_et&#13;&#10;                        FROM&#13;&#10;                            (/* Inner Query 1 : starts */&#13;&#10;                                SELECT&#13;&#10;                                    id,&#13;&#10;                                    name,&#13;&#10;                                    first_auction_participation,&#13;&#10;                                    DATE(NEW_TIME(first_auction_participation,&apos;GMT&apos;,&apos;EST&apos;)) AS&#13;&#10;                                    date_interpol_field&#13;&#10;                                FROM&#13;&#10;                                    intent_media_production.entities&#13;&#10;                                WHERE&#13;&#10;                                    active = 1&#13;&#10;                                AND entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                                AND first_auction_participation IS NOT NULL&#13;&#10;                                UNION&#13;&#10;                                SELECT&#13;&#10;                                    id,&#13;&#10;                                    name,&#13;&#10;                                    first_auction_participation,&#13;&#10;                                    DATE(NEW_TIME(CURRENT_TIMESTAMP,&apos;GMT&apos;,&apos;EST&apos;) -1) AS&#13;&#10;                                    date_interpol_field&#13;&#10;                                FROM&#13;&#10;                                     intent_media_production.entities&#13;&#10;                                WHERE&#13;&#10;                                    active = 1&#13;&#10;                                AND entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                                AND first_auction_participation IS NOT NULL )&#13;&#10;                            advertiser_min_max_day_table /* Inner Query 1 : ends  */ TIMESERIES slice_time AS &apos;1 day&apos; OVER&#13;&#10;                            (PARTITION BY id,name,first_auction_participation ORDER BY CAST&#13;&#10;                            (date_interpol_field AS TIMESTAMP)) ) /* Inner Query 2 : ends  */advertiser_each_day_table /* Purpose: advertiser_each_day_table for this to create rows for each advertiser id begining first auction day to Current day -1*/&#13;&#10;                            /* left join starts to get Hotel id */ /* not for all left joins its necessary that we have one row per day per advertiser id else the left join leads to multple rows for a day .The purpose is to check the daily change ,hence the maximun */&#13;&#10;                LEFT JOIN&#13;&#10;                    intent_media_production.hotel_property_advertisers hpa&#13;&#10;                ON&#13;&#10;                    hpa.hotel_ssr_advertiser_id = advertiser_each_day_table.advertiser_id /* to get the Hotel  id */&#13;&#10;                      /* left join starts to get participating advertiser on particular days for max participating date refer doc*/&#13;&#10;                LEFT JOIN&#13;&#10;                    (&#13;&#10;                        SELECT&#13;&#10;                            aggregation_level_date_in_et ,&#13;&#10;                            advertiser_id&#13;&#10;                        FROM&#13;&#10;                            intent_media_production.participating_advertisers&#13;&#10;                        GROUP BY&#13;&#10;                            aggregation_level_date_in_et ,&#13;&#10;                            advertiser_id) pa&#13;&#10;                ON&#13;&#10;                    (&#13;&#10;                        advertiser_each_day_table.advertiser_id = pa.advertiser_id)&#13;&#10;                AND (&#13;&#10;                        advertiser_each_day_table.date_each_day_et =&#13;&#10;                        pa.aggregation_level_date_in_et)&#13;&#10;                          /* left join starts to get max date change --For max_change_date refer doc s*/&#13;&#10;                LEFT JOIN&#13;&#10;                    (&#13;&#10;                        SELECT&#13;&#10;                            advertiser_id,&#13;&#10;                            DATE(NEW_TIME(created_at, &apos;UTC&apos;,&apos;America/New_York&apos;) ) AS&#13;&#10;                            date_in_et_hsac&#13;&#10;                        FROM&#13;&#10;                            intent_media_production.hotel_ssr_advertiser_changes&#13;&#10;                        where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;or (change_type = &apos;Campaign Status&apos; and new_settings = &apos;Paused&apos;)&#13;&#10;                        GROUP BY&#13;&#10;                            advertiser_id,&#13;&#10;                            DATE(NEW_TIME(created_at, &apos;UTC&apos;,&apos;America/New_York&apos; )) )&#13;&#10;                    max_date_calc_table&#13;&#10;                ON&#13;&#10;                    (&#13;&#10;                        advertiser_each_day_table.advertiser_id = max_date_calc_table.advertiser_id&#13;&#10;                    )&#13;&#10;                AND (&#13;&#10;                        advertiser_each_day_table.date_each_day_et =&#13;&#10;                        max_date_calc_table.date_in_et_hsac)&#13;&#10;                          /* left join starts to get budget type and  budget each day*/&#13;&#10;                LEFT JOIN&#13;&#10;                    (&#13;&#10;                        SELECT&#13;&#10;                            latest.date_in_et,&#13;&#10;                            latest.advertiser_id,&#13;&#10;                            hb.effective_budget AS advertiser_budget,&#13;&#10;                            hb.budget_type      AS advertiser_budget_type&#13;&#10;                        FROM&#13;&#10;                            (&#13;&#10;                                SELECT&#13;&#10;                                    date_in_et,&#13;&#10;                                    advertiser_id,&#13;&#10;                                    MAX(id) AS latest_id&#13;&#10;                                FROM&#13;&#10;                                    intent_media_production.historical_budgets&#13;&#10;                                GROUP BY&#13;&#10;                                    date_in_et,&#13;&#10;                                    advertiser_id) latest&#13;&#10;                        LEFT JOIN&#13;&#10;                            intent_media_production.historical_budgets hb&#13;&#10;                        ON&#13;&#10;                            latest.latest_id = hb.id ) AS budget_table&#13;&#10;                ON&#13;&#10;                    (&#13;&#10;                        advertiser_each_day_table.advertiser_id = budget_table.advertiser_id)&#13;&#10;                AND (&#13;&#10;                        advertiser_each_day_table.date_each_day_et = budget_table.date_in_et)&#13;&#10;                         /* left join starts to get day the advertiser was susupended*/&#13;&#10;                LEFT JOIN&#13;&#10;                    (&#13;&#10;                        SELECT&#13;&#10;                            advertiser_id,&#13;&#10;                            date_susp_day_est,&#13;&#10;                            change_type ,&#13;&#10;                            old_settings,&#13;&#10;                            new_settings,&#13;&#10;                            CASE&#13;&#10;                                WHEN old_settings = &apos;False&apos;&#13;&#10;                                AND new_settings = &apos;True&apos;&#13;&#10;                                THEN &apos;Suspended_Status&apos;&#13;&#10;                                WHEN old_settings = &apos;True&apos;&#13;&#10;                                AND new_settings = &apos;False&apos;&#13;&#10;                                THEN &apos;Unsuspended_Status&apos;&#13;&#10;                                ELSE &apos;Invalid&apos;&#13;&#10;                            END AS suspended_status&#13;&#10;                        FROM&#13;&#10;                            ( /*this inner query captures the last change for a particular advertiser : If there are multiple changes in a day only the last change is relevant */&#13;&#10;                                SELECT&#13;&#10;                                    *,&#13;&#10;                                    DATE (NEW_TIME(created_at ,&apos;UTC&apos;,&apos;EST&apos;)) AS date_susp_day_est,&#13;&#10;                                    RANK() OVER ( PARTITION BY advertiser_id , DATE (NEW_TIME&#13;&#10;                                    (created_at ,&apos;UTC&apos;,&apos;EST&apos;)) ORDER BY created_at DESC) AS&#13;&#10;                                    RANK_DAY_STATUS&#13;&#10;                                FROM&#13;&#10;                                    intent_media_production.hotel_ssr_advertiser_changes&#13;&#10;                                WHERE&#13;&#10;                                    change_type = &apos;Suspended&apos;&#13;&#10;                                ORDER BY&#13;&#10;                                    advertiser_id,&#13;&#10;                                    created_at) rank_susp_table_daily&#13;&#10;                        WHERE&#13;&#10;                            RANK_DAY_STATUS=1 ) suspend_status_change&#13;&#10;                ON&#13;&#10;                    (&#13;&#10;                        advertiser_each_day_table.advertiser_id =&#13;&#10;                        suspend_status_change.advertiser_id)&#13;&#10;                AND (&#13;&#10;                        advertiser_each_day_table.date_each_day_et =&#13;&#10;                        suspend_status_change.date_susp_day_est)&#13;&#10;                /*ORDER BY&#13;&#10;                    advertiser_each_day_table.advertiser_id,&#13;&#10;                    advertiser_each_day_table.date_each_day_et*/)/* Inner Query 3 : ends  */ &#13;&#10;                     status_change_each_day ) /* Inner Query 4 : ends  */ &#13;&#10;    status_change_each_previous_day) status_changes&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;-------------END 2nd main subquery [status_changes]---------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#13;&#10;on users.&quot;Advertiser ID&quot; = status_changes.&quot;Advertiser ID&quot;&#13;&#10;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = users.&quot;Advertiser ID&quot;&#13;&#10;left join intent_media_production.intent_media_hotel_properties_markets imhpm on imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;left join intent_media_production.intent_media_markets imm on imm.id = imhpm.intent_media_market_id&#13;&#10;left join intent_media_production.z_hotel_ssr_advertiser_status z on z.advertiser_id = users.&quot;Advertiser ID&quot;&#13;&#10;&#13;&#10;left join&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;-------------START 3rd main subquery [hotel_property_status_changes]----------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#13;&#10;(&#13;&#10;    select&#13;&#10;        Date,&#13;&#10;        &quot;Hotel Property ID&quot;,&#13;&#10;        min(&quot;First Auction Participation&quot;) as &quot;First Auction Participation&quot;,&#13;&#10;        min(&quot;Is New Value&quot;) as &quot;Hotel Property Is New Value&quot;,&#13;&#10;        max(&quot;Advertising Status Value&quot;) as &quot;Hotel Property Advertising Status Value&quot;,&#13;&#10;        max(&quot;Previous Advertising Status Value&quot;) as &quot;Previous Hotel Property Advertising Status Value&quot;,&#13;&#10;        sum(&quot;Advertising Status Value&quot; - &quot;Previous Advertising Status Value&quot;) as &quot;Hotel Property Advertising Status Change Value&quot;&#13;&#10;    from&#13;&#10;    (&#13;&#10;        select&#13;&#10;            sold.date_in_et as Date,&#13;&#10;            hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;            sold.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;            sold.first_auction_participation_in_et as &quot;First Auction Participation&quot;,&#13;&#10;            (case when sold.date_in_et = sold.sold_date_in_et then 1 else 0 end) as &quot;Is New Value&quot;,&#13;&#10;            (case&#13;&#10;                when pas.advertiser_id is not null then 1&#13;&#10;                when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type = &apos;MONTHLY&apos;) then 1&#13;&#10;                when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then 0&#13;&#10;                when pas.advertiser_id is null and budgets.effective_budget &gt;&gt;= 0.25 then 0&#13;&#10;            end) as &quot;Advertising Status Value&quot;,&#13;&#10;            (case&#13;&#10;                when previous_pas.advertiser_id is not null then 1&#13;&#10;                when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type = &apos;MONTHLY&apos;) then 1&#13;&#10;                when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then 0&#13;&#10;                when previous_pas.advertiser_id is null and previous_budgets.effective_budget &gt;&gt;= 0.25 then 0&#13;&#10;            end) as &quot;Previous Advertising Status Value&quot;&#13;&#10;        from&#13;&#10;        (&#13;&#10;            select *&#13;&#10;            from&#13;&#10;            ( /* dates */&#13;&#10;                select &#13;&#10;                    distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;                from intent_media_production.participating_advertisers&#13;&#10;            ) dates,&#13;&#10;            ( /* sold_hotels */&#13;&#10;                select&#13;&#10;                    id as advertiser_id,&#13;&#10;                    name as advertiser_name,&#13;&#10;                    (first_auction_participation at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;                    date(first_auction_participation at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;                from intent_media_production.entities&#13;&#10;                where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                    and active = 1 &#13;&#10;                    and first_auction_participation is not null&#13;&#10;                    &#13;&#10;            ) sold_hotels&#13;&#10;            where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et&#13;&#10;        ) sold             &#13;&#10;        /* get hotel property */&#13;&#10;        left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = sold.advertiser_id&#13;&#10;        /* get all participating advertisers for that day */&#13;&#10;        left join&#13;&#10;        (&#13;&#10;            select&#13;&#10;                pa.aggregation_level_date_in_et,&#13;&#10;                pa.advertiser_id&#13;&#10;            from intent_media_production.participating_advertisers pa&#13;&#10;            group by &#13;&#10;                pa.aggregation_level_date_in_et,&#13;&#10;                pa.advertiser_id&#13;&#10;        ) pas&#13;&#10;        on sold.date_in_et = pas.aggregation_level_date_in_et and sold.advertiser_id = pas.advertiser_id&#13;&#10;        /* get all participating advertisers for the previous day */&#13;&#10;        left join&#13;&#10;        (&#13;&#10;            select&#13;&#10;                pa.aggregation_level_date_in_et,&#13;&#10;                pa.advertiser_id&#13;&#10;            from intent_media_production.participating_advertisers pa&#13;&#10;            group by &#13;&#10;                pa.aggregation_level_date_in_et,&#13;&#10;                pa.advertiser_id&#13;&#10;        ) previous_pas&#13;&#10;        on sold.date_in_et = date(previous_pas.aggregation_level_date_in_et + interval &apos;1 day&apos;) and sold.advertiser_id = previous_pas.advertiser_id&#13;&#10;        /* get all budgets for that day */&#13;&#10;        left join&#13;&#10;        (&#13;&#10;            select&#13;&#10;                latest.date_in_et,&#13;&#10;                latest.advertiser_id,&#13;&#10;                effective_budget,&#13;&#10;                budget_type&#13;&#10;            from&#13;&#10;            (&#13;&#10;                select&#13;&#10;                    date_in_et,&#13;&#10;                    advertiser_id,&#13;&#10;                    max(id) as latest_id&#13;&#10;            from intent_media_production.historical_budgets&#13;&#10;            group by &#13;&#10;                date_in_et, &#13;&#10;                advertiser_id&#13;&#10;            ) latest&#13;&#10;            left join intent_media_production.historical_budgets hb &#13;&#10;            on latest.date_in_et = hb.date_in_et &#13;&#10;            and latest.advertiser_id = hb.advertiser_id&#13;&#10;            and latest.latest_id = hb.id&#13;&#10;        ) budgets&#13;&#10;        on sold.date_in_et = budgets.date_in_et and sold.advertiser_id = budgets.advertiser_id&#13;&#10;        /* get all budgets for the previous day */&#13;&#10;        left join&#13;&#10;        (&#13;&#10;            select&#13;&#10;                latest.date_in_et,&#13;&#10;                latest.advertiser_id,&#13;&#10;                effective_budget,&#13;&#10;                budget_type&#13;&#10;            from&#13;&#10;            (&#13;&#10;                select&#13;&#10;                    date_in_et,&#13;&#10;                    advertiser_id,&#13;&#10;                    max(id) as latest_id&#13;&#10;            from intent_media_production.historical_budgets&#13;&#10;            group by &#13;&#10;                date_in_et, &#13;&#10;                advertiser_id   &#13;&#10;            ) latest&#13;&#10;            left join intent_media_production.historical_budgets hb &#13;&#10;            on latest.date_in_et = hb.date_in_et &#13;&#10;            and latest.advertiser_id = hb.advertiser_id&#13;&#10;            and latest.latest_id = hb.id&#13;&#10;        ) previous_budgets&#13;&#10;        on sold.date_in_et = date(previous_budgets.date_in_et + interval &apos;1 day&apos;) and previous_budgets.advertiser_id = sold.advertiser_id&#13;&#10;    ) hotel_status_changes_with_property&#13;&#10;    group by &#13;&#10;        Date, &#13;&#10;        &quot;Hotel Property ID&quot;&#13;&#10;) hotel_property_status_changes&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;-------------END 3rd main subquery [hotel_property_status_changes]------------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#13;&#10;on status_changes.Date = hotel_property_status_changes.Date&#13;&#10;and status_changes.&quot;Hotel Property ID&quot; = hotel_property_status_changes.&quot;Hotel Property ID&quot;&#13;&#10;and (users.&quot;Channel Status&quot; = &apos;Only Channel&apos; or users.&quot;Channel Status&quot; = &apos;First Channel&apos;)&#13;&#10;where status_changes.Date &lt;&lt; date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;--order by advertiser_id, Date desc &#13;&#10;&#13;&#10;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;' value='Avg. CPC' />
          <alias key='&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;' value='Number of Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;' value='Net Hotels' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Active Advertising Status Count (copy):qk]&quot;' value='Suspended Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;' value='Paused Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;' value='Active Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;' value='Sold Advertisers' />
        </aliases>
      </column>
      <column caption='Suspended Advertising Status Count' datatype='integer' name='[Active Advertising Status Count (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Suspended&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Suspended&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
      </column>
      <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Aggregated Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Calculation_5810917111000078]),0)+IFNULL(SUM([Calculation_0211011162411911]),0)+IFNULL(MAX([Calculation_2131011162824636]),0)' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
      </column>
      <column caption='Aggregated Monthly Budget' datatype='real' name='[Calculation_0211011162411911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = [Date] AND LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Advertiser ID Dimension' datatype='integer' name='[Calculation_0681002145521444]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Advertiser ID]' scope-isolation='false' />
      </column>
      <column caption='Current Month' datatype='string' name='[Calculation_1990917143850584]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(TODAY()-1)&#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;February&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Aggregated ASAP Budget' datatype='real' name='[Calculation_2131011162824636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;asap&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='Advertising Status Value' datatype='integer' name='[Calculation_2381030155234572]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status],&apos;Active&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Paused Advertising Status Count' datatype='integer' name='[Calculation_2491002135715177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status], &apos;Paused&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Paused&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
      </column>
      <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Aggregated Daily Budget' datatype='real' name='[Calculation_5810917111000078]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;daily&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='Aggregated Monthly/ASAP Budget' datatype='real' name='[Calculation_6870917111031156]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;asap&apos; OR LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
      </column>
      <column caption='Sold Advertiser Count' datatype='integer' name='[Calculation_7421002135957628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD([Hotel Property ID])&#13;&#10;    ELSE COUNTD([Advertiser ID])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Current Advertising Status' datatype='string' name='[Current Advertiser Status]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Advertising Status] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Current Budget Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget Type] END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;DAILY&quot;' value='Daily' />
          <alias key='&quot;MONTHLY&quot;' value='Monthly' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[Current Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Month Name]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;    WHEN &quot;Quarter&quot; THEN &quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter Status Change Not Null]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[First Hotel Property for User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' name='[First of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is New]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Month Name]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Months Active]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Sold Date],TODAY())' scope-isolation='false' />
      </column>
      <column caption='Net Hotels' datatype='integer' name='[Net Hotels]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Advertiser Value])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Show Spend With Budget]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[User ID]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hotel Property ID]' derivation='CountD' name='[ctd:Hotel Property ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
      <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Advertising Status Count (copy)]' derivation='User' name='[usr:Active Advertising Status Count (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2491002135715177]' derivation='User' name='[usr:Calculation_2491002135715177:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7421002135957628]' derivation='User' name='[usr:Calculation_7421002135957628:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Hotels]' derivation='User' name='[usr:Net Hotels:qk]' pivot='key' type='quantitative' />
      <group name='[Inclusions (Change in Advertising Status,Segment Name,SSN Channel Type)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
          <groupfilter function='level-members' level='[none:Segment Name:nk]' />
          <groupfilter function='level-members' level='[none:SSN Channel Type:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report_hotel_status_changes.tde' schema='Extract' tablename='Extract' update-time='3/24/15 9:22:32 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Adjusted Budget]' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' />
            <calculation column='[Calculation_0211011162411911]' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = [Date] AND LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' />
            <calculation column='[Calculation_0681002145521444]' formula='[Advertiser ID]' />
            <calculation column='[Calculation_2131011162824636]' formula='IF LOWER([Budget Type]) = &apos;asap&apos; THEN [Budget] END' />
            <calculation column='[Calculation_5810917111000078]' formula='IF LOWER([Budget Type]) = &apos;daily&apos; THEN [Budget] END' />
            <calculation column='[Calculation_6870917111031156]' formula='IF LOWER([Budget Type]) = &apos;asap&apos; OR LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' />
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[Filter Status Change Not Null]' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Month Name]' formula='CASE MONTH(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Properties in MPM]' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
            <calculation column='[Show Spend With Budget]' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7149736' timestamp-start='2015-03-24 21:22:31.728000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.477885' group-percentage='0.0682692' measure-ordering='alphabetic' measure-percentage='0.334615' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SSN Channel Type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GDS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5631031142200138:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Reactivated&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Reactivated No Traffic&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Unsuspended&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Manually Reactivated&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Paused for Budget&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;No Change&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Suspended&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Manually Paused&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New Channel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4991009173550856:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010 OTA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;OTA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2012 OTA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2014 GDS&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2013 GDS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2013 OTA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2014 OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2011 OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GDS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Net Hotels:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Active Advertising Status Count (copy):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;</bucket>
            </map>
            <map to='#a5acaf'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41534.409827615738].[ctd:Hotel Property ID:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Advertising Status Change:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Paused for Budget&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Account Paused&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Reactivated&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Manually Paused&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Paused&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
            <member value='&quot;Distinct Hotels&quot;' />
          </members>
        </column>
        <column caption='Graph Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Time&quot;'>
          <calculation class='tableau' formula='&quot;All Time&quot;' />
          <members>
            <member value='&quot;All Time&quot;' />
            <member value='&quot;Year over Year&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41422.531214282404'>
        <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
        </column>
        <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
        </column>
        <column-instance column='[Calculation_9480917143657464]' derivation='User' name='[usr:Calculation_9480917143657464:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.41422.531214282404'>
      <datasources>
        <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
      </datasources>
      <datasource-dependencies datasource='vertica.41422.531214282404'>
        <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Calculation_7481226122412498]' derivation='None' name='[none:Calculation_7481226122412498:nk]' pivot='key' type='nominal' />
        <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_7481226122412498:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Filter for Channel Type:nk]'>
        <groupfilter function='member' level='[none:Filter for Channel Type:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Known Rotator Type:nk]'>
        <groupfilter function='level-members' level='[none:Known Rotator Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:User Name:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:User Name:nk]' />
          <groupfilter function='empty-level' member='[none:User Name:nk]' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='vertica.41534.409827615738'>
      <datasources>
        <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
      </datasources>
      <datasource-dependencies datasource='vertica.41534.409827615738'>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Known Rotator Type:nk]'>
        <groupfilter function='level-members' level='[none:Known Rotator Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:User Name:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:User Name:nk]' />
          <groupfilter function='empty-level' member='[none:User Name:nk]' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Active Advertisers Last Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold, Active, and Paused Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' first-period='-7' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' direction='DESC' />
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:SSN Channel Type:nk] * [vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk])</rows>
        <cols>[vertica.41534.409827615738].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Active Hotels'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold, Active, Paused, and Suspended Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Suspended Advertising Status Count' datatype='integer' name='[Active Advertising Status Count (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Suspended&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Suspended&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Paused Advertising Status Count' datatype='integer' name='[Calculation_2491002135715177]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status], &apos;Paused&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Paused&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Sold Advertiser Count' datatype='integer' name='[Calculation_7421002135957628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD([Hotel Property ID])&#13;&#10;    ELSE COUNTD([Advertiser ID])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active Advertising Status Count (copy)]' derivation='User' name='[usr:Active Advertising Status Count (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2491002135715177]' derivation='User' name='[usr:Calculation_2491002135715177:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7421002135957628]' derivation='User' name='[usr:Calculation_7421002135957628:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Active Advertising Status Count (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[none:Hotel Property ID:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='Number of Hotels' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41534.409827615738].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[Multiple Values]</rows>
        <cols>[vertica.41534.409827615738].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Activity Report by Hotel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekly Activity Report by Hotel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Past 30 Days Click Conversions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversions] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 30 Days Clicks]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Clicks] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 30 Days Conversion Value Sum]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversion Value Sum] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 30 Days ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Past 30 Days Conversion Value Sum])/sum([Past 30 Days Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 30 Days Spend]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Spend] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 31 - 60 Days Click Conversions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 31 - 60 Days Clicks]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Conversion Value Sum]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 31 - 60 Days ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Past 31 - 60 Days Conversion Value Sum])/sum([Past 31 - 60 Days Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Spend]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[ROI % Difference]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Past 30 Days ROI]-[Past 31 - 60 Days ROI])/[Past 31 - 60 Days ROI]' scope-isolation='false' />
            </column>
            <column-instance column='[Past 30 Days Click Conversions]' derivation='Sum' name='[sum:Past 30 Days Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Clicks]' derivation='Sum' name='[sum:Past 30 Days Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Conversion Value Sum]' derivation='Sum' name='[sum:Past 30 Days Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Spend]' derivation='Sum' name='[sum:Past 30 Days Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Click Conversions]' derivation='Sum' name='[sum:Past 31 - 60 Days Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Clicks]' derivation='Sum' name='[sum:Past 31 - 60 Days Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Conversion Value Sum]' derivation='Sum' name='[sum:Past 31 - 60 Days Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Spend]' derivation='Sum' name='[sum:Past 31 - 60 Days Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days ROI]' derivation='User' name='[usr:Past 30 Days ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days ROI]' derivation='User' name='[usr:Past 31 - 60 Days ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ROI % Difference]' derivation='User' name='[usr:ROI % Difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter Status Change Not Null]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[First Hotel Property for User]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter Status Change Not Null]' derivation='None' name='[none:Filter Status Change Not Null:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Primary User]' derivation='None' name='[none:Filter for Primary User:nk]' pivot='key' type='nominal' />
            <column-instance column='[First Hotel Property for User]' derivation='None' name='[none:First Hotel Property for User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Past 30 Days ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Past 31 - 60 Days ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:ROI \% Difference:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Past 30 Days ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Past 31 - 60 Days ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:ROI \% Difference:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41534.409827615738].[none:Date:ok]' direction='DESC' />
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' first-period='-5' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Filter Status Change Not Null:nk]'>
            <groupfilter function='member' level='[none:Filter Status Change Not Null:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Filter for Primary User:nk]'>
            <groupfilter function='member' level='[none:Filter for Primary User:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Properties in MPM:nk]'>
            <groupfilter function='level-members' level='[none:Properties in MPM:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Filter Status Change Not Null:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Filter for Primary User:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41534.409827615738].[:Measure Names]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41534.409827615738].[none:User Email:nk]' value='168' />
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='58' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Advertiser Name:nk]' value='376' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Hotel Property ID:ok]' value='96' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41534.409827615738].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:Date:ok] / ([vertica.41534.409827615738].[none:Advertising Status Change:nk] / ([vertica.41534.409827615738].[none:Advertiser Name:nk] / ([vertica.41534.409827615738].[none:Hotel Property ID:ok] / ([vertica.41534.409827615738].[none:SSN Channel Type:nk] / ([vertica.41534.409827615738].[none:Market Name:nk] / ([vertica.41534.409827615738].[none:Segment Name:nk] / ([vertica.41534.409827615738].[none:User Name:nk] / ([vertica.41534.409827615738].[none:User Email:nk] / [vertica.41534.409827615738].[none:First Hotel Property for User:ok])))))))))</rows>
        <cols>[vertica.41534.409827615738].[:Measure Names]</cols>
        <join-lod-exclude-overrides>
          <column>[vertica.41422.531214282404].[Date]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Average Budget by Market Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Average Budget by Market - </run>
            <run>&lt;</run>
            <run>[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - First of Month]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend - First of Month])/sum([Clicks - First of Month])' scope-isolation='false' />
            </column>
            <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[CPC - First of Month]' derivation='User' name='[usr:CPC - First of Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9480917143657464]' derivation='User' name='[usr:Calculation_9480917143657464:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Advertising Status]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Budget Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
            </column>
            <column caption='Current Month' datatype='string' name='[Calculation_1990917143850584]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(TODAY()-1)&#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;February&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status]' derivation='None' name='[none:Advertising Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Budget Type]' derivation='None' name='[none:Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1990917143850584]' derivation='None' name='[none:Calculation_1990917143850584:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[avg:Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CPC - First of Month:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CPC - First of Month:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status:nk]'>
            <groupfilter function='member' level='[none:Advertising Status:nk]' member='&quot;Active&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Budget Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Budget Type:nk]' />
              <groupfilter function='member' level='[none:Budget Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2013-12-04#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[vertica.41534.409827615738].[none:Market Name:nk]' direction='ASC' />
          <sort class='manual' column='[vertica.41534.409827615738].[none:Segment Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Global Top 10&quot;</bucket>
              <bucket>&quot;Global 11 - 50&quot;</bucket>
              <bucket>&quot;Rest of Latin America&quot;</bucket>
              <bucket>&quot;Rest of North America&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41534.409827615738].[none:Advertising Status:nk]</column>
            <column>[vertica.41534.409827615738].[none:Budget Type:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='width' field='[vertica.41534.409827615738].[:Measure Names]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='28' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Market Name:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[vertica.41534.409827615738].[:Measure Names]' value='bold' />
            <format attr='text-decoration' field='[vertica.41534.409827615738].[none:Budget Type:nk]' value='underline' />
            <format attr='font-weight' field='[vertica.41534.409827615738].[none:Budget Type:nk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[Multiple Values]' />
              <lod column='[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([vertica.41534.409827615738].[none:Segment Name:nk] / [vertica.41534.409827615738].[none:Market Name:nk])</rows>
        <cols>([vertica.41534.409827615738].[none:Budget Type:nk] / [vertica.41534.409827615738].[:Measure Names])</cols>
        <join-lod-include-overrides>
          <column>[vertica.41422.531214282404].[Advertiser Name]</column>
          <column>[vertica.41422.531214282404].[Known Rotator Type]</column>
          <column>[vertica.41422.531214282404].[Strategic Account Type]</column>
          <column>[vertica.41422.531214282404].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Budget and Ad Coverage by Hotel Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Budget and Ad Coverage by Hotel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource caption='budget_changes' name='mysql.41534.586332928244' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource caption='Brand_Data' name='mysql.42071.931415601852' />
          </datasources>
          <datasource-dependencies datasource='mysql.41534.586332928244'>
            <column datatype='integer' name='[Budget Changes]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Budget Changes]' derivation='Max' name='[max:Budget Changes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='mysql.42071.931415601852'>
            <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal'>
            </column>
            <column caption='Chain Name' datatype='string' name='[chain_name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[chain_name]' derivation='None' name='[none:chain_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='p0.0%' name='[% Coverage Loss]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Availability]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Hotel Unavailable)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Bid]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Bid)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Budget)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Ad Coverage]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Days Active' datatype='integer' name='[Calculation_0020917140720157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[First Auction Participation], TODAY()-1)' scope-isolation='false' />
            </column>
            <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='real' datatype-customized='true' name='[Can Serve Ads]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Click Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Click Room Nights Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Clicks To Booked Room Night]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Distinct Hotels]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Eligible Ad Count]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Filtered Ads]+[Impressions]' scope-isolation='false' />
            </column>
            <column caption='Est. Revenue Loss Total from Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Est. Revenue Loss from Bid Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Budget)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Exposed Conversion Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Exposed Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Exposed Room Nights Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' datatype-customized='true' name='[Last Auction Participation]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Potential Media Revenue Gain]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Bid)])+sum([Filtered Ads (Budget)]))*sum([Spend])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0020917140720157]' derivation='Max' name='[max:Calculation_0020917140720157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Can Serve Ads]' derivation='Max' name='[max:Can Serve Ads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7481226122412498]' derivation='None' name='[none:Calculation_7481226122412498:nk]' pivot='key' type='nominal' />
            <column-instance column='[Can Serve Ads]' derivation='None' name='[none:Can Serve Ads:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distinct Hotels]' derivation='None' name='[none:Distinct Hotels:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Primary User]' derivation='None' name='[none:Filter for Primary User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Auction Participation]' derivation='None' name='[none:Last Auction Participation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversion Value Sum]' derivation='Sum' name='[sum:Click Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Room Nights Sum]' derivation='Sum' name='[sum:Click Room Nights Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks To Booked Room Night]' derivation='Sum' name='[sum:Clicks To Booked Room Night:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Count]' derivation='Sum' name='[sum:Eligible Ad Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Conversion Count]' derivation='Sum' name='[sum:Exposed Conversion Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Conversion Value Sum]' derivation='Sum' name='[sum:Exposed Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Room Nights Sum]' derivation='Sum' name='[sum:Exposed Room Nights Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads]' derivation='Sum' name='[sum:Filtered Ads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Coverage Loss]' derivation='User' name='[usr:% Coverage Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Availability]' derivation='User' name='[usr:% Filtered for Availability:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Bid]' derivation='User' name='[usr:% Filtered for Bid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Budget]' derivation='User' name='[usr:% Filtered for Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Coverage]' derivation='User' name='[usr:Ad Coverage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering (copy 2)]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering (copy)]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Budget Spent]' derivation='User' name='[usr:Percent of Budget Spent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Potential Media Revenue Gain]' derivation='User' name='[usr:Potential Media Revenue Gain:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Current Advertising Status' datatype='string' name='[Current Advertiser Status]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Advertising Status] END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Current Budget Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget Type] END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;DAILY&quot;' value='Daily' />
                <alias key='&quot;MONTHLY&quot;' value='Monthly' />
              </aliases>
            </column>
            <column datatype='real' default-format='C1033%' name='[Current Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget] END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Current Advertiser Status]' derivation='None' name='[none:Current Advertiser Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Budget Type]' derivation='None' name='[none:Current Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Budget]' derivation='Sum' name='[sum:Current Budget:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.42071.931415601852].[none:brand_name:nk]'>
            <groupfilter from='&quot;AC Hoteles&quot;' function='range' level='[none:brand_name:nk]' to='&quot;XN Global-RES&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[mysql.42071.931415601852].[none:chain_name:nk]'>
            <groupfilter function='level-members' level='[none:chain_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[sum:Current Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Eligible Ad Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Availability:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Bid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Coverage Loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Potential Media Revenue Gain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Ad Coverage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Clicks To Booked Room Night:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41422.531214282404].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41422.531214282404].[max:Can Serve Ads:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Current Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Eligible Ad Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Availability:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Bid:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Coverage Loss:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Potential Media Revenue Gain:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Ad Coverage:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Clicks To Booked Room Night:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Advertiser Name:nk]'>
            <groupfilter function='level-members' level='[none:Advertiser Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' first-period='-13' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Filter for Primary User:nk]'>
            <groupfilter function='member' level='[none:Filter for Primary User:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Name:nk]'>
            <groupfilter function='level-members' level='[none:Market Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[:Measure Names]</column>
            <column>[vertica.41422.531214282404].[none:Advertiser Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[mysql.42071.931415601852].[none:brand_name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Primary User:nk]</column>
            <column>[vertica.41422.531214282404].[none:Market Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]</column>
            <column>[mysql.42071.931415601852].[none:chain_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[vertica.41534.409827615738].[none:Current Budget Type:nk]' value='40' />
            <format attr='text-align' field='[vertica.41422.531214282404].[none:Advertiser ID:ok]' value='center' />
            <format attr='width' field='[vertica.41422.531214282404].[:Measure Names]' value='154' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41422.531214282404].[:Measure Names]' value='46' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Advertiser Name:nk]' value='268' />
            <format attr='width' field='[vertica.41422.531214282404].[none:User Email:nk]' value='196' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Distinct Hotels:ok]' value='56' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Advertiser ID:ok]' value='244' />
            <format attr='width' field='[mysql.42071.931415601852].[none:brand_name:nk]' value='148' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Can Serve Ads:ok]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41422.531214282404].[:Measure Names]' value='right' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[vertica.41422.531214282404].[none:Market Name:nk]' value='Market'>
              <formatted-text>
                <run>Market</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41422.531214282404].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.42071.931415601852].[none:chain_name:nk] / ([mysql.42071.931415601852].[none:brand_name:nk] / ([vertica.41422.531214282404].[none:Advertiser Name:nk] / ([vertica.41422.531214282404].[none:Advertiser ID:ok] / ([vertica.41422.531214282404].[none:Hotel Property ID:ok] / ([vertica.41422.531214282404].[none:Strategic Account Type:nk] / ([vertica.41422.531214282404].[none:User Name:nk] / ([vertica.41422.531214282404].[none:User Email:nk] / ([vertica.41422.531214282404].[none:Distinct Hotels:ok] / ([vertica.41422.531214282404].[none:Last Auction Participation:ok] / ([vertica.41422.531214282404].[none:SSN Channel Type:nk] / ([vertica.41534.409827615738].[none:Current Advertiser Status:nk] / ([vertica.41422.531214282404].[none:Segment Name:nk] / ([vertica.41422.531214282404].[none:Can Serve Ads:ok] / ([vertica.41422.531214282404].[none:Market Name:nk] / [vertica.41534.409827615738].[none:Current Budget Type:nk])))))))))))))))</rows>
        <cols>[vertica.41422.531214282404].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Budget and Impression Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Impression Share Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Impression Share] &lt; 0.5 THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF ISNULL([Impression Share]) THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF [Impression Share] &lt; 0.7 THEN &quot;50% to &lt;70%&quot;&#13;&#10;ELSE &quot;Greater than 70%&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Impression Share]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Percent of Budget Spent Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Percent of Budget Spent]) THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.1 THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.2 THEN &quot;10-20%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.3 THEN &quot;20-30%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.4 THEN &quot;30-40%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.5 THEN &quot;40-50%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.6 THEN &quot;50-60%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.7 THEN &quot;60-70%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.8 THEN &quot;70-80%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.9 THEN &quot;80-90%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 1.0 THEN &quot;90-100%&quot;&#13;&#10;ELSE &quot;100%+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='CountD' name='[ctd:Advertiser Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7481226122412498]' derivation='None' name='[none:Calculation_7481226122412498:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impression Share Bins]' derivation='User' name='[usr:Impression Share Bins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impression Share]' derivation='User' name='[usr:Impression Share:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Budget Spent Bins]' derivation='User' name='[usr:Percent of Budget Spent Bins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent of Budget Spent]' derivation='User' name='[usr:Percent of Budget Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[vertica.41422.531214282404].[none:Advertiser Name:nk]' direction='DESC' using='[vertica.41422.531214282404].[usr:Impression Share:qk]'>
          </sort>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Greater than 70\%&quot;</bucket>
              <bucket>&quot;50\% to &lt;70\%&quot;</bucket>
              <bucket>&quot;Less than 50\%&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt; 10\%&quot;</bucket>
              <bucket>&quot;10-20\%&quot;</bucket>
              <bucket>&quot;20-30\%&quot;</bucket>
              <bucket>&quot;30-40\%&quot;</bucket>
              <bucket>&quot;40-50\%&quot;</bucket>
              <bucket>&quot;50-60\%&quot;</bucket>
              <bucket>&quot;60-70\%&quot;</bucket>
              <bucket>&quot;70-80\%&quot;</bucket>
              <bucket>&quot;80-90\%&quot;</bucket>
              <bucket>&quot;90-100\%&quot;</bucket>
              <bucket>&quot;100\%+&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='Number of Hotels' />
            <format attr='subtitle' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' field='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' value='auto' />
            <format attr='text-orientation' field='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' value='-90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='total' field='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' value='16' />
            <format attr='font-size' data-class='subtotal' field='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' />
              <lod column='[vertica.41422.531214282404].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41422.531214282404].[ctd:Advertiser Name:qk]</rows>
        <cols>[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Advertiser Name]</column>
          <column>[vertica.41534.409827615738].[Date]</column>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
          <column>[vertica.41534.409827615738].[Strategic Account Type]</column>
          <column>[vertica.41534.409827615738].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Hotel Status Changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Properties in MPM:nk]'>
            <groupfilter function='level-members' level='[none:Properties in MPM:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='true' />
            <encoding attr='space' class='1' field='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41534.409827615738].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='color' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='Change in Advertising&#10;Status'>
              <formatted-text>
                <run>Change in Advertising&#10;Status</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' y-axis-name='[vertica.41534.409827615738].[sum:Advertiser Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0340936183929443' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[sum:Advertiser Value:qk] + [vertica.41534.409827615738].[sum:Advertiser Value:qk])</rows>
        <cols>[vertica.41534.409827615738].[none:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hotel Status Changes Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;No Change&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
              <bucket>&quot;New Channel&quot;</bucket>
              <bucket>&quot;Manually Reactivated&quot;</bucket>
              <bucket>&quot;Reactivated No Traffic&quot;</bucket>
              <bucket>&quot;Manually Paused&quot;</bucket>
              <bucket>&quot;Paused for Budget&quot;</bucket>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[none:Segment Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Global Top 10&quot;</bucket>
              <bucket>&quot;Global 11 - 50&quot;</bucket>
              <bucket>&quot;Rest of Asia Pacific&quot;</bucket>
              <bucket>&quot;Rest of Europe&quot;</bucket>
              <bucket>&quot;Rest of Latin America&quot;</bucket>
              <bucket>&quot;Rest of Middle East&quot;</bucket>
              <bucket>&quot;Rest of North America&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41534.409827615738].[none:Segment Name:nk]' value='148' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='height' field='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='-90' />
            <format attr='font-size' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='9' />
            <format attr='text-orientation' field='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' value='0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='2' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[vertica.41534.409827615738].[none:Segment Name:nk]</rows>
        <cols total='true'>([vertica.41534.409827615738].[none:SSN Channel Type:nk] / [vertica.41534.409827615738].[none:Calculation_5631031142200138:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Impressions by Travel Window'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Travel Window]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7481226122412498]' derivation='None' name='[none:Calculation_7481226122412498:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel Window]' derivation='None' name='[none:Travel Window:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41422.531214282404].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[:Measure Names]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='Ad Calls' />
            <format attr='subtitle' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41422.531214282404].[usr:Click ROI:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[vertica.41422.531214282404].[Multiple Values]' value='54' />
            <format attr='width' field='[vertica.41422.531214282404].[usr:Click ROI:qk]' value='54' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[vertica.41422.531214282404].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[vertica.41422.531214282404].[usr:Click ROI:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41422.531214282404].[Multiple Values] + [vertica.41422.531214282404].[usr:Click ROI:qk])</rows>
        <cols>[vertica.41422.531214282404].[none:Travel Window:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manually Paused'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;OTA&quot;' />
                <member value='&quot;GDS&quot;' />
                <member value='&quot;Distinct Hotels&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Manually Paused&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manually Reactivated'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Manually Reactivated&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Net Hotels and ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Net Hotels' datatype='integer' name='[Net Hotels]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Hotels]' derivation='User' name='[usr:Net Hotels:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Advertiser Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Net Hotels:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='3' first-period='-5' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='ROI' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41534.409827615738].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
            <format attr='break-on-special' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
            <format attr='show-null-value-warning' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[vertica.41534.409827615738].[usr:Net Hotels:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[vertica.41534.409827615738].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[usr:Net Hotels:qk] + [vertica.41534.409827615738].[Multiple Values])</rows>
        <cols>[vertica.41534.409827615738].[none:Date Axis:qk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41422.531214282404].[Known Rotator Type]</column>
          <column>[vertica.41422.531214282404].[Market Name]</column>
          <column>[vertica.41422.531214282404].[Strategic Account Type]</column>
          <column>[vertica.41422.531214282404].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New (New Channel or Brand New Hotel)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Brand New Hotel&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;New Channel&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused Hotels by Months Active'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Months Active]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Sold Date],TODAY())' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[ID]' derivation='CountD' name='[ctd:ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Months Active]' derivation='None' name='[none:Months Active:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused for Budget&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused No Traffic&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='3' first-period='-5' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[ctd:ID:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Months Active:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused Hotels by ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column caption='ID' datatype='integer' name='[Calculation_1151030171422328]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Click ROI Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Click ROI] &lt; 2 THEN &quot;1:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 3 THEN &quot;2:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 4 THEN &quot;3:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 5 THEN &quot;4:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 6 THEN &quot;5:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 7 THEN &quot;6:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 8 THEN &quot;7:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 9 THEN &quot;8:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 10 THEN &quot;9:1&quot;&#13;&#10;    ELSE &quot;10+:1&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1151030171422328]' derivation='CountD' name='[ctd:Calculation_1151030171422328:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1151030171422328]' derivation='None' name='[none:Calculation_1151030171422328:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_7481226122412498]' derivation='None' name='[none:Calculation_7481226122412498:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click ROI Bins]' derivation='User' name='[usr:Click ROI Bins:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[vertica.41422.531214282404].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused for Budget&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused No Traffic&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[vertica.41422.531214282404].[none:Calculation_1151030171422328:ok]' />
              <lod column='[vertica.41534.409827615738].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#acacac' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41422.531214282404].[ctd:Calculation_1151030171422328:qk]</rows>
        <cols>[vertica.41422.531214282404].[usr:Click ROI Bins:nk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Date]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Paused No Traffic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;OTA&quot;' />
                <member value='&quot;GDS&quot;' />
                <member value='&quot;Distinct Hotels&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Paused No Traffic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused for Budget'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Paused for Budget&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Reactivated No Traffic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) OR CONTAINS([Advertising Status Change],&apos;Unsuspended&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) OR CONTAINS([Advertising Status Change],&apos;Suspended&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated No Traffic&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertising Status]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Previous Advertising Status]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertising Status]' derivation='None' name='[none:Advertising Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Advertising Status]' derivation='None' name='[none:Previous Advertising Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[ctd:Advertiser ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:Date:ok] / ([vertica.41534.409827615738].[none:Previous Advertising Status:nk] / ([vertica.41534.409827615738].[none:Advertising Status Change:nk] / [vertica.41534.409827615738].[none:Advertising Status:nk])))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Spend vs. Budget'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column caption='Properties in MPM' datatype='string' name='[Calculation_7481226122412498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7481226122412498]' derivation='None' name='[none:Calculation_7481226122412498:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Show Spend With Budget]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Show Spend With Budget]' derivation='None' name='[none:Show Spend With Budget:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[vertica.41422.531214282404].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='-89' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Show Spend With Budget:nk]'>
            <groupfilter function='member' level='[none:Show Spend With Budget:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Show Spend With Budget:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.41422.531214282404].[sum:Spend:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[vertica.41422.531214282404].[sum:Spend:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41422.531214282404].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[vertica.41422.531214282404].[sum:Spend:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[sum:Adjusted Budget:qk] + [vertica.41422.531214282404].[sum:Spend:qk])</rows>
        <cols>[vertica.41422.531214282404].[twk:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
          <column>[vertica.41534.409827615738].[SSN Channel Type]</column>
          <column>[vertica.41534.409827615738].[Strategic Account Type]</column>
          <column>[vertica.41534.409827615738].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Advertiser Data' tab-color='#d7e9ff'>
      <repository-location id='AdvertiserData' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='4000' minheight='1200' minwidth='4000' />
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' type='layout-basic' w='99900' x='0' y='0'>
              <zone h='100000' id='7' name='Budget and Ad Coverage by Hotel Data' show-title='true' w='90975' x='8925' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='5125' x='0' y='0'>
                <zone h='4582' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='5125' x='0' y='0'>
                </zone>
                <zone h='4249' id='13' param='[Parameters].[Market]' type='paramctrl' w='5125' x='0' y='4582'>
                  <formatted-text>
                    <run>Market Segment</run>
                  </formatted-text>
                </zone>
                <zone h='4333' id='21' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Market Name:nk]' type='filter' w='5125' x='0' y='8831'>
                </zone>
                <zone h='4249' id='14' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Date:qk]' type='filter' w='5125' x='0' y='13164'>
                </zone>
                <zone h='4249' id='20' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' w='5125' x='0' y='17413'>
                </zone>
                <zone h='6916' id='12' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' w='5125' x='0' y='21662'>
                </zone>
                <zone h='6916' id='18' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Known Rotator Type:nk]' type='filter' w='5125' x='0' y='28578'>
                </zone>
                <zone h='11416' id='16' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]' type='filter' w='5125' x='0' y='35494'>
                </zone>
                <zone h='3999' id='15' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' w='5125' x='0' y='46910'>
                </zone>
                <zone h='4333' id='22' name='Budget and Ad Coverage by Hotel Data' param='[mysql.42071.931415601852].[none:brand_name:nk]' type='filter' w='5125' x='0' y='50909'>
                </zone>
                <zone h='4333' id='23' name='Budget and Ad Coverage by Hotel Data' param='[mysql.42071.931415601852].[none:chain_name:nk]' type='filter' w='5125' x='0' y='55242'>
                </zone>
              </zone>
              <zone h='100000' id='19' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:User Name:nk]' type='filter' w='3800' x='5125' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Budget, Spend, and Coverage' tab-color='#d7e9ff'>
      <repository-location id='BudgetSpendandCoverage' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='25' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='24' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='72335' x='0' y='5000'>
                <zone h='47500' id='10' name='Impressions by Travel Window' show-title='true' w='36167' x='36168' y='52500'>
                </zone>
                <zone h='43500' id='19' name='Spend vs. Budget' show-title='true' w='36168' x='0' y='52500'>
                </zone>
                <zone h='4000' id='21' name='Spend vs. Budget' param='[vertica.41422.531214282404].[:Measure Names]' type='color' w='36168' x='0' y='96000'>
                </zone>
                <zone h='47500' id='33' name='Budget and Impression Share' show-title='true' w='72335' x='0' y='5000'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='14' is-fixed='true' type='layout-basic' w='13333' x='72335' y='5000'>
                <zone h='95000' id='4' param='vert' type='layout-flow' w='13333' x='72335' y='5000'>
                  <zone h='6375' id='28' param='[Parameters].[Parameter 1]' type='paramctrl' w='13333' x='72335' y='5000'>
                  </zone>
                  <zone h='6375' id='17' param='[Parameters].[Market]' type='paramctrl' w='13333' x='72335' y='11375'>
                  </zone>
                  <zone h='6375' id='12' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Date:qk]' type='filter' w='13333' x='72335' y='17750'>
                  </zone>
                  <zone h='10375' id='23' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' w='13333' x='72335' y='24125'>
                  </zone>
                  <zone h='10375' id='35' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Known Rotator Type:nk]' type='filter' w='13333' x='72335' y='34500'>
                  </zone>
                  <zone h='17125' id='27' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Calculation_7481226122412498:nk]' type='filter' w='13333' x='72335' y='44875'>
                  </zone>
                  <zone h='15375' id='11' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[:Measure Names]' type='color' w='13333' x='72335' y='62000'>
                  </zone>
                </zone>
              </zone>
              <zone h='95000' id='34' name='Spend vs. Budget' param='[vertica.41422.531214282404].[none:User Name:nk]' type='filter' w='13999' x='85668' y='5000'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Market Data' tab-color='#d7e9ff'>
      <repository-location id='MarketData' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1000' maxwidth='1400' minheight='1000' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='85455' x='0' y='0'>
            <zone h='100000' id='7' param='horz' type='layout-flow' w='74026' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='74026' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='74026' x='0' y='0'>
                  <zone h='100000' id='1' name='Average Budget by Market Data' show-title='true' w='74026' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='8' is-fixed='true' param='vert' type='layout-flow' w='11429' x='74026' y='0'>
              <zone h='1200' id='10' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[Number of Properties]' type='filter' w='11429' x='74026' y='0'>
              </zone>
              <zone h='5100' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='11429' x='74026' y='1200'>
              </zone>
              <zone h='13700' id='11' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='11429' x='74026' y='6300'>
              </zone>
              <zone h='8300' id='13' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='11429' x='74026' y='20000'>
              </zone>
              <zone h='8300' id='14' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='11429' x='74026' y='28300'>
              </zone>
            </zone>
          </zone>
          <zone h='100000' id='16' type='layout-flow' w='14545' x='85455' y='0'>
            <zone h='100000' id='15' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='14545' x='85455' y='0'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='ROI and Churn' tab-color='#d7e9ff'>
      <repository-location id='ROIandChurn' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='20' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='70918' x='0' y='5000'>
                <zone h='47500' id='1' name='Net Hotels and ROI' show-title='true' w='70918' x='0' y='5000'>
                </zone>
                <zone h='43500' id='10' name='Paused Hotels by Months Active' show-title='true' w='70918' x='0' y='52500'>
                </zone>
                <zone h='4000' id='15' type='text' w='70918' x='0' y='96000'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='8'>Months Active</run>
                  </formatted-text>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='17' is-fixed='true' type='layout-basic' w='13333' x='70918' y='5000'>
                <zone h='95000' id='4' param='vert' type='layout-flow' w='13333' x='70918' y='5000'>
                  <zone h='6375' id='27' param='[Parameters].[Parameter 1]' type='paramctrl' w='13333' x='70918' y='5000'>
                  </zone>
                  <zone h='6375' id='8' param='[Parameters].[Market]' type='paramctrl' w='13333' x='70918' y='11375'>
                  </zone>
                  <zone h='6375' id='19' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='13333' x='70918' y='17750'>
                  </zone>
                  <zone h='6375' id='9' param='[Parameters].[Aggregated By]' type='paramctrl' w='13333' x='70918' y='24125'>
                  </zone>
                  <zone h='10375' id='7' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='13333' x='70918' y='30500'>
                  </zone>
                  <zone h='17125' id='22' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='13333' x='70918' y='40875'>
                  </zone>
                  <zone h='10375' id='31' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='13333' x='70918' y='58000'>
                  </zone>
                  <zone h='10375' id='32' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='13333' x='70918' y='68375'>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='177' h='95000' id='33' is-fixed='true' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='15416' x='84251' y='5000'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Status Changes by Channel' tab-color='#d7e9ff'>
      <repository-location id='StatusChangesbyChannel' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='1300' minheight='1200' minwidth='1300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3332' id='15' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96668' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3332'>
              <zone h='96668' id='3' type='layout-basic' w='74460' x='0' y='3332'>
                <zone h='32222' id='1' name='New' show-title='true' w='37232' x='0' y='3332'>
                </zone>
                <zone h='32222' id='12' name='Manually Reactivated' show-title='true' w='37228' x='37232' y='3332'>
                </zone>
                <zone h='32224' id='13' name='Paused for Budget' show-title='true' w='37228' x='37232' y='35554'>
                </zone>
                <zone h='32222' id='14' name='Manually Paused' show-title='true' w='37232' x='0' y='67778'>
                </zone>
                <zone h='32224' id='20' name='Reactivated No Traffic' show-title='true' w='37232' x='0' y='35554'>
                </zone>
                <zone h='32222' id='23' name='Paused No Traffic' show-title='true' w='37228' x='37232' y='67778'>
                </zone>
              </zone>
              <zone fixed-size='160' h='96668' id='4' is-fixed='true' param='vert' type='layout-flow' w='12308' x='74460' y='3332'>
                <zone h='4249' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='12308' x='74460' y='3332'>
                </zone>
                <zone h='4249' id='11' param='[Parameters].[Market]' type='paramctrl' w='12308' x='74460' y='7581'>
                </zone>
                <zone h='4249' id='18' param='[Parameters].[Aggregated By]' type='paramctrl' w='12308' x='74460' y='11830'>
                </zone>
                <zone h='5333' id='19' param='[Parameters].[Parameter 2]' type='paramctrl' w='12308' x='74460' y='16079'>
                </zone>
                <zone h='4249' id='8' name='New' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='12308' x='74460' y='21412'>
                </zone>
                <zone h='6916' id='24' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='12308' x='74460' y='25661'>
                </zone>
                <zone h='6916' id='25' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='12308' x='74460' y='32577'>
                </zone>
                <zone h='11416' id='6' name='New' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='12308' x='74460' y='39493'>
                </zone>
                <zone h='5249' id='10' name='New' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' w='12308' x='74460' y='50909'>
                </zone>
              </zone>
              <zone h='96668' id='26' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='12924' x='86768' y='3332'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Status Changes by Hotel' tab-color='#d7e9ff'>
      <repository-location id='StatusChangesbyHotel' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1500' maxwidth='2300' minheight='1500' minwidth='2300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='187' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8130' x='0' y='0'>
              <zone h='3668' id='15' param='[Parameters].[Parameter 1]' type='paramctrl' w='8130' x='0' y='0'>
              </zone>
              <zone h='3401' id='7' param='[Parameters].[Market]' type='paramctrl' w='8130' x='0' y='3668'>
              </zone>
              <zone h='3401' id='16' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='8130' x='0' y='7069'>
              </zone>
              <zone h='534' id='12' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Status Change:nk]' type='filter' w='8130' x='0' y='10470'>
              </zone>
              <zone h='4334' id='13' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' w='8130' x='0' y='11004'>
                <formatted-text>
                  <run>Only Show One &#10;User per Hotel</run>
                </formatted-text>
              </zone>
              <zone h='9134' id='14' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='8130' x='0' y='15338'>
              </zone>
              <zone h='5534' id='10' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='8130' x='0' y='24472'>
              </zone>
              <zone h='5534' id='18' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='8130' x='0' y='30006'>
              </zone>
              <zone h='12734' id='17' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' w='8130' x='0' y='35540'>
              </zone>
            </zone>
            <zone h='100000' id='19' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='7305' x='8130' y='0'>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='84391' x='15435' y='0'>
              <zone h='100000' id='9' name='Activity Report by Hotel' show-title='true' w='84391' x='15435' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Summary' tab-color='#d7e9ff'>
      <repository-location id='Summary' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4443' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95557' id='7' param='horz' type='layout-flow' w='100000' x='0' y='4443'>
              <zone h='95557' id='5' type='layout-basic' w='78812' x='0' y='4443'>
                <zone h='47778' id='1' name='Active Hotels' show-title='true' w='22124' x='56688' y='52222'>
                </zone>
                <zone h='47778' id='3' name='Hotel Status Changes Table' show-title='true' w='56688' x='0' y='52222'>
                </zone>
                <zone h='47779' id='4' name='Hotel Status Changes' show-title='true' w='68689' x='0' y='4443'>
                </zone>
                <zone h='28890' id='9' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='color' w='10123' x='68689' y='4443'>
                </zone>
                <zone h='18889' id='8' name='Hotel Status Changes' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='10123' x='68689' y='33333'>
                </zone>
              </zone>
              <zone fixed-size='167' h='95557' id='6' is-fixed='true' param='vert' type='layout-flow' w='10438' x='78812' y='4443'>
                <zone h='5666' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='10438' x='78812' y='4443'>
                </zone>
                <zone h='5666' id='13' param='[Parameters].[Market]' type='paramctrl' w='10438' x='78812' y='10109'>
                </zone>
                <zone h='5666' id='14' param='[Parameters].[Aggregated By]' type='paramctrl' w='10438' x='78812' y='15775'>
                </zone>
                <zone h='5666' id='16' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='10438' x='78812' y='21441'>
                </zone>
                <zone h='23221' id='20' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' w='10438' x='78812' y='27107'>
                </zone>
                <zone h='9221' id='21' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='10438' x='78812' y='50328'>
                </zone>
                <zone h='9221' id='22' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='10438' x='78812' y='59549'>
                </zone>
                <zone h='15221' id='15' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='10438' x='78812' y='68770'>
                </zone>
              </zone>
              <zone h='95557' id='19' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='10500' x='89250' y='4443'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='10111' id='18' name='Active Hotels' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='8750' x='79563' y='86667'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotel Status Changes'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='37' type='pages' />
            <card size='156' type='filters' />
            <card size='245' type='marks' />
            <card pane-specification-id='1' param='[vertica.41534.409827615738].[:Measure Names]' size='13' type='color' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' size='88' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:User Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Hotel Status Changes Table'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:Current Advertiser Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Segment Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Active Hotels'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Properties in MPM:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Summary'>
      <active id='4' />
      <zones>
        <zone name='Active Hotels'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes Table'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes' pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='color' />
        <zone name='Hotel Status Changes' pane-specification-id='1' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Active Hotels' pane-specification-id='2' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='New'>
      <cards>
        <edge name='left'>
          <strip size='191'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Manually Reactivated'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Reactivated No Traffic'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused for Budget'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Manually Paused'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused No Traffic'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Status Changes by Channel'>
      <zones>
        <zone name='New'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Manually Reactivated'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused for Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Reactivated No Traffic'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused No Traffic'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone name='New' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='New' pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Activity Report by Hotel'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card size='34' type='pages' />
            <card size='239' type='filters' />
            <card size='182' type='marks' />
            <card size='109' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Only Show One User per Hotel]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Filter Status Change Not Null:nk]</field>
          <field>[vertica.41417.709767245367].[none:Filter for Primary User:nk]</field>
          <field>[vertica.41417.709767245367].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Segment Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Email:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertiser Name:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_0681002145521444:ok]</field>
          <field>[vertica.41534.409827615738].[none:Date:qk]</field>
          <field>[vertica.41534.409827615738].[none:First Hotel Property for User:ok]</field>
          <field>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Status Changes by Hotel'>
      <active id='17' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' />
        <zone name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Budget and Impression Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41422.531214282404].[none:Advertiser Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Spend vs. Budget'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Show Spend With Budget:nk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Properties in MPM:nk]</field>
          <field>[vertica.41422.531214282404].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impressions by Travel Window'>
      <cards>
        <edge name='left'>
          <strip size='282'>
            <card size='37' type='pages' />
            <card size='192' type='filters' />
            <card size='245' type='marks' />
            <card size='4' type='measures' />
            <card pane-specification-id='2' param='[vertica.41422.531214282404].[:Measure Names]' size='97' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41422.531214282404].[:Measure Names]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Travel Window:nk]</field>
          <field>[vertica.41422.531214282404].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Budget, Spend, and Coverage'>
      <zones>
        <zone name='Impressions by Travel Window'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend vs. Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend vs. Budget' pane-specification-id='1' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
        <zone name='Budget and Impression Share'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Impressions by Travel Window' pane-specification-id='2' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Average Budget by Market Data'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:ok]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Segment Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Market Data'>
      <active id='1' />
      <zones>
        <zone name='Average Budget by Market Data'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Budget and Ad Coverage by Hotel Data'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='typeinlist' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41534.565411180556].[none:Advertisement ID:ok]</field>
          <field>[mysql.42071.931415601852].[none:brand_name:nk]</field>
          <field>[mysql.42071.931415601852].[none:chain_name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Current Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Current Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[:Measure Names]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Can Serve Ads:ok]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Distinct Hotels:ok]</field>
          <field>[vertica.41422.531214282404].[none:Filter for Primary User:nk]</field>
          <field>[vertica.41422.531214282404].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Last Auction Participation:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Phone Number:nk]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Segment Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:User Email:nk]</field>
          <field>[vertica.41422.531214282404].[none:User Name:nk]</field>
          <field>[vertica.41422.531214282404].[yr:First Auction Participation:ok]</field>
          <field>[vertica.41422.531214282404].[yr:Last Auction Participation:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Advertiser Data'>
      <active id='7' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='checkdropdown' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Market Name:nk]' type='filter' />
        <zone name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' />
        <zone mode='typeinlist' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' />
        <zone mode='checkdropdown' name='Budget and Ad Coverage by Hotel Data' param='[mysql.42071.931415601852].[none:brand_name:nk]' show-domain='false' type='filter' />
        <zone mode='checkdropdown' name='Budget and Ad Coverage by Hotel Data' param='[mysql.42071.931415601852].[none:chain_name:nk]' show-domain='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Net Hotels and ROI'>
      <cards>
        <edge name='left'>
          <strip size='203'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is New:ok]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Previous Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[tdy:Date:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Date:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Sold Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused Hotels by Months Active'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Label - Months Active:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused Hotels by ROI'>
      <cards>
        <edge name='left'>
          <strip size='181'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41422.531214282404].[Number of Properties]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Calculation_1151030171422328:ok]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Click ROI Bins:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertiser Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:Status Change:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='ROI and Churn'>
      <zones>
        <zone name='Net Hotels and ROI'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused Hotels by Months Active'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone forceUpdate='true' name='' type='text' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone name='Net Hotels and ROI' pane-specification-id='4' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Active Advertisers Last Week'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Properties in MPM:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Date:qk]</field>
          <field>[vertica.41534.409827615738].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='251'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Previous Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hotel Status Changes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd3wc5Z3/v1O3965eLMkV3BslYAMxEI4WmkO4
      QAgpcBfgUn4X0i4hRyghgSTkSI6Q5ALBxsYUl2DAjeJuC3f1vtqu7bvTnuf3x8qyJcvSSrtq
      Zt6vfY1Gszvf5zvPfOZp8xQCYwwyMqOFnGgHZKY2dOYPxlgQhIl1RWYqckZAkiSN6MxEIqHR
      aPLukCiKNE3LZqeK2V5zJEmqVKoRncnz/EhPydIsy7Ky2aliVi4DyeSELCCZnJAFJJMTsoBk
      ckIWkExOyAKSyYkLVkAYIMCL24NRHyc3kI4h+W+tmlgwxkFB2hOOv+MPH44mRYx1FPXLmqIF
      6vw3q8jABSMghHFElHb1xDb5IgeiCTND32Az/nupo0KlWOsJPXC89StO04NlLiV1waa4EwUx
      6rfxkUjEYDDk1xsYeWtpRJC2haIb/eGPeuIVKsV1NsM1VkO1WkEQROYHGENdIvVvJ9uMDP1M
      TXGpSjGB3l54ZqekgDDGfl7c2RPb6A/vDSeqNcpVVsP1NkOxkiUA+qTTz9t0+tedwTe94R9V
      um52mMjBfjNG3l7YZqeSgDDGbk74qCe+0R8+GkuVq9lVVsM1VkORgmXIYQTB8zzFMNuC0R83
      di01an9SWWBk8pB9T6E7PUZmp4CAJIy9nLAjFNvoD9cn08UK9jqbcaVFX6piqawTkj6zXWn+
      sYbOjjT/y+rihXr1oMlVLt7mhSlkdrILqJvjv1vX+Wk0Wa1RfsFmvMKsK1Wxo8iAzjYrIPzn
      Lv8L7b4Hiu1fK7Ky5OhL1lPoTo+R2eGT8VgoAGp9qL1BaSsTezqwzlVky79uzscL7X6KgHcX
      Vhco83blDEl8vdi+1Kh99FTHRz2xZ2qKC/Nn/LPGcA+flNr+zqaWztZ6d+jg3o+ONXYeO7Bn
      ZB3PcqA5yW30h/+zwpVH9fRxsU791rxpFSrFdQfrN/vDSO4bPiqGS4EoVfW0Eg5jmmH4hEjS
      SkkUUum0xHE8z/M8n3eHJEnqM/u71u4rTdpyhso9oLPN9sEC/KjUvtyg/nFj1w5/+DtlDiNN
      5W42d6aQ2eHLQP62Jmx2euo+VTmmicEWrC+aWVEIY18Gakymv3i4ad28ymlqZR7NDkp7ivt/
      9Z0hQXyiuniuTpV9yXoKFVbGyOwkLURjjB891aGgyCeqCnOsKJ1tdogfcAj9qcP/p07/gyX2
      +4psdHaBTqE7PUZmJ2nTflOS2xKIPFhiz4t6skFBkg+WOl6eU/53d/CrR1s88ivY7JiMApIw
      frbNe5fLXKRgxjNcAmCeTr15QbWVpb9wsP7dQGTKlawxxp9Gk60pbtxCnIwvU0/EUztDsW2L
      asYt+emDIAgtTT1VU/y2L/zDhq5X3MGVFv1Cg6ZEyWopcvz9GRFxUfpNm3dNd0hBET+qLPiC
      zZh9Q+uomXQCQhieb/Otdpkd45v8nA1FEDc7TPP06o2+8PvB6G/bvCxJVmuUSw2aJUZNuUqh
      p6l8vU3LCxjjo/HU9+s71ST52tzKliT38yb3jmDsh5UFZpYeU0cnXSF6TyD8zfqufy6ozq+A
      Rl1+xBiSktSQ5A5FE3siif2RBAlQrVEuMmiWGDQzlIxBqSDP8wZ3fLzlEHqpM/BCu++BYtsD
      RbZMl5Vujv9hQ1ddIv2LqqLLTNqM3C/8WhjC+MufNs4z6L5T7syv5XzFHcK4MckdjCb2hhMH
      owk3J8zWqhYbNIsNmnl6tZXNj+iz97Yxmf5+XWdUlJ6ZXnyxTj3A1TWe0BPN3TfZTd8rd2pp
      6sIX0Cc98UdOtW9cUGXL053oI+9xhzGWMLiTqcNJbm84cSiabEtxBUpmiUG71Kido1WVjORd
      7yi8FTF+xR38VavnDqf54TKHhhqkCRRj3JbmH6vv7OKEZ2qKL1IxF7KAJIxXf9p8iVHzb2XO
      vGfbY92ywiMUEqRjseSeSGJfJOHhBDVF3uY032Q3FiiYkWZww3rbnuJ+3OhuTXG/qCpcZtQO
      XSBLI/R/7uDv2rx3O03fKnMOKrVRM4kEtCsU+359x4Y5ZU6Nevhfj5DxbJpDGPt5sTaW/Ls7
      eDye+pxZ92WXZbZOlf1r/6E7RTUkuW+caJ2v1zxW4TJl16sJY3wikf7eqQ6WIh6vKpqpUear
      0DZZBIQxvrm2cZXVcJ/DOFUaYYc1izGuT3L/6A5u8PaUqxRfKrBcZzOoyeGbA85nVsL4FXfw
      2VbvY5WuW0ferzKSTr/Y3fOKO/hQiePeQis9XC+8bJgsAtoRin63rnPbohoFki4YAfURE6V3
      fOG/u4NdHH+ny3KX01yqVgxx9wY1283x36vrbE1xT1YXLzNpR3HzM2YPRBLfreuws/QzNSXF
      qlzjZFK0RPMI/arF+2CJXXuBjprQ0dRdBZa351e9NLu8M83fcLjh3qMt24JRDqFsTpcw3uDt
      ue5gQ6GC3Ti/eplxNOrpY4FB8878qhqN6guH6l/rDooop9b2SdGQuC0Y8/HCnU7zJG/qzQUC
      gCaJhQbNfL26ixPWe3r+q9FNEnB3geV6m9HB0ue7di8nPN7kPhhNPlFddI1Fn3sDJgGgpamf
      Tiu4wqz7SWPXtlDsJ5UFo+5SN/FZWEpCt9U23umy3F1ggYnOa8bTbFyUdvbE/tIVaE3xK8y6
      uwssMzSqTLkkYxZhvC0U+2lj1xyt6sfTClyKXP0/11sfL/x3U/eeSPzHlQWftxpG0e4w8QJ6
      2xd+pqX73YU1KoqESXmnx9Qswvh4PPWP7tDbvvB0rfJfC6xXW/SkJHIk9VRL91u+8I8qC252
      mLLsXjIKbyWMN/nDP250X23RP1bhMtDUiPKBCRZQSkL/cqjhgWLbbU5z5sikvdNjbTYiSBt8
      PX/rCkRF6VqLblckWaBg8ttfewhvvZzw/frOhkT622UOK0OzJMGSBEuQit4dgiXJvoM0cebV
      zQQLaE136KUu/1vzqlSni8+T/06PqVkB4b2R+KvuwCKD9u4C67Dj3UbE0N6KGK/pDr3uCfEY
      ixhLGIsIRIzFvn9x778AwJKEgiQVJDGRAkpK6NqD9Y+WOW60m/oOTpU7faGaxRgjAAljhAEB
      ljBkdhAGCTDCgDAWMeZQ5oMmshb2hrdHR5HXWMZvkJDMsBAEQQFkX5qesHYXDqHn27wPlTpU
      F2jbz2eECbt5r7iDLgWzwqybKAdk8sLECCgqSn/o8D9a5sxlWLHMZGAC7h/G8Gp3sFjJXmbS
      jn/oMvllAgQUEsS/dAUeLnVMqm7FMqNjvAWEMX61O1iiZC+Vk58LgvEWkJ8X/+YOPlrmlJOf
      C4Ps+rOJsQ1vvDt9/qKOE/uwvvjzVywd9c3/izswU6tcbMj/OlEyE0JWAkIi4XAYW1sbFdoC
      IR6Mp9NoVLNzeHlxTXfo9zWF4vkXt5tCE1PIZiHbFAgQRpgg1SjlIfVFWqWSUCojkchIm9v/
      1hGYr9csMg/VbeDCezlwYZvNSkC0Un/plVfnGJKPE17pDq65uHIcxtvKjBvjVIjGGP+u3bfC
      rJ+lzf8ihzITyDi9TO1I8697Qu8sqBq3yhcvCJFoLLOv1+XUiVhmCMZDQAjjP3T4V1kNlXmd
      JX5oQj3hbR9+nNm/fNkSu9UybkF/phiPLKw5xW32hx8qHb/ZomTGjfEQ0D/9kVVWQ2U+pjqU
      mWyMRxb2rRL7FJvoSyZrxkNA8luLCxi5O45MTsgCkskJWUAyOdG/DIRxZ8MRX4oprqiw6eRK
      0xQjwYmbjnT/YWeTXklfO8d1ebWtxqGj8jqy7FwGFqLrju73E/YUrbHNKh3TgGXyBcbYE0lv
      ONz1j33tdr3yq5eWszS5s97/6t52miKuqLZfOd02p9BgHJtlhwcKyFVa1V3nKT5rpJ/MpAUh
      3OCLvbK3/YOTvulO3S9vvWhhmUlBUwBw24KiSEo41hX94JT35xtPpATpokLjFdWW5dPsToMy
      j8nSQAHpzM6ZZUKHt6fEps9XGFMRhLA7kupJCjNd+rHOBUaBIKHD7eE/f9xyqK1n5Qz7i19e
      MLOg38wvBEEY1eylVdZLq6y8iBp8sY8aAmsOdD69taHCpvlctX3FdHuZVc3mPHv6QAGlU0me
      0k8vdeRidEojSmh7ne/1A527Gvy8iC6rst29tPTKGhs9OQZAYgwnuiNPbD5V54l9aWnJT26Y
      6TIM08GBpclZBYZZBYZ7lxWHUmh3U3DbKe//7Gyy6RSXTbOumGFfXGZWMKOcebPf2Pj2usPr
      N7zd6Y9d96VvrZxfMfSZk2TZ7/Ph8fkHvEwd2izGuN4bf6u2641DXSYNc9PcwpvmFSpo8o1D
      Xa/tb08J0l2LS26aW1hg7He3xrPnlyihXfX+P3/cesoTe+jKyjsWlSiZfulHqCd8qrEps++w
      WirLy85nFmMsSnh/a+iDU76PGgOeSHp5peWqGY6lFZYC48jm3+yXApVUz124zFvU3KX+zCwB
      iTEOp4Ttp3yvH+hsCyWWVVieu3Pu3BJjX9p+7yVlq5eU7GkOvrq3/a+ftC6vtK5eUjK32MiM
      Y4IUSQnvHvP85ZNWXkK3Lyz+zZ1zLRr23NucSCVb2zsy+xRJniugPgiCYGhi+TTrskoLL6L2
      nuSOU/51BzuffreuxKz+l7kFK6bbXYaslNRPQN1tdWpj6dKrZppsF34WxovoZHd0/aHO7XU+
      q1bxxflFV8102HWKAbFGEISSoa6osV9WZWsJJNYf7PyPtZ/adIq7FhevnO7QjOV6Hhjj7kh6
      3cHODYe7jGrma5dXXD3DoVHkZa6pXgiCUDBUlV1XZdfdd2m5N5r+qCHw1qfuF3Y0zik03DS3
      cGmFxageap7rflkYRmJ7U93h2k/L5q+cWzmMhqZoFoYxDiX4TUe73zzsdkdS18x03Dyv8KIi
      Y5YlZYwhkhLeO+F5dW97MMFfM9N+99KyYrM6vwXtFMd1Rvi/fdL27nHPRUWGf11etrTCMmya
      1+F2f7h7X2a/sqx0yYJ5A36QZdwijNuCyXePe96udcfSwvJp1pvmFs4rMSroQUrc/VKgrqYT
      J5q9JdPnzyi1DhvMlENCeH9r6PUDHe+f9M0u1N+zrHTlDLtOObI0hCDAqGZuW1h8y/yi2o6e
      V3a33fC7j5ZVWL60pOSSKis92qH+gog6w8mWQLLZH28JJOo9sXpf/Lo5zv/76uJqh26c+1GR
      BFFu1Xzjc5UPXFZx3B3ddLT7O69/ylDEtXNc/3JxwXRnP3/6p0AYQ9YLz4xDChRJCbvq/Tvr
      /UUmlU7J6JW0TslolbSGpdQsrVFQapZWs9SgT0ZfCoQxVM646IBHfKPWLSF8/RzX7QuLSy3q
      fK2kGeXx2v0d6w91YYxXLym5cW4hi7lkKg0ABAFOu33AKZwoeSJpdzjdFkw0BxLN/kRLIO4O
      pw1qxqVXlljU5VZNqUl5abXDqh2koDME+UqBBoAxRhj2tgTfqnXvqPNZNIob5xZcO9tZbFYT
      xIAZyjA+8vEWj6Avr5lVVTBMW+LYCSjK4/0toU1Huw+09tj1itmFBpokoikxlhaiaTHJi6KE
      BYRECQsSEhEmAXRKRqei9UpGp+zdEhLn7mjHAE1Rwico5pWY7lhcsqzComZHNonksN5mbkmS
      Fz9uDL66t+1Ed3S6Ac/UJgs0mCSpK1dc5Y9xbaFkiz/eHEi0BBLdkbSSobQKqtCoKrdqK2ya
      CqumxKLWKRglQ1IkQRDE6O70GAmoD4xxNCV+3BTYcLijtiNc4zDcOLdgYDtQpCfYEQpbiytH
      HcyonQvE+T3NwU1Huo65YyY1u2q286Erp1XYtCzdL1+QEBYkxIuIP71N81I03SuvWFqIpcVo
      SvDGhNY4wUtQqsM/u3r6nHKnYgzq232oWfrqmY4V0+0N3tgLW4+81sRlSiwvNu4BgEKTqtyq
      mVNouPHiwhKL2qhmDEqGoSe+YQlhJCJRQELflpO4OB+PCbEYH4vz8RgfiwvxGB+L8bGY0Hsk
      pUsxxeh4tPL4+wsHCojRGJmesK+9JV3mVI7tWneZC8DhpPBhg3/LMc/h9h6HXvn5mfaHr6qp
      Ov9bQIokKJJSDtfw5fH5t+3qIhFgApwamsCAMR4i7UEYSUgSkZgQE92J7u54d2e8M8pFtayW
      JVmWYlmKVVCK3h2yd4dEpEapyXzFkAxJkCVW+osz6emKVFeC0CuoO66bZ9UqmHPKRggETjyf
      L5gXBEQgggCAEdwCXuJFLGAAAJxG6QgX6ScFIRZOhVNSqk8HMSGWEBK8xPd+EM9LPMJIy2i1
      rFbH6nSsTsfotKxWx+gcakfvQUanYTRKWqmklQpKNTALe2/LOw6rocEbW7BsZZl1qCbOHLOw
      cJL/4KTvn8c9e5uDlTbtqtnOq2c6yq0aQRBGncxiCUk9nBhMCYFUvDPsb/Jok7RIYbVJw6hZ
      SsWQSopU0oSSFtUopI0HNFEfBLoT3e6E25vw+pI+f9KfklIOtcOpcZqVZiWlZEiGk7hM5PbF
      ct8+J3ICEjIHRSTSJM2QDIFJAhEkkASQGs0Ix8FhwCLCaYmgCYKlgCSyl5AkSmmOw4BFEAUQ
      JBA1tEbLajOC0DJaNa3WK/QZZWgZbWarYTRqRq1hNBpGo6E1SjqHhkQAKCuw7D7eccnnVhab
      x6Q7hyeS+rAhsOWYZ39raKZLf80sx09umFlgVJ2v2yvCyJf0SUga+AXGKC2hlCiF06I/JQRS
      oj8l9aSBIkkFRelZXgstZq9gk+JUymRRR9Kh7rDbE/b66JCPCcXZlFFpNCtMJmywJY22hKEm
      McuWWG7jzBbGRKtYSsmQKppkKWBIgiIJmiRoAjJb9sy+RCBawQBNEhSBKRBA5AnhaOOpdm+X
      BBKNycUlc6SEgGK8FBdQnEechDkJcRLmJVJBkSqaUNGkmqE0DKllKC1LahlSSYtIohkaCxJK
      iSgmSHEexQWUEFBKzHwAA6GgSCVFKChSzVA6ltQyMSnV4G4XKUxS9LSSiqXzFpI0RdIkQZJA
      AAFELg/nIGQS9QEp0Oa317vKqgpKKh3nzt+DcTjoBYXBqFPBSFIghLE7nPq4MbjpiLveGy+3
      aq6Z5Vg5w1FgUJ77gmlAQc8dd39z6zc5Lo0FBP1nJCYoAkgCBrT7UQSQBEESoiSlUmkATAFt
      01uK9EWFukKXxuXSulwal01tU1JKlmRpgiYQ7p2+FgEWEE6LKC3WHjwqJHjMSSadvtRViEV0
      9gdEnNlBvASZCZUzk+FiDBhSqZTAiwQAJsFg0pOaXmVQWobUspmbTWkYgiGBIgmKAIoY8NAP
      UtrFGGMACWMJYQmjhCDFeBTv1ZYU51FMSIeTiUicQASBgaFpBcNijAFjwEDQJEGTmCJIJvMw
      kMTpncyT0HuQJoGA01NEn75eAWGx/xERY1HCAgaMB6ZA5cWu5s5OjbnwXAEhxO/eux8Yzeev
      WTGi4t9re9t/vaXORJIryq3fWFFUZFJRBAEBzhsYZHlzURRp+oxXOEE9Uf/vfIoXRIxUNNIy
      pFFBW1WUWUWyJNAkcZ6iUjgaPXayDgBoYBY5LjYZDL1m0wBp4ILAgQBw3klCmmIxQRSBAJdG
      b3KddzKaM97i0/VdhFsamj3eMABB0MTll108SB4UFyB+3qDPjYTzoqJBRYOt979AMHj0qJdC
      QGDCYbVOKy3pfTAkDBLCIhI5kUTEWY8BwkkBixgLCCQEmTmhMQaShIysexVGEDRJKJiM7KBX
      agRBkwRFDkyB3n93XXd7uOrya5dOLxrgLRLj23bWiunoJStXII6TJAn1X62IJEnyrNIixliS
      pOP1jc0nE95Tko1i1erhCwRnF3VTqbQg8DqKEDAotbqslkbKwmweyZtZjCVJkng+nUwIqdSo
      Z38fCAEkSZE0RVE0SdMkRVEUTZAkQZIEQfRuCTIj8WQqJQgCABBA6PXZzp47UOYXz71Eqznh
      NA3SGYig1CYVjx1VOqUSlMpIJGI2m4cNILhnP0l0W+0+m9N10UVzWLVaoVJntoxSdW7sn516
      7z/8aUNzCwCwBHHHLVdleUmDMgknTJFEMexxBzraAu2t/va2kLsj6verDEZCp2b0RkKhsJhM
      5SXFI3YpncIICRzHJRNcIsGnklwqySeTXCqZSiaEdJqiGValYlUqVqlmVSpWqWJVaoVaE4hE
      o2mOVCiVRssNt9ysMWW1+tZAAR3a94neXjxoHZkgyAXLV4z0egDAUlsrNJz0zKyJnfpU5DiB
      4wSeE7k0EiVWpVJoNAq1hlVrFGqNQq1hlEqVTpfZD3h8XKiHICmCJN31p0YRNABGCCFR5FIp
      wFgSeFEQJEEQBb5v23uQF0SRl3hBEgWR5yVBSCfiGCFzYZHaYFQbTBqDUW0wqvR6pVan1GgV
      Gg2jGEE9A0lSLBgIe7t7FdPW2tPdpdRqDTaHpbikfN7CxTd+0VJUEghHdnyyJ3PnXMVF8xcv
      HNVVn774TEqW+YMxz/M0TQvpFJdMcMkkl0hwyQSXTPDJJJdM+HvCYiyCfN3JhhN/27sdSZLJ
      VWByFZpdhaaCQoPdoTVb1QYj2b9JYsDb+FMSrY5GwpxwTq0nB4TK6srde4ov//y866/FSEKS
      hCSEkCQJApdK8snE6StJcslEKh5LhHtC7i4+mQj6/YlYFBAGArbW1Y4udCKTTFMUzSpohqEY
      hmJYOrNlM1uFQqOlGZZiGIphMjs0w2KM+FRKEsVkpCcZCYe6OpKRcDoRl0QRiYIkiiRFqXR6
      jdGsMRrVht6PxmBS6nSsUkWQZDoWDXa2+9pbA20tIXcnAKFQq82FxbaSsmmLllmLS5RaPaNU
      nn1LiGgsj1ltr6nTFkmKohmGZhiVbrDupvsP4vYOjDFDkTdcvSIVifR0d2U+bcdqk5GIyKWB
      IIwOl8lVYCooMrsK9TZ7PwFJHF81dxkdahRyWwZxAKnCwuCChSVr15DXX0uw/SboODenHZCF
      1Tc1A0IEQdx+0xdGFzpBkCRF5aUGizHGCAlcWuA4gUtziUQ0FODj8UQknIyEuxvqkpFwItzD
      p1MkSWYee6PDZSstr1l+ubW4VGu2qHR6KpvS8cRBEARB0SqtTqXVmQt7y8EYY5HjUvFYMhLu
      8bh73F2exvqTu7alYrF+FxMIhR2OaaygaogmoXD48k32Tnkv/5zhf/4QfuMN4223jWw9M4IA
      iiIIgmYmvo8bQRAERWWy18wRc3HpIEu4CQKXTIgCrzYYJ4PbuUMQBKNUMkql3mpzVlb1HsWY
      59L9BHTxokV7PtmHFIaFCwry6wFSKMJ33eV/7nnN8kvYosL8Gp9sUAyjNhgn2osRUzOtsqjQ
      BQAkkV0rDUGwSlU/ARG0asacixLRqCghRb5f9bHz5+t9Xt9TTxb+6lmCmdTJ+GcTs8loNo1Y
      9wNGpsK+j9+LhnnX3MsvmZ3/gYXWf3uobfXq6NZ3Dddfn3fjFwYOm/Wm6z4vCiLN0DQ1ypES
      48nAZMZhsZkLiwusY5IC02az7ZFHAs//VvD5xsL+BQBFUWqVSqlUqFWqsWi4yjsDBWQvKrdr
      SU8wMkbh6a66Sjl7duD532Ipny0FMhNFPwFFA137Dx8JxTmteqxmwyQoyvWLx/nW1sCLL+at
      wV5m4uhXBtIY7WYNE02Lxcq8CWj+RbNFSQIAraa36ksqlY7HftB+7336q69WVFUNebbMZKdf
      CkTRjETieHeXJxzPVwBlJcXTysumlZc57ba+g4rp001fWu15/BeIG+SFvMwUop+ABD5lNBfN
      mTfbqBnbCZ0JgrDcf78UCkXWr5czsilNPwGlIv72TvfR+jaDVj3mAatUjsceC/zxT0JHx1iH
      JTN29BNQfUNzhdNoL3C1e0LjELZm6RLdyhXeJ5/C4nn7l8tMcvoJyGkx1vnT1YUW3XgtiWJ9
      8EG+pSW6afP4BDemYIyleELo7k7X1ScPHEh88glKpyfaqTGnXy2ssGbuzTWAMXaN11ha2my2
      P/qI95dPapYtpc8ZxKlSKQ16HWQ9WHbswBhjjkOpFE4mUTIp9oSlYEAMBnmfD/eExUBADAal
      UAgjRFAUQVFA0zidpixm+7cfVi9ZTEyFNuVRgNLpgV1a9+zY4o/ylNp85ZWXqYYcF5avkalY
      FN0/+AFBUa7//u9RD8o8r3FBwIKQ6aHHUBTGGBAChLAoYp5HHI95DvM85jjM84jL7POY5zL7
      KBYXg0ExEJBCQZRKY1EAQcSiSOp0tNVCW6yEycja7bTVSlkstMVCarWkWp35oHQ68sYbwZdf
      Vs+da33wQbaiIvvHYBL2nzwbjLEUCkW3bIlseHOQcWEWo7YtlJ6/9MrSsRwXdjaCx9N6++2u
      J57QLF+er6EnGOP00aO+Xz0r+nxYFLEgYFEEUcSiiEURMCYUCoJlSQVLsApCwRKs4ux9QsGS
      LEtqNJTFQluttMVCGYykXk/pdZReT9B0ZjTIsLdE9PsDL/4xumWL8ZabLV/9KmUwQBYymrQC
      wghxjY3hNWui725VTKs03XHnQAHVHfpw9/GOS668pqLIRg15pfkdGx9+663gC38oe32tpFTm
      HncolQr84Q/hdevN93xZe9llhFIpkSSj0RAMQ7IswbJA0/maXCEbb7n6Bt9vfpM+ftz6zW8a
      b72FYIaZEmQSCghxXHz79p41a7hTdfpVq4x33qmorhpkcoXNb61zlVW5SqY5zcOs655fAWGE
      Or7+DUVlhemRR1jF6FuhMMapgwc9P/s5bbU6HvtBX8Yx4bcES1Ji927/b54DhGyPPKxZvnyI
      gtGEe9sHxljo6oq+szG8bh1lNBpuvtlw/fWk0dD3+PUrRLs9Hg0LtYcPE1rnsALKLwRJOn7w
      n+1fuVd1xZXs0iWjMyKFI4E//jG6ebPl/vuNt32RzEGIeYegKO2ll6oXLIhs2OD5+eOKmmrb
      gw8paqonvH5wPhDPp2prw2vXJg8eUs2e7Xr856p580jlwHEE/QRkt1mb1UYNGcETcVGK8nLz
      V/41+OyzmstesLMAABJYSURBVJf/TGlGtrA8Rii5d5/3qSdpi7Xkpf9VVI737CJZQqpUptWr
      dVdfHXz55Y6vf12/apXlga9R5qwG0IwPGGMUicTef79n7etST4/++utKvvUgW152Pg/PqYVt
      fydNGh0Vs2aUDLNG5FjMD4TS6bZ779N97nLL17+eZZxijFEi4X/u+eiWLbaHHjTeeuugJYzJ
      kylkwBjzTU3+555LHT1mfeBrhltvPTu9HE9vMzVTLElidzfX3JLcszv67lbG6TR9abX2yisp
      7TAZUT8BdXZ2eltPdgaT0+dfUlM8zCx3YzTBVPTwYc+//XvJSy8pa6qH/THGOPHxx97HH2fL
      yp0/+iFTeN7e1pNNQH0kPtnt+/WzmBdsD39be8UV41Biw6IoeL1CZyff1s63tvKtrXx7u9DZ
      SWo0TFGRcuYM4y23qGbPzqa2CAMEFHK3bNj0fkmRy1a1YO4019Bnjt0MZZH/eTGxb1/pX14m
      hhwBIwZD/uefi3/4oe3Bhww3/svQP560AgIAxHHRt98J/OlPbFmp/dFHFTU1eWvLEAQxGBR9
      Pr6jg29tTTc1i+3tQlcXoVBQJhPjcrFlZWxZKVterigtJTPNE9TIZnAbMEcieu/tdZTOWjlz
      fpnz7F6tKOjzAathMYcVOr1aAWMpIIrn2+7+svH220133TnoxWCE4jt2+p5+WlFdbf/Of7BF
      RcM+LpNZQAAAGIs9PaG//i2yYYPummv099yjLinuHVEqSViSzt5iSQJRPPOvIGTaQlFmm0qJ
      Ph/f2sq3tApuNxBA0Axtt7NlZVRJsbpyGlNaQhmMpFZDMEPN35slA8tAJ/dvc6fUlTNmldnP
      DF5EXHj929sXLV968vA+zOpXXXMlOcaTbCb27+965NGy1/7BFvWf4wFjMRj0P/dc4uNPbA9/
      W3/tdVkO8JjsAjoN19Tk/93vU4cPMy5XRhy9TecIndnBCEtn/iVo6nTLp4JQsIRCQdvsbFmZ
      oryMKSmhrVbKZMoUsMYiEgYK6IM3XmpLamYsvHTZjN5h/f6Oxu44VqD40cZ2o9bSNzsHz/Nj
      ISBJkiiKAgD/47+QekKOJ588kzdhHN+2LfTrXyumz7B89zu0I4vZ0DHOJE59ZsfI28GCloAg
      RzRH3ekTcaK2FgeDBMsCwxB9H5ohWIagGYKhCVZBsJmDNGQ9t/BYRMJAAZ06dgCrXDWVhWdP
      GSamY3v37KOMhWS8E+uKl1xcA2M/za8UibR88Tbbt79t+ML1ACD6/d4nn0odOmT/7nd0q1Zl
      lfYmArD+fph9C8y/Z7xToJZdsP5+cMwCxyxwzAZrNVimgTLbBZCmSnoJ587OYdBqt+/aKlBf
      uKj8zLtxWqm75IqVAAAwfTSBnNwI6QjMXZ1lwT4DZTA4vvdd79PPqOfPS9bW+p5+RrN0Sema
      12irNSv18AnY8HUADDueAIxgzurReD46mnfCm9+ARfeDsRi8x+HIGoh0QjIEGhs4ZoFzNthn
      gbkc9IXAjnnHvbGF6z82Pux3Hzp6qrhqlsOY1wvTOeGf3weahdlfHJGGtCtWRN/d2nrnXYRK
      5XzsMe2VV2TbL0ISYPN3AUlw21/BdxLW3UeKIiy+D7IctDtqMIaWnbDhG7Dyx3Dxnb3BYQx8
      AlI9EGoC73HwHIMTb0IqAhiBoRics8ExE+yzQF8IajNQ7IiiaAIQUhBuh7aPoWk7eI70y8IS
      keDWD3ZUFFqi6rLL5pQNbWcEWRjG0LQNNnwDbv4DVK4cOoIGJLOCxxNev950++20zTbEWf1A
      Euz8JZzaDHevA50LMIaOffj1rxCXfwcW3ptfDfXzNqOeN74G1zwOc24bKiCMINUDUTcEGsBz
      FHwnwHcSsARKA1imgWOWaK6mTcWgNIJSByQDJA0k1bslqFErbJRZGMaAREgGoWMPNO2Azn2Q
      DIHzIqi8AkovGbjUQd2B7evf3X3dnffPm5bXxVYwhlPvwMZH4I5XoHjJEFGQaz6NMRz6K+x4
      Er6yESxnXmgILZ8wG74Klz4Ki+7P4yN+xluMoXk7vPEArPolzL51xEEgCeIeCLWA7wR4jyPP
      cTLhAy4KXBxoBbBqYDTAanp3lHpQW0BpAKUBFAZQ6kGpP71jAIUeGBUAnPbhtCcj7WuFMYhp
      6DoATTug9UPwnQBrDVReAWWXQ8G8vvJcPwF1nNi/86TXatKvWnH5sPZHU4g+/HfY/gu48x9Q
      MPd8P8lVQKc2wTsPw12vQdGCgWb9R2HtPbD0W7D0W/nS0Blv69+Ftx+Ca5+CWTfn0yxCwMeB
      i0I6enobgXQMUkFIRYCLQDoCXAz4OHBx4OO9O4BBoQdFRlhnthKjpdSmXpEpdKDQAqsFVtu7
      k8k9JQF8J6D1Y2jaBh17Qe+C0kug4goouwxUpnPjbWBDYioRPX7kqLV8drlrDNbKwAj2vAD7
      /wx3/QNsNcPE3Sho3wPr7oNrn4Lp1w+4VJ7nWYYB92F4/Suw+Guw7KG8aKjX21ObYdOjsOqX
      MPPGfJrNEowAI0AIsAQYAZJA5ICLQjojrz7ZRaVkDyXEIR2FdASEBIg8SNyZLUmBQgdcDBQ6
      cM6ByhVQfjnoC4cpluHREg6HR3OaJOBtv8C/X4p72gf9nuO4UTrkr8PPzcV7/4gROq9ZhHDX
      Ifzr2fjj57EkjjKgAWZPbsTP1ODjbw4a7ujNjgFnzCKEJRHzKZyK4EQAR924pw37TuL2vbjr
      ME6Fs7+WcRcQxljk8ebv4f+5HCcC5345yriL+fALy/H7PzufLPrFnfsIfnYW/ui5XDWEEH/0
      TfzUNHzinTyqB4+DgPLHRCwYQzFwzc/BVgNr7wEulgeDQgrW3QvOOXDF94Ecrp5PEOCaA3f9
      A/b/CT55HkY9LhZjOLWJ3vwI3Pjbc3PMzw4TtOIQxcKNvwNWB+vvBz6RkymRg7ceBIqBG34D
      VNblBuccWL0GDv4Vdj4JeFQzmB9/AzY9It3we6he9ZlVD0yYgACAYuGWP4KYhnceBmG0A/CQ
      CNseh2AT3PoS0CNcHcY+E+58FY6+Djt+OTINYQxH1sLWH8GNv0eVK0cW6AXHhK55ptTDLX+C
      cBtsfQykodaOGByMYO+LULcZbnsZ1KOaU9YxE+54BY6ug51PgpTd8GqM4ehaeP8ncMNzMO3q
      0QR6YTHRi+Zp7XDrS9C+p/eNVfZgDMffhD0vwM0vgrli9A7Yp8PqNXBkLex6angRYwxHX8+k
      PTDtqs9yznWGURe/R18LO5dAI352Fv7kdxhJ2dYU2nbjpypx3T+zDGEYs4EG/Nxc/P5/DVUv
      QwjX/gM/WYGbd/XVuaZQdWmMzE4OAWGMfafw01X4wMscl872x4dfyb7yPHzcBZvxbxfhf/5g
      cA0hhA/8BT9TjVs+GpnZUTGFzE50FtaHrQbu+D/Y+RR14s1hqtaRLlh7Dyx+AC6+M5+ZiLkc
      7noNmrbB1h8C6l8ewhgOvgy7noZbX4LS5XkL8YJg0ggIAIqXwA3Pkdt/Bg1bz/ubZA9seABK
      lsGlD+e/b4alAu58FZq3w3s/AYnvPYgxHPgzfPgs3PwilF4il3sGMJkEBADTrhKv+DFsfATa
      9wzyrZCGTQ+DQgef/28gx2aue3M5rH4dGt+D938KIg8YwcG/wK6n4db/hdLlsnrOZZItOUAQ
      eNbNgDlYew/c8xbYZ5z5CmN470cQ6YTVr49tRz5jMXxpPbx6G0gCmCvhw1/B6tegcMHwJ34m
      mWQpUIZ5d8Olj8Art0GwqfcIxvDRs9C8A2776yibfEZERkPte+CjZ+FLa2X1DMEkS4EyECQs
      +TokQ7Dmbli9BgzFcHQt7PtfuHsd6MdrpR9DIdz9BvBxMJePU4hTk0kpIAAgSPjc9yAdhnVf
      hcVfg60/glv/F+wzx7UUorUBZN2P9rPKpMzCMmRe2psr4O2H4OqfQfnlchl2EjJZU6AMtBJu
      +DUsug+KFk+0KzKDM7kFBACMGopHOd+UzDgwibMwmamALCCZnBguC8No3wfvOS5e0Hx4r8ZZ
      JQQasb7kkoWz5dKsTIbhBIQEkFAo5KcMDm/rCZXWJnra4ulpmOcFQeB5fpjTR44kSbLZKWR2
      KAF1tZyME0a9Vikp1RFvHau3C1EPVlk1CgWhUESjUWa4+Y5Hh2x2CpkdSkCF5TMAQCywAE1X
      2Cwko8JiGihF38wvYzS3qGx2CpkdvhpPsywA0GotAAAzstl3ZS545FqYTE7IApLJCVlAMjkh
      C0gmJ2QByeSELCCZnJAFJJMTsoBkckIWkExOyAKSyQlZQDI5IQtIJidkAcnkhCwgmZyQBSST
      E7KAZHJCFpBMTsgCkskJWUAyOSELSCYnZAHJ5IQsIJmckAUkkxOygGRyQhaQTE4MOzIVh30e
      QmfsPHmUMBZqxR6sLyx1DrOcqsxnh+FSICn94T/f6/R219a16TXUyTbfycN7pXHxTGZKMPzs
      HFWVxRKjvXrlJR99/IlOZ5YwTqXTEsfxPD9VpiCRzY6d2X7Lfg9KsKMVGczuuuMqezlEO7G+
      qKbUCaNb9jsLcl03XjY7vmaHn53DUlwGALZFywAAwJnf4GWmOnItTCYnZAHJ5IQsIJmckAUk
      kxOygGRyQhaQTE70VuMlSYrH4yM6M5VKZXZEUaRpum8HIQQAJEkOOJ7lTl9bxQBrfUcwxggh
      iqIkSSJJkiCIUZg919q5AfUdGSKg85kdIqBzrZ0bY8OazW8kZARwdiT0He9dmnmISBj1es99
      y35nFpNGCGV2BEEQRTFzHCGEz1ptOpudjNk+a6IoCoJw9m8yzakYY57nJUkakdlzv+qz1uf2
      uUEPEdD5zA4a0PmsnRtjw5o91+1cImGIezdsJAzfEn0+0um0Uqkc3bmy2QvG7OjLQLm4IvLp
      aDTKCeKA4zyXQhiQJMQTyT5dCzyPACSRF6WstI6RxJ9jGSMxmeJO/4N5nhcFLhaLoywfH4w4
      Xhh4DGOSpAQ+HYsnUOY5xJjneSSJsVhMEFE2hjmOG3BE4NISAlHgotF4nwmB5xFG8cEi7VyQ
      JESj0XgyhTEARvxpz5VKJc9xfVc8IleRKMSi0Xgylbnwvndq1E9/+tNhT847R3a+dSoA9SeP
      a1nUEUgyfLi+s8dhNZ06eujwwUMef6i722spKFFQkI4FXvvruoqFc/e+9XLMMMOpH36mfiHc
      8sG+9rivJY2I9qYGgdIYNOymN9epTE6zQQcAXc1Htnx4DPU0dUSx026ns3mI+NCm9w8SXDCU
      Rt6W+h6OMBt1XQ21W3afinnqozxtt1kpkkhFvH9d85ZLI+056XY6nSp2+DdFGzdtZFDKG+ZC
      njZfTLSa9PUnamsPHWhtbA0KZEGBnQJIxwKv/WVd6XTTxn/WFhQXaFXDvM/qaTr0zr4mrUoZ
      8bTEeWH7eztAqbOa9VzY8/f1W+fMnUUBxAJda9dvMWvQvmPtTtfwrnrrdr9f26VSsJHu1gRS
      bN/8OqGxW436iamFESRVPXueSS1s3rKt4eiBDw6csmhZDFBZWWlxlkeCXeHu1khKAgClzlrs
      MgeaDjV4uXBPz7CWhXQiluSldDwaC+3avt3Tkzp27DiAWFZSXnvoSObhLays0lBgLygPtZ30
      RlPDuytxoUgCi3wkGt2/b8/JZl/zyVoJwFVSqVUSpSXlbaeOhVI8AKiMjmK7UWl0aqVQfZtn
      aKsYST3hMIDQ0xPbv2fnp43u9vpjAFBRWWm2FVXNqgo3HvZGeyOhpMAsgbbMSRw53ja8wwDp
      dIrmvFt3n6yt/TQNCnfDMQHgw127JCGd5EQA0FkLnWaNymjXQE99qzcbm1w6yce8Hx04drj2
      qECoAs1H4sIEVeNVGv2JAx8ipWtmdYne7CqzKj892YwB7f5wl4DFaZU1hEofC3kySavBZLKW
      zln1uYVO6/Av/7HEHTx4oqjQEIgjq8Vks1nMJj0gFI8nzTaru7MdAABIk8mQTCYYtV6rzGLx
      ERKOHjhsL7D7Q1GTyWR32CwWCwFAkJTJoE8m4kq9ketxJ3gAAKPRKPApAehMajekr/hE7R5r
      QYXfHzKZbA67zWIxA8D+j3YlJRSNRCmNSQh7k4IIAHqTCcR0KoWtNuOw/tJK3cLFS6tqZlY4
      9TaHU02keEbHAFx29fWzplfGPd1pAAAwmkwinxQwYzYO5yoAo9LNX7xs1ozphXaT3W5TAJem
      9Eo6i+4cE0U0GtZoDRSZz8VBwuGw0Tj8DRgFiWiY0RrZfD+P8WhEodExVD7tRsNhjdFI5cna
      5BWQzJRAbomWyYn/D3v7WYBDpANqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hotel Status Changes Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Active Hotels' width='192'>
      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
      d6KRUPw/FBRL0YjQ6CsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
      yLUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Manually Reactivated' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dZ3hbVbb31znqli1XyZJ77yVOcZxOEkhIAiEh
      MMOUl3vnvjPDOwxwgYQOlz5AkgHuEOBOuy8Dc4FJjxOnE6c4iRPsuBe5ypZl2eq96+z7IfP4
      iWQnlq1uzu9bjo/2Xjr56+y11157bQwhBCQkswUPtgEk4Q0pIBKvoN75zwih3qbG6Jz8kY4b
      tPisDH40QRBms5nFYgXGPpIQZzoB2Q29nT3JnAgtwTF3NRfm3U8DAICYmJgAGEcS+kwzhOH0
      qNSkeAzDCeREGIYFxiiS8GGaNxAACHLyKAl8ur6VllE1/d0kPzCwWUzjNRoNOYSR3ISchZF4
      BSkgEq8gBUTiFaSASLyCFBCJV5ACIvEKUkAkXkEKiMQrSAGReAUpIBKvIAVE4hUeCchu1nd2
      9dgJMvmVxB2PBNT5/SWLWXm+QeRnY0jCD48ElJKVrdMqTRqtTqfTaDT+tokkjPBIQA67zWBA
      FQsLOBwOmchBcitkPhCJV5CzMBKvIAVE4hWkgEi8ghQQiVeQAiLxClJAJF5BCojEK0gBkXgF
      KSASryAFROIVpIBIvIIUEIlXkAIi8QqPBIQIp9lsJshynCST8EhA4q76w/u+vd6v9rc1JGGH
      RyWjnE5EZ7GpyKHT6QiC8LdNJGGER28gp5OgUjGr1U5mJJK4QWYkkngFOQsj8QpSQCReQQqI
      xCtIAZF4BSkgEq8gBUTiFaSASLyCFBCJV5ACIvEKUkAkXkEKiMQrSAGReAUpIBKvIAVE4hUe
      CUg62HXu7JmuIbm/rSEJOzwSkCCzgBdJj0uYazlAVrvzwI0RvcUebEPCGI8ERFj1SiKSF0Gd
      Y0U2WyXaF/a37jnXR+4XmDWeFdl0EulpKRiGzbGU1rpeRRaXva9x5IJQPovMTBKEkEdJ9fSI
      mIwIfxsTBM52jf/f5VkOgnj1cPvXv1qcHs8OtkVhRqdU98OdhUnUZrHKVJUV98iitEUZcS8f
      arPYncE2KpzQmGwvHWz74QroQo88NzEqKYZFwbFXNxUq9LbPz/eTzpCHEAjtPCWkUfAfqIAI
      Ap3rHr8rn0uj4ACQEMXY9XDZ366ILgjJUMX0IIQO3ZCc7hjb9VCZu4AcVmNvb79MNXemWlOi
      MtmahjVrCngTV0qTo5++J++N6o5hlSmIhoUFXVL9Bye739hcnJnAdhdQ+42G6+1d1+qvBcWy
      gNEq1jBplHx+1MQVDMN+vjitJCX6lUNtdie5+/a2GCyOFw+2ri/hbyoVYBjmLqCMjBSbcpQe
      zQ+KcQHjTNf46nwuBcNuvUil4G9uLpbprZ+QkaHb4CTQ7453Maj4C+sLMAyDyXEgm92Zlpml
      GB8NhnkBwmJ31g+oVuXzMFcBAUBCJOO9raVfXRXV9SqCYlsogxA61jp6pmv83a2lkcx/BoDc
      BYQIwuFwRkVFTfr43KFLqjPbnfPTpo6IVqTFPLkm97XD7RK1OcCGhTg944Z3arpe21SYy4uc
      uOgiIKtKfP7qDYlEotbP2WeHELrYIy9Jio5j06e8AcOwR5ekl6ZEv3Sw1eYgnaF/YrA4nt/f
      uqGEf1950q1vbhcBMeJSy/PTCLuDQgm4gYECAdQK5WsKuJPHrwmoFPy1+4okGvOfLw2QzhAA
      OAm0+7QQx2D7unzc9bm5CAgRBCuSu2hREY1GC6yFgUOut/aM65fnJNz5tkQOc/fD5X+6OEA6
      QwBQ0yatbhnd+VBZNMtdGC4Cshvk7T19Bgd79ZL5ATQvoNR2ywr4Ufxo1rR3zkuN+e3qnP84
      0jGqmbMDuicIx/TvHe96bVNhzi2uzwQuAqJF8dbds8oy1n3o1OVAmRdQEEK1QvnyXC6dOn0I
      HsOwf12akc+PevVwu/OHemK1xe588WDrqjzuA/OSpxz0XZ6jTTN6uvZa4bL7Hntkw63XnQ5r
      f0+PyR72HqXSaGsaVt9dyJv+VgAAoFPxd7aUiBTGH+YymZNA75/oRghe3liI41O7jK5OdGzy
      pvVr4iPpTtdQrLijYUSplMoNfjQ2ILRJtDiOFSdFe/6RhEjG+9vK/lo3cKVf6T/DQhCE4ES7
      9GjL6AfbyjiTXJ8J3N/kQ91NB46eqq2rv/WiQjbuMOsGRuThnpFY2yVblcel3ObHNCUYBpWZ
      cb9amfXqoTaZzuI/20KNAYXh3ZquFzYU5CVO4fpMMMkVQEirGtObXdKEs4pKLDojPzE2rDMS
      bQ7iQq/87sLEWXz2l8uzCgWclw62/UAiQ2a7c/veltX5vIcWpNwh3gGTBYRjiM1gmNTjXUOy
      iYtxyXmbtjxYmh7nF2MDRZdUZ3MQ5SkzGL8moFPx1+8v7pMbvrgyOOeTX50E+uhMj5NAz613
      j/pMxl1AGq2haH5lBDtCJhn0m4XB4VKvooAfxY1izO7j/GjmB9vKPj/fXz+g8q1hocbpjrG9
      DeLdD5fH3iZYfyvuAsouyBvqaI7ipi6eP88/5gUHJ4FqhbK1hYl3fiHfmcWZcb9amfXynHaG
      +uWGt491vrSh8M6uzwTuAurr6k4rKs9M5jKZs/ylhiZKg7VLqlueO00A+s5gGPZvyzKzuezX
      qzvmpDNktTtfOti2LDdh2/ypoz6TcRcQX8CX9Avbuufa+HWhR56XGJXkQQD6zjBplHe3lrZL
      tF9cEc0xZ8hJoA/P9Bitjlc3FlIpnuY6u983Pi5TjMt0prAP+dwKQuhct2xFbgKNMvvxawJe
      FOO9B8v+fGlgjjlDZzrH9jeO7HqoLDpietdnAncBJSSmL1s+PzpyTuUDqU321hHtyrw7rcB7
      DoZhy3Lif7Y47aWDbWqjzfsGgw5CIFaZ3jrW+cw9eUUzibLCZAHZreruXgmN6tGGw3ChbUTr
      IFBFqs8iWBiG/WZVdg6P/dKhuRAZstid2/e1LM9J+Ell2kw/67oWppNdvd6KMVgRrDnlQZ8T
      ylbmJng+rnsCg0Z5e0tJu0T7Vf1QWDtDBIH21PbpLfaXNhTOKEZ/E5dnilEpSVmld1UWE/a5
      U7DCSaALQtkajxdQPYfPYb6zpeSz2r7GoTA+iu+cUPbN9eGd28o8ifpMxjWlVSujRCdGxwsc
      Fq2PzAs+nVKd1UFUpMb6vGUMw1blcf9lacb2fS2q8HSGhlWm1w63b1+XV5I8mwA9uAkogpuJ
      yzuPHjvOTcnxhXnBByFU16vIS4zicfwyKGMY9ssVWZkJ7DePhl9kyGxzvnKorSor/kcLU2c9
      vXBxlnEqs2r1Ol/YFio4CXShR7ahRDDtms6siaBT3n+wbMunl7++NvSvyzL91IvPQQh9dr5v
      TGv55CcVNC+8Q/dP6saHb9xoqGvs8s68UEFptLWNaO/K5/q1l0QO470HSz89398gUoWLQ10r
      lH/7vXjXw+WT05xnhLuARAO9bR190rGRWy8igrDZbOGY1nmlT5GZwBZ4HYC+MxiGrcrn/nhR
      6gsHWnUWh1/78gkEQl9fG/rtXdnzUmO8jI25C0iQlMSNi2JHuoRMxnquHzpxXqG3etNT4EEI
      znbJVuZ5lAHtJTiGPbE6JzmG9R9H2kPcGUII7W0QR9CpP6tK97419yfLjIrLzs4261zSNyms
      6FiKUSTVhFdGotpkax3RrMrz7/g1AZNGeW9b2fVB1TfXh0N5IOsY1e06JXxkUao3rs8ELk60
      w6o7emCf0orZmS4PPTqOx+aM82MjOBwOAISLhi71yiOZtIo030/gb0dyDOsv/7Lw6W+baRTs
      J5VpPlk58S2tI5pn/tH88sbCJdnxPmnQRYMUemReXhYVxxPiXYYwRlT8spV3pSdyfNJlwDjR
      NnZ3IS8A49etFAk4b2wu/uBkdwhGF7Vm+9PfNm8qFTxY4Wm2xrS4RqIxPCpaUF6c5XCGfbVA
      k81xXaQK2Pg1AYZhS7Lj/215yOWd2Z3E28c6k2NZj63K9uGr0UVADpt+cHjYjkUkRHuUjRbK
      NIjUHCY1jx+EtAIcw36zKjuRw3zzaGfoTF33NYxc7JG/v62MzfDlSrnbG4gSwxOwcStfkOzD
      PgLPzQSgysy4KJ8+LM+hU/H3HixtHw2VvLNmseajMz3vbi1Nimb6tmUXAZkVIgczUq6jaGRD
      vu0mwFjsxJV+5eqpSkgFjJTYiDc3F+8519skDvKcQ2e2v3igdduClLWFvn8gLgKicxI1fR25
      5cUMVngnlA0pjaMa89JsrzKgvWdlHvfRJRkvHmgLYgjN7iTerumMZdOfWpvjj/UcVwGx4zZt
      eyg7ibuiaoHPewoktULZwozYKGaQ0+JwDHv8rmw+h/HG0Q4HEZzo4r4G8cUexc5tZRF0vzwN
      tykuNtrbfOjQ4UMHD/eMhGtdHAKhWqF8VR73dvUAAsnNvLOmYc2318UBdoYQQh2j2o/P9r5+
      f1FqnL+OqnCPkahUuuyiUhqDLh3q81OX/mZEbR5SGqctIRUw0uPZv3uwdPcpYYCdIZ3FsX1v
      y4PzkzeU+LHm7uSNhbn9LQ3shNSFFeX+69WvNIhUcRH0LG4IRSJW5Cb8vCr9lUNtCkOAnCGH
      k3jveFc0i/bkmly/ziQmbywUphaWZSQlsCP8u4LtP2qFslX5MyvB4W9wDPvt6pyYCPo7xzoD
      M5AdapKc65b5POozGXcB8QR85ejwoHjMr736D6vDealHsXZWJTj8CotO2bmt7Pqg6u/X/L7U
      2jmqe/9E91sPFGf4/wArt5zosaFR+djYmFQecus4HtIgUnNYtLzEUAxDpMSy3t5S8tGZnpYR
      P6aca832Fw60bp2ffE8RPwBRMNcKZdH8aAYexWY5iDDIipqSc92yBemxnGBP4KcEw7A1BbyH
      F6S8dLBVbfJLEr6TQDtPdtMo2LP35AVmEHcRkNNmAgxpzURMhHvA26JXm+3BD8nfGbPNeblP
      cbd3JTj8CoZhT9+dF8dmvFntl2WyAzdGvuuW7X64nEUL0E/IRUCE3SrX2zNSBQi5RL0Ih+X0
      /v8eDPksILHKNKwyLcvxTaaLn2DRKe9sKakfUO5v9HFkqGdcv/Nk98sbCrO4kQH7BbkuptKo
      8lEpwrC01JRbr/c1XVaYcYVCEeIZied75BVpsV5miQeAzAT2O1tKPjgpbJP4zBnSme079rVs
      Lk/eVCbwVZue4CIgKj2qODfNbLEajC6HrmWWLV25qIQXHx3KNRIRQue6x9cW+H4Hqj9YW8h7
      eEHKiwfaNL5whm66PhQc27E+QK7PBJPqA6WkAMLZTJddrjQGK2fRPQW82Wx9DRhSrWVQYVyS
      HR+yDtCtYBj25NrcKCb1vRPd3jtDR1tGz3SNv/+gvxa87sCkMr9D4nGVfHg4/NI5rg+qYiPo
      uVOV4w9NIhnUnQ+V1XbL9jeOeOML9csMbx7teGVTUX5Qsufc/h0fG8XAKIUlYVYgESFUK5St
      zOP6tgSHv0mLi3hzc/HvTwvbJbP0LLVm+3P7Wx+Yl7yxNDiHTLo/7lheUiwTtXQKg2LNrHE4
      0aVexZowcYAmwDDs3hL+pjLBiwfbDDPfkYgQ+uhMj8XhfP7efGqQDuB2O61HeeHSVXqMIDM5
      zP4nGofVLBqlUBBm+0YAAMOwHevyo5jUt451OGZy2C9C6HDz6Mn2sY9/PC/wrs8Ertt6GGw2
      g84V8CXDoiDZMxsQgnPdsoUZIRqAnhY2g/q7raXnhfLDzRLPI0ODCuO7NZ3P35ufywvmuo2L
      gHAac+Gi+XJRjwP3ceq1X7E6nJf7FGsKgpkB7SWZCezX7iv64KSwS6r35H6Dxf78/tZ7i/mb
      5yUF90u7busxaW60dRuN+tyCwmAZNAuGlKYhpWllbqC3gPkQDMM2lQk2lyft2N+in84ZIhDa
      dUpodRAvbywMluszgWskGqdGRkRQcEyn9eh3ECJc7lMUJ3FmV6EtdMAx7N/X5kbQKDtPdt8h
      gRohdKJNeqJ97P1tpRFB2rR0K64+EDNy3sLK+7f+qCwzVPJBpwUhONs1PrszeEINDou286Gy
      423S6ubR290zqDC+Xt3xwoaCGZ165j+megFieFxc4AoSeIlMb+mTGZaFTAa0l2QmsF+//6Yz
      pJv8V73F/uLBtnXF/AfKkwJv25SEU9htSr4XqWIjaFOeBxuOYBh2X1nSuqLE5/e3WuwuFQoQ
      Qn/4rtdgcbx4b0HoxEtDxY7ZgRD6rku2wrNDdMMFHMdeuLeARsHfremacIYQQifaxw41SXY/
      fKcDKANPeD93i5240q/wRw3o4BLJpO56uOx4m/RYi/RmYGhQYXzraOfz6wtCLVga3gLqlGoR
      ghBxJ31LVgL75Y2F753o6pPpTTbHK4fal+cmbJvuAMrA49E8cHygra6+qWDNQ8V8f21wnB1n
      OmVVWfFhGoC+MxiGbZ2f3DKieXZvS3lKtM5i/+N9C0Jqr9JNPHoDJWYWZifFGnWGGWUkfnVV
      9O31YavDX7Wqbgag78r3zRk8IQiOYdvX5S1FTSlte363pSikXJ8JPBLQ2KBQZSWsFuuMMhLT
      4tl/+K73/33VOKQ0emHhbRlWmsQqU+hsYfYH0eaRF+2fPoYfKdOeD7YtU+PZGyijYOmq9ctK
      U6a/9RZW5XEPP7EsPpL+0OdXvr425PNXUV2fIjdx9ofohgE2A1Q/hWWvxjbtxk6/AvLuYBs0
      BR4JCMMpTCZzFtVleFHM97eVvbG55NPa/sf/fmNYZfLVPoSbNcjCegF1GhCCi7vBrIZ73oHy
      RyDvXqh+Cmx+eZd7g99nYVQc31QmOPj40ugI2tZPL//je7F9Jlkvt0NltHWM6lZ4d4huSNN7
      Ghq/gM2fADsecCrc8yY4rHDuHSBCq/5pgKbxiRzmzm1lbz1Q/Nn5/se+ahxSGr18FV0bVHGj
      GHMmAO2Osh9qnoW734Ckin9eYUbDlk+h/QB0HgmmYZMIXByISsE3lSV98+uqSAb1R/91dX/j
      yKx3IyCEzgtlS7LimTSKb40MCewWqNkOqYuh4lG4dYBOLIHVr8Kpl0E1EDzj3Al0IDE5hvWf
      j8x79b6ij8/2/urLBrHKNP1nJmG2OS/3Ke8umgsr8O4gBBfeB6McNu6Cybk+FT+DvPVw+Ddg
      DZVjtYMQicYw7P7ypL2PLYlkUH/8x6v7GsQzPZ2ke0xvdTjLU+ZcABoh6DsDN76E+z+GiKk2
      aOMUuPtNsJngwgch4gwFbSkjOZb18Y/n7Vifv/u08Mlvmsa0Myjqfk4oq8yM83fppCCgGYaa
      7bDqRUheeNt7WDHwwB5o+QaExwNo2W0J5loYjmNbK5Krn1hOp2Kb99Tta/BogmZ3EheE8jUF
      if47hDA42M1Q/SSkVkLlL+HOX41fBmtfh5rtoBoMlHG3JciLqRiGJXKYH/5o3gv3Fnx8tvep
      b5okGvOdJ2hDSqNUa67KCukSHDMGEVD3ERgVsP53gE33n4JhUP4I5K6Do08F3RkKidV4GgXf
      tiBl72NLAGDb51cONkmI22voar8qLS4iOSZcSzhOTX8tXP8T3P8xRHo2M6DQYP27YJTDxV0Q
      1KMUQkJAN0mOZX3y04rn1uV/eLrnia9vjKinnqCd7RpfW5g4p4YvtQhqnoG7XoaURTP4FIMD
      Wz6Hlm+h66jfLJueEBIQAFBx/MH5Kd/8usruRI/8qf5Is8QtVqQz21vEmrDeweOO0wY1z4Kg
      Ahb+YhrXxw0MA8E8WPU8nHgOtGK/2TcNoSUgAMAwSIuL+K+fL/j3tbnv1nQ984/mUY154q9X
      +pU8DiOb5/fiowECEXDp96CVwMZdQJl5tgaGwfxHIXstHH48WMtkISegm1Bw7KEFKQcfX2q2
      O3/0x6tHmiUOJ3GzBEdVVjxrzgSg+2vh2p9g8ycQOdusXAoN7n0fDDK4uBtQEI7j8EhAVr3i
      8sU6tcnub2tuBcOwlNiIT386/4nVOW8d63xuf+uQ0nRtQDl3VuC1I3B8B6x4dmauz2SYHHhg
      DzR9Bb1nAu9QeyQgs8VWWsyvu9Llb2smQ6fij1SmHX1iuc5i37ynTm2yL8qIC7wZvsdpg+on
      gV8GVY/PzPWZkpRFsPoVqH4q8M4Q5smquMNqaGpsy6lYRLGbCIIAgMBXSrQ5iMNNknGd5bdr
      /HLuVUBBBFz6EFr3wqNHgOOjmphOGxx5Eoxy+PFXQA+cj+iRgMRdDS1D6vziebmpXADQaDQh
      W2ozPBi4AHsfhZ/+A9KqfNmsSQ1/vQdKtsLqV3zZ7B3xSEBukALyCq0Y/nY/LPwlLPmtDwYv
      N0Ya4JufwOZPIG+97xufihCdhc1ZnHY4th0SS6DyV375D05eACt3wPEdoJP4vvGpIAUUQBCC
      q3tA2QcbdwHVP3sBMAwW/hukVsLRp8Funv5+ryEFFEAGzsPlP8CWTyHSnxVVKTTYuAu0Yrj0
      +wDM6kkBBQq9FI7vgKVPQNoSv3snEfFw30fQ+AUM1PpbQ6SAAoLTDkefBm4BLHkiQD2mLYGV
      z0H1k/52hkgB+R9EQP1noOj1o+szGQyDhb+AlEo49oxfnSFSQP5n6CrUfQT3fwycwJYVo9Bh
      wwegGoSre/w3kJEC8jP6Mah+ApY+BZkrg9B7JA8e2ANXP4XBC37qgRSQP3FY4fhzwC2Aqt8E
      zYbUSlj5PBx9GrQj/mieFJDfQAi+/wuMNsHG3UALXgIuhsPiX0NiERzfAQ7fn1pPCshviOqg
      7kPY8mmgXZ/J4FS47yNQ9sPl//S5M0QKyD8Y5XDsGVj0a8hYGZg1qWmITIRNH0L95zB02bca
      IgXkB5w2qNkB8Vmw7KmQUM9NMpbDimeh+knQS33YqscCQk6dLlT2Y4c0CMH1P8PoDbjv42C6
      PpPBMKh6HHiFULPdh86Qh+kcRF973TWh82fbVkOw0jkQghtfwugNuOdtYIZWqVsXhuvhH/8H
      tnwGOXeH0OtnAp0E/rYZSrZBxc8BfGCe5/lAiv372tatXxCsjESwW+CzxaAWwc8PQM7dge7d
      c448AbHpsPK5YNtxe0R1sO8X4PBNeNpzAalPnhDeu6EKgvgG6q6B8XZY9hTQQqvasAt2E1Do
      gIdw4QeEwKIF5JviHmRGIolXkLMwEq8gBUTiFaSASLyCFBCJV5ACIvEKUkAkXkEKiMQrSAGR
      eAUpIBKvIAVE4hWkgEi8wiMBOe2W/r4B+2zPRiGZw3gkoMH2q6NDPfU9Cn9bQxJ2eFbizmRK
      z0hVKNT+toYk7PBIQMkZuQ2NnfOL0/1tDUnYMbN8IJ1ORxCE2WxmsabP9kUIeVhO1fM7PWQu
      de2P7+LDrmeWOMfh/DMZ2ZOEMrvdTqVSPTHUwww1giAIgqBSp7fZ85Q3u91Oo01f4dtkMlEo
      FAZj+tIIHjYIHhvp88cIHhvpSYOzybykUDyq8+3hc/S8QRzH8cmH+HnRIHhsJI7jHv64ff6t
      fd6g52160iDljTfe8LDXCSZ+iDpp37FTZ5Q6W3P9pVE9irBKzjQMF2Tx9v3P/yTnFDNpWMeV
      k0IVVdpVf/VGZ3JmDsWqOHL42LDaLPz+YlvfeF5+Fu7aIGFWHj5UPSg3jfU0NnWP8OMZh45e
      SOHTqqvPs+P4MWxa3dkTzcJhQQL7YPXp/MJCDNnOHDvUPaLNSo76+pvqvJJiKu7SIACM9d44
      9l2dHeH1tWdkVgZd31fbJkOytivtkqT0NIpDd+Jo9bDKwTCLL7SN5WcmEU7byb17GWlZ4y3n
      W8fxTEEsAFCp1ImnqRZ3Hqk5q7U5m+svjRspmKavrkthk3Z83z3CF6RQHNqaozUSjZ1lGzvb
      ICrITiEcllMHvqLxsmtrDnaNaAtz0tweI7IbThw71jk0rh/pvtQoTEmJP7K3JrNYsP/Lw9To
      BG5sVPu1c7X1rfwkwfHDBwQ5ZSwqcf7EkWst/XS74mJTL5cviGBQ3b61tLf51Nland1Zf/Gi
      HljWkeZGsU3Vfb1tVJ3M51OsqoPfHKBFMs+fPj1uZWUKYhrqzlxtEiYl8w4fPJyeW8ig4i4N
      Es5LZ49/39pjVkouXm/jJfO/O7A3Jifr1L7DXgUSOYLs8ozozuZGFJs80iccGuhV6PRtdd8N
      q40OAgAMPT1ig95WuXylXiY22Zy0SN6yiuyh4VGVSqVWTzGnw1nxKxYViAaHRpRmpkVyvXVQ
      r1MrR0Rqs0lvtRM2k1hlZ1hlLa3dKq2OQOB0KJTmGIu4+/TZWrXJMGWgip9bkcmx97U1UVJy
      h1ubBobFGpV+oH/QZDE6HIRZNWxj58gGrnWLhnVKPQCYZEODUrXJqB8WD6v0U5yjGJNSWCSg
      d7beoPOKRnq+F/aJ9Dq9aHDQbDDaCUInHwZOsnSot7enR603AIBOIRmRjFvsDqVapVFrJzeI
      0SJXLV8oFg11iWQCurK+RaRQqYxS0ajRqjdZAKC3fyQ1Fi5fa1aoNQ4CAPClK1fIh4f6RYNW
      k8Fin+KEA0FOWUY0am64Hpua3yfsHujr0Rp0/aJhh0FnI5BG0qM3myQG9sKCxJFRORCO/hFV
      HMN8o6FVodFPcRgyTlm6YoVqVHS9XZTHJ1pahCKp3KCQjWh0XglILe74+mTHmlULTWoFlcWu
      rKyi44QVY1Itmu6O1u9bpVXLyjBwnt77BS11nnGks6Wl8a/fnqpaXEBQ4hgOg3nSvgCnSf6X
      vx+tWlpJQQ69jbJoyRIOA6dzEisLBQ3Xrl+rbyWQ1WiD0oWLuZF07biovlmE7Gor4AxWhFkl
      15im2C8n6ag722GonJ9vlI1So7lLqxZgAElZxXFI0dTa1jIwbtNLgZ64dPlCCkBfe8OoPWZe
      Fo/CjKqaXzblt1YONh6qH12+sMiollCY3Kqli6gYpGQXRuP6pqYb7QMyk1ZBobEWVS1lUFBf
      W6PcxinOFjjNelo0327ST26QsOm/+OuX5UtWcOgg10PZwgWCGKaTHr20Iqezrfly7VWg43K1
      sahicVpCpEUzdvFa4/4v/yIoW5ySlpMaiQbHpvgpijvqTnYYVi3IV8tHWZGcyqolFECZhWVU
      g6KltbFXojUWULwAAAHNSURBVLEZTJhJ/P+PNCwuTbp65ZoTkNZgy6uoTI2fYscLIhxH/v7f
      sfmLU2Noowpban5xSXoCQY1YNK94NrsyJjBp5SKJPDqBj5k1zDhBHAsb01j4CTFK+Tgnjkej
      YDazzmDFjWqp3gaZmVkUh2FgSMKIimdjZhstOoUX69agw6zvE4npkXFxTMJAMJN5sXKZLDYm
      UiSSJGVms+m4ViHVOZkpvBi5XJHA5eGA5NJhghmXGBspl8nieImUSY6KRjE6KtMkCFJt2vFI
      bmo0E8lUlgiKdUxrz85IxgCNiUX0WEFsBKZQWXjcGADQKuT06Di606iyULkx7g9UrxoXjynj
      eAKHQRXJTY2iO1U6GxOzyHT2jPQUChBS8RAjhh8TgSs0Jl5CLADolGNUTqJWOggR8YIE97OC
      nXbL4MAAokfxY5gKI5GZkqgYG4/hxg71D8YnZ8SwGWa9SqqyZKYnqeVjkXF8OsUx2NNvcVKT
      k2PG5fqMjHTapK+tlY9K5FquIMmkVsQJUlmYTWNBNIdBaUIZqQIcQ9LRsSg2Y1gyHhWfmJoY
      b9TI5QYiPYWnlMtj4rhU1wYR4Rwe7DM7qcmJsTK1KSM9WaeQsWLjZcOD/wsR5lhE/lktUwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Reactivated No Traffic' width='192'>
      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
      LMOEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Paused for Budget' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Manually Paused' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Paused No Traffic' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Status Changes by Channel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Status Changes by Hotel' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2daXAbaXrf374baKAb9w3i4n2JFHWNNIc0O9fu
      HOv1ep1KebP2xokrTtlJlatSSSqXP8b54qpU4nLKdm1ls7WH996ZnUOzo1ujoSiSIkWKJwgQ
      N4ij0Y2zAXR3PpDL0YjUXBLJ5qh/XwgBTeJp6MH7/vt9//08kCzLQEXl8wIfdAAqh5utBKrx
      bCSWKhaLDzquWCwKVX5+fj6bL+1lPFKxWNoZRimfq1bL5XpzL99a5fOAbv64+sHN40fHrly5
      YLJ4GLxRqkg5lnXYbNkC39HhqgutRrn0wgsvrK2FSUlYXhHFZkWGcA3c0hpdwwPdjy6e1q1b
      MwAIUoPzBrsjsaxGSwwOHVkcv5QslG2do8Vs0k7j5bpgNjJ8ie8/edZr0T2q9xb4XIyTsHaN
      wiRJ57YbyO2XLl66dO7s2evXr5058+T2k+noqt4V1OEwAKDCsYTeuLq80NfbBwBYWlz0eJwI
      oSexra/o0uzE/FrmuRdfojXYru9e5VlUayRQcP3a9TNPnrk3rNlokQa8yT9MEwDIIluqGI0M
      AKBeiC9siEf7/I/qE/gcbCUQiUKRWJLQ0I0ql47GIAnSGG3r6zG9gQ5HEgBBTVpk80hvh/2d
      n93oMEFNiEzlo4Ej1kcbT7NehDWMWOempmZK1bbT47KbDYsYo9fyy/NzIiwzWgeOE8V0ZCXB
      9xx76hG+N6FjZs//cunuUmdf70Avd+mtpeGxY3emp6wdndHV+XcBzuXT1y9fdNkNbX2gy22Y
      uHlV4yxbUW4+zrVzK9beY0KjsbHBwqCd2thYvvVe3dBjNzJSq3ru7Nml2QWNSTMxebuQXLN2
      dG6sTgmw4UiPa2ZhbbivZ2J2CVQz9uEvvfbM0eU7tyLRmN1u6w7YK6h9wCT8+Mc/pgF/7jV0
      4fYtr9f53uVbr738pfBqeKjXnxPoR/gJfA62EuiZZ1/4NEe/+uprlVLuy889JTUroVBoD+JB
      Xvnq1wAAADx777PPvPCpwntYYByt51987Ss3piPo9PhceIPWkddvTp4gTHypmC8UEUnq6jD9
      7x9e+y//YbSaj96NsHB63M1gPcPH8nDZ7u9Znb4GsEadcMMA2Oz2hiVQDl+T6K0PqsA1AlRp
      8w8KQhsRN8bn6j0O3cJyuHvkNJwax2w2AABG6ii4bjAb/v775//zf/oLUE30DJ/wgvjq3QVv
      p6+QYe1W59yt65Fsxe+1SdAjG4A/H9DmVRibS125PjEyOlIrphqkw6AT6xzWP+jb/4AuXLjA
      MAwAQBTFEydOAACKxaLJZAIAlDmeYuht2S+36uWm3KgJBIEwtI7N5zQGO4k+1LtXymWtXlct
      VzQ4shKO+Dp7c4kwQVshsQnLkgTBpVw8khNfOneyUioAgm6WC6hGk8kWvU5Tlq1pCcSo14oo
      xbN5o14by7CTl988+/Vv23RYPps1WI25HN+sFgna+vav/vFLL33NYaLWEhs+p7khYVqkncyX
      Ax2uTGK9LmNQLT8f515+7inQFrKlOgEEkjbFImv+zu70+orJ6ozHYsHOTq5cs1uMD/eRPxTQ
      9mX8B9dvNEUhPf8B0X1WKK/4rMdOnenb/4AmJyfHxsa2H4j1/E/evOV1aEscn4klTF0DzeRc
      m3Ccfe6cy6h5++e/lIxGWABCu7hyY+blP/+vfU7yE99C5RHy4Re2f7C/1aj09Q1UKhUI85r0
      hgMMa5tYPBtwEgke6fX5BTaHwJDD42+KlMVsAADo7C4jiRYaLVSy9g/1k6i6prXfQEpbSFxc
      XKxWqwAAh8PhdrsPOhyVT0BxC4k8z9/3QEXJPJzm3AMQBNnWQACAi7/+adfxs/H1GAqJiFhr
      o3oMJwP62l9/952Tz70y5NVmFxcXaoYhN2QPjDjN1EGH/9ihuAS6F0lgS238/Td/tcw1nxgM
      1YqJ5Sx8aqwb6LHuwf7V6al6QWNuoal0jKxUEEOnmkD7j+I00K1btyAIAgBQFNXb23vQ4ah8
      AorTQBS1NYrodAe8RKbyadiawq5duhQIuCqyvsfvBABEw2FPKIQCANqNVKHqspv3LaBarbat
      gTwez82rF/uOnkikNkgUwLKopelaQ3QZ0GvTK22u7B7upyVBxHVQu10rcyil6/QfwOLn48xW
      Ai1OX5mPduhg4hc/K3UFraDRuD67BNiIVktL5u6vP79/CfQRJCGdTiXfupAXan6bAW2Vrsyy
      Z58a0gmEuaNv/eqbq5GIDZTPX5o78cyp5NQ1/dCTagLtM1sa6P1r75XYcrUsyCTl8tp1slQB
      MNqsOpzOWEF4+sTwvgV08eJFmqYBALIsHx3ur0q4wGby1bbdbODZvIYxESjKMPrVxbt6owMj
      0QrLxtYjjmAXBURMb7AYmH0LVQUoUESXSqVarQYAMBgMWq32oMNR+QSQv/zLvwQAbIQXxhdW
      71ybqJEgfPPizbWqHm+Mv/seFex5+wffbyLySiRTTK01ZFyup69fm3zv/Hue/lEdDj3ygMbH
      x81mMwBgaWnJ6/UuLywarJadUj8SiRiNm5uI7UQ8QzN6AAAAUnh+UWuzKnpx4ovFhx91lSsu
      LkeAg6qsr3OI/EEtmlgMD7+CBjo7KSDejiVoqG6VycDJICpFHn3i/BadTudyuQAA6XQaAGlu
      4jexVH56YcFn15OgvpxsdfcEnnvy1FokOnfjrTVO73JQfDpLe91yuSCTpuT09NALT1ttoZEe
      VQztB59hCotEIoFAYE+jAQBcvHhx02mUTCZPHu3PlBE2OpcXMa/VzOViLdLqMOmtOnx2PY+3
      Cvkcv5bnnxzsqkAko0FRFPAbhQqA/f7ODtejdbqp7I7iNFC5XG40GgAAvV5Pkqo3Q+koTi1M
      TEzcZyhTUTKKSyCGYT7cTJXF13/0Pe/g8dTqnIgbRBnV4Q2TI3h0qPc3b/+cK9YYb6cWqixF
      eau2Mfr0a26Luhe23yhuK+MjiLVKVVhbTxE4ajabgQwYswNHRACAyeb22plmWwIwoUOB0Wbk
      uOpBh/s4ojgNpBrKDheKG4FUQ9nhYksDXbn4rgxrBga6Wy1xObze2eGwun04snfLPQ/kUxrK
      3pxJW3UmAwPF1lKOQAhuNp44c2r/o1XZSqBGS3ZStcu35qR6lUHL55cWhp84N9bvP9DYPs5Q
      BmEMo2lO3IkRbGpto3JytOdgQ31s2dJAc7cnW7BGg7SqbYRAJLFWcXQdsRsP4KJGNZQdLrY0
      0ODIUZ0G93WEBnp8vlB3sHuAROXZ23MSAOVKZfOY8MpKs15eW1urCu1KucRx5buzt5vSIw5I
      NZQdLramMLktrC/Mx9iyrrTMYV6zTipUII5v9PZ3/vIn39OZgi++/GxxfeFujBUrCWT6usXf
      WylUyhzf0TuM449SiX8aQ5mJQi9cuT4yMkoQBFuuUSQmCVWCokVJymaKdjsNMJ1eg9d5tik2
      Ysmm18P4OjoeYZAq2/x2IVGWUA1B4BqNzrDOSy8c7xxfZSEhLkCkx2FhBQCALKMaDYF7bP5I
      ijsx1jc7vopBQk0QdY80gT7CAwxlvjNnbHZrdH1dSM8nKozO47a343eSaKff5HR1vH/5UrPR
      Rm1WuVShaGhupfHsmR41gfYIxa0DfTpDGc3xHNRqVFsyDKEIgVVKeRxGBVEqFksWi8FoNNWq
      dZzA+WqVhFFEq7UaVaPZnqC4BFINZYcLxS0kzszM3PtgeWFR3O2wVGzt4sWr7X0MTGVXFLeZ
      +mkMZa99+XlXR3A9lb566ZfjV8P+kFOnBXMLicFTpx168tixsYM+iccIxSUQz/OxWAwA0Gw2
      JaF86it/xEbnsONHNw1ljm6rw7TpXgUej7eYBSfOOoNuC4wCk9GFIE1HUM2efUVxGkg1lB0u
      FDcC3Wco2y5Pdh8cx7eEBk6QFEPXK2WdTr/vkaoAoMAE+oihDIC7k1csgdGp29NWRovJ9VwF
      sdqtZ8+cXAuvVLJraeCwtpNzWfF4n9PZOeazq9fq+43irsLuRRLYOmxam7kpY6TZbIEAgDDS
      YtADAHo8dm3wqNeAlitVm9XGVxravVvPVHkwWxro4rtvoRCAaQeGIaVcOhTqBAAOhRz/53/+
      w9BgcKNtODXUkdjgTHpNpVrRaXVNPlcSkWalLENIMBhIZNmTx4YfyX+gaig7XGz9p9dbstfG
      zM4up3MZAKDl6UtsiwAi7PcaF9dSUCN//v27Qj45vzB1/s23MmVQZPmu7u5Seo0rsb9+43w0
      sl7bdbnms6Mayg4XWyNQrcxmijWTXtMGAAZgYXbm+NPncFiOrK4YTGZRljWkJs/yZj1eE0Ta
      aCEQaXUl7O3wVKp1FMPZEh/weR5JQPdVaf3QUCbX56Y++PI3/+KXf/ff7b3HvQwukpQGAbmy
      GLBrpmejX/n6K+o12/6zJaLTG0UEAJ3JvfnvM2fPAQAAgAKdH7YxoCgqHA4jAJhsNgjAWr2e
      1FBQq5prgEeVPffxUUNZD9wsNdrA7PDgUPXSO+/Sw8/36vjJhXzRDocTjb0IQOUT2RqBzp8/
      TwBQquQIxhGenWLMNv/IM872+s2VvNBqCRJkJtovvfb7773582qtbXVbGg2pXGTFZpHAiI6j
      L50aeGQJpBrKDhdbI5DdzBQqrUHfkWg6PzA4wjCUrcPVWFvHNDqP16BnDK0ar9Ngro4ABoCE
      gpoAmXQUgJ1GSgMo4hEGRFHU5maqaig7FHzcSnS9XAIErdnfy+P7NNDNqxdxxqql6UxkOdQ/
      oiNxsRQr6/3lWFhjYKYuvus7/vyJQf9+RqhyL1sjUHTywo8/iH/1xTPR29OaUA8NSU2AHh8Z
      PNjgNg1l8fFZy9ARrVC+cf5X+sDwEXNzcnkqMvG+o384aKfLwgHH+Jjz4Ur0N/7gD5ev/uP8
      YtiDYzPrcUDbDySBeJ7fXIOWZVlqi8++9k/4bEKAEEioEFqy1qJMVuLFENUc7SlWWhaDRmip
      64cHieI2U1VD2eFCcV/fnYayRDzRBiAWT2w+X0pF11KFyamp7V9pVrnGPdYyNh2vqE6z/UJx
      m6k7DWX5mh63W4jKxsUW8PUP+bHWXP7ORio/PzPDyaSZlEAlW9L4HVA+zyEaq5aLp/xHRjeW
      pyxDL7321EHLuC86ikugnYay5OJEU2NGG5Sepkotg8FBuFB6qG8gtRZnnB0UDhqlTEPjMMrs
      D358/vlnXkECwRZCuI49YQn4D/hkHgMUp4FUQ9nhQnEaaGJiIhaLxWKx2dlZAECxWCxz/Pbt
      ryzL3nd8IZuYnJ679/5YnuO2HrUbXFXtFL63KG4K22koy5YgxGSiJEEjcbMpob87JBcjBchK
      wYLV7eMyawZn6O2f/QBj3BAqmZH2Kof1WuWZlayBbBn7nzvT5zjoc/oi82F5FwEQ/SEPRupE
      CAUNDqFMrQqro5mNTDJb4Ny+ECSJRgoTINJEtFdSJQzFQgHve7/6gdnbm8hmIRE2aKQ1FtBC
      9uzv/aEBfwTBbRrK2vUoDpvNRksmkmAYl8WgXYtVRZ3D6/cBGYIMRtASDBZjuliTYQkGJYB0
      cNVWb49fh4G29lHEofJgthKILbI6s+v2nQUMxQAEWq0W3GIzhRZFwkPHTrJsYfLWbavbZzWg
      DVnzwojnxpXLOprWWLx1UT5//vJgv61YJg04srqyZhRrZx5CVlEUtTn2OBwOmDA+/6WnAXh6
      67WjI5s/BweGdv1djuMZ5oD7qD9ubCXQ4MhYKBQKh8MEAngBLMyMDxx9wlXM4nqD3eluViqh
      UHep3LAbySbAEa1hdHRUq9PqcdDdPxboamkwGRAWn5UgDE4YJrTI5w+I53kEQTYffFZHopo9
      +8/WVVgikchmswAArVbb13cA3b632Wkoc/eN3ZqaPn2kK52rtuW2wWRF2ehPr849c+4ZPQ5r
      NWS6UNNjDZ5vmF0eFMX7uva8GrrKNltXYdlsdmxsjOO4TT/y7PV3MpUDjQsA8FtD2fk33gAA
      TN8av/Lu1RoMKlwOAGSg178Q3ShmU7M3rofDsUy5CSrRN969vLAaPeioHy8+vAr74Q9/qNfr
      N+/JokmscUC7AbIsb2ogiqJgwvi1r76662G7DZLnzu5lYCq78tsCU7Lc1dUFfmtld3SPAs3B
      BKQayg4XWwnU399fKpUAAJuNTki98aAC2lmhrPfo8YmJqR6/S8b1olBGSUYsxNZKNafNq9VJ
      N68vnDreo7N4VmbG+XKzd3SQwLWlQpFEJUKrq7WAz20/qHN5HNhKoJmZGZ/PF4lEWq3W2bNn
      56bHGUcXLvG5cnuwt/PAopOEdDp19e++3zcQTKwvXb4w3/XUmE1LmEGra2Dg//6v7wyf6E7E
      iwkbqKxzcqWU5wRpcbmyelMz8ApRizQaeK3V8LlfObD4HwO2rsImJyfT6XQymTx27NjY2Fgu
      FV1L5Dq7u8Zv3PrKl5/bz4B2Vihr8RsbfFOLAgiCKQODQACV28vRTHfQXSjXYBGSRIE2mYAo
      agkkW+BIHc0VCiQGEIxoQXiHU+37tIdsJdCNGzdomtZoNOvr6+fOnbv5/hVfzxFQZzN880h/
      9yf+lUeIaig7XGwlUKPRKJfLAACSJPX6g6x0cfny5U05v76+/sQTTywvLIb6etPxmMf7YZXM
      XDy8mimNjo4JNY6hGQDaifiGx+sCQOK5Kk1BkVQ90KEOPPvBlgaanZ1FEKTZbNbr9WeffVZq
      1sotVAsLyULV79nXzcidhrIrE3e0WtR2+9rtuQ1z0OEwWf0UqODOX//8J+VCnMcdfrOcjGxA
      JrdJ02QzxeOnh6+9N/HyH/+bkFndCNtzthIIQRAMwy5evHj27FkAwNwHvylbT4DsnTZu2OcE
      2mkoK67PF1qIiZBP6X2OkJeAACmLXmcgZ9Y0yr6CgDOY4HV1NRDSbtCUi0URhl/48gs0oTin
      yheSD0U0SZIOhyMajY6NjS3eurTGETYGLdfFc0/taxMT1VB2uNhKoGQymclkgAJuKL5w4cLO
      CmU8x9HMPcWjZGlxfr6ju1+LI9s78JVyRadX1x73m60pTDlFVXYaylqEI72RHuwwzK8WtEbK
      YrIa4RZitV14601Ib6hk1gKdvZFEBpXhr399930Plb1jSyjUarWBgYGZmRkYhgEANy++PrWc
      rJRyb7zz1j/+3d8sZw+mm+SmoayUS9A0kyuW4Zbo7PAa9KS7w5PPFnAMkQFgaHojmYQJyuNR
      V5wPgA83U99+++2TJ09u6g+UcfsYWYC0Whyq72/Xud0MZbtwxu7d17BUHsCWBtouLCfL8rFj
      xw4woJs3b24ayg7cmaTyadgagXQ63WYCbbfrOih2trzczVAWj1YaGsav1wiVVF7UG2mZFwmj
      hKAMqDC+I26z2v97n3igoSyaKV25Pr7dbe5AeLChDJTr7WJqZXzyZr24EY4XE7GlaDz1weTM
      4lqCVNydJl9kHmgoA6RBFGoXf/P20SfOeezmfQvoIQxlKgfAxxnKmNERo3G/jUGqoexwobhb
      m3dWKNtpKCObxZn1fHfIn4tGYbvXgjZlTNdqNZuVAm2ySzDucVgO+jweF5StFx5gKBvs9EO1
      pUuTNXMlXq62G0Tl8oW7/c+e7LEabn4wjtNGj+PsQYf+uKC4EejTGMp0JDa/vO62M9W6pKX1
      tRILQTBl0KfW1hiLDcI06gi0bygugVRD2eFCcZ6H+yqUbZKIxRtl7mN61Kci0QYALFsCACTi
      8T2OUeVDFKeBPmIokxp/8z/+Std1jK7FYkU8NODLLt0utO1/+me/c/67P7Cfeu1MD/PXf/U/
      QyNDzVyxNjsHYot5zObVl7OpRseRo5XE3USh/c0//bcu9Xpuz1BcAt1rKAMyGDp+mjA5cNEU
      wo0tqOWkT6EaB4qQPF9wyC0A4JNPntabjDxltHnNC3LLb/fZaSAPo3wLIi3Hh1CNVnGn+IVC
      cRpINZQdLhSngXZWKANbRccknitvH5bP57crl3E8t/vfUtl7FDe+P8hQZmVIi96wkMiaibq3
      9+zqzCUB6F0eppLOrHNNn99vZeSl2aSvv9OoU7fx94+tESiTiN6eW0imUtsvpJIfPt4cBja5
      Oz1RfvDlkNSspnOlUj575coVvvqwXQjuNZSZzeZiJiVjpNXjBULTE+yz0AQMgCyLwUAIwKDM
      FgUEd1EiTKnOsv1jSwPduXFhoSi32Q0Mk0xGY4atgXqxUCg5vIF6jRd13pBRtnq7+rt9r//4
      e7Sjq5jPOS10GaIRoVAVAIECGfC5SIEymzBb1ytPj/zq9ddprbYpy1w+oyHxtXD09Ct/cKzn
      kwtGPWTLy1wuZ7Fa99cD91izNYXRdo9RyGr1HkRDykLVhulIWWd3BU165NZsyeE3GfSiLEu1
      fJKwdovtmlFPUXq6XpFogxFvQVCz3IaNPUMuUQaShgQAWMzmgBm/nccByFgcblJr8jt36d69
      k4epUAYAsFrV+wn3ld+2vKzVNqtzaLVag8Gw/bLYrK3Gst2dgc/xnc5lUrTVWeXYXRu/P4gH
      VSjr8jtQCW1AKNzIG13dpRI33O390S9+PTI0iMJika/hBCUhKNksuftO2Bj18m2f2L06R3R1
      MV9pOxikhVh6OrcrxkkLCyt9fT07/0oiHvd47zcpWx0uAADxWbLnPjYNZfNvvGFyuXmO4+PJ
      ea59etge+c3luCieGBvu7OxslEuFbLQB6VsQkSpwbowl3UNqAu0bu1fnuHblKgVB87GZYrKu
      cXoseKNlHDwXRL5/ZXWog6rWWg6fJzEzGxN0J7qRyZuRpsFjl1NjL//zXjfziW/58agtLw8X
      u1fnWA8v5SptGhUkCa3JKAk1SHOQkKtmCpkJZ3AgthACruYRnRnIggbBSy1UC0r2wIjd+LDb
      nwsLC5ubqXa73ePZk16+Ko8QxVXneJChLOhzwTLUhgnQ5M12V5GrBZzM5euTZrPRZrPxXHZm
      fuP0WBBo6CbPYhRTK5fTqXUAE06ns6szeIBn9MVm9+ocG6lYC9EwlE6n0wAAypWKXqcDADTK
      HEwxOAyA1Cxygsm4S6ptH/wIuMdQtrq6tDR1x9gzbNWUf/ajtwMjAx5dN9Aak2uz0zebqMW4
      kapdrkTSmWrP6BE59cZ63eYIuOpLF+dWel3BIKW4JfcvCLtX5wivrjab/ORs/tkXT6ytrvO5
      KC9QQ4OBcjZLubxBXwiu5WK8BFfSTUhn0iOReNHodiIb4ahgwORskwff+NY3yc9Vbnxny8un
      +I0Nvmk308dGjxUrLRNDHhuRSkIbN7lC1hUs+JVKLqm3OlqCCLWrEEFrNRgMjmQ2WAOjB0d6
      SuWGmj17x4dbGQiCfPvb345GowAAmqb5BmLTC81mnaAYD2yV6BAGlUssT7mBDORSpSZwDQyF
      gCzLQJaB3K5Xq3XB7rCSKMlKyXobfL4EGh0d3TaUwbhWDwAgXSbb1qvG3zoNNy/tvIEuAACw
      7OL8p5mtqz+bui69l3yG6hzR1UWTK0jvcfuSB1co8/BclWbunzTnbt+qSfiJo8MfCXVtzR9U
      dc9+oDg7x0dF9OjPvvs3RWDXalFUrpUzuRbjNkLZZBb1drsLq3NPf+2PwzNXNEYH3IiPT5cC
      AZNYjAtUCEZqoJhsGToQFOvAhdC53w2Y1JWhPUFxu/EPqlDmtRnqJZYHpMM4lImXnX4HazeY
      GUpzZCwQCEyPXz79dG/Aa91YeD8sOsd6bPVCQmvxF/kKm02o2bN3KG4EUg1lhwvFXZ/sNJS1
      G5V07p5Ol1JzenKqXN/qZdmolHJsud0oVz/Gc6+yZyhuCttpKOM4sca4B1ya8J3bT3z1Dy1Q
      8fadxXyBK1aqBqwcjdWDY4NUftl47Pf6HOqItd8oLoHuZdNQBkM5k1YusoVKVRCaItDgBoNR
      qBZhgrG6DPV6WSsLNRl344obTR8HFKeBHtJQprLPKO5bq5xynyqfBsVNYbtUKOsdS2/ktaBC
      6mwNUYKqG4GRp37x/74zEDJk0UC3FVtPsXqjAWuxJGVtQSibXNZaOwqp5KuvqX169pytBJqY
      uFnl+N6hAUlGNUhbgnFJkgAAtXodwzUuh/Xdt99AKdNIb6AN4IWVmM9hAKJQhQ0kIhn0GklG
      RSH//vjKqadOEYhYyrNWT0c+m/UHfA9jT940lM298YbZ7bYbNbM336obvCYhaeg80emmw0mu
      CCcIli/WsJKMo6V4kVuxunyp2fnOcxaCUPsc7AdbGugH3/lbYPDqMRlDUQiGgSQszy1WJeAK
      9dgo/MWXXvrR9/5BIm1mmgCgKTdFvpCHtAahBYcCpqml/L/81u9icPn1X03rqKqMILUyshGe
      gC3B51/5mvszdpDfaSircoWFSObYyMDH/2IkEgkE1Ha7+81WAoXDYahVr8gEhUFAFADJVLkC
      kCFKRwFZDnV2hsPherVKEAhM0nV2g+PLFpuzKYq1msAY6N6uEADC0lI6uzbpO/7k1dffe+KZ
      09lMZvTESQ362cYg1VB2uFB62++bVy/ipAG3m1bGrwWHTlotxkJ2o5RPdh85lQ3PF3nO5u/X
      NAszceGJYQ9bqhgMBrZcR8WqvaNbp5bb3Hu2PuLNKq0XLlzYzKepD67CGgbFyA6nsVSuEzoG
      bVeyJaGvO/j2Gz/XWztcZiaVTHl8rkIiqfd26jCo3mjIMN7pf6RjhiSk06l4bLHj+ICdQq6O
      zwZNYG21YB30SfOzSKOcLRRkMp1fGedb1M+LXLcNnrpxtYEbXKZ2Ng+dPq3en7rn7F6lNby0
      6PN7b4czk5agB02uJ1uUtlFtOV3dwRJbFCGRj7bu8tiToDzx/qJtDGJK8xwWEkHr4RNop6GM
      z6Y0BgZt97hrTQQnAp1Fg81OogiQxJN6zfp6MuD5KoHjEkxQONTo7iw1IKtRi8AH1Hb6MWNr
      CtuWrjzPnzt3rsSysig0RQhB4JaM4bAgN0URJs12U5llZVkuFQt6PVOu1ygCaUswgIBWS+XZ
      clfgYTsQqPp7lmQAAAuRSURBVBXKDhefcGPh/rPTUGZ3ufQMfd+KZymXqEOM06IHAGx3fFLZ
      fz75xsJ7mo9+thsLPx87W15ektwmptXicskC7PMawuHEN//Vn4Vn5xoC/7O7yaa1wyetR1re
      P/+Tb6grP/vPVgLhOD41NbV5YyEAIJHKURB0af7+GwvP31hNJ8N7emPhTkNZMjxvtNlwSEil
      K5SBcttdtAbv7B0C7YrP21vDaE3d1alxKm5T5vFAcTcWqoayw4Xibizc2fISQ1BqhwaKri5C
      GqPPbed4DsiQqoEOiq0pjCRJhXzddxrKqqgLA6U6x1YEDMagfCL+6j/7k0g8BSPZ8fd+xkLm
      AZ8lGss57CaCgEt83e22p1Mlk1lLak2jw+pS0N6iaOWwVaFsI6EzWHx+NwITvV1+f2cvrcEg
      UQAI6fD4O30eEmrUW7DObMY2d01kAEFAloGyjE5fUFRDmcpDobgRSDWUHS4Ut92401CG27o1
      aKPG8RqjgyCQWqHQd+zUtTd/rLeZ785tvPjyM9xGCkI1LYAi5fVrS9WTowENTpRKvF5PNptt
      GIFIWNvR36fD1NKJjx7FJdC9bBrKYteu94x066HK+V+9E+p2rKzEnH1HfYHQnYU7Nj1++f0p
      sZquFTitf8guJY24dnadC4DE9cV8X6e7JcoNWaPHW31H+g/6bL6YKE4Dfe4KZZlElBOgnpBv
      xyvttbVkMLjzeZVHgOISSDWUHS4UN4XVarVtDeTxeG5evWj2duGwQFLGUonvCrmmp5cJXIYB
      3ABAj+Mmux2RZZp52C0Ulc/HVgLdvXl5gYVGg9aJmcXjo8NSq5Er8gYDU8pGc1XI2RHUYHC9
      siHW2o5QZzoa9naPmJHiP/z0StBp9Pf2toTW2tLy4MggDKRiJhM8cjK1NC3IWI1NlDHPSJc1
      z9ZkoaQ12KuFFMlY2QI7dvIEgXySqpWEdDp1807C323Pz00K1j5fyDF/e9Jo07Pr65Cjg01m
      Pb2DHVbz0RE1gQ6GrQRaXE/VGmBRrulIbHn6CtDY0kUegoinRl25cC4ej7XaolFTlepY/NJ7
      JGOEcrzVzxjhaorVadLxeDznsBjDq8tSW2DTWY2rp8SVj5w4NfdBQuTzk3f50saGzcLAidUm
      wmSmZjG9qaNvxGMkdga0i6Esn9FQFDx2NFes4AB/+Xd+B4GlXGdGa3ZUizmoXTcH1eXmA2NT
      A8mFQhGH5UZbqjUlowbTGIyJ6DpjYGidJp7M0DRdE0SKhIAESVLz/FvvnPnKNzpM+Eo45rCb
      SqWKCKEaBIhAxAiqzhfs3hABt5dXo3abuS1BQGqX621GRwLQvvruO51j5zRwOxD07zr+qIay
      w4XiRPTHG8riiZjX07F5ZCKRLLJFk9G4rbXjibjX8xFb0r3Hq+wFihPRuxrKjHRTrtY22lqy
      GmnTwX6TZB97uZpYXIw1TPDUu3XGYkEykRhithvApQbMGJH8reVKX5eboPRqAu0pikugBxnK
      mnyxLOE62ccDqpxPdzv1yZo30G0slauaZN5OIwF3x0ZZcJlpFEUrXO6MDQo5jcW6WjRob1Hc
      FKYayg4XittM3bXlJcuy7Ua5VGns7G55bzvwj28NrrIXKG4K22kocw8/F7l7+2iA/sVsFUrO
      9T39NJeK55LZo6eOry3Olxu4K2Cp5+uMnV6duhM6daLGt559cuygz+NxQXEj0L1sGsrmxi/A
      BIWS+qGgQ2cwJRIbZrPVpCdXomkCR81mS6Uq40Zdg2P1jD6/kSMwRZ/UFwzFaSDVUHa4UNyX
      VTWUHS4Up4F2GsoGz371zs2rRwP0mzNpq85kYKDYWsoRCMHNxhNnTh10vI87ihuB7mXTUPab
      X/6Uq7cAABDGMJrmxJ2VUmLl/fGZ1kGHpwIUqIHUlpeHC8WNQBRFbT7QPaqudSp7ieI00E5D
      2eAT5xbvTGOtisEdrFUqmM6UXp2rSkjQQhJm1+x83E1w0Rph0UJWu5Oi6dW11Nkz6jrQPqG4
      BPoIkpBOpxLvXKK1ksDn2TbVqBaff75n4VbJ7AmEY+tYJlnagOqtjPP4K1IxHotHvUZ9Kp0T
      pDFCcWPrFxPFaaCLFy/SNA0AkGX56HB/VcKbXLbaAgbGLMvC5m3wLFsyGmmer8qSIEGadq0Y
      S+f7BodbjQoEIC0OCTBFqZ0P9gXFJZBqKDtcKO5rOjMzc++D5YVFji21t19ulH5z6ep6Krf9
      RCQSAe3G/FJ4n+NU2URxGmgXQ1nF7Os3RObX3ANjr444IunS2tLrPYN9G/E5UEfjAtpnaV1d
      afzlv//X6qy1/ygugXYayq688VOrxWk/beHrCCANX3rmKUbm7iaLY6fO5mLJbqvHhNV1npbC
      puLHBcVpINVQdrhQ3KB/n6EMAMCybJVjmxLIp+ONNrjXU8ay7AP+jMo+obgp7COGMll8/Uff
      22iibj3Oaqz28mrw+X9x442fhLoGY2lWK2UjeemZkyOXLl/1dPY8/6XnKAI56PAfOxSXQB9B
      rFWqgrXDD1U5r8MCxByJAoam06kUpjE4TG62JYB2Ldg9QJuMavYcCIrTQKqh7HChOA2kGsoO
      F4qbwnYaygTJ4B5x8yusxmI42qH5j3/9Xbd/8EtHOyp1xOg2s4m16FLSfqTPa3EGvM6DDv+x
      Q3EJdC9bFcrmJ2WzHL01j7q9RzuOBrsHObYQS0DJSFKKuwMmDZtNyzFCamJqAu0/itNAqqHs
      cKE4DaQayg4XipvCdhrKcNJo7fZXMxv5XCLUN5LPZD0eN4DkiWtXe/q6Itlyh8ezPHdzaOS4
      2Gq3m5XVRLnbb2kBIuRTL+L2HMUl0EfYanl5N9Qobswto55Aa/zy/FK+Z8zp6DhNUuiFG7ez
      q0vFY6c1rcLff/fXz5zsFoX0zM2czvxUZOmOmkD7gOI00E5D2WbLy3wmY7bZUCBmMnm+Vh8b
      Gy1zfLstyK1mpY0wWoivSlYGZ+tSo8Sb7XSRbwc7VE295ygugVRD2eFCcSJ6p6EsEU+0QXtq
      cmZmaqq943iOU9cbDxLFaaCdhrK85P7WH315YmISBc0Mx6emr7W8w06sEr6T6XvuJFbKXp1L
      /bd/92cHHfhjiuISaNcKZShAnz4xyAOKRBr0saeNHf6719/qGhvGAeH2dpzWukUA1K3UA0Fx
      Gkg1lB0uFDcCTUxMfGLLS5YtGY0H2ZtcZRvFJdDOCmXZmq63yzQ/OSeaPP/05WcBAFNTE8nl
      BUvXCKUVCyvxsVd/32dSx6qDQXFXYfeyWaGs3eCz2TyGSlarHQCQjq5KOOnxd5poDZCBx+0U
      mjsvzlT2CcVpINVQdrhQ3AikGsoOF4rTQLsYykhHT5cjF09XIPLZ04Pf+86PrE6nljFWIxPU
      wAtGrMnlcoSOQhGEsbgCHvtBn8HjheIS6F62DGWzd5q1ZHjmjv34Vzaf7/GZ//an154KYivz
      d/B2UWpDDZ2jk5G5altNoH1GcRpINZQdLhSngVRD2eFCcVPYLoYyxm616NotSBDF7qD34rvv
      Gl2BgMcpterFSguWW0g9N77eON3vScfXx5fjf/ytb5GKO60vLMr+pDcNZXcSR48Fpt57Rzf4
      XHfArdVS4cnrs8u22vqy3t9rIxvtUi1e066QlenJtSNnjqnZs58oTgPtYijLZ4AsShLA9Qa7
      iQkvzZsdHqFeI7RUocibGF2llAOkAW6WUcqIY4iRoQ/6JB4jFJdAqqHscKE4Eb2roSwaj20f
      EI8ncvHwtevvT91due93ee7+ZlAqe43i9MKuhjI9Vbv2Jrsh0x0mQka0g05tRYBmP/igEF+9
      c3Pa1Nupr2ZZYGbwOmIMzE/Pnn2qb3llw2yz1TIzuabL4zV//dUvH/SZfTFRXALtaiiDEIns
      Jos12Ws3NNttkwbzOgM9gQgmCyiMGX1BNHtnusCMdNOIxqTHcJvNEgr1p/IVU69r5W40UWkc
      9Gl9Yfn/RsEwMiWUTV4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Budget and Impression Share' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Spend vs. Budget' width='192'>
      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
      /R/3vfL65maXAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Impressions by Travel Window' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Budget, Spend, and Coverage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2deXQb133v78xgBvsOAgRBgDspLqJk7aptLZFi
      J3Li1ErcNIuzvKSvOXl5aV/z0nfanL76tE3TJo2bd5zdbtO0cZLarhfZkSXb2ilrIymJ4r4v
      ILGvg9m39wdkgqJIAiRAEpTm8w8Hg7v8AHx5t/nd34UkSQIyMisFXm8DZDY2soBk8kIWUGF4
      78yJl156uX9s+u63zh5/aSbO3n1/cqg7RvJz73B06q03XjvVdi3HSl//9W/I3FJePXt8aCZ+
      u97hnpdffvlG70iOtSwN8vTTTxekoPucF37+3NZ9e//9ly/uba3tGvGZUK6jb9KqRU68deJi
      24WGbb/Xfv7tjs6bdk/t8M1Llzt6nOWOn373Hybi0tbWhtl/4rbjL07RmiqXA1DR0+cuDo5M
      lFdUpsLet06+K2F6Pum/dLWzu3+4orKaiMy8dfKdC+cu73vsUeX72Rki9uabx+M0KNFKp85e
      vNl1y+Z0oyJ98sRbbRfbKpr3OC3a0ETPj375+r59D9qsVphPHX/rJCli8ZkhUWXF/aMzcS48
      0Xf+cofNWT5w/b2Om908ouq+er5/zF9ZVdl97cKV9s4oIamk1Ml3TsMak82kl1ugQkG/8eqb
      lhJHLOS91jVAxnyXr/f8+89/rC4p12DItTO/m4gLw11XhrqvvXDsXHR68LkX3jAYNdW1NXN/
      gM07HwyPdvljKd/EwESEQgjff711+gf/9AzFMj/5wTNDowNdI346OPTOpRs/+dEPnZ5qFIbm
      WgADSYLAr5/7WSgWerutw66VXnjl+Mv//nNeXWLQYOk0fbduHHzs6JbNLeXOkn/96U+s5ZW/
      +83zFC/87p3zvzt2TCT8P3/hGBGd/vFzL1y/fJaEdK5SOwRJ7efeuHLl0i9fPSfioamA/5nv
      /z+aZZ79px/QchdWOHTf/Ou/NtDjMwmRYRg8iQMAYjjV0txsMWpr6uu7rpw3VD6gkQhzSen2
      PQ8+/sgHjEZdebmT5zjvjD9dhMZY8iff+GbXOy8GKeBwemory0kyQTKgYVPz5z7/lAoGnur6
      lsZ6miYJRmxubtZrUCBmsl86c2JoMoQAAidBidO9a1srQzPxGL6ppdluMabT2GwlvT3dgiAE
      Q2GC4Vtamk0axFT1QGrsEquv0EqU1lyyZfueTzz+CABg+669tL//ZNtNBFGQQGMUQt2TsV2b
      q2gO2dTU8vkvfBqVBVQoPNX2f/6bv7Ns2r9jW7MiPvrKqWvlTvvHjz7+/LPfDzMqtVLlsJlG
      ezsU9kaninr9zbdRlXbn3odf+tcfxRLJn//iV+lCfON9//idv3duOViiBhffefX1C72PP/qh
      Tz75obeOvTaToM0mm91i0BrMdovlicc+8M/f+0egt0tUJrurspZJBMuq6kUReFwOCFV5XI6P
      fPzofz3/7EiY0atQAEDTroMeNfF3f/ftK11DT37iYz/+/netTfurrOpHDh364KOPuBt3NDtV
      r77+JoSqnOWVKhTSmkosWhjVWVFEtNtLGTxy9urwk79/4M3XXg0THAIAJK8DrQHB8Z5n/+U/
      JQD/969/w1Oin/tWIjA+EhG3NVXPvdl57tgwbf+DR/dkLXnB7KuBJDA//P73gkl67wd//8j+
      HbP3ZQHJ5IXchcnkhSwgmby4LaBrbafeOHGan9ObnT17Zm46jiZwklmwiLNnzgIABrq6Fn77
      LgQqPjDum3eTIeKvv/rK8EBPZ994bsXIFAWK9J9bXTejuOC0Km2VDRPdQ7HgWNd4gEqEZnCw
      ucIy4o1YtGAkqf7qZx+fHLp15kpfncc8Mja948H9Ny5fnI6SBw4eGOi6NZ0MTQ5OoJiitnlz
      19VOk7NczYX1ztqEb0LSlqB00F3T1N7RuWNLU5yFr188ZXRWM6GROAV/8qnPxHzjIZwVaPzt
      02dCwZ02BeHFYYSYns3+sQ8dXN9vSmZBbrdACpW23mMZHJq40dHh9Y5Px1izXjM5MsgDxaUL
      Z4fHJ/R6k91uBwB0Xr3UcenCyFjg4KGHrrdfJiCtToWmC4n6/Fu3NtU0tU4Oj/CwKuibStDS
      g5vd7567ODY1YzUZ+sa9Kj6FE+Tk2CCNGHxTYwQHNzjRCAEM5tJKC3Ll5sADew8mQhMXzp55
      70r73Ozr9g3JLMntWdj05CglotWukqHxKZPRKrF4gha7L53sGE5+88++POOLNtZ5hsem62ur
      4uFAJJFSKtUlJWac4slYgIdV1RXl4UBAgoBarRYBTCf9r5649sQTRySOdjgc/ukJBigVAqnS
      WyIBv7vCTTAikwipzaUchatRSGmwIwI5PD5dUV5KCTDPkByZYgCmVSlms1e4Stf7u5JZAHka
      L5MX8ixMJi9kAcnkhWK9DShqei5fDDEEanA51FKKkQCKKXmCR9SQxIRibEttWSgWG50MmVF6
      MEAd3rebTUa6xgObSnWIsQwwkUBKoxdDMVFbohEVSoMAKwQ8MOGN7j9y5Nh//MxssxtddXY9
      Gk0wO3dtRdb7w64MWUBZ0DuqQ0PXU6IoaN12p+7mxSvKsup6jwWFRL/PFyaIcoeDSgVdJkVv
      f2902ouWlA/3dCQ1EadNhSnVttKy0VuDXEIIBm5i1gp3CYj6YwAAi90J6NiEL67hhZ6emW0b
      VkDyILrwDPf3euqasDmK8Hq95eXl62fRKrKUgDiOY9kFfDFlZGZZqgvjOE6r1a6ZKTIbkYyA
      WAp/73K72WoBPO1LiI8c3LuOZslsFDLTeEytL7HbBZ4PjvayrESwLE3T62iZzIbgjjEQQRAC
      Q0qYNhmLud0ukiQ1Gg0AYPKzT+VYnP1bf6lqbFwVS2WKkjvGQFqtFmi1AACjTjP3PnX1ao7F
      iclkoSyT2RDIK9EyeSELSCYvZAHJ5IUsIJm8kAUkkxeygGTyYq6ApImJyWQ0lEiRU94FwpTI
      yNxNZh0oNTPY3jVT6jSQ4zcp/SaTw87RdHohUUZmMTItkMpoM6iAClU4qpsxDNKiqEqlWkfL
      ZDYEmRZIobV+8IO39161rpM1MhsOeRAtkxeygGTyQhaQTF7IApLJC1lAMnkhC0gmL3LaF+b+
      3zU5Fqd0q/MwRmbjkRGQxMbPXx0rMcMcM9+pXrNJv1DehdBs0P1xMisk04WxNEfGZgIp2ale
      ZhlkWiBMb97U0mI1aqTmxmQspscwUn6UIZONjIAgSFFVVZG+nudULyOzGPIsTCYvZAHJ5IUs
      IJm8kAUkkxeygGTyQhaQTF7c8SgjmUwCnpEwbTIec5e7Zu//NJDj0ZzgcVYsK6R5MsVORkAi
      S5x492xNpSs6Ot+p/mcBKsfidrCCLKD7ikwXxgui1ahBYFh2qpfJnTmPMtT6Q4cOp69lp3qZ
      HJEH0TJ5IQtIJi9kAcnkhSwgmbyQBSSTF7KAZPJiFQ9bEZJJpq8vl5SwwSAHB96gZAQk0PhL
      b5yq9tiIaMhPaT5x9NE8i2b6+qae+lwuKdW7dnl+9R95ViezLmS6MEmSbFplioMABAAAnOxU
      L5MDc8K7qA2Hj3z4jjflRxky2ZAH0TJ5IQtIJi9kAcnkxSpO42ENoq7P6bw6lbyjfsOyigJS
      udWeP6/LKanRlT2NTFEid2EyeSELSCYvMl0YR8Zv9E2UWHUwrAhE8J0PtKyjWTIbhYyAUI1R
      q5B8kURypFO0tCZYVlinSPXhZ5+NPPvDXFJav/Y129f/52rbI7MEGQExyTAhIE6rwVXywUAE
      N8rhXWRyICMgpaFk57aS9LXHs07myGw0VnEav2I0DTrwUUeuKWXWlVUUEC5IAykul5R6jG+Y
      81LToNOonDnV4ZEFtM6sooAGaOGPRnM6BXw7TTy/enbIrCbyOpBMXhTjGGjFBL/9bbqvP5eU
      9m/9pexEWxDuKQHRff3U1au5pBSTOfWtMlkpRgH9NED9rCuSS8o/VpJfqVxla2SWZI6ARPb4
      yXN2ixovkFP92mP/Q5e4L6dTGQpyJEPu205QlwstL8+/xjWGPPcmef53S6eZIyAYs5j1AAhz
      neo31qG7KrcaGHI7leHOIxkG6hsWSziPhsGB2evct51s0EcuvbZk+ybv0mnu6ML27Nlzx5v3
      zaOMHB3f5oHaMOtGWPDkvN7Eq6/mkhJ1uYxHj86+bCf4rLHFinEMtPbk6vh2J6gVs31sJQue
      iVde4aanc8lnfOKJuX3fylpKGI5qlG/lkgvGWgE4mj3dHO4pAQ1QPJ7b2neDIOV8ANGi5L7U
      XsbdEToy8cqrOc4WNbt2zRVQw/Nbl2ciAAAARIPket6ScdlDw3tKQN/zkR3TOc3Pn2vld+Rd
      Xe5L7X9spb8y5+WKB/tfHknkaNvz+zLXA5TwvdwyNpQS39ySYw23uacEtGIeyG3VAABwfV/2
      NFl5WwfPmHM6WO1xBTS36eog+BVUh4tSrhmpZZcvC2gdOBZjOnILfFv8UW/lZ2EyebGAgFKB
      kd+8cjKnwaHMfc9CLRC05lbIbFgWGAPp7DWfOlrDsixN05IkAQCeav743ckEUUTg+fozKQwE
      QYiiCMOwCdHfnXHBXGWGUoIgAADpjE2m2hwzNpnrZqsDABz2PNRkql2uncv6gHPtzP0Drp6d
      C+ZasZ0r+CGgtEQWhCTJlT3KIAhCq13J2u7KMsp2rmPGpQR0NyLPjk5MV7sdb52+5LJp8XgS
      Nlo85ZVup22JXBP9HREG805MHT5yxDvYMTMdI1EdTEbrm1uqK5Zy3+/taJuOCahOe2D3llMn
      Tuod5RIZjQqa5iq3x7PobmiJo06cPO8ot8IK7dbmuhMnz9hMaCgh2C3a8tpWh3nRn1Di6ZNn
      LplQyla7m49PqQzG3hu3dEadQle6a1uTYvGevftGu8FouHFr+PCRIwPXL4ZwxIiRWe0UqNjp
      925ZzRoY09Z5HKcvXCu1KsM52JmMBi9c67IqWVvtbjo8lqKZaDCSi5032q/QDB2MEIePHLl1
      5ZTAI3FJlfWHuNlxhReEaX/88JEjw+2neFWJP07aVXT6K0WefvrpRSu8i9Hem3Fe4bSZJ7zT
      vMAJogjD8Ojo6Kb6pR4FKEWye2AskUgBlTY+PZZIUSSEtlSUDI2OAMxsMS76Td263o5TIoRK
      CkniqUTfDK5TIQYUHh4dc9c1oIvMIEWB802OzuCSmApG/L7e8YBOpwA8giDCyHigvrZiseqG
      uq/3jPt1CnomRHEMOTPeh6cYS0VjcnoU58Qy+6L/JBPjo4O3rqUYGKi0Y8PdXcPxMrs2q510
      dOpUWyeNaAAR0ptMyRQvcLiYg52IkArgCId7Z0JUMhGlk4Ec7Rzo6wlPj6btZFKRzqudmNWR
      9Yfw+6aHuttpAQMqrRGh+0cDNARjEpU2dXkt0CzxeFziaYXGDEt8IpEoK1tytYJn4pSQjEU8
      Hvf48IDaaGVZ3mLSc3QK1Vm1ykXXooYHeoxWO8sDV6ltfGy8xGoiBYUGg5OJRGlZ2aL/aZIw
      Nu61mrSCQmPWa+LxOE8TGrND4ulEIlVWVrr056IJ3FxazuFRQkBYIukstVGMQHNSicWwaK5I
      QEA0RDLu8bgjgRkBUkCoOrudQJoYnzQbtYJCY1YjcUrkiWgudvIMQYkoEQ2YS8u5VJTgc7Uz
      EQnyiDptZ2BmSm+xRSKJrD9EPBIASn0yGvF43CyFsxISiyXViJA2dYUCkpFJIy8kyuSFLCCZ
      vJAFJJMXtwXU03npzHudiyUavN42E2cXfOv65bPHjr/DiZk7Z86enZuAZ6lk6t6PN01EfcPe
      YI6J+xbZe5T0j3YNzcy90/bu8ZdeeqntWtdiRV1suwgA6Onp4VIRbyjZ09NzR+Fc8mzboj9r
      Qbg98L7Z1VW7bf+J1/8zGGd27Nx261b3pvq699pvlroqHSrmytWrj39pp2+kKy7pZ0YHpnzR
      T3zqD3UYDADo6uoKx0mn3WByVs8M9eNh75WBaUAlBmfwnZsrBka8Fo2iNwz+15eeXNWPse6Q
      MV93r+/M20EEgvXWUr0UD8aZ+tqK/slog8c8PumvcJVGeQwjZhzVjYODE8GpoakwWeG0jE9O
      N23efKtn+JOf/iRDxN8+cS3ka0EgBAj0/gMHHjp85MWXX36o2fnDnzx34OG91zs66utrzA5X
      YMbvn54wl1XHfT4AAB+ZerV/GFYICITxAjzS2xnG+QP797RdOM8rbC/+uldT4jIoMUniUQja
      +fA+tHBPq263QNt37r5w9nQ0QVjV0tkz56/f6o1FI3pHjUBEBkcnXaU2AICzatPbr/y2Zcdu
      PhUcG/dG4ikAAIypm6rLhgZHbl7vnJiemgoQVpNuZnKE5EHHpQsDw+N6g95utxfM3iKGZ0hH
      zRaDXg0xyfQ32T88tvPhQzfeOzc4OqHS6gZudRvNpp7BKcCTY14fyiWGR2cOHnpoKpSkYjO+
      MA4AcJZXTI5PUZGxGClBc4o2uerZ8MTNm9d5le2NF/+zzKq8cLnd6w+JoggAaNmxc3I6BMd8
      LbsPAJ5MUFJrpenylQ67u4ZLBpOi2j/tZeITQV9gOEwVUD1gdiXa752AVMYzJ17b8eChGk/p
      4OBQaZmL5iRYZJUoNO0PV9Y0qDEYx1NaNTo4PFHhdpIcZDXpfFPjOAfVVTiHRiYMJjPEk9EU
      P3Hr4vmO4T/55p+FZ3wNm2pGRicb6nJywNu4sBSeSFEQqpY4Ckjg1NvHdzx4yGFWw2oTxOJj
      UyF3mTWSZFQwq9BaJI5Ro1CE4AwYrDUa4olULBavq68TaHx8yucsr3j3tV/t+vCnXWY1ACAY
      CtnNhkCcMqrhaX/IZHNgCNDrdFNjw4jWgkic3eGAAMBxHACg0+tDwZAkiRolgqj0U+OjRotD
      ZBJKfYlaIWFaDZ2idfqVPNxYDHkdSCYvbo+B0s9g70bkqKlAQqPgtUZrLJFCJdbscNGJsITp
      krGIXoMiarNOjc4+Lr4PQVEUwzCWZTkuJx+qe+y7ytIC+SbHusdmMDYUCIGSmjI9hANFJQTi
      qen+OFRmdOhVori5pVkURbW6EHs9BQFBcnIWLp4yGYZZ1hPvFT8hL06y+ESrtRqB5wwmu0ot
      MjCGiAimVgBRoapoJP0pqwrBNCVarZYgCIWiMO7VhSpnzcpkGKbghW8glj0GYlkWw7B5Nwv1
      X8XzfMF/7HzKJHEWhiGVFl2izOV+9vurBbqbu9WTI5IkCbzIMwLHCDwnCpyowGC1HsPUCgjK
      d2YpSRKZZMkkA8MQjEAQDMEwDCsgBIEBJMJqGEZyHXYIvJgIkckQmQhTHCM4q02uBkue5q0v
      I8HU1397/e+f2LzFbVo4xS8ey17KFxeOslDgf3dREIkEw9ECS/McI7A0z9E8xwgcKwicmPa2
      hmEorRhJkkRRgiBIqVEo1ahKiyJKSKNToiqFSoMiKJxVWBzDJ0JUIkgmI5TAizCcSS9JkiQB
      8H4VEAwpUFiBIQoURhQwgiIwAsEIBMNptUEwAgmChIcpPEZDEEhXDcMQQ27s7QW9M8lvvXbr
      bz/W8g8n+j+10/341gIfS1JgAYW9+FRvBIIX+OERxfw2AIIgBIEAABwtcLSQitHpGYooSpIo
      QTCEqRBUqUCVCIzML1CSAIWzdIqFYXhWl/MKhyAAAASg27MeUZBYimez7ceaVw69kQXUORH7
      9vG+n3xme6lR9W9f3PkXr9waDKT+7JF6OO8mP40kSYUeXULQgupZFjAMARgCAPCsyLMshS+e
      MueOacUwxEYV0Hsj4R+8M/Tzp7ZbdUoAgFKBfP/JLT87N/o/Xuj8pye3LOHHlyNJivvWa7fu
      nQWJVYLnRJ4T1tuKZXO6L/DD08PPf35HWj1pIAj6yoGaj28v/8Ivrk7HctoauxgdE7HP/+vV
      J7e75a3NWYBhiMJZvWUjHYn3ZtfMy+3e5z63Y8Fm5nCjw23WfO3Xnd96rHFH5bLnB4Io/fjs
      8I2p+HOf32HTKeUWKAsQDNEbqhd7sX3q2I2Znz21fYlOqqFU/y9f2PmDU0MvdUwtq3BfgvrC
      L66qUeS5z+2w6ZRADq6QCxtoGPRvF8c6J+M/+sw2NNvo0KLFfvGFnX/1WvegP9VqVENQluXA
      jwDwdo//p+dG/uZjLS0u4+x9WUDZWdlMvq3tgt1i1BpNvV39EIY2N1T4U/ADmyoLbd1tJAn8
      +OzwVJT8509uRXKbx6AI/J2jrb+4OPa3Vx9pbb2kUCwa20UQ4CuvddOc8B9f2j2vYZO7sOww
      5Eqi8qCoAlOqBns6WJYlJeny9T6RSC720DpPJEn67sn+SIr9ztHNOaonDQSB//ZQlccz1N6+
      nyQXXh/HccO1awd3Vpq/t9DcTW6BsrOyMVBjYxMQWK3lMJ2Km0xmQWAViDL93LCw5omS9PSx
      HpMa/fOPNK5sTd9m86tURFfX3rq6Lqs145grSWBqqsbv97S2Xn586xcWzCsLKDsCL3KsgGLL
      e6RvMLw/UDDnH45xUQRR+j//1VVn1/3x/rxc9nQ6fPv2czdv7iVIvcc9AgDgWKy7Z6dWi+/Y
      cRaGFx0hyV1YdmAEovCF9xSsLxwvfv2317e6TXmqJw2Kctu2XUjhxt7ebZGIvb1jn8czVF/f
      tYR6QNYWqLPtOKNyjvQNVdZ5ABWb8lOPfeJo57svxgWLwaCSYlPlOx9rKFt0L+29AQRBDMEB
      a3EtBdGc8LVfdx7Z7Dy6rWAx8GFYamrqnJysmZqq3b79AoZl91TJIiCH09nR51cifJzgTTAE
      7vJdFEUhHcCG53kAgCgIaTfvlSFJUj7ZV69MEqd5PhN7QBDWeW06xfBf/VXHp3d7PtSSW6Dq
      5eDxjHg8IzkmziIgV1VzScUD2JxUqVTqwIf/YF6yWYcyGEHy8ddcDXfPgpTJ0eI8p6L1dSj7
      zvG+T+1aFfUsl2zfLIxhd2pMp7sfT5ksKqcOUZJ6fckPtSwVZmTNkAfROUETHCia3Svd04nN
      LmP+XngFQRZQToiixLErWU5cDd7tCx7aVCx7NWUB5QQMQ2TRzOQvj0T21FjX24rbZAREkqTE
      MyRTLP9nRcXtmXwR4EtQFi2mVBR4o9KKyQhouLv9Ny+9xopF0bMWIUUyjj7dH/xA0fRfYK6A
      bA6XWiGSRdPTFxtF4hV0pj94sDgFxNJUSYm1uyenQ0DvQ1b2TL6wUKyQYvgSvTJ70rUiI6Bk
      PHyzb6yhtnL9jClqGIJb90AUF4fDD9YuFZJ77ZnbhZVvbapBlRvplN21RJQkjl7nJxin+gOH
      GnM6pXXNyAhIbzDAksjxG28Hwtqw7jN5SZL6/Xhj6So6h6yAzHOKifGxgTFv094i6l+LCgiC
      GIIFINcWGsdxWOJoCSOTMZVKZTFqE7RkMax8V/yt6URLWbEsQM+SEVDQO2SzO7yhlLH8HnfP
      WDHLGkefP3+utLRMTE0H41CCoV3ucgzVbGmaf0hP7pzqCx5qLKL5V5qMgPYd+aQkAWQVIqHc
      M2SdyR/77S8VzoYj+/cAAKqqqjAY0KoKJelvaqinYoESo0Gj0azYpfXSaOSrB4ouUmBGLlfb
      zopAKm95uNKW8ZzqbDvOGppiYzctrlIOj96fDmWzMNRSAkpE/EZnpcFqTr9sampOX7Q0twIA
      AKjPp2p/gjZrUCVaLAvQs2QE1NjU9N7V602aO2LhOJzO4WBCrdMhCqXG6iCYBJmM6QwWtbIE
      VsCiSBi0K4z2shFhCE4UJXjxbQ+TIwNaUnqgpaHgVZ/uD35g02rNv758KodEBxa+nREQzbAY
      LDKcMPemq+YB15xWc3MrYFm29MHDszeWa+tGh06xGsPC8wyjtbS1qSGOmFej3tP9we8cXa1v
      uzq48oF5RivT48PeQLQ1m/PeigNM3QPACEynuMUENDHUV960nRseLni9FCekGK6IFqB9mcj5
      GQG5q2pwRoLWe7G1yFkiXFCpq5zkQW1NVcErPdntf7S5KPwPb3PiL2YvM+0NAkFhvzfFFtin
      /R5jiWfyLE11Xe8YnZxZLMGKOdlTZAKaQ0ZACTxlK6+mY/51tKb4WcIrSG+xWwzqRCJZ2BpZ
      XgynmDJTcW0qmiUjoEjAlwj7FPrielZXbCyxlpgMTc9MjZnKCrxUc3k0sqe6WPwP7yYjoOqG
      RkxjKjOp1tGa4odjeFFYuJc3lLj2H/qwSVHgXT6n+otxAXqWzCAaTxE6nRYUz+aD4gSCqBSn
      1C68oKfSGqq0hVxWlSSpyxv/6482FbDM/PlKVSauWUZAVbWbqmo3rYc9GwkYhugUq9Su0Yhk
      MJCqs+sKFVR1NZB3ZSybtQz8W4QOQPOQBbRs1tK3tW0o/FCRuSDOQxbQslmz/T0RglGhSP4B
      nVcVWUDLZs3295ztDx1oKFmbulaMLKBlwzGCKKzFXLX4B0BAFtAKWJvI0SwvhnDGVawL0LPk
      EKFMU8mFx0mlSScm7nOHsjQwDDEED3II8f7emRMac8lg7zAPQ62b62MU+vCO5hxruTIW2V21
      0gVoPABSgSxpLNVAWYBIPdkjlLUP+GAB2PSwQN+/EcrmwXN8+vMuTVXtpsGhPgBAicczOjrp
      KqvM3Z/1VF/wY1vLVmjf8Lvgxq+zpPnQd4CzdYXlzyGXCGWYHKFsHjAM5xKhzOmudLor593M
      RUOSJN30xv/vR4prAXqWqjmtW7YpIoxhd37592eEsjVmKJiqtesyvrNMCkRHs+TBdMBavdqG
      pfmj05mV8aJeY7hvOdUXODTXAzo6OteHa2FKN4MP/8OqWrUgsoCKkQtD4c/trVxx9ks65aVs
      G1ifxBTuFVcwB1lARUeUYJUKeO4CNAlDXlW2A9oxZFYQERQeVM8/aXoeZN4HS6aRBVR0nBmY
      HwHIq1Q848yyVlJn1HxjNa1aDFlARcfpvuBfHFlTv5qzdV/LmuboIvfllejighPEAE6XmzdM
      kJ17pwUSRZGkUxzHcQIn8LwgCoIoCAIvSZJGrdVpDBqVFkFy2hosSVKKTEbj4TgeU6s09ZVr
      tx5zZSy6u74o2fQAAAe4SURBVGrZ55iuI8UuIEHgWY4FACCIAkEQGIYhAL3/lhBLhqOJSCQe
      iicjCTwmiiIEQRAEQ++fGg8ASIcVE0QBAIApMI1ap1Kq1EpNukAERmAYQWAEQRBREpN4IoFH
      43hMFAUEUaSzByO+PVv2KRRZhqUF4VRf4KOtK12Afp9to6D0TJY0ZRUAFGIP7RoJSJIkgkol
      8BhOJFIkjhMJgkpJojQrCwRGEFiBwDAvChzHsjzLsDTLMqI4G/AKSvtrwwiCwAoFgtAMBUEQ
      DN9uVGAYmb2eBwRBCkQBABAlMUUmU2SWnTcQBKXVk76eCU6dbDv28I7DBp1x6Yx5IknSjan4
      Xz02v8FzxrJvX9dXQuCB29dmAlJl262syiNW1rhl5+z1qgvIF/L2DN0IxQKSJCEwsnR8JEmS
      5iaAYXjBpxCSJHK8OPsbrwEEhb998dieLfvKSytWr5bhYKqmRHd38AYVm337usK0ambdxbh1
      d6be1avGF/J2D16PxEPpBmb1KlobRFFo6zjVWLO5tWHHKlVRqBBSNKqPq7P0g2pEWZAueYUC
      ioZ80yEcZhOexm165XxxzJVOwR9kriMwDPePdkfioT+sfXI1yr8wFPrs3gKo029o7MsWZk6P
      2QriarTSFkiS4vGAjkv1j4d2NmS2bSdT8XcuvnHvSWcWCILCseDkzGh5bV5NxWDfi/PuEBxK
      kcLM6GT6pVpT4q44mL6mUcPcYceC6AyudXHLWqGAJElSq01Kjbq28g6n3UB4Jhjxg5We6ScB
      aXaSVShWpcy8Y5g8E3hj3p3p6QrehD0TGEq/rDNu+kZGQPq5w44Fsen1eYVAWym3BbTcwH0q
      namx3gQAADxN8JkSmls3bd0+Pw4Sx3EoOr/DXfAmwzBK5fwoOLlnX8syZ78xlWolm8HvnlV9
      V3J9WbxpeT+60NxZVTFzW0Ba7crDzxYQFEULHsBq3cucmpq6O8zvvFkVByBWr96Bk+D9xnIt
      Z1X5sM4LiV6vt7z8/UOHJWl8fKLEgHGaUrtBGfaOsLA6SvAtdZ7lFMl3XOlw1zXaLQa/31da
      6vR5x2G1ye20x/wTpIiGEvTWxlwdr0b7ehye8kk/3lhTDgDg6WRH9/jOHa0YqhgcGkYkxlxa
      mSX0M+nv6rw5N8wvRVEQBF3b86ckRWrUGgAASZGTAlLO8+eUtbN3nBW2VpKkKEqtVvMCC2nY
      2bcWvMD0UCQSUavVAACKw7VWxd1p5r7kRZZ8v3ytVbFYsZm87ycGAMw1Zj0FRBHE5JR38Mb5
      gSBcX+M+9ODO6UDIBCtDvNluUFLxgF9yEKkoWJ6ABO+0j6ZTlygYEN7qpofJqA9S026nnUuF
      J3ENlUqKoDrH4X0iGek/O6OAqYuXLrms+ge31o5NTG/Z1ooJnC8YtBvU/kDQYlgyJJnSoMSw
      uWF+JUnSaDSPfnHb3FQ4zYkSMN7lg6HRaAAAmkrNE199KPevYNv+TWB/TinT5c8zZunEAIC5
      xqyngCCB1ppsJq1CV6ZyO21AgdVWeYwGjE0m4rTBUlYlkECJLHcwjmzftVutEPxJlokpSktL
      SIzhOS5OA6PdXYrxcRTKfXLo9NTpLCmRTpnKsDKrUW3U1VRSsXDAaXfUVHhYMqEyZutpEM3h
      Dz8CAFg6zK9etRbPSVYDaN1PoLnfIAiiSEacBaHYH6bOZWRkxO/3O0osqNqkQcXgTMRWV2XX
      qkPBYPfgmN2oomnWWVHD4+Eog9qsRrdz7eIysSzLcTntNlxwF8diW0cKdX8xllXOgjc3koDo
      2BTN67o6r0kmt4qLxfxRDwQBrdA2TlXb1QTN1Dr014YmkOjgUAiqrvGspYAwDMt9XpZ7C0SS
      5OzIIxeW27wtK/2CxmykLgxPJNRqjGTFWCyhUYgSosbUSqNWFYnhSqVCoMkQzpQYlLQIwwLP
      iIi7rHgjw4XGe3smo6Uut06JjE1Ou52OWCJeajNr9cYEwQI25XBXYcjtKX1HR+fkxHhFVaXF
      ZDEZtTQeGw4ytW7b8IS33GbRWSwKIEWjiaqaKggAAIT2S21TEc5j19nKKjDAhnx+e31TeKAT
      slSb1LBGoyEIUqU12Mx6AEBXR2ckPCXpXDVum9ViieOpyeHRuk0NnAgYPGa22Tvbrzc01xqM
      Dr0GAwB0dnTMTE6UVFSVWkwmo34jCehewttzmVDb33rrnMtlMwrhkbBocrrh2CiEmZMQpk9N
      1B/41AO1t3f2XDh1bGoiwqOAIEWFWldpFE51BQ/+3mYxFfRNh7Xlm2wa9taN/k995U8dOgQA
      8MJPnoGspQk/bqyuRCJjOCmZdaLCUB5lFGYl65/0VtTX8kD10UcPAgAmb1061zsZDONOjItw
      aFWd+/qpM/U79xpNGgWVvNHrq2uuhYSE3lZ/8PceAAC0Xzg1OjURpUTASpJSIwtofWCI5Mik
      3+kwJwheqZAYmjWaTRSeMJgtkTiBCJStrEKF3h5wEMmoBGMUJxLxqMmo4UVYEASeFyQYZlMJ
      MhXXlzeJyVBFdXXaEyQYCmowREKUsURKITKYSotqtZHpKUytlSRxdHJ6W1MtJaJ2qxEAILJU
      lOQljmIp0mixJFK0GpFYXpQQVK0APC9GE4RJjyp1NqNOlbaclmCW4shU3GTS/3+nATlwFZPZ
      OAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Budget by Market Data' width='192'>
      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
      WO45CkOBSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Market Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Advertiser Data' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Paused Hotels by Months Active' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAIqElEQVR4nO3d22/b1h0H8ENJpO5yfJVj2a7jawx3tRMnXbME
      qNs0RbF1WPqwPQx7GrC3vewC7D/a4zCsD1uHLRsGpFkurpPUiZM4nRPbcaybJetCUaTEswfZ
      YYHxuNZ+MSW638/TkW1YP0BfiIf88RxKnHMG8P/yHeaPEDIQOVSAVFWVJOmoSwE3sgkQ53x1
      9anfa9a4J1fS5+dmJEkKhULOFwftz2PzM7O2tZ3q7uneXnuU3SkXdV3TNMcLA3ewCZDklcdH
      33ixuTV8era3OxJTlEAg4Hxl4ArSYSbIqqriEAa27A5hAIeGAAEJAgQkCBCQIEBAggABCQIE
      JAgQkNj2wszHj1fjncGKKW+lC+femnK+LHALu248rydT2d5gbCPnLe1ki9VThqa16kq0ej9t
      bJUa4+jCkCdwqNsHwDE2n4fkkcfHRmInAglfNeNlYb+i1VvWC9NWdtSlVGMcuTDAEKA2Y/95
      JBIDjLHBMBtMnHS2HnAZTKKBBAECEgQISBAgIEGAgAQBAhIECEgQICCx74WtrDxJ9EZyFZ7K
      5M+f/Y7zZYFb2H0DcTOd3fHVKw8fLO/kKlgXBgew7YX5JsZOBU+EZ890ZLK5mKKoWBcGAva9
      sIGBk4yxRH8s0d/nbD3gMphEAwkCBCQIEJAgQECCAAEJAgQkCBCQIEBAYr9HYja7w2qaNxDa
      2s7OnB53vixwC7sr0aZx54t7fd2R0k7KCPSfGtW11q0LgzZn1wvzKqMjg9yoBBOj+YIqywpD
      LwwE7Hthk5OTX39pOFIKuBEm0UCCAAEJAgQkCBCQIEBAggABCQIEJAgQkNj3wtLpjIfrTA7l
      87vjoyOOVwWuYd8LW7q33NsdST5d5l3T8cGBFu6RCG1O2AuT6tXgzHxq14goSgW9MBCw74VN
      TEw0BtMOlgJuhEk0kCBAQIIAAQkCBCRHsvG7qdW4Xm+MPWFZ8iKmx9aRBKjw1+elz7ca4/iv
      zsrx8FG8C7QDfDcACQIEJKIA8a2NtWw28+XKU0fLAbcRzoE2NzZ2czlP9KSKdWEgJgxQPB7v
      6OrLF1RZUVjrnhcGbU4UIOmNMetJl1gXBiKYRAMJAgQkCBCQIEBAggABCQIEJAgQkCBAQCIM
      UKVc1HSjUCg6WQ24juhKNP/izq1c+qURHProo0u1Wu01vmW9bPDq3u1m3g4Ft5u5mrCV0dvT
      xRnLaZL3dbcyCp89K9/abozjvz0n9wRf678HRwmbqZMzZ17tk1jzHcmNi3AM4PABJAgQkCBA
      QIIAAQkCBCQIEJAgQECCAAGJMEDl4m5F07aTaSerAdcR9sKW7tyomzxf7/j++52GQWpm1Eu6
      Wdnrpvk6sULoWBH2KELhmGF6OlTdYJLHQzrSFf62Xv73y8Y4/ut5yr+CdiNspp59+3uvXqhe
      rzPVgOtgEg0kCBCQIEBAggABCQIEJAgQkCBAQIIAAclBvbByRctmc05WA64j7IXdX7qd38nq
      /oErVy4Qe2FwjB3QC4tyznK6JHs8dVovDI4xYS9sdv67r14Y6IWBAL5agAQBAhIECEgQICBB
      gIDEZdtu5P6wqn6ZaYz7fzPvjSitrQdcFiCzWuf79+cz3tJSgDGGQxgQIUBAIuyFrT1c2kzl
      XpZ9P/nBu45WBK4i+gaSDOafOzMXZVqhqmua5mhR4B7CSfTY1GmPR3rv8kLAr6h44BwICAPk
      9XoZY4GA38FiwH0wiQYSBAhIECAgQYCABAECEgQISBAgIEGAgETYC1t/cv/x2ouC7v/RDy87
      WhG4irAXptd9szPjJmdVHb0wEBK2MkanpiVJuhoflWWfFEAvDOwJA9TYmVWWW3zL4q3I8krX
      3cb4F57Z1hYD/6vdb2n9V2zx0/injfFPPb9s93K/fdruE6llK/Xy3l4OykCktcXAN2q7ABWu
      baiLyca4/3fnW1sMfCNcBwISBAhIECAgQYCABAECEussLLO9mdqtTk+NSYwxxq9f+4s/FH60
      bfzsKnphILT/DcT5ZjI7FK0/TaqNH0g+paTWe+Qa1oXBAaxvoNT66oPl6gcfDzPGGJPeufQe
      Y4xz7vV6sS4MRKwAXVj4UJYVRdlbCEZ8SiF8S1gpubt48/r1G6peb2E14Dr7AZKk4f6+0m4m
      p5ktrQdcxjqEDU+91Ts8GQxizy9ognUWtnT788VbNzLFakvrAZexDmFRv5zMFT2S1NJ6wGWs
      SXRfYijeGeEIEDTDClCtqj5+8lWdI0DQBCtAeo29OXOaMZyFQROsszBDK1er+v5lIH7jn5/V
      mO9lnn9y9UqLagMXsAI0NPlmtK9wokNuvJTkQDmTYqzT0HVN00KhUIsqhLa2HyDOb1+/li/V
      Zi9ejkdlxqR3Li5Yf4V1YSCwHyBJGhwcMdbXTe70/u+Vh1n9Rakxjl4acPjdgcg6hHGz7glE
      I7LTZ2GVlax6e28ZRni+z+F3ByLrSnRhd+f+0lJJQzMVmmCdxms19va5M34Fj0eFJlitjK5o
      6NHDByUd14GgCdYhLJ1OpotGRwD3kUETrLj4YvGff/JuctdoYTXgOlaAYkFlLVNNdOJ+IGiC
      dR1odHL6678wTZPt31TvfFngFqIZD//7n/+4fPfm7//0D845d/zqIriFcMo8MTWdL+h9AV7U
      a7quO1kTuIhofyBpZHx6ZHzvoKbW8dAnsIeTdiBBgIAEAQISBAhIECAgQYCABAECEgQISBAg
      IBHuVH9v8WYkGlndLHz4/gUnCwJ3ETZTI5Hwg6U7umGqeF4YiAl7YT298YWPf6yWShFFUbEu
      DASEh7COrl7GWCyMBalwEEyigQQBAhIECEgQICBBgIAEAQISBAhIECAgEV5IzCWf/+fZi1wt
      9MHFOScLAncRBYg/e/48nVVNXixU9Rr2SAQBYS9s7vyliqrulioxv4LnhYGI8BAmSZ5QOBIK
      R5ysBlwHk2ggQYCABAECEgQISP4LB6CZjS0TDecAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Paused Hotels by ROI' width='107'>
      iVBORw0KGgoAAAANSUhEUgAAAGsAAADACAIAAACMBgp2AAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAF+klEQVR4nO3df0zUdRzH8fd57BTKsVub4K4CXQvUPINp6cTW
      +oOt2WyQO/MG7oppakGpQ5hNEK1EaWFsyFzID2Mjbw6LtDUbrTbMM10phjvU4DbGAm27LoTy
      5jf64/ByiJi++H7vvnevx1/fu930s+fuuLfHffwYRkZGhABTQr0A3WNBFAuiWBDFgigWRLEg
      KibUC7grt9sd6iX8L+FbUERSU1NDvYR746sYxYIoFkSxIIoFUSyIYkEUC6JYEMWCKBZEsSCK
      BVEsiGJBFAuiWBDFgigWRLEgigVRLIhiQRQLolgQxYIoFkSxIIoFUWoV9Hc15tuqzgRuDHY0
      FDnsNlvuW3tP9CoiIkpv6w6H3WZ3FDV0DKq0BI2oUdDff3L/1rLjA6M3lY7mys70HQ3Opl3L
      rtXWtXlFeo7s/WzampqmmrUzv//kqx4V1qAdFQr2feP8ZUHxmxm3bhut6+orViWbREQkJi5u
      mngvuwdS0tPiTfGLFy8YOHuub/IXoR0VClqWF7yxNNE05t7Og6/lbD0e89LyBbEyPHRdzGaz
      iBiNU6Tvt4Hx/hi90Ow7rPPy6p25nsPvbtuXUP36uI/Qy9d+x9D0W8Cm5NmP3fyiqyfuiYfF
      6/WKmBXlH7HMTBCRO77zq5egGkwzf7VX5JYd6/eL4nOduhCTZp1jnmdN6vrpZ5/f53KdT1j4
      tEX9RahHg+dgbMb6wivvFTsODUvc3JdLt2TEiqwoeHXX9g05taZZmZvzZqm/BhUZwnZ3rNvt
      5nf5owILolgQxYIoFkSxIIoFUSyIYkEUC6JYEMWCKBZEsSCKBVEsiGJBFAuiWBDFgigWRIX1
      /7s1rpaWllAvQUQkOzs7cKG/giIS8t/QGgyG4DVfxSgWRLEgigVRLIhiQRQLonQ5D94+joWc
      Lgtyoo4oLIhiQZRaPwf9XY1btvvWOAsWiQx2NJRXtV3+88bUGQuz8zdkpUyX/tbigqbuwEMz
      Cp0Fi1RahgbUKOjvP1lbXv3dgAQ2hnU6KzutpQffTxbPkZJt5c4n6/NSPd3ds3OqylckqvDX
      a0yDfXXz8ka31ZmSlzxrGRoaFun59VLM449GQD7RcF+diCi9p3744/mMp8TbfeX3qR11DrvN
      7thxuEvf22M1mwcVn6t6z7llJWXpsSKZpc5MERF//7Hdm8ub59SusxrvYxtYFE7Ufs/RDyo9
      L5SUPTfDePv9psQ0q+XQac81sSbex766aJuold6jO2sVR8WmYL6ew/n5jRf/VsTvOXW6LyFt
      vp5/Iqr/HPS21TVfuiRbc5yB2xmFzoKsLS/u+3Dt6qs3ps5Y6ChaqeuNdfrbV9fS0hLyNRsM
      huDv6vhvEhQLolgQpcvPB6NwHpxk4fBOErzmqxjFgigWRLEgigVRLIhiQZQu50FO1ChO1BGF
      BVEsiGJBFAuiWBDFgihdzoOcqFGcqCMKC6JYEMWCKBZEsSCKBVG6nAc5UaM4UUcUFkRpcdqa
      0nti79sOu81mdxQdcF1VhKet3cOY09a8bXXNJtvHnzqba9Zbzn5U0+blaWsTG7srzJxZWv/O
      0nijGOMXL5kv14eGedraxO66K0wGXScvzF72jIWnrT0Qv+fInibTut0rLDL+c467wiag+FwH
      Sr5+ZOPujSnTRSTuIey0taibBwfPVO/8MX3n9lUp0wN38LS1+9Pp3N/eO9S+tj1wM2l1ZUUW
      T1vTAHeFRQsWRLEgigVRuvx8MAon6kkWDu/FwWu+ilEsiGJBFAuiWBDFgigWROlyHuREjeJE
      HVFYEMWCKBZEsSCKBVG6nGY4D6I4D0YUFkSxIIoFUSyIYkEUC6J0OQ9yokZxoo4oLIhiQZQW
      ++pERETxfVtuLzw6upWkv7XYdsvtj9IhDU5bE1F8F1urKpsv3ExKGb2Dp61NZOy+OpHzX34u
      r2yyJQXv4GlrE7pzX116zrasufH/nXHF09ZQZp62Nll42toD4mlrqFk8bU0L3FcXLVgQxYIo
      FkTp8hNWTtSocHgvDl7zVYxiQRQLolgQxYIoFkTpcpoJq3nwX7asPmYRPrGzAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='ROI and Churn' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Active Advertisers Last Week' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='191'>
      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
      kQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
