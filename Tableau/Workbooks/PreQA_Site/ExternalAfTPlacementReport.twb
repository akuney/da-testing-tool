<?xml version='1.0' encoding='utf-8' ?>

<workbook locale='en_US' version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.13.1220.1924                -->
  <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/workbooks/AfTPlacementReport?rev=2.7' id='ExternalAfTPlacementReportwithIMTrafficShare' path='/t/PreQA/workbooks' revision='1.0' site='PreQA' />
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
        <calculation class='tableau' formula='&quot;Day&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
        </members>
      </column>
      <column caption='Product Category' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Flights&quot;' />
          <member value='&quot;Hotels&quot;' />
        </members>
      </column>
      <column caption='Max Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2022-06-05#'>
        <calculation class='tableau' formula='#2022-06-05#' />
      </column>
      <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Bookit&quot;' />
          <member value='&quot;BudgetAir&quot;' />
          <member value='&quot;CheapAir&quot;' />
          <member value='&quot;CheapOair&quot;' />
          <member value='&quot;CheapTickets&quot;' />
          <member value='&quot;Expedia&quot;' />
          <member value='&quot;FareSpotter&quot;' />
          <member value='&quot;Hipmunk&quot;' />
          <member value='&quot;Hotwire&quot;' />
          <member value='&quot;KAYAK&quot;' />
          <member value='&quot;LowCostAirlines&quot;' />
          <member value='&quot;LowFares&quot;' />
          <member value='&quot;OneTravel&quot;' />
          <member value='&quot;Orbitz&quot;' />
          <member value='&quot;Travelocity&quot;' />
          <member value='&quot;Trip.com&quot;' />
          <member value='&quot;TripAdvisor&quot;' />
          <member value='&quot;Vayama&quot;' />
          <member value='&quot;Webjet&quot;' />
        </members>
      </column>
      <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2012-03-23#'>
        <calculation class='tableau' formula='#2012-03-23#' />
      </column>
      <column datatype='string' name='[Table Time]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Week&quot;' />
          <member value='&quot;MTD&quot;' />
          <member value='&quot;YTD&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
        <calculation class='tableau' formula='&quot;Yesterday&quot;' />
        <members>
          <member value='&quot;Yesterday&quot;' />
          <member value='&quot;Reference Day&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='external_aft_placement_report' inline='true' name='aft_placement_report (copy)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>-- flight by placement&#13;&#10;select &#13;&#10;&#9;&apos;Flights&apos; AS &apos;Product Category Type&apos;,&#13;&#10;&#9;p.date_in_et AS Date,&#13;&#10;&#9;s.display_name AS &quot;Site&quot;,&#13;&#10;&#9;(CASE au.name&#13;&#10;&#9;&#9;WHEN &apos;Orbitz Exit Unit - Firefox&apos; THEN &apos;Orbitz Exit Unit&apos; &#13;&#10;&#9;&#9;WHEN &apos;CheapTickets Exit Unit - Firefox&apos; THEN &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;ELSE au.name &#13;&#10;&#9;END) AS &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;p.&quot;Placement&quot;,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;i.net_revenue_sum as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from &#13;&#10;&#9;(select&#13;&#10;&#9;&#9;acptpa.date_in_et,&#13;&#10;&#9;&#9;acptpa.ad_unit_id,&#13;&#10;&#9;&#9;(CASE&#13;&#10;&#9;&#9;&#9;when au.name LIKE &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos; &#13;&#10;&#9;&#9;&#9;when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;&#9;&#9;&#9;when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;&#9;&#9;&#9;else (CASE acptpa.placement_type &#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;INTER_CARD&apos; THEN &apos;Inter Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;MINI_CARD&apos; THEN &apos;Mini Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;RIGHT_RAIL&apos; THEN &apos;Rail&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;EXIT_UNIT&apos; THEN &apos;Exit Unit&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;FOOTER&apos; THEN &apos;Footer&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;TOP_CARD&apos; THEN &apos;Top Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;ELSE acptpa.placement_type&#13;&#10;&#9;&#9;&#9;&#9;END)&#13;&#10;&#9;&#9;END) AS &quot;Placement&quot;,&#13;&#10;&#9;&#9;sum(acptpa.click_count) as click_count,&#13;&#10;&#9;&#9;sum(acptpa.click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;sum(acptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;sum(acptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;sum(acptpa.interaction_count) as interaction_count&#13;&#10;&#9;from intent_media_production.air_ct_placement_type_performance_aggregations acptpa&#13;&#10;&#9;left join intent_media_production.ad_units au on au.id = acptpa.ad_unit_id&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;HIPMUNK&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and date_in_et &gt;&gt; &apos;2012-03-26&apos;))&#13;&#10;&#9;group by &#13;&#10;&#9;&#9;acptpa.date_in_et, &#13;&#10;&#9;&#9;acptpa.ad_unit_id,&#13;&#10;&#9;&#9;(CASE&#13;&#10;&#9;&#9;&#9;when au.name LIKE &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos; &#13;&#10;&#9;&#9;&#9;when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;&#9;&#9;&#9;when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;&#9;&#9;&#9;else (CASE acptpa.placement_type &#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;INTER_CARD&apos; THEN &apos;Inter Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;MINI_CARD&apos; THEN &apos;Mini Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;RIGHT_RAIL&apos; THEN &apos;Rail&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;EXIT_UNIT&apos; THEN &apos;Exit Unit&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;FOOTER&apos; THEN &apos;Footer&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;TOP_CARD&apos; THEN &apos;Top Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;ELSE acptpa.placement_type&#13;&#10;&#9;&#9;&#9;&#9;END)&#13;&#10;&#9;&#9;END) ) p&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;join &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;aggregation_level_date_in_et as date_in_et,&#13;&#10;&#9;&#9;ad_unit_id,&#9;&#9;&#13;&#10;&#9;&#9;sum(ad_call_count) as ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;&#9;&#9;sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;&#9;&#9;sum(ad_unit_served_count) as ad_unit_served_count,&#13;&#10;&#9;&#9;sum(impression_count) as impression_count,&#13;&#10;&#9;&#9;sum(interaction_count) as interaction_count,&#13;&#10;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;&#9;&#9;sum(available_impression_count) as available_impression_count,&#13;&#10;&#9;&#9;sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;&#9;&#9;sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(suppressed_by_route) as suppressed_by_route,&#13;&#10;&#9;&#9;0 as suppressed_by_unknown_hotel_city,&#13;&#10;&#9;&#9;sum(suppressed_by_c13n_segment) as suppressed_by_c13n_segment,&#13;&#10;&#9;&#9;sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;&#9;&#9;sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;&#9;&#9;sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;&#9;&#9;sum(suppressed_by_c13n_above_threshold) as suppressed_by_c13n_above_threshold,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;left join intent_media_production.ad_units au on au.id = acmpa.ad_unit_id&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((aggregation_level_date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and aggregation_level_date_in_et &gt;&gt; &apos;2012-03-26&apos;)) &#13;&#10;&#9;group by aggregation_level_date_in_et, ad_unit_id) as i&#13;&#10;on i.date_in_et = p.date_in_et&#13;&#10;and i.ad_unit_id = p.ad_unit_id&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;-- flight total&#13;&#10;select&#13;&#10;&#9;&apos;Flights&apos; AS &apos;Product Category Type&apos;,&#13;&#10;&#9;p.date_in_et AS Date,&#13;&#10;&#9;s.display_name AS &quot;Site&quot;,&#13;&#10;&#9;(CASE au.name&#13;&#10;&#9;&#9;WHEN &apos;Orbitz Exit Unit - Firefox&apos; THEN &apos;Orbitz Exit Unit&apos; &#13;&#10;&#9;&#9;WHEN &apos;CheapTickets Exit Unit - Firefox&apos; THEN &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;ELSE au.name &#13;&#10;&#9;END) AS &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;&apos;Total List Page&apos; as Placement,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;i.net_revenue_sum as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;acptpa.date_in_et,&#13;&#10;&#9;&#9;acptpa.ad_unit_id,&#13;&#10;&#9;&#9;sum(acptpa.click_count) as click_count,&#13;&#10;&#9;&#9;sum(acptpa.click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;sum(acptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;sum(acptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;sum(acptpa.interaction_count) as interaction_count&#13;&#10;&#9;from intent_media_production.air_ct_placement_type_performance_aggregations acptpa&#13;&#10;&#9;left join intent_media_production.ad_units au on au.id = acptpa.ad_unit_id&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;HIPMUNK&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and date_in_et &gt;&gt; &apos;2012-03-26&apos;))&#13;&#10;&#9;&#9;and (not (au.name like &apos;%Firefox%&apos; or au.name = &apos;Hotwire Media Fill In&apos; or au.name like &apos;%Trip.com%&apos; or acptpa.placement_type = &apos;EXIT_UNIT&apos;))&#13;&#10;&#9;group by &#13;&#10;&#9;&#9;acptpa.date_in_et, &#13;&#10;&#9;&#9;acptpa.ad_unit_id) p&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;join &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;aggregation_level_date_in_et as date_in_et,&#13;&#10;&#9;&#9;ad_unit_id,&#13;&#10;&#9;&#9;sum(ad_call_count) as ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;&#9;&#9;sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;&#9;&#9;sum(ad_unit_served_count) as ad_unit_served_count,&#13;&#10;&#9;&#9;sum(impression_count) as impression_count,&#13;&#10;&#9;&#9;sum(interaction_count) as interaction_count,&#13;&#10;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;&#9;&#9;sum(available_impression_count) as available_impression_count,&#13;&#10;&#9;&#9;sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;&#9;&#9;sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(suppressed_by_route) as suppressed_by_route,&#13;&#10;&#9;&#9;0 as suppressed_by_unknown_hotel_city,&#13;&#10;&#9;&#9;sum(suppressed_by_c13n_segment) as suppressed_by_c13n_segment,&#13;&#10;&#9;&#9;sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;&#9;&#9;sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;&#9;&#9;sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;&#9;&#9;sum(suppressed_by_c13n_above_threshold) as suppressed_by_c13n_above_threshold,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;&#9;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;&#9;left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#9;&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#9;&#9;&#13;&#10;&#9;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((aggregation_level_date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and aggregation_level_date_in_et &gt;&gt; &apos;2012-03-26&apos;)) &#13;&#10;&#9;group by &#13;&#10;&#9;&#9;aggregation_level_date_in_et, &#13;&#10;&#9;&#9;ad_unit_id) as i&#13;&#10;on i.date_in_et = p.date_in_et&#13;&#10;and i.ad_unit_id = p.ad_unit_id&#13;&#10;&#13;&#10;&#13;&#10;union&#13;&#10;&#9;&#13;&#10;-- hotel by placement&#13;&#10;select &#13;&#10;&#9;&apos;Hotels&apos; AS &apos;Product Category Type&apos;,&#13;&#10;&#9;p.date_in_et AS Date,&#13;&#10;&#9;s.display_name AS &quot;Site&quot;,&#13;&#10;&#9;(CASE au.name&#13;&#10;&#9;&#9;WHEN &apos;Orbitz Exit Unit - Firefox&apos; THEN &apos;Orbitz Exit Unit&apos; &#13;&#10;&#9;&#9;WHEN &apos;CheapTickets Exit Unit - Firefox&apos; THEN &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;ELSE au.name &#13;&#10;&#9;END) AS &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;p.&quot;Placement&quot;,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;i.net_revenue_sum as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from &#13;&#10;&#9;(select&#13;&#10;&#9;&#9;hcptpa.date_in_et,&#13;&#10;&#9;&#9;hcptpa.ad_unit_id,&#13;&#10;&#9;&#9;(CASE&#13;&#10;&#9;&#9;&#9;when au.name LIKE &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos; &#13;&#10;&#9;&#9;&#9;when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;&#9;&#9;&#9;when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;&#9;&#9;&#9;else (CASE hcptpa.placement_type &#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;INTER_CARD&apos; THEN &apos;Inter Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;MINI_CARD&apos; THEN &apos;Mini Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;RIGHT_RAIL&apos; THEN &apos;Rail&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;EXIT_UNIT&apos; THEN &apos;Exit Unit&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;FOOTER&apos; THEN &apos;Footer&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;TOP_CARD&apos; THEN &apos;Top Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;ELSE hcptpa.placement_type&#13;&#10;&#9;&#9;&#9;&#9;END)&#13;&#10;&#9;&#9;END) AS &quot;Placement&quot;,&#13;&#10;&#9;&#9;sum(hcptpa.click_count) as click_count,&#13;&#10;&#9;&#9;sum(hcptpa.click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;sum(hcptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;sum(hcptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;sum(hcptpa.interaction_count) as interaction_count&#13;&#10;&#9;from intent_media_production.hotel_ct_placement_type_performance_aggregations hcptpa&#13;&#10;&#9;left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;HIPMUNK&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and date_in_et &gt;&gt; &apos;2012-03-26&apos;))&#13;&#10;&#9;group by &#13;&#10;&#9;&#9;hcptpa.date_in_et, &#13;&#10;&#9;&#9;hcptpa.ad_unit_id,&#13;&#10;&#9;&#9;(CASE&#13;&#10;&#9;&#9;when au.name LIKE &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos; &#13;&#10;&#9;&#9;when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;&#9;&#9;when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;&#9;&#9;else (CASE hcptpa.placement_type &#13;&#10;&#9;&#9;&#9;&#9;WHEN &apos;INTER_CARD&apos; THEN &apos;Inter Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;WHEN &apos;MINI_CARD&apos; THEN &apos;Mini Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;WHEN &apos;RIGHT_RAIL&apos; THEN &apos;Rail&apos;&#13;&#10;&#9;&#9;&#9;&#9;WHEN &apos;EXIT_UNIT&apos; THEN &apos;Exit Unit&apos;&#13;&#10;&#9;&#9;&#9;&#9;WHEN &apos;FOOTER&apos; THEN &apos;Footer&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;WHEN &apos;TOP_CARD&apos; THEN &apos;Top Card&apos;&#13;&#10;&#9;&#9;&#9;&#9;WHEN &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;&#9;&#9;&#9;&#9;ELSE hcptpa.placement_type&#13;&#10;&#9;&#9;&#9;END)&#13;&#10;&#9;END) ) p&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;join &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;aggregation_level_date_in_et as date_in_et,&#13;&#10;&#9;&#9;ad_unit_id,&#9;&#9;&#13;&#10;&#9;&#9;sum(ad_call_count) as ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;&#9;&#9;sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;&#9;&#9;sum(served_ad_count) as ad_unit_served_count,&#13;&#10;&#9;&#9;sum(impression_count) as impression_count,&#13;&#10;&#9;&#9;sum(interaction_count) as interaction_count,&#13;&#10;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;&#9;&#9;sum(available_impression_count) as available_impression_count,&#13;&#10;&#9;&#9;sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;&#9;&#9;sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;&#9;&#9;0 as suppressed_by_route,&#13;&#10;&#9;&#9;sum(suppressed_by_unknown_hotel_destination) as suppressed_by_unknown_hotel_city,&#13;&#10;&#9;&#9;0 as suppressed_by_c13n_segment,&#13;&#10;&#9;&#9;sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;&#9;&#9;sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;&#9;&#9;sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;&#9;&#9;0 as suppressed_by_c13n_above_threshold,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;&#9;from intent_media_production.hotel_ct_media_performance_aggregations hcmpa&#13;&#10;&#9;left join intent_media_production.ad_units au on au.id = hcmpa.ad_unit_id&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((aggregation_level_date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and aggregation_level_date_in_et &gt;&gt; &apos;2012-03-26&apos;)) &#13;&#10;&#9;group by aggregation_level_date_in_et, ad_unit_id) as i&#13;&#10;on i.date_in_et = p.date_in_et&#13;&#10;and i.ad_unit_id = p.ad_unit_id&#13;&#10;&#9;&#13;&#10;union&#13;&#10;&#13;&#10;-- hotel total&#13;&#10;select&#13;&#10;&#9;&apos;Hotels&apos; AS &apos;Product Category Type&apos;,&#13;&#10;&#9;p.date_in_et AS Date,&#13;&#10;&#9;s.display_name AS &quot;Site&quot;,&#13;&#10;&#9;(CASE au.name&#13;&#10;&#9;&#9;WHEN &apos;Orbitz Exit Unit - Firefox&apos; THEN &apos;Orbitz Exit Unit&apos; &#13;&#10;&#9;&#9;WHEN &apos;CheapTickets Exit Unit - Firefox&apos; THEN &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;ELSE au.name &#13;&#10;&#9;END) AS &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;&apos;Total List Page&apos; as Placement,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;i.net_revenue_sum as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;hcptpa.date_in_et,&#13;&#10;&#9;&#9;hcptpa.ad_unit_id,&#13;&#10;&#9;&#9;sum(hcptpa.click_count) as click_count,&#13;&#10;&#9;&#9;sum(hcptpa.click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;sum(hcptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;sum(hcptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;sum(hcptpa.interaction_count) as interaction_count&#13;&#10;&#9;from intent_media_production.hotel_ct_placement_type_performance_aggregations hcptpa&#13;&#10;&#9;left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;HIPMUNK&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and date_in_et &gt;&gt; &apos;2012-03-26&apos;))&#13;&#10;&#9;&#9;and (not (au.name like &apos;%Firefox%&apos; or au.name = &apos;Hotwire Media Fill In&apos; or au.name like &apos;%Trip.com%&apos; or hcptpa.placement_type = &apos;EXIT_UNIT&apos;))&#13;&#10;&#9;group by &#13;&#10;&#9;&#9;hcptpa.date_in_et, &#13;&#10;&#9;&#9;hcptpa.ad_unit_id) p&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;join &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;hcmpa.aggregation_level_date_in_et as date_in_et,&#13;&#10;&#9;&#9;hcmpa.ad_unit_id,&#13;&#10;&#9;&#9;sum(ad_call_count) as ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;&#9;&#9;sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;&#9;&#9;sum(served_ad_count) as ad_unit_served_count,&#13;&#10;&#9;&#9;sum(impression_count) as impression_count,&#13;&#10;&#9;&#9;sum(interaction_count) as interaction_count,&#13;&#10;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;&#9;&#9;sum(available_impression_count) as available_impression_count,&#13;&#10;&#9;&#9;sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;&#9;&#9;sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;&#9;&#9;sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;&#9;&#9;0 as suppressed_by_route,&#13;&#10;&#9;&#9;sum(suppressed_by_unknown_hotel_destination) as suppressed_by_unknown_hotel_city,&#13;&#10;&#9;&#9;0 as suppressed_by_c13n_segment,&#13;&#10;&#9;&#9;sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;&#9;&#9;sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;&#9;&#9;sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;&#9;&#9;0 as suppressed_by_c13n_above_threshold,&#13;&#10;&#9;&#9;sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;&#9;from intent_media_production.hotel_ct_media_performance_aggregations hcmpa&#13;&#10;&#9;left join intent_media_production.ad_units au on hcmpa.ad_unit_id = au.id&#9;&#9;&#13;&#10;&#9;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;&#9;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and ((aggregation_level_date_in_et &gt;&gt; &apos;2013-07-29&apos; and s.name = &apos;TRIPADVISOR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-27&apos; and s.name = &apos;LOWFARES&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-10-28&apos; and s.name = &apos;WEBJET&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-11&apos; and s.name = &apos;HIPMUNK&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-15&apos; and s.name = &apos;CHEAPOAIR&apos;)&#13;&#10;&#9;&#9;or (aggregation_level_date_in_et &gt;&gt; &apos;2013-11-29&apos; and s.name = &apos;ONETRAVEL&apos;)&#13;&#10;&#9;&#9;or (s.name not in (&apos;TRIPADVISOR&apos;,&apos;LOWFARES&apos;,&apos;WEBJET&apos;,&apos;CHEAPOAIR&apos;,&apos;ONETRAVEL&apos;) and aggregation_level_date_in_et &gt;&gt; &apos;2012-03-26&apos;)) &#9;&#13;&#10;&#9;group by &#13;&#10;&#9;&#9;hcmpa.aggregation_level_date_in_et, &#13;&#10;&#9;&#9;hcmpa.ad_unit_id) as i&#13;&#10;on i.date_in_et = p.date_in_et&#13;&#10;and i.ad_unit_id = p.ad_unit_id&#13;&#10;&#13;&#10;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[aft_placement_report (copy)].[usr:Addressable:qk]&quot;' value='% Addressable' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Calculation_3430322153857371:qk]&quot;' value='Qualified after Unknown Hotel City %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Not Pure Low Converting:qk]&quot;' value='% Not Pure Low Value' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules \%:qk]&quot;' value='Qualified after Business Rules %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules Other \%:qk]&quot;' value='Qualified after Business Rules Other %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Cannibalization Threshold \%:qk]&quot;' value='Qualified after Cannibalization Threshold %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Click Blackout \%:qk]&quot;' value='Qualified after Click Blackout %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by No Valid Layout \%:qk]&quot;' value='Qualified after No Valid Layout %' />
        </aliases>
      </column>
      <column datatype='string' name='[Ad Unit + Placement]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Ad Unit] + &quot; &quot; + [Placement]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Addressable]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Addressable Page Views])/sum([Page Views])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Page Views])*1000' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Clicks])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
      </column>
      <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_0190621154221425]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Date])' scope-isolation='false' />
      </column>
      <column caption='Product Category Filter' datatype='string' name='[Calculation_1980322152539214]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Parameters].[Parameter 1] = [Product Category Type] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
      </column>
      <column caption='% Intent Media Traffic Share' datatype='real' default-format='p0.0%' name='[Calculation_2491231162412519]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8460102172528083])/SUM([Not Pure Low Value Page Views])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Unknown Hotel City %' datatype='real' name='[Calculation_3430322153857371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by Unknown Hotel City])/Sum([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4810621154352688]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;year&apos;,[Date])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_6680621154243594]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
      </column>
      <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Clicks per Interaction]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Interactions])' />
      </column>
      <column datatype='string' name='[Color]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Placement] = &quot;Total&quot; THEN &quot;Total&quot; END' />
      </column>
      <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;, [Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Interactions])/sum([Pages Served])' />
      </column>
      <column caption='% Low Value' datatype='real' name='[Low Converting]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Not Pure Low Value Page Views])/Sum([Not Pure Page Views])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Max Date Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Parameters].[Parameter 3] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END' scope-isolation='false' />
      </column>
      <column caption='% Not Pure Low Value' datatype='real' name='[Not Pure Low Converting]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Not Pure Low Value Page Views])/Sum([Page Views])' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Not Pure Page Views])/Sum([Page Views])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Page]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Ad Unit], &quot;Exit Unit&quot;) THEN &quot;Exit Unit&quot;&#13;&#10;ELSEIF CONTAINS([Ad Unit],&quot;Flight List Page&quot;) THEN &quot;List Page&quot;&#13;&#10;ELSE [Ad Unit]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Pages Served])*1000' />
      </column>
      <column datatype='string' name='[Site Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Publisher]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Qualified after All Business Rules %' datatype='real' name='[Suppressed by Business Rules %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Addressable Page Views])/SUM([Calculation_8460102172528083])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Other Business Rules %' datatype='real' name='[Suppressed by Business Rules Other %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Addressable Page Views]) + SUM([Suppressed by Click Blackout]))/SUM([Calculation_8460102172528083])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Suppressed by Business Rules Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8460102172528083]) - SUM([Addressable Page Views]) - SUM([Suppressed by Click Blackout])' scope-isolation='false' />
      </column>
      <column caption='Suppressed by All Business Rules' datatype='integer' name='[Suppressed by Business Rules]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8460102172528083]) - SUM([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Cannibalization Threshold %' datatype='real' name='[Suppressed by Cannibalization Threshold %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by Cannibalization Threshold])/Sum([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Click Blackout %' datatype='real' name='[Suppressed by Click Blackout %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by Click Blackout])/Sum([Calculation_8460102172528083])' scope-isolation='false' />
      </column>
      <column caption='Qualified after No Valid Layout %' datatype='real' name='[Suppressed by No Valid Layout %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by No Valid Layout])/Sum([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column-instance column='[Addressable]' derivation='User' name='[usr:Addressable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3430322153857371]' derivation='User' name='[usr:Calculation_3430322153857371:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Not Pure Low Converting]' derivation='User' name='[usr:Not Pure Low Converting:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Business Rules %]' derivation='User' name='[usr:Suppressed by Business Rules %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Business Rules Other %]' derivation='User' name='[usr:Suppressed by Business Rules Other %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Cannibalization Threshold %]' derivation='User' name='[usr:Suppressed by Cannibalization Threshold %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Click Blackout %]' derivation='User' name='[usr:Suppressed by Click Blackout %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by No Valid Layout %]' derivation='User' name='[usr:Suppressed by No Valid Layout %:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\data\Tableau\data_extracts\Default Site\aft_placement_report copy 2.tde' schema='Extract' tablename='Extract' update-time='1/17/2014 5:24:14 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Ad Unit + Placement]' formula='[Ad Unit] + &quot; &quot; + [Placement]' />
            <calculation column='[Calculation_0190621154221425]' formula='DATEPART(&apos;month&apos;,[Date])' />
            <calculation column='[Calculation_4810621154352688]' formula='DATEPART(&apos;year&apos;,[Date])' />
            <calculation column='[Calculation_6680621154243594]' formula='DATEPART(&apos;quarter&apos;,[Date])' />
            <calculation column='[Calculation_8460102172528083]' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' />
            <calculation column='[Color]' formula='IF [Placement] = &quot;Total&quot; THEN &quot;Total&quot; END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Page]' formula='IF CONTAINS([Ad Unit], &quot;Exit Unit&quot;) THEN &quot;Exit Unit&quot;&#13;&#10;ELSEIF CONTAINS([Ad Unit],&quot;Flight List Page&quot;) THEN &quot;List Page&quot;&#13;&#10;ELSE [Ad Unit]&#13;&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='24055' timestamp-start='2014-01-17 17:24:14.200000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.375315' measure-ordering='alphabetic' measure-percentage='0.486146' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
          <calculation class='tableau' formula='&quot;Day&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column caption='Product Category' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Flights&quot;' />
            <member value='&quot;Hotels&quot;' />
          </members>
        </column>
        <column caption='Max Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2022-06-05#'>
          <calculation class='tableau' formula='#2022-06-05#' />
        </column>
        <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Bookit&quot;' />
            <member value='&quot;BudgetAir&quot;' />
            <member value='&quot;CheapAir&quot;' />
            <member value='&quot;CheapOair&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;Expedia&quot;' />
            <member value='&quot;FareSpotter&quot;' />
            <member value='&quot;Hipmunk&quot;' />
            <member value='&quot;Hotwire&quot;' />
            <member value='&quot;KAYAK&quot;' />
            <member value='&quot;LowCostAirlines&quot;' />
            <member value='&quot;LowFares&quot;' />
            <member value='&quot;OneTravel&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Trip.com&quot;' />
            <member value='&quot;TripAdvisor&quot;' />
            <member value='&quot;Vayama&quot;' />
            <member value='&quot;Webjet&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CSV Download'>
      <repository-location id='CSVDownload' path='/workbooks/AfTPlacementReport' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='external_aft_placement_report' name='aft_placement_report (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_placement_report (copy)'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Addressable Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Available Impressions]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_0190621154221425]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Date])' scope-isolation='false' />
            </column>
            <column caption='% Intent Media Traffic Share' datatype='real' default-format='p0.0%' name='[Calculation_2491231162412519]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_8460102172528083])/SUM([Not Pure Low Value Page Views])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4810621154352688]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;year&apos;,[Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_6680621154243594]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
            </column>
            <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Max Date Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Parameters].[Parameter 3] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Net Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Not Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Placement]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Publisher]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Suppressed by Business Rules Other]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_8460102172528083]) - SUM([Addressable Page Views]) - SUM([Suppressed by Click Blackout])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Suppressed by Cannibalization Threshold]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by Click Blackout]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by No Valid Layout]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by Unknown Hotel City]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0190621154221425]' derivation='None' name='[none:Calculation_0190621154221425:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4810621154352688]' derivation='None' name='[none:Calculation_4810621154352688:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6680621154243594]' derivation='None' name='[none:Calculation_6680621154243594:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Max Date Filter]' derivation='None' name='[none:Max Date Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Placement]' derivation='None' name='[none:Placement:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Filter]' derivation='None' name='[none:Site Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Addressable Page Views]' derivation='Sum' name='[sum:Addressable Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Available Impressions]' derivation='Sum' name='[sum:Available Impressions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8460102172528083]' derivation='Sum' name='[sum:Calculation_8460102172528083:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Conversion Value Sum]' derivation='Sum' name='[sum:Conversion Value Sum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Conversions]' derivation='Sum' name='[sum:Conversions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Low Value Page Views]' derivation='Sum' name='[sum:Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Net Media Revenue]' derivation='Sum' name='[sum:Net Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Low Value Page Views]' derivation='Sum' name='[sum:Not Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Page Views]' derivation='Sum' name='[sum:Not Pure Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pure Low Value Page Views]' derivation='Sum' name='[sum:Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pure Page Views]' derivation='Sum' name='[sum:Pure Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Cannibalization Threshold]' derivation='Sum' name='[sum:Suppressed by Cannibalization Threshold:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Click Blackout]' derivation='Sum' name='[sum:Suppressed by Click Blackout:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by No Valid Layout]' derivation='Sum' name='[sum:Suppressed by No Valid Layout:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Unknown Hotel City]' derivation='Sum' name='[sum:Suppressed by Unknown Hotel City:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2491231162412519]' derivation='User' name='[usr:Calculation_2491231162412519:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Business Rules Other]' derivation='User' name='[usr:Suppressed by Business Rules Other:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='natural' column='[aft_placement_report (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Max Date Filter:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Max Date Filter:nk]' />
              <groupfilter function='member' level='[none:Max Date Filter:nk]' member='&quot;Remove&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Site Filter:nk]'>
            <groupfilter function='member' level='[none:Site Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_placement_report (copy)].[none:Site Filter:nk]</column>
            <column>[aft_placement_report (copy)].[none:Max Date Filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_placement_report (copy)].[none:Date:ok] / ([aft_placement_report (copy)].[none:Calculation_0190621154221425:ok] / ([aft_placement_report (copy)].[none:Calculation_6680621154243594:ok] / ([aft_placement_report (copy)].[none:Calculation_4810621154352688:ok] / ([aft_placement_report (copy)].[none:Product Category Type:nk] / ([aft_placement_report (copy)].[none:Site:nk] / ([aft_placement_report (copy)].[none:Ad Unit:nk] / ([aft_placement_report (copy)].[none:Placement:nk] / ([aft_placement_report (copy)].[sum:Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Page Views:ok] / ([aft_placement_report (copy)].[sum:Available Impressions:ok] / ([aft_placement_report (copy)].[sum:Clicks:ok] / ([aft_placement_report (copy)].[sum:Conversions:ok] / ([aft_placement_report (copy)].[sum:Conversion Value Sum:ok] / ([aft_placement_report (copy)].[sum:Gross Media Revenue:ok] / ([aft_placement_report (copy)].[sum:Impressions:ok] / ([aft_placement_report (copy)].[sum:Interactions:ok] / ([aft_placement_report (copy)].[sum:Net Media Revenue:ok] / ([aft_placement_report (copy)].[sum:Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Addressable Page Views:ok] / ([aft_placement_report (copy)].[sum:Pages Served:ok] / ([aft_placement_report (copy)].[sum:Pure Page Views:ok] / ([aft_placement_report (copy)].[sum:Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Suppressed by Click Blackout:ok] / ([aft_placement_report (copy)].[usr:Suppressed by Business Rules Other:ok] / ([aft_placement_report (copy)].[sum:Suppressed by No Valid Layout:ok] / ([aft_placement_report (copy)].[sum:Suppressed by Cannibalization Threshold:ok] / ([aft_placement_report (copy)].[usr:Calculation_2491231162412519:ok] / ([aft_placement_report (copy)].[sum:Calculation_8460102172528083:ok] / [aft_placement_report (copy)].[sum:Suppressed by Unknown Hotel City:ok]))))))))))))))))))))))))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='DataWithoutSuppressionReasons'>
      <table>
        <view>
          <datasources>
            <datasource caption='external_aft_placement_report' name='aft_placement_report (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_placement_report (copy)'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Addressable Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Page Views])*1000' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
            </column>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_0190621154221425]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4810621154352688]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;year&apos;,[Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_6680621154243594]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
            </column>
            <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Clicks per Interaction]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Interactions])' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Interactions])/sum([Pages Served])' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Max Date Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Parameters].[Parameter 3] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Not Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Placement]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Pages Served])*1000' />
            </column>
            <column datatype='string' name='[Site Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Publisher]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0190621154221425]' derivation='None' name='[none:Calculation_0190621154221425:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4810621154352688]' derivation='None' name='[none:Calculation_4810621154352688:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6680621154243594]' derivation='None' name='[none:Calculation_6680621154243594:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Max Date Filter]' derivation='None' name='[none:Max Date Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Placement]' derivation='None' name='[none:Placement:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Filter]' derivation='None' name='[none:Site Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Addressable Page Views]' derivation='Sum' name='[sum:Addressable Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8460102172528083]' derivation='Sum' name='[sum:Calculation_8460102172528083:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Low Value Page Views]' derivation='Sum' name='[sum:Not Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Available eCPM]' derivation='User' name='[usr:Available eCPM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks per Interaction]' derivation='User' name='[usr:Clicks per Interaction:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served eCPM]' derivation='User' name='[usr:Served eCPM:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='natural' column='[aft_placement_report (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Max Date Filter:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Max Date Filter:nk]' />
              <groupfilter function='member' level='[none:Max Date Filter:nk]' member='&quot;Remove&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Site Filter:nk]'>
            <groupfilter function='member' level='[none:Site Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_placement_report (copy)].[none:Site Filter:nk]</column>
            <column>[aft_placement_report (copy)].[none:Max Date Filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_placement_report (copy)].[none:Date:ok] / ([aft_placement_report (copy)].[none:Calculation_0190621154221425:ok] / ([aft_placement_report (copy)].[none:Calculation_6680621154243594:ok] / ([aft_placement_report (copy)].[none:Calculation_4810621154352688:ok] / ([aft_placement_report (copy)].[none:Product Category Type:nk] / ([aft_placement_report (copy)].[none:Site:nk] / ([aft_placement_report (copy)].[none:Ad Unit:nk] / ([aft_placement_report (copy)].[none:Placement:nk] / ([aft_placement_report (copy)].[sum:Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Calculation_8460102172528083:ok] / ([aft_placement_report (copy)].[sum:Addressable Page Views:ok] / ([aft_placement_report (copy)].[sum:Pages Served:ok] / ([aft_placement_report (copy)].[usr:Interaction Rate:ok] / ([aft_placement_report (copy)].[sum:Interactions:ok] / ([aft_placement_report (copy)].[usr:Clicks per Interaction:ok] / ([aft_placement_report (copy)].[usr:CTR:ok] / ([aft_placement_report (copy)].[sum:Clicks:ok] / ([aft_placement_report (copy)].[sum:Gross Media Revenue:ok] / ([aft_placement_report (copy)].[usr:Available eCPM:ok] / [aft_placement_report (copy)].[usr:Served eCPM:ok]))))))))))))))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Readable Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='external_aft_placement_report' name='aft_placement_report (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Bookit&quot;' />
                <member value='&quot;BudgetAir&quot;' />
                <member value='&quot;CheapAir&quot;' />
                <member value='&quot;CheapOair&quot;' />
                <member value='&quot;CheapTickets&quot;' />
                <member value='&quot;Expedia&quot;' />
                <member value='&quot;FareSpotter&quot;' />
                <member value='&quot;Hipmunk&quot;' />
                <member value='&quot;Hotwire&quot;' />
                <member value='&quot;KAYAK&quot;' />
                <member value='&quot;LowCostAirlines&quot;' />
                <member value='&quot;LowFares&quot;' />
                <member value='&quot;OneTravel&quot;' />
                <member value='&quot;Orbitz&quot;' />
                <member value='&quot;Travelocity&quot;' />
                <member value='&quot;Trip.com&quot;' />
                <member value='&quot;TripAdvisor&quot;' />
                <member value='&quot;Vayama&quot;' />
                <member value='&quot;Webjet&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='aft_placement_report (copy)'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Addressable Page Views]' role='measure' type='quantitative'>
            </column>
            <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Addressable]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Addressable Page Views])/sum([Page Views])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Page Views])*1000' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
            </column>
            <column caption='Product Category Filter' datatype='string' name='[Calculation_1980322152539214]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Parameters].[Parameter 1] = [Product Category Type] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column caption='% Intent Media Traffic Share' datatype='real' default-format='p0.0%' name='[Calculation_2491231162412519]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_8460102172528083])/SUM([Not Pure Low Value Page Views])' scope-isolation='false' />
            </column>
            <column caption='Qualified after Unknown Hotel City %' datatype='real' name='[Calculation_3430322153857371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-Sum([Suppressed by Unknown Hotel City])/Sum([Addressable Page Views])' scope-isolation='false' />
            </column>
            <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Clicks per Interaction]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Interactions])' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;, [Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Interactions])/sum([Pages Served])' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='% Low Value' datatype='real' name='[Low Converting]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Not Pure Low Value Page Views])/Sum([Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Net Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='% Not Pure Low Value' datatype='real' name='[Not Pure Low Converting]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Not Pure Low Value Page Views])/Sum([Page Views])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Not Pure]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Not Pure Page Views])/Sum([Page Views])' />
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Placement]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Pages Served])*1000' />
            </column>
            <column datatype='string' name='[Site Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Publisher]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Qualified after All Business Rules %' datatype='real' name='[Suppressed by Business Rules %]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Addressable Page Views])/SUM([Calculation_8460102172528083])' scope-isolation='false' />
            </column>
            <column caption='Qualified after Other Business Rules %' datatype='real' name='[Suppressed by Business Rules Other %]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Addressable Page Views]) + SUM([Suppressed by Click Blackout]))/SUM([Calculation_8460102172528083])' scope-isolation='false' />
            </column>
            <column caption='Qualified after Cannibalization Threshold %' datatype='real' name='[Suppressed by Cannibalization Threshold %]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-Sum([Suppressed by Cannibalization Threshold])/Sum([Addressable Page Views])' scope-isolation='false' />
            </column>
            <column caption='Qualified after Click Blackout %' datatype='real' name='[Suppressed by Click Blackout %]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-Sum([Suppressed by Click Blackout])/Sum([Calculation_8460102172528083])' scope-isolation='false' />
            </column>
            <column caption='Qualified after No Valid Layout %' datatype='real' name='[Suppressed by No Valid Layout %]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-Sum([Suppressed by No Valid Layout])/Sum([Addressable Page Views])' scope-isolation='false' />
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1980322152539214]' derivation='None' name='[none:Calculation_1980322152539214:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Placement]' derivation='None' name='[none:Placement:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Filter]' derivation='None' name='[none:Site Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Addressable Page Views]' derivation='Sum' name='[sum:Addressable Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8460102172528083]' derivation='Sum' name='[sum:Calculation_8460102172528083:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue]' derivation='Sum' name='[sum:Net Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Addressable]' derivation='User' name='[usr:Addressable:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM]' derivation='User' name='[usr:Available eCPM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2491231162412519]' derivation='User' name='[usr:Calculation_2491231162412519:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3430322153857371]' derivation='User' name='[usr:Calculation_3430322153857371:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks per Interaction]' derivation='User' name='[usr:Clicks per Interaction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low Converting]' derivation='User' name='[usr:Low Converting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Pure Low Converting]' derivation='User' name='[usr:Not Pure Low Converting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Pure]' derivation='User' name='[usr:Not Pure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM]' derivation='User' name='[usr:Served eCPM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Suppressed by Business Rules %]' derivation='User' name='[usr:Suppressed by Business Rules %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Suppressed by Business Rules Other %]' derivation='User' name='[usr:Suppressed by Business Rules Other %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Suppressed by Cannibalization Threshold %]' derivation='User' name='[usr:Suppressed by Cannibalization Threshold %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Suppressed by Click Blackout %]' derivation='User' name='[usr:Suppressed by Click Blackout %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Suppressed by No Valid Layout %]' derivation='User' name='[usr:Suppressed by No Valid Layout %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[aft_placement_report (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Not Pure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Low Converting:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Not Pure Low Converting:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Calculation_2491231162412519:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Calculation_8460102172528083:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Suppressed by Click Blackout \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules Other \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Addressable:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Addressable Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Calculation_3430322153857371:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Suppressed by No Valid Layout \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Suppressed by Cannibalization Threshold \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Pages Served:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Clicks per Interaction:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[sum:Net Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Available eCPM:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_placement_report (copy)].[usr:Served eCPM:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_placement_report (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Page Views:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Not Pure:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Low Converting:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Not Pure Low Converting:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Calculation_2491231162412519:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Calculation_8460102172528083:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Suppressed by Click Blackout \%:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules Other \%:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules \%:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Addressable:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Addressable Page Views:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Calculation_3430322153857371:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Suppressed by No Valid Layout \%:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Suppressed by Cannibalization Threshold \%:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Pages Served:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Clicks per Interaction:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[sum:Net Media Revenue:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Available eCPM:qk]&quot;</bucket>
              <bucket>&quot;[aft_placement_report (copy)].[usr:Served eCPM:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Calculation_1980322152539214:nk]'>
            <groupfilter function='member' level='[none:Calculation_1980322152539214:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[aft_placement_report (copy)].[none:Date:qk]' included-values='in-range'>
            <min>#2014-01-16#</min>
            <max>#2014-01-16#</max>
          </filter>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Placement:nk]'>
            <groupfilter function='level-members' level='[none:Placement:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Site Filter:nk]'>
            <groupfilter function='member' level='[none:Site Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[aft_placement_report (copy)].[tdy:Date Axis:ok]' direction='DESC' />
          <slices>
            <column>[aft_placement_report (copy)].[:Measure Names]</column>
            <column>[aft_placement_report (copy)].[none:Calculation_1980322152539214:nk]</column>
            <column>[aft_placement_report (copy)].[none:Site Filter:nk]</column>
            <column>[aft_placement_report (copy)].[none:Placement:nk]</column>
            <column>[aft_placement_report (copy)].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[aft_placement_report (copy)].[:Measure Names]' value='98' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Not Pure:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Low Converting:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Suppressed by Click Blackout %:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Not Pure Low Converting:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Suppressed by Business Rules %:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Suppressed by No Valid Layout %:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Suppressed by Business Rules Other %:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Suppressed by Cannibalization Threshold %:qk]' value='p0.0%' />
            <format attr='text-format' field='[aft_placement_report (copy)].[usr:Calculation_3430322153857371:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[aft_placement_report (copy)].[:Measure Names]' value='72' />
            <format attr='width' field='[aft_placement_report (copy)].[none:Placement:nk]' value='72' />
            <format attr='width' field='[aft_placement_report (copy)].[none:Ad Unit:nk]' value='172' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[aft_placement_report (copy)].[:Measure Names]' value='center' />
            <format attr='font-weight' field='[aft_placement_report (copy)].[:Measure Names]' value='bold' />
            <format attr='font-weight' field='[aft_placement_report (copy)].[tdy:Date Axis:ok]' value='bold' />
            <format attr='font-weight' field='[aft_placement_report (copy)].[none:Placement:nk]' value='normal' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[aft_placement_report (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.10667884349823' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_placement_report (copy)].[tdy:Date Axis:ok] / ([aft_placement_report (copy)].[none:Product Category Type:nk] / ([Parameters].[Publisher] / ([aft_placement_report (copy)].[none:Site:nk] / ([aft_placement_report (copy)].[none:Ad Unit:nk] / [aft_placement_report (copy)].[none:Placement:nk])))))</rows>
        <cols>[aft_placement_report (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Readable Data'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card param='[aft_placement_report (copy)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Publisher]</field>
          <field>[mysql.40997.681632395834].[:Measure Names]</field>
          <field>[mysql.40997.681632395834].[none:Ad Unit:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:qk]</field>
          <field>[mysql.40997.681632395834].[none:Placement:nk]</field>
          <field>[mysql.40997.681632395834].[none:Site:nk]</field>
          <field>[placement_data].[none:Calculation_1980322152539214:nk]</field>
          <field>[placement_data].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CSV Download'>
      <cards>
        <edge name='left'>
          <strip size='129'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='300'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_placement_report (copy 2)].[none:Calculation_0190621154221425:ok]</field>
          <field>[aft_placement_report (copy 2)].[none:Calculation_4810621154352688:ok]</field>
          <field>[aft_placement_report (copy 2)].[none:Calculation_6680621154243594:ok]</field>
          <field>[aft_placement_report (copy 2)].[none:Product Category Type:nk]</field>
          <field>[aft_placement_report (copy 2)].[none:Product Cateogry Type:nk]</field>
          <field>[aft_placement_report (copy 2)].[none:Site Filter:nk]</field>
          <field>[mysql.40997.681632395834].[:Measure Names]</field>
          <field>[mysql.40997.681632395834].[none:Ad Unit:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:ok]</field>
          <field>[mysql.40997.681632395834].[none:Placement:nk]</field>
          <field>[mysql.40997.681632395834].[none:Site:nk]</field>
          <field>[mysql.40997.681632395834].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='DataWithoutSuppressionReasons'>
      <cards>
        <edge name='left'>
          <strip size='129'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='300'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_placement_report (copy 2)].[none:Calculation_0190621154221425:ok]</field>
          <field>[aft_placement_report (copy 2)].[none:Calculation_4810621154352688:ok]</field>
          <field>[aft_placement_report (copy 2)].[none:Calculation_6680621154243594:ok]</field>
          <field>[aft_placement_report (copy 2)].[none:Product Category Type:nk]</field>
          <field>[aft_placement_report (copy 2)].[none:Product Cateogry Type:nk]</field>
          <field>[aft_placement_report (copy 2)].[none:Site Filter:nk]</field>
          <field>[mysql.40997.681632395834].[:Measure Names]</field>
          <field>[mysql.40997.681632395834].[none:Ad Unit:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:ok]</field>
          <field>[mysql.40997.681632395834].[none:Placement:nk]</field>
          <field>[mysql.40997.681632395834].[none:Site:nk]</field>
          <field>[mysql.40997.681632395834].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Readable Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CSV Download' width='191'>
      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
      B50G/H+PiNrQcfpiRQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DataWithoutSuppressionReasons' width='191'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
