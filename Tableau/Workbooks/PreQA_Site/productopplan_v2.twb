<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.1015.1338                -->
  <repository-location id='OpPlanDashboard' path='/t/PreQA/workbooks' revision='1.1' site='PreQA' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Stacked By' datatype='string' name='[Aggregated By (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Products&quot;'>
        <calculation class='tableau' formula='&quot;Products&quot;' />
        <members>
          <member value='&quot;Products&quot;' />
          <member value='&quot;Revenue Source&quot;' />
          <member value='&quot;Geography&quot;' />
        </members>
      </column>
      <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
        <calculation class='tableau' formula='&quot;Month&quot;' />
        <members>
          <member value='&quot;Month&quot;' />
          <member value='&quot;Quarter&quot;' />
        </members>
      </column>
      <column caption='Launches per Exit Unit' datatype='real' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <members>
          <member value='1.0' />
          <member value='2.0' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_9770311195228026:nk]&#10;[Aggregated By (copy)]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;Op Plan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Actuals&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <datasource-dependencies datasource='vertica.42074.699999340279'>
        <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Custom SQL (intent_media)' inline='true' name='vertica.42074.699999340279' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-with-failover.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>-- right now nothing maps to Mobile Web&#13;&#10;-- later need to modify SSN to restrict to after reporting_start_date&#13;&#10;select *,&#13;&#10;        &apos;Actuals&apos; as data_source&#13;&#10;from (&#13;&#10;select&#13;&#10;        sum(gross_revenue) as gross_revenue,&#13;&#10;        count(distinct ad_name) as num_placements,&#13;&#10;        (case when ad_unit_type = &apos;List page (web)&apos; or ad_unit_type = &apos;Details page&apos; then &apos;On Page&apos;&#13;&#10;                when ad_unit_type = &apos;Exit unit&apos; then &apos;Exit Unit&apos;&#13;&#10;                when ad_unit_type = &apos;Home page&apos; then &apos;iFC&apos;&#13;&#10;                when ad_unit_type = &apos;Content page&apos; then &apos;Search Form&apos;&#13;&#10;                when ad_unit_type = &apos;List page (app)&apos; then &apos;Mobile App&apos;&#13;&#10;                when ad_unit_type = &apos;Media fill-in&apos; then &apos;MFI&apos;&#13;&#10;                when ad_unit_type = &apos;List page (GDS)&apos; then &apos;GDS&apos;&#13;&#10;        end) as &quot;Ad Unit Type&quot;,&#13;&#10;        (case when ad_name like &apos;%UK%&apos; then &apos;United Kingdom&apos; &#13;&#10;                when ad_name like &apos;%.ca%&apos; then &apos;Canada&apos;&#13;&#10;                when ad_name like &apos;%CA%&apos; then &apos;Canada&apos;&#13;&#10;                else &apos;United States&apos; end) as Country,&#13;&#10;        (case when ad_name like &apos;%UK%&apos; then &apos;Europe&apos;&#13;&#10;                else &apos;N. America&apos; end) as region,&#13;&#10;        (case when year(pub_start_date) = year then &apos;BD Pipeline&apos;&#13;&#10;                when year(pub_start_date) &lt;&lt; year and year(ad_start_date) = year then &apos;Installed Base Growth&apos;&#13;&#10;                when year(pub_start_date) &lt;&lt; year and year(ad_start_date) &lt;&lt; year then &apos;Installed Base&apos;&#13;&#10;        end) as &quot;Revenue Source&quot;,&#13;&#10;        (case when month(ad_start_date) = month and year(ad_start_date) = year then &apos;Launch&apos;&#13;&#10;                else &apos;Not Launch&apos;&#13;&#10;        end) as launch_type,&#13;&#10;        (case when aggregation_stack.Publisher = &apos;Air Fast Tickets&apos; then &apos;AirFastTickets&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Amoma&apos; then &apos;AMOMA&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Bookit&apos; then &apos;BookIt.com&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Expedia&apos; then &apos;Expedia, Inc.&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Travelocity on Expedia&apos; then &apos;Expedia, Inc.&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Kayak Software Corporation&apos; then &apos;KAYAK&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Orbitz&apos; then &apos;Orbitz Worldwide, Inc.&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Oversee&apos; then &apos;Oversee.net&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;room77.net&apos; then &apos;Room77&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Webjet Marketing North America LLC&apos; then &apos;Webjet Marketing North America&apos;&#13;&#10;                else aggregation_stack.Publisher&#13;&#10;        end) as Publisher,&#13;&#10;        (case when aggregation_stack.Publisher = &apos;Air Fast Tickets&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Airtickets&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Airtrade International&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Amoma&apos; then &apos;Lynne Hamilton&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%Bookit%&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;CheapAir&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Clicksco FZ LLC&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%Expedia%&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Fareportal Inc.&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Gogobot&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Hipmunk&apos; then &apos;Rudan Zhang&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;HotelReservations&apos; then &apos;Rudan Zhang&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Hotels.com&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Hotwire&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%Kayak%&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;lastminute.com&apos; then &apos;Lynne Hamilton&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;LBF Travel Inc.&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Odigeo&apos; then &apos;Lynne Hamilton&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%Orbitz%&apos; then &apos;Rudan Zhang&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%Oversee%&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%room77%&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Roomer Travel&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;ShareTrips&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Travelocity&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Travelocity on Expedia&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Travelport Galileo&apos; then &apos;Rudan Zhang&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Travelport Worldspan&apos; then &apos;Rudan Zhang&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;Travelzoo Inc.&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher = &apos;TripAdvisor Inc.&apos; then &apos;Jessica Jacobs&apos;&#13;&#10;                when aggregation_stack.Publisher like &apos;%Webjet%&apos; then &apos;Jonathan Naymark&apos;&#13;&#10;        end) as &quot;Deal Owner&quot;,&#13;&#10;        &quot;Path&quot;,&#13;&#10;        &quot;Product&quot;,&#13;&#10;        year,&#13;&#10;        month, &#13;&#10;        site&#13;&#10;from&#13;&#10;(&#13;&#10;-- SCA Flights&#13;&#10;select&#13;&#10;        &apos;Flight&apos; as &quot;Path&quot;,&#13;&#10;        &apos;SCA&apos; as &quot;Product&quot;,&#13;&#10;        sum(gross_revenue_sum) as gross_revenue,&#13;&#10;        lpt.page_type as ad_unit_type,&#13;&#10;        month(aggregation_level_date_in_et) as month,&#13;&#10;        year(aggregation_level_date_in_et) as year,&#13;&#10;        e.name as publisher,&#13;&#10;        au.name as ad_name,&#13;&#10;        s.name as site&#13;&#10;from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;left join intent_media_production.ad_units au on au.id = acmpa.ad_unit_id&#13;&#10;left join intent_media_production.legal_page_types lpt on lpt.id = au.legal_page_type_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date and aggregation_level_date_in_et &gt;&gt;= &apos;2014-01-01&apos;&#13;&#10;group by ad_unit_type, month, year, publisher, au.name, s.name&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;-- SCA Hotels&#13;&#10;select&#13;&#10;        &apos;Hotel&apos; as &quot;Path&quot;,&#13;&#10;        &apos;SCA&apos; as &quot;Product&quot;,&#13;&#10;        sum(gross_revenue_sum) as gross_revenue,&#13;&#10;        lpt.page_type as ad_unit_type,&#13;&#10;        month(aggregation_level_date_in_et) as month,&#13;&#10;        year(aggregation_level_date_in_et) as year,&#13;&#10;        e.name as publisher,&#13;&#10;        au.name as ad_name,&#13;&#10;        s.name as site&#13;&#10;from intent_media_production.hotel_ct_media_performance_aggregations hcmpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hcmpa.ad_unit_id&#13;&#10;left join intent_media_production.legal_page_types lpt on lpt.id = au.legal_page_type_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date and aggregation_level_date_in_et &gt;&gt;= &apos;2014-01-01&apos;&#13;&#10;group by ad_unit_type, month, year, publisher, au.name, s.name&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;-- SSN Hotels&#13;&#10;select&#13;&#10;&#9;&apos;Hotel&apos; as &quot;Path&quot;,&#13;&#10;&#9;&apos;SSN&apos; as &quot;Product&quot;,&#13;&#10;&#9;sum(gross_actual_cpc_sum) as gross_revenue,&#13;&#10;&#9;lpt.page_type as ad_unit_type,&#13;&#10;&#9;month(aggregation_level_date_in_et) as month,&#13;&#10;        year(aggregation_level_date_in_et) as year,&#13;&#10;        e.name as publisher,&#13;&#10;        au.name as ad_name,&#13;&#10;        s.name as site&#13;&#10;from intent_media_production.publisher_performance_report_aggregations ppra&#13;&#10;left join intent_media_production.ad_units au on au.id = ppra.ad_unit_id&#13;&#10;left join intent_media_production.legal_page_types lpt on lpt.id = au.legal_page_type_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &gt;&gt;= &apos;2014-01-01&apos;&#13;&#10;group by lpt.page_type, month, year, publisher, au.name, s.name&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;-- PPA Hotels&#13;&#10;select&#13;&#10;&#9;&apos;Hotel&apos; as &quot;Path&quot;,&#13;&#10;&#9;&apos;PPA&apos; as &quot;Product&quot;,&#13;&#10;&#9;sum(gross_revenue_sum) as gross_revenue,&#13;&#10;&#9;lpt.page_type as ad_unit_type,&#13;&#10;&#9;month(aggregation_level_date_in_et) as month,&#13;&#10;        year(aggregation_level_date_in_et) as year,&#13;&#10;        e.name as publisher,&#13;&#10;        au.name as ad_name,&#13;&#10;        s.name as site&#13;&#10;from intent_media_production.hotel_meta_media_performance_aggregations hmmpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hmmpa.ad_unit_id&#13;&#10;left join intent_media_production.legal_page_types lpt on lpt.id = au.legal_page_type_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date and aggregation_level_date_in_et &gt;&gt;= &apos;2014-01-01&apos;&#13;&#10;group by ad_unit_type, month, year, publisher, au.name, s.name&#13;&#10;) aggregation_stack&#13;&#10;&#13;&#10;left join  &#13;&#10;&#13;&#10;(select&#13;&#10;                min(reporting_start_date) as pub_start_date,&#13;&#10;                e.name as Publisher&#13;&#10;                from intent_media_production.ad_units au&#13;&#10;                left join intent_media_production.legal_page_types lpt on lpt.id = au.legal_page_type_id&#13;&#10;                left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;                left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;                group by Publisher) pub_date on aggregation_stack.publisher = pub_date.Publisher&#13;&#10;left join  &#13;&#10;&#13;&#10;(select&#13;&#10;                reporting_start_date as ad_start_date,&#13;&#10;                au.name&#13;&#10;                from intent_media_production.ad_units au&#13;&#10;                left join intent_media_production.legal_page_types lpt on lpt.id = au.legal_page_type_id&#13;&#10;                left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;                left join intent_media_production.entities e on e.id = s.publisher_id) ad_date on aggregation_stack.ad_name = ad_date.name&#13;&#10;                &#13;&#10;group by &quot;Ad Unit Type&quot;, year, month, country, aggregation_stack.Publisher, &quot;Path&quot;, &quot;Product&quot;, &quot;Revenue Source&quot;, &quot;Deal Owner&quot;, launch_type, region, site&#13;&#10;) actuals &#13;&#10;&#13;&#10;union &#13;&#10;&#13;&#10;select&#13;&#10;        sum(monthly_rev) as gross_revenue,&#13;&#10;        sum(probability) as num_placements,&#13;&#10;        ad_unit_type as &quot;Ad Unit Type&quot;,&#13;&#10;        country,&#13;&#10;        region,&#13;&#10;        category as &quot;Revenue Source&quot;,&#13;&#10;        (case when launch_month is not null then &apos;Launch&apos; else &apos;Not Launch&apos; end) as launch_type,&#13;&#10;        (case when publisher like &apos;%Expedia, Inc.%&apos; then &apos;Expedia, Inc.&apos;&#13;&#10;                when publisher like &apos;%Groupon, Inc.%&apos; then &apos;Groupon, Inc.&apos;&#13;&#10;                when publisher like &apos;%Orbitz Worldwide, Inc.%&apos; then &apos;Orbitz Worldwide, Inc.&apos;&#13;&#10;        else publisher end) as Publisher,        &#13;&#10;        deal_owner as &quot;Deal Owner&quot;,&#13;&#10;        path as &quot;Path&quot;,&#13;&#10;        product as &quot;Product&quot;,&#13;&#10;        year(date) as year,&#13;&#10;        month(date) as month,&#13;&#10;        site,&#13;&#10;        &apos;Op Plan&apos; as data_source&#13;&#10;from intent_media_sandbox_production.MS_op_plan&#13;&#10;group by &quot;Ad Unit Type&quot;, year, month, country, Publisher, &quot;Path&quot;, &quot;Product&quot;, &quot;Revenue Source&quot;, &quot;Deal Owner&quot;, launch_type, region, site&#13;&#10;</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='2015 Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Actual Revenue (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [year] = 2015 then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='2014 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [year] = 2014 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy 2):qk]&quot;' value='2014 Revenue' />
          <alias key='&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]&quot;' value='2015 Revenue - Op Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;' value='Implied MoM (or QoQ) Growth - Op Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[pcdf:sum:gross_revenue:qk:2]&quot;' value='% MoM' />
          <alias key='&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;' value='Actual MoM (or QoQ) Growth' />
          <alias key='&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;' value='Implied Revenue - Op Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]&quot;' value='Number of Launches' />
          <alias key='&quot;[vertica.42074.699999340279].[sum:gross_revenue:qk]&quot;' value='Sum of Revenue' />
          <alias key='&quot;[vertica.42074.699999340279].[sum:Previous Month Revenue (Actual) (copy):qk]&quot;' value='Actual Revenue' />
          <alias key='&quot;[vertica.42074.699999340279].[sum:Probability with Exit Units (copy):qk]&quot;' value='Actual Number of Launches' />
          <alias key='&quot;[vertica.42074.699999340279].[sum:Probability with Exit Units_Actual (copy):qk]&quot;' value='Implied Launches - Op Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;' value='Actual YoY Growth' />
          <alias key='&quot;[vertica.42074.699999340279].[usr:Calculation_5540312171426946:qk]&quot;' value='2015 Revenue - Actuals' />
          <alias key='&quot;[vertica.42074.699999340279].[usr:Rev_pct_delta (copy):qk]&quot;' value='     % Launches Delta vs. Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;' value='Implied YoY Growth - Op Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;' value='      % YoY Growth Delta vs. Plan' />
          <alias key='&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;' value='      % Delta vs. Plan' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Op Plan Revenue' datatype='real' default-format='n#,##0,,.000M;-#,##0,,.000M' name='[Actual Revenue (copy 2)]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [data_source]&#13;&#10;WHEN &quot;Op Plan&quot; THEN [gross_revenue]&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Stack Legend' datatype='string' name='[Calculation_1220312130956225]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Aggregated By (copy)] = &quot;Revenue Source&quot; then [Revenue Source]&#13;&#10;elseif [Parameters].[Aggregated By (copy)] = &quot;Products&quot; then [Calculation_9770311195228026]&#13;&#10;else [region]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Actual Revenue' datatype='real' name='[Calculation_1550311191705374]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [data_source]&#13;&#10;WHEN &quot;Actuals&quot; THEN [gross_revenue]&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Number of Publishers' datatype='integer' name='[Calculation_2320312152446354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Publisher])' scope-isolation='false' />
      </column>
      <column caption='Probability with Exit Units' datatype='real' name='[Calculation_3330311220503941]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Ad Unit Type]&#13;&#10;WHEN &quot;Exit Unit&quot; THEN [num_placements]*[Parameters].[Parameter 2]&#13;&#10;ELSE [num_placements]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
      </column>
      <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Last' datatype='integer' name='[Calculation_5230311203833884]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='Last()' scope-isolation='false'>
          <table-calc ordering-field='[vertica.42074.699999340279].[month]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Running Sum of 2015 Actuals' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5540312171426946]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF NOT ISNULL(SUM([Previous Month Revenue (Actual) (copy)] ))&#13;&#10;THEN RUNNING_SUM(SUM([Previous Month Revenue (Actual) (copy)] ))&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Date For Month_Rev' datatype='string' name='[Calculation_7010311193911418]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [month] = 1 THEN &quot;January&quot;&#13;&#10;ELSEIF [month] = 2 THEN &quot;February&quot;&#13;&#10;ELSEIF [month] = 3 THEN &quot;March&quot;&#13;&#10;ELSEIF [month] = 4 THEN &quot;April&quot;&#13;&#10;ELSEIF [month] = 5 THEN &quot;May&quot;&#13;&#10;ELSEIF [month] = 6 THEN &quot;June&quot;&#13;&#10;ELSEIF [month] = 7 THEN &quot;July&quot;&#13;&#10;ELSEIF [month] = 8 THEN &quot;August&quot;&#13;&#10;ELSEIF [month] = 9 THEN &quot;September&quot;&#13;&#10;ELSEIF [month] = 10 THEN &quot;October&quot;&#13;&#10;ELSEIF [month] = 11 THEN &quot;November&quot;&#13;&#10;ELSE &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Previous Month Revenue (Actual)' datatype='real' name='[Calculation_7320311213009793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='lookup(sum([gross_revenue]),last())' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percent off Op Plan' datatype='real' default-format='p0.00%' name='[Calculation_9400311211322977]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Calculation_1550311191705374])-sum([Actual Revenue (copy 2)]))/sum([Actual Revenue (copy 2)])' scope-isolation='false' />
      </column>
      <column caption='Products' datatype='string' name='[Calculation_9770311195228026]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Product] = &quot;PPA&quot; THEN &quot;PPA&quot;&#13;&#10;ELSEIF [Product] = &quot;SSN&quot; THEN &quot;SSN&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Car&quot; THEN &quot;SCA Cars&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Flight&quot; THEN &quot;SCA Flights&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Hotel&quot; THEN &quot;SCA Hotels&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Package&quot; THEN &quot;SCA Packages&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Launches per Site' datatype='real' name='[Launches per Publisher (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_3330311220503941])/countd([site])' scope-isolation='false' />
      </column>
      <column caption='New Date For Quarter_Rev' datatype='string' name='[New Date For Month_Rev (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [month]&lt;=3 THEN &quot;Q1&quot;&#13;&#10;ELSEIF [month]&gt;=4 and [month]&lt;=6 THEN &quot;Q2&quot;&#13;&#10;ELSEIF [month]&gt;=7 and [month]&lt;=9 THEN &quot;Q3&quot;&#13;&#10;ELSE &quot;Q4&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Publishers (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Publisher])' scope-isolation='false' />
      </column>
      <column caption='Launches per Publisher' datatype='real' name='[Number of Publishers (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_3330311220503941])/countd([Publisher])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Probability with Exit Units_Actual' datatype='real' name='[Probability with Exit Units (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [data_source] = &quot;Actuals&quot; then [Calculation_3330311220503941]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Number of Sites' datatype='integer' name='[Probability with Exit Units_Actual (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([site])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Probability with Exit Units_Actual (copy 3)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [data_source] = &quot;Actuals&quot; then [site]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Probability with Exit Units_Actual (copy 4)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [data_source] = &quot;Actuals&quot; then [Calculation_3330311220503941]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Probability with Exit Units_Op Plan' datatype='real' name='[Probability with Exit Units_Actual (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [data_source] = &quot;Op Plan&quot; then [Calculation_3330311220503941]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Rev_pct_delta (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
      </column>
      <column caption='launches_pct_delta' datatype='real' default-format='p0.00%' name='[Rev_pct_delta (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Probability with Exit Units (copy)])-sum([Probability with Exit Units_Actual (copy)]))/sum([Probability with Exit Units_Actual (copy)])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='p0.00%' name='[YoY Difference (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [data_source] = &quot;Actuals&quot; then &#13;&#10;([Previous Month Revenue (Actual) (copy)]-[2015 Revenue Actuals (copy 2)])/[2015 Revenue Actuals (copy 2)]&#13;&#10;else&#13;&#10;([2015 Revenue Actuals (copy)]-[2015 Revenue Actuals (copy 2)])/[2015 Revenue Actuals (copy 2)]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='YoY Difference_Op Plan' datatype='real' default-format='p0.00%' name='[YoY Difference_Actuals (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
      </column>
      <column caption='YoY_pct delta' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))' scope-isolation='false' />
      </column>
      <column caption='YoY Difference' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([gross_revenue])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
      </column>
      <column caption='Rev_pct_delta' datatype='real' default-format='p0.00%' name='[YoY_pct delta (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[gross_revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[month]' role='dimension' type='quantitative'>
      </column>
      <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[2015 Revenue Actuals (copy 2)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy 2):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[cum:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1220312130956225]' derivation='None' name='[none:Calculation_1220312130956225:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
      <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
      <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
      <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
      <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcdf:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[gross_revenue]' derivation='Sum' name='[pcdf:sum:gross_revenue:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcto:sum:2015 Revenue Actuals (copy):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[2015 Revenue Actuals (copy 2)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3330311220503941]' derivation='Sum' name='[sum:Calculation_3330311220503941:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Probability with Exit Units (copy)]' derivation='Sum' name='[sum:Probability with Exit Units (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Probability with Exit Units_Actual (copy)]' derivation='Sum' name='[sum:Probability with Exit Units_Actual (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[gross_revenue]' derivation='Sum' name='[sum:gross_revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5540312171426946]' derivation='User' name='[usr:Calculation_5540312171426946:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Rev_pct_delta (copy)]' derivation='User' name='[usr:Rev_pct_delta (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[YoY Difference_Actuals (copy)]' derivation='User' name='[usr:YoY Difference_Actuals (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[YoY Difference_Op Plan (copy 2)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[YoY_pct delta (copy)]' derivation='User' name='[usr:YoY_pct delta (copy):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\Op Plan Dashboard.tde' schema='Extract' tablename='Extract' update-time='3/13/15 12:26:20 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[2015 Actual Revenue (copy)]' formula='if [year] = 2015 then [gross_revenue]&#13;&#10;end' />
            <calculation column='[2015 Revenue Actuals (copy 2)]' formula='if [year] = 2014 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' />
            <calculation column='[2015 Revenue Actuals (copy)]' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' />
            <calculation column='[Actual Revenue (copy 2)]' formula='CASE [data_source]&#13;&#10;WHEN &quot;Op Plan&quot; THEN [gross_revenue]&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_1550311191705374]' formula='CASE [data_source]&#13;&#10;WHEN &quot;Actuals&quot; THEN [gross_revenue]&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_7010311193911418]' formula='if [month] = 1 THEN &quot;January&quot;&#13;&#10;ELSEIF [month] = 2 THEN &quot;February&quot;&#13;&#10;ELSEIF [month] = 3 THEN &quot;March&quot;&#13;&#10;ELSEIF [month] = 4 THEN &quot;April&quot;&#13;&#10;ELSEIF [month] = 5 THEN &quot;May&quot;&#13;&#10;ELSEIF [month] = 6 THEN &quot;June&quot;&#13;&#10;ELSEIF [month] = 7 THEN &quot;July&quot;&#13;&#10;ELSEIF [month] = 8 THEN &quot;August&quot;&#13;&#10;ELSEIF [month] = 9 THEN &quot;September&quot;&#13;&#10;ELSEIF [month] = 10 THEN &quot;October&quot;&#13;&#10;ELSEIF [month] = 11 THEN &quot;November&quot;&#13;&#10;ELSE &quot;December&quot;&#13;&#10;END' />
            <calculation column='[Calculation_9770311195228026]' formula='IF [Product] = &quot;PPA&quot; THEN &quot;PPA&quot;&#13;&#10;ELSEIF [Product] = &quot;SSN&quot; THEN &quot;SSN&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Car&quot; THEN &quot;SCA Cars&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Flight&quot; THEN &quot;SCA Flights&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Hotel&quot; THEN &quot;SCA Hotels&quot;&#13;&#10;ELSEIF [Product] = &quot;SCA&quot; AND [Path] = &quot;Package&quot; THEN &quot;SCA Packages&quot;&#13;&#10;END' />
            <calculation column='[New Date For Month_Rev (copy)]' formula='IF [month]&lt;=3 THEN &quot;Q1&quot;&#13;&#10;ELSEIF [month]&gt;=4 and [month]&lt;=6 THEN &quot;Q2&quot;&#13;&#10;ELSEIF [month]&gt;=7 and [month]&lt;=9 THEN &quot;Q3&quot;&#13;&#10;ELSE &quot;Q4&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Previous Month Revenue (Actual) (copy)]' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' />
            <calculation column='[Probability with Exit Units_Actual (copy 3)]' formula='IF [data_source] = &quot;Actuals&quot; then [site]&#13;&#10;END' />
            <calculation column='[YoY Difference (copy)]' formula='if [data_source] = &quot;Actuals&quot; then &#13;&#10;([Previous Month Revenue (Actual) (copy)]-[2015 Revenue Actuals (copy 2)])/[2015 Revenue Actuals (copy 2)]&#13;&#10;else&#13;&#10;([2015 Revenue Actuals (copy)]-[2015 Revenue Actuals (copy 2)])/[2015 Revenue Actuals (copy 2)]&#13;&#10;end' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6122' timestamp-start='2015-03-13 00:26:20.486000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.257618' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:data_source:nk]&#10;[none:Revenue Source:nk]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;Op Plan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Actuals&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:data_source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actuals&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Op Plan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Calculation_1220312130956225:nk]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy 2):qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_5540312171426946:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Publisher:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Fareportal Inc.&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rome2rio&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;\&quot;Orbitz Worldwide, Inc.\&quot;&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;getaroom.com&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;room77.com&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMOMA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HotelReservations&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Skyscanner Ltd.&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Expedia Affiliate Network&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Orbitz Worldwide, Inc.&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Vegas.com&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Concur Technologies&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;LBF Travel Inc.&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;TravelSupermarket&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;CheapAir&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lastminute.com&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Travelport LTD&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;BookIt.com&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hotels.com&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Thomas Cook&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;FlightNetwork&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Room 77&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AirFastTickets&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gogobot&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Roomer Travel&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Expedia, Inc.&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Priceline Partner Network&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;EasyToBook&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Media Market Group LLC&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Travelzoo Inc.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Clicksco FZ LLC&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;LateRooms&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Travelport Worldspan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Expedia Inc. IAB&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oversee.net&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Webjet Marketing North America&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bravofly Rumbo Group&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hotwire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Travelocity&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fareportal&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Priceline.com&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Easyvoyage&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Odigeo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;TripAdvisor Inc.&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;eDreams Odigeo&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;On the Beach Ltd&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Unnamed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Airtickets&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Groupon, Inc.&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;RoomerTravel&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Budget Places&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;KAYAK&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Travelport Galileo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Airtrade International&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hipmunk&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ShareTrips&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:data_source:nk]&#10;[none:Calculation_1220312130956225:nk]' type='palette'>
            <map to='#006ba4'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Europe&quot;</bucket>
              </multibucket>
            </map>
            <map to='#006ba4'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Installed Base&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1c5795'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;SCA Flights&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1c70ae'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;SCA Hotels&quot;</bucket>
              </multibucket>
            </map>
            <map to='#3583b6'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;PPA&quot;</bucket>
              </multibucket>
            </map>
            <map to='#393939'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Installed Base Growth&quot;</bucket>
              </multibucket>
            </map>
            <map to='#595959'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Europe&quot;</bucket>
              </multibucket>
            </map>
            <map to='#595959'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;SCA Flights&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5da5cd'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;SSN&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5f9ed1'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Installed Base Growth&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5f9ed1'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;N. America&quot;</bucket>
              </multibucket>
            </map>
            <map to='#616161'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Installed Base&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6fb8d9'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;SCA Packages&quot;</bucket>
              </multibucket>
            </map>
            <map to='#898989'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;N. America&quot;</bucket>
              </multibucket>
            </map>
            <map to='#898989'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;SCA Hotels&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8f8f8f'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;BD Pipeline&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2c8ec'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;BD Pipeline&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2c8ec'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;SCA Cars&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2d0dc'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Unnamed&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ababab'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;PPA&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>%null%</bucket>
              </multibucket>
            </map>
            <map to='#cfcfcf'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;SSN&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#006ba4'>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.42074.699999340279].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.42074.699999340279].[pcto:sum:2015 Revenue Actuals (copy):qk:2]&quot;</bucket>
            </map>
            <map to='#595959'>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
            </map>
            <map to='#595959'>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_5540312171426946:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </map>
            <map to='#a2c8ec'>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:data_source:nk]&#10;[none:Publisher:nk]' type='palette'>
            <map to='#1c5f9e'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Orbitz Worldwide, Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1c70ae'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Travelzoo Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1e1e1e'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Expedia, Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1f77b4'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;\&quot;Orbitz Worldwide, Inc.\&quot;&quot;</bucket>
              </multibucket>
            </map>
            <map to='#26456e'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Expedia, Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#404040'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Orbitz Worldwide, Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#418dbb'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Hotels.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#616161'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Travelzoo Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#69afd5'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Unnamed&quot;</bucket>
              </multibucket>
            </map>
            <map to='#737373'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;KAYAK&quot;</bucket>
              </multibucket>
            </map>
            <map to='#75c0de'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;KAYAK&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7c7c7c'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Hotels.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8f8f8f'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;lastminute.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#999999'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Hotwire&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2d0dc'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Groupon, Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2d0dc'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;lastminute.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2d0dc'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;LateRooms&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;AMOMA&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;BookIt.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Bravofly Rumbo Group&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Budget Places&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Concur Technologies&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;EasyToBook&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Easyvoyage&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;eDreams Odigeo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Expedia Affiliate Network&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Fareportal&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;FlightNetwork&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;getaroom.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Gogobot&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Hipmunk&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Media Market Group LLC&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;On the Beach Ltd&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Oversee.net&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Priceline Partner Network&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Priceline.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Rome2rio&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Room 77&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;RoomerTravel&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Skyscanner Ltd.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Thomas Cook&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Travelport LTD&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;TravelSupermarket&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;Op Plan&quot;</bucket>
                <bucket>&quot;Vegas.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;AirFastTickets&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Airtickets&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Airtrade International&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;AMOMA&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;BookIt.com&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Clicksco FZ LLC&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Expedia Inc. IAB&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Fareportal Inc.&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Gogobot&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Hipmunk&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;HotelReservations&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Odigeo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Oversee.net&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Roomer Travel&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Travelport Galileo&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3c3c3'>
              <multibucket>
                <bucket>&quot;Actuals&quot;</bucket>
                <bucket>&quot;Travelport Worldspan&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Stacked By' datatype='string' name='[Aggregated By (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Products&quot;'>
          <calculation class='tableau' formula='&quot;Products&quot;' />
          <members>
            <member value='&quot;Products&quot;' />
            <member value='&quot;Revenue Source&quot;' />
            <member value='&quot;Geography&quot;' />
          </members>
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
          <calculation class='tableau' formula='&quot;Month&quot;' />
          <members>
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Launches per Exit Unit' datatype='real' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <members>
            <member value='1.0' />
            <member value='2.0' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Launches' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Stack Legend' datatype='string' name='[Calculation_1220312130956225]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Aggregated By (copy)] = &quot;Revenue Source&quot; then [Revenue Source]&#13;&#10;elseif [Parameters].[Aggregated By (copy)] = &quot;Products&quot; then [Calculation_9770311195228026]&#13;&#10;else [region]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Probability with Exit Units' datatype='real' name='[Calculation_3330311220503941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Ad Unit Type]&#13;&#10;WHEN &quot;Exit Unit&quot; THEN [num_placements]*[Parameters].[Parameter 2]&#13;&#10;ELSE [num_placements]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[gross_revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[launch_type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1220312130956225]' derivation='None' name='[none:Calculation_1220312130956225:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[launch_type]' derivation='None' name='[none:launch_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3330311220503941]' derivation='Sum' name='[sum:Calculation_3330311220503941:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gross_revenue]' derivation='Sum' name='[sum:gross_revenue:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' filter-group='17'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SCA Cars&quot;</bucket>
              <bucket>&quot;SCA Packages&quot;</bucket>
              <bucket>&quot;SSN&quot;</bucket>
              <bucket>&quot;PPA&quot;</bucket>
              <bucket>&quot;SCA Hotels&quot;</bucket>
              <bucket>&quot;SCA Flights&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;BD Pipeline&quot;</bucket>
              <bucket>&quot;Unnamed&quot;</bucket>
              <bucket>&quot;Installed Base Growth&quot;</bucket>
              <bucket>&quot;Installed Base&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]' filter-group='21'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]' filter-group='18'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]' filter-group='19'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]' filter-group='20'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]' filter-group='22'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <sort class='computed' column='[vertica.42074.699999340279].[none:data_source:nk]' direction='DESC' using='[vertica.42074.699999340279].[sum:gross_revenue:qk]'>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:launch_type:nk]'>
            <groupfilter function='member' level='[none:launch_type:nk]' member='&quot;Launch&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]' filter-group='23'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
            <column>[vertica.42074.699999340279].[none:launch_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:data_source:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.42074.699999340279].[none:data_source:nk]' />
              <color column='[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Launches_calc' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Publishers' datatype='integer' name='[Calculation_2320312152446354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Publisher])' scope-isolation='false' />
            </column>
            <column caption='Probability with Exit Units' datatype='real' name='[Calculation_3330311220503941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Ad Unit Type]&#13;&#10;WHEN &quot;Exit Unit&quot; THEN [num_placements]*[Parameters].[Parameter 2]&#13;&#10;ELSE [num_placements]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column caption='Launches per Site' datatype='real' name='[Launches per Publisher (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_3330311220503941])/countd([site])' scope-isolation='false' />
            </column>
            <column caption='Launches per Publisher' datatype='real' name='[Number of Publishers (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_3330311220503941])/countd([Publisher])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Sites' datatype='integer' name='[Probability with Exit Units_Actual (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([site])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[launch_type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[launch_type]' derivation='None' name='[none:launch_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3330311220503941]' derivation='Sum' name='[sum:Calculation_3330311220503941:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2320312152446354]' derivation='User' name='[usr:Calculation_2320312152446354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Launches per Publisher (copy)]' derivation='User' name='[usr:Launches per Publisher (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Publishers (copy)]' derivation='User' name='[usr:Number of Publishers (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Probability with Exit Units_Actual (copy 2)]' derivation='User' name='[usr:Probability with Exit Units_Actual (copy 2):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_2320312152446354:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Number of Publishers (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Probability with Exit Units_Actual (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Launches per Publisher (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:Calculation_3330311220503941:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_2320312152446354:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Number of Publishers (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Probability with Exit Units_Actual (copy 2):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' filter-group='17'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]' filter-group='21'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]' filter-group='18'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]' filter-group='19'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]' filter-group='20'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]' filter-group='22'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <sort class='natural' column='[vertica.42074.699999340279].[none:data_source:nk]' direction='DESC' />
          <filter class='categorical' column='[vertica.42074.699999340279].[none:launch_type:nk]'>
            <groupfilter function='member' level='[none:launch_type:nk]' member='&quot;Launch&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]' filter-group='23'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
            <column>[vertica.42074.699999340279].[none:launch_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='67' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.42074.699999340279].[:Measure Names]' value='200' />
            <format attr='font-size' data-class='subtotal' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[:Measure Names]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Launches_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Number of Publishers' datatype='integer' name='[Calculation_2320312152446354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Publisher])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='Probability with Exit Units_Actual' datatype='real' name='[Probability with Exit Units (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [data_source] = &quot;Actuals&quot; then [Calculation_3330311220503941]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Number of Sites' datatype='integer' name='[Probability with Exit Units_Actual (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([site])' scope-isolation='false' />
            </column>
            <column caption='Probability with Exit Units_Op Plan' datatype='real' name='[Probability with Exit Units_Actual (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [data_source] = &quot;Op Plan&quot; then [Calculation_3330311220503941]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column caption='launches_pct_delta' datatype='real' default-format='p0.00%' name='[Rev_pct_delta (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Probability with Exit Units (copy)])-sum([Probability with Exit Units_Actual (copy)]))/sum([Probability with Exit Units_Actual (copy)])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[launch_type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[launch_type]' derivation='None' name='[none:launch_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Probability with Exit Units (copy)]' derivation='Sum' name='[sum:Probability with Exit Units (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Probability with Exit Units_Actual (copy)]' derivation='Sum' name='[sum:Probability with Exit Units_Actual (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2320312152446354]' derivation='User' name='[usr:Calculation_2320312152446354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Probability with Exit Units_Actual (copy 2)]' derivation='User' name='[usr:Probability with Exit Units_Actual (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rev_pct_delta (copy)]' derivation='User' name='[usr:Rev_pct_delta (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:Probability with Exit Units (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:Probability with Exit Units_Actual (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Rev_pct_delta (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_2320312152446354:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Probability with Exit Units_Actual (copy 2):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:Probability with Exit Units (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:Probability with Exit Units_Actual (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Rev_pct_delta (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_2320312152446354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:launch_type:nk]'>
            <groupfilter function='member' level='[none:launch_type:nk]' member='&quot;Launch&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
            <column>[vertica.42074.699999340279].[none:launch_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='67' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.42074.699999340279].[:Measure Names]' value='200' />
            <format attr='font-size' data-class='subtotal' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[:Measure Names]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pub Concentration' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[gross_revenue]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gross_revenue]' derivation='Sum' name='[pcto:sum:gross_revenue:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[gross_revenue]' derivation='Sum' name='[sum:gross_revenue:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[vertica.42074.699999340279].[none:Publisher:nk]' direction='ASC' using='[vertica.42074.699999340279].[sum:gross_revenue:qk]'>
          </sort>
          <sort class='computed' column='[vertica.42074.699999340279].[none:data_source:nk]' direction='DESC' using='[vertica.42074.699999340279].[sum:gross_revenue:qk]'>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.42074.699999340279].[pcto:sum:gross_revenue:qk:2]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[vertica.42074.699999340279].[pcto:sum:gross_revenue:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.42074.699999340279].[pcto:sum:gross_revenue:qk:2]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.42074.699999340279].[pcto:sum:gross_revenue:qk:2]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:data_source:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Publisher:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.42074.699999340279].[none:data_source:nk]' />
              <color column='[vertica.42074.699999340279].[none:Publisher:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[pcto:sum:gross_revenue:qk:2]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Pub Concentration_op' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcto:sum:2015 Revenue Actuals (copy):qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:data_source:nk]'>
            <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Op Plan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:data_source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.42074.699999340279].[none:Publisher:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[pcto:sum:2015 Revenue Actuals (copy):qk:2]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rev' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Stack Legend' datatype='string' name='[Calculation_1220312130956225]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Aggregated By (copy)] = &quot;Revenue Source&quot; then [Revenue Source]&#13;&#10;elseif [Parameters].[Aggregated By (copy)] = &quot;Products&quot; then [Calculation_9770311195228026]&#13;&#10;else [region]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[gross_revenue]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1220312130956225]' derivation='None' name='[none:Calculation_1220312130956225:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[gross_revenue]' derivation='Sum' name='[sum:gross_revenue:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SCA Cars&quot;</bucket>
              <bucket>&quot;SCA Packages&quot;</bucket>
              <bucket>&quot;SSN&quot;</bucket>
              <bucket>&quot;PPA&quot;</bucket>
              <bucket>&quot;SCA Hotels&quot;</bucket>
              <bucket>&quot;SCA Flights&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;BD Pipeline&quot;</bucket>
              <bucket>&quot;Unnamed&quot;</bucket>
              <bucket>&quot;Installed Base Growth&quot;</bucket>
              <bucket>&quot;Installed Base&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <sort class='computed' column='[vertica.42074.699999340279].[none:data_source:nk]' direction='DESC' using='[vertica.42074.699999340279].[sum:gross_revenue:qk]'>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.42074.699999340279].[sum:gross_revenue:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[vertica.42074.699999340279].[sum:gross_revenue:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.42074.699999340279].[sum:gross_revenue:qk]' scope='rows' value='true' />
            <format attr='width' field='[vertica.42074.699999340279].[sum:gross_revenue:qk]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.42074.699999340279].[none:data_source:nk]' value='59' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.42074.699999340279].[sum:gross_revenue:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:data_source:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.42074.699999340279].[none:data_source:nk]' />
              <color column='[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[sum:gross_revenue:qk]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Rev Trajectory vs Plan' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2014 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2014 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Running Sum of 2015 Actuals' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5540312171426946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT ISNULL(SUM([Previous Month Revenue (Actual) (copy)] ))&#13;&#10;THEN RUNNING_SUM(SUM([Previous Month Revenue (Actual) (copy)] ))&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy 2)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy 2):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[cum:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5540312171426946]' derivation='User' name='[usr:Calculation_5540312171426946:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_5540312171426946:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]' filter-group='15'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Path:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]' filter-group='16'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.42074.699999340279].[Multiple Values]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[vertica.42074.699999340279].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.42074.699999340279].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='133' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.42074.699999340279].[Multiple Values]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[Multiple Values]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.42074.699999340279].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.42074.699999340279].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[Multiple Values]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rev calc_yoy_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='YoY Difference_Op Plan' datatype='real' default-format='p0.00%' name='[YoY Difference_Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='YoY_pct delta' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Actuals (copy)]' derivation='User' name='[usr:YoY Difference_Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Op Plan (copy 2)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy 2):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rev calcs_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[gross_revenue]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gross_revenue]' derivation='Sum' name='[pcdf:sum:gross_revenue:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[gross_revenue]' derivation='Sum' name='[sum:gross_revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[pcdf:sum:gross_revenue:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:gross_revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Rev_alt'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Actual Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.00%' name='[YoY Difference (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [data_source] = &quot;Actuals&quot; then &#13;&#10;([Previous Month Revenue (Actual) (copy)]-[2015 Revenue Actuals (copy 2)])/[2015 Revenue Actuals (copy 2)]&#13;&#10;else&#13;&#10;([2015 Revenue Actuals (copy)]-[2015 Revenue Actuals (copy 2)])/[2015 Revenue Actuals (copy 2)]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='YoY Difference_Op Plan' datatype='real' default-format='p0.00%' name='[YoY Difference_Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='YoY Difference' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([gross_revenue])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcdf:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Actual Revenue (copy)]' derivation='Sum' name='[sum:2015 Actual Revenue (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference (copy)]' derivation='Sum' name='[sum:YoY Difference (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Actuals (copy)]' derivation='User' name='[usr:YoY Difference_Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Op Plan (copy)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:2015 Actual Revenue (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:YoY Difference (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Actual Revenue (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:YoY Difference (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.42074.699999340279].[:Measure Names]' value='284' />
            <format attr='font-size' data-class='subtotal' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='12' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-size' scope='cols' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-size' scope='rows' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Rev_calc' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Op Plan' datatype='real' default-format='p0.00%' name='[YoY Difference_Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='YoY_pct delta' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))' scope-isolation='false' />
            </column>
            <column caption='Rev_pct_delta' datatype='real' default-format='p0.00%' name='[YoY_pct delta (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcdf:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Actuals (copy)]' derivation='User' name='[usr:YoY Difference_Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Op Plan (copy 2)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY_pct delta (copy)]' derivation='User' name='[usr:YoY_pct delta (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:Previous Month Revenue (Actual) (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.42074.699999340279].[:Measure Names]' value='284' />
            <format attr='font-size' data-class='subtotal' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='12' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-size' scope='cols' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-size' scope='rows' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rev_calc_mom'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcdf:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]' />
              <text column='[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rev_calc_tot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Op Plan' datatype='real' default-format='p0.00%' name='[YoY Difference_Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='YoY_pct delta' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))' scope-isolation='false' />
            </column>
            <column caption='Rev_pct_delta' datatype='real' default-format='p0.00%' name='[YoY_pct delta (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Actuals (copy)]' derivation='User' name='[usr:YoY Difference_Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Op Plan (copy 2)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY_pct delta (copy)]' derivation='User' name='[usr:YoY_pct delta (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:Previous Month Revenue (Actual) (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rev_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Actual Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.00%' name='[Rev_pct_delta (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([gross_revenue])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Rev_pct_delta' datatype='real' default-format='p0.00%' name='[YoY_pct delta (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[data_source]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Actual Revenue (copy)]' derivation='Sum' name='[sum:2015 Actual Revenue (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rev_pct_delta (copy 2)]' derivation='User' name='[usr:Rev_pct_delta (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Op Plan (copy)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY_pct delta (copy)]' derivation='User' name='[usr:YoY_pct delta (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[sum:2015 Actual Revenue (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Rev_pct_delta (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Actual Revenue (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Rev_pct_delta (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>([vertica.42074.699999340279].[none:Calculation_4560311194028184:nk] / [vertica.42074.699999340279].[none:data_source:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Trajectory_calc' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Actuals' datatype='real' default-format='p0.00%' name='[Calculation_4230311214427331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column caption='YoY Difference_Op Plan' datatype='real' default-format='p0.00%' name='[YoY Difference_Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))/sum([2015 Revenue Actuals (copy 2)])' scope-isolation='false' />
            </column>
            <column caption='YoY_pct delta' datatype='real' default-format='p0.00%' name='[YoY Difference_Op Plan (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/(sum([2015 Revenue Actuals (copy)])-sum([2015 Revenue Actuals (copy 2)]))' scope-isolation='false' />
            </column>
            <column caption='Rev_pct_delta' datatype='real' default-format='p0.00%' name='[YoY_pct delta (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Previous Month Revenue (Actual) (copy)])-sum([2015 Revenue Actuals (copy)]))/sum([2015 Revenue Actuals (copy)])' scope-isolation='false' />
            </column>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[pcdf:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4230311214427331]' derivation='User' name='[usr:Calculation_4230311214427331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Actuals (copy)]' derivation='User' name='[usr:YoY Difference_Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Difference_Op Plan (copy 2)]' derivation='User' name='[usr:YoY Difference_Op Plan (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY_pct delta (copy)]' derivation='User' name='[usr:YoY_pct delta (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY_pct delta (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Actuals (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:Calculation_4230311214427331:qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[usr:YoY Difference_Op Plan (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[pcdf:sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]' filter-group='15'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Path:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]' filter-group='16'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.42074.699999340279].[none:year:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:year:qk]</column>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.42074.699999340279].[:Measure Names]' value='220' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[:Measure Names]' value='10' />
            <format attr='display' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.42074.699999340279].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[:Measure Names]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trajectory_old'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2014 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2014 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Stack Legend' datatype='string' name='[Calculation_1220312130956225]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Parameters].[Aggregated By (copy)] = &quot;Revenue Source&quot; then [Revenue Source]&#13;&#10;elseif [Parameters].[Aggregated By (copy)] = &quot;Products&quot; then [Calculation_9770311195228026]&#13;&#10;else [region]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Running Sum of 2015 Actuals' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5540312171426946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT ISNULL(SUM([Previous Month Revenue (Actual) (copy)] ))&#13;&#10;THEN RUNNING_SUM(SUM([Previous Month Revenue (Actual) (copy)] ))&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column caption='2015 Actual Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Previous Month Revenue (Actual) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Actuals&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy 2)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy 2):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Previous Month Revenue (Actual) (copy)]' derivation='Sum' name='[cum:sum:Previous Month Revenue (Actual) (copy):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1220312130956225]' derivation='None' name='[none:Calculation_1220312130956225:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5540312171426946]' derivation='User' name='[usr:Calculation_5540312171426946:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.42074.699999340279].[usr:Calculation_5540312171426946:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.42074.699999340279].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[cum:sum:Previous Month Revenue (Actual) (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.42074.699999340279].[sum:2015 Revenue Actuals (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[:Measure Names]</column>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.42074.699999340279].[Multiple Values]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[vertica.42074.699999340279].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.42074.699999340279].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='133' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.42074.699999340279].[Multiple Values]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
            <format attr='font-size' field='[vertica.42074.699999340279].[Multiple Values]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.42074.699999340279].[:Measure Names]' />
              <color column='[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[Multiple Values]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trajectory_old2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL (intent_media)' name='vertica.42074.699999340279' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.42074.699999340279'>
            <column caption='2015 Op Plan Revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[2015 Revenue Actuals (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [year] = 2015 and [data_source] = &quot;Op Plan&quot; then [gross_revenue]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Ad Unit Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Date Axis_Rev' datatype='string' name='[Calculation_4560311194028184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Month&quot; THEN [Calculation_7010311193911418]&#13;&#10;WHEN &quot;Quarter&quot; THEN [New Date For Month_Rev (copy)]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Deal Owner]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Path]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Revenue Source]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[2015 Revenue Actuals (copy)]' derivation='Sum' name='[cum:sum:2015 Revenue Actuals (copy):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Ad Unit Type]' derivation='None' name='[none:Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4560311194028184]' derivation='None' name='[none:Calculation_4560311194028184:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deal Owner]' derivation='None' name='[none:Deal Owner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Revenue Source]' derivation='None' name='[none:Revenue Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Geography' datatype='string' name='[region]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Ad Unit Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Deal Owner:nk]'>
            <groupfilter function='level-members' level='[none:Deal Owner:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Path:nk]'>
            <groupfilter function='level-members' level='[none:Path:nk]' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Product:nk]'>
            <groupfilter function='level-members' level='[none:Product:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:Revenue Source:nk]'>
            <groupfilter function='level-members' level='[none:Revenue Source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.42074.699999340279].[none:region:nk]'>
            <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.42074.699999340279].[none:Revenue Source:nk]</column>
            <column>[vertica.42074.699999340279].[none:Product:nk]</column>
            <column>[vertica.42074.699999340279].[none:Path:nk]</column>
            <column>[vertica.42074.699999340279].[none:Ad Unit Type:nk]</column>
            <column>[vertica.42074.699999340279].[none:Deal Owner:nk]</column>
            <column>[vertica.42074.699999340279].[none:Country:nk]</column>
            <column>[vertica.42074.699999340279].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='133' />
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.42074.699999340279].[none:Product:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]</rows>
        <cols>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Launches by Month' tab-color='#f2e6e6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial'>Launches Per Month- Op Plan vs. Actuals</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1400' maxwidth='2000' minheight='1400' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='20' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2858' id='19' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='97142' id='5' param='horz' type='layout-flow' w='100000' x='0' y='2858'>
              <zone h='97142' id='3' type='layout-basic' w='92000' x='0' y='2858'>
                <zone h='81449' id='1' name='Launches' w='83300' x='8700' y='2858'>
                </zone>
                <zone h='15693' id='17' name='Launches_calc' w='92000' x='0' y='84307'>
                </zone>
                <zone h='81449' id='18' type='empty' w='8700' x='0' y='2858'>
                </zone>
              </zone>
              <zone fixed-size='160' h='97142' id='4' is-fixed='true' param='vert' type='layout-flow' w='8000' x='92000' y='2858'>
                <zone h='3643' id='14' param='[Parameters].[Parameter 1]' type='paramctrl' w='8000' x='92000' y='2858'>
                </zone>
                <zone h='3643' id='15' param='[Parameters].[Parameter 2]' type='paramctrl' w='8000' x='92000' y='6501'>
                </zone>
                <zone h='3643' id='16' param='[Parameters].[Aggregated By (copy)]' type='paramctrl' w='8000' x='92000' y='10144'>
                </zone>
                <zone h='13429' id='13' name='Launches' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' w='8000' x='92000' y='13787'>
                </zone>
                <zone h='13643' id='6' name='Launches' param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' w='8000' x='92000' y='27216'>
                </zone>
                <zone h='11072' id='7' name='Launches' param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' w='8000' x='92000' y='40859'>
                </zone>
                <zone h='8501' id='8' name='Launches' param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' w='8000' x='92000' y='51931'>
                </zone>
                <zone h='7215' id='9' name='Launches' param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' w='8000' x='92000' y='60432'>
                </zone>
                <zone h='11072' id='10' name='Launches' param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' w='8000' x='92000' y='67647'>
                </zone>
                <zone h='9786' id='11' name='Launches' param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' w='8000' x='92000' y='78719'>
                </zone>
                <zone h='5929' id='12' name='Launches' param='[vertica.42074.699999340279].[none:region:nk]' type='filter' w='8000' x='92000' y='88505'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Publisher Concentration' tab-color='#eaeed3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial'>Publisher Concentration - Op Plan vs. Actuals</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1200' maxwidth='1800' minheight='1200' minwidth='1800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3332' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96668' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3332'>
              <zone h='96668' id='3' type='layout-basic' w='86722' x='0' y='3332'>
                <zone h='96668' id='1' name='Pub Concentration' w='86722' x='0' y='3332'>
                </zone>
              </zone>
              <zone fixed-size='239' h='96668' id='4' is-fixed='true' param='vert' type='layout-flow' w='13278' x='86722' y='3332'>
                <zone h='4249' id='10' param='[Parameters].[Parameter 1]' type='paramctrl' w='13278' x='86722' y='3332'>
                </zone>
                <zone h='9916' id='6' name='Pub Concentration' param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' w='13278' x='86722' y='7581'>
                </zone>
                <zone h='8416' id='7' name='Pub Concentration' param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' w='13278' x='86722' y='17497'>
                </zone>
                <zone h='6916' id='8' name='Pub Concentration' param='[vertica.42074.699999340279].[none:region:nk]' type='filter' w='13278' x='86722' y='25913'>
                </zone>
                <zone h='67171' id='9' name='Pub Concentration' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Publisher:nk]' type='color' w='13278' x='86722' y='32829'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Revenue Trajectory' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial'>Revenue Trajectory vs. Plan</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1200' maxwidth='1800' minheight='1200' minwidth='1800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3332' id='17' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96668' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3332'>
              <zone h='96668' id='3' type='layout-basic' w='88333' x='0' y='3332'>
                <zone h='89751' id='1' name='Rev Trajectory vs Plan' w='77611' x='10722' y='3332'>
                </zone>
                <zone h='6917' id='14' name='Trajectory_calc' w='88333' x='0' y='93083'>
                </zone>
                <zone h='89751' id='16' type='empty' w='10722' x='0' y='3332'>
                </zone>
              </zone>
              <zone fixed-size='210' h='96668' id='4' is-fixed='true' param='vert' type='layout-flow' w='11667' x='88333' y='3332'>
                <zone h='4249' id='15' param='[Parameters].[Parameter 1]' type='paramctrl' w='11667' x='88333' y='3332'>
                </zone>
                <zone h='5666' id='13' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[:Measure Names]' type='color' w='11667' x='88333' y='7581'>
                </zone>
                <zone h='11416' id='6' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' w='11667' x='88333' y='13247'>
                </zone>
                <zone h='8416' id='7' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' w='11667' x='88333' y='24663'>
                </zone>
                <zone h='9916' id='8' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' w='11667' x='88333' y='33079'>
                </zone>
                <zone h='15916' id='9' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' w='11667' x='88333' y='42995'>
                </zone>
                <zone h='12916' id='10' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' w='11667' x='88333' y='58911'>
                </zone>
                <zone h='12916' id='11' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' w='11667' x='88333' y='71827'>
                </zone>
                <zone h='6916' id='12' name='Rev Trajectory vs Plan' param='[vertica.42074.699999340279].[none:region:nk]' type='filter' w='11667' x='88333' y='84743'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Revenue by Month' tab-color='#d7e9ff'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial'>Revenue by Month - Op Plan vs. Actuals</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1300' maxwidth='2000' minheight='1300' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='31' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3078' id='30' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96922' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3078'>
              <zone h='96922' id='3' type='layout-basic' w='90300' x='0' y='3078'>
                <zone h='78656' id='17' name='Rev' w='88700' x='1600' y='3078'>
                </zone>
                <zone h='14911' id='20' name='Rev_calc' w='90300' x='0' y='81734'>
                </zone>
                <zone h='78656' id='28' type='empty' w='1600' x='0' y='3078'>
                </zone>
                <zone h='3355' id='29' type='text' w='90300' x='0' y='96645'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000'>NOTE: Percent deltas are calculated using Op Plan figures as a base, and YoY figures are calculated using 2014 actual revenue figures as a base.&#10;Growth rates are not seasonality adjusted.</run>
                  </formatted-text>
                </zone>
              </zone>
              <zone fixed-size='194' h='96922' id='4' is-fixed='true' param='vert' type='layout-flow' w='9700' x='90300' y='3078'>
                <zone h='3924' id='14' param='[Parameters].[Parameter 1]' type='paramctrl' w='9700' x='90300' y='3078'>
                </zone>
                <zone h='3924' id='19' param='[Parameters].[Aggregated By (copy)]' type='paramctrl' w='9700' x='90300' y='7002'>
                </zone>
                <zone h='16001' id='18' name='Rev' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' w='9700' x='90300' y='10926'>
                </zone>
                <zone h='14693' id='21' name='Rev' param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' w='9700' x='90300' y='26927'>
                </zone>
                <zone h='11924' id='22' name='Rev' param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' w='9700' x='90300' y='41620'>
                </zone>
                <zone h='11924' id='23' name='Rev' param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' w='9700' x='90300' y='53544'>
                </zone>
                <zone h='6385' id='24' name='Rev' param='[vertica.42074.699999340279].[none:region:nk]' type='filter' w='9700' x='90300' y='65468'>
                </zone>
                <zone h='9154' id='25' name='Rev' param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' w='9700' x='90300' y='71853'>
                </zone>
                <zone h='7770' id='26' name='Rev' param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' w='9700' x='90300' y='81007'>
                </zone>
                <zone h='10539' id='27' name='Rev' param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' w='9700' x='90300' y='88777'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev calcs_old'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev calc_yoy_old'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev_calc_mom'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev_calc_tot'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev_old'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:launch_type:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Aggregated By (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[none:Calculation_1550311191705374:ok]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_1550311191705374:qk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_7010311193911418:nk]</field>
          <field>[vertica.42074.699999340279].[none:month:qk]</field>
          <field>[vertica.42074.699999340279].[none:path:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev_calc'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Rev_alt'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Revenue by Month'>
      <zones>
        <zone name='Rev'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Rev_calc'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone forceUpdate='true' name='' type='text' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By (copy)]' type='paramctrl' />
        <zone name='Rev' pane-specification-id='4' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Launches_old'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:launch_type:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Launches'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Aggregated By (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[none:Calculation_1550311191705374:ok]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_1550311191705374:qk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_7010311193911418:nk]</field>
          <field>[vertica.42074.699999340279].[none:launch_type:nk]</field>
          <field>[vertica.42074.699999340279].[none:month:qk]</field>
          <field>[vertica.42074.699999340279].[none:path:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Launches_calc'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:launch_type:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Launches by Month'>
      <active id='17' />
      <zones>
        <zone name='Launches'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Launches_calc'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By (copy)]' type='paramctrl' />
        <zone name='Launches' pane-specification-id='6' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trajectory_old'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[vertica.42074.699999340279].[:Measure Names]&#10;[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Aggregated By (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_1220312130956225:nk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:month:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rev Trajectory vs Plan'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[vertica.42074.699999340279].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:month:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trajectory_old2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[vertica.42074.699999340279].[none:Product:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.42074.699999340279].[none:Revenue Source:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Ad Unit Type:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Deal Owner:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Country:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[cum:sum:2015 Revenue Actuals (copy):qk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:Product:nk]</field>
          <field>[vertica.42074.699999340279].[none:month:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trajectory_calc'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[:Measure Names]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Revenue Trajectory'>
      <zones>
        <zone name='Rev Trajectory vs Plan'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[vertica.42074.699999340279].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Trajectory_calc'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Rev Trajectory vs Plan' pane-specification-id='1' param='[vertica.42074.699999340279].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pub Concentration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Publisher:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.42074.699999340279].[none:Path:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:Product:nk]' type='filter' />
            <card param='[vertica.42074.699999340279].[none:region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[none:Calculation_1550311191705374:ok]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_1550311191705374:qk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:Calculation_7010311193911418:nk]</field>
          <field>[vertica.42074.699999340279].[none:Publisher:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
          <field>[vertica.42074.699999340279].[none:month:qk]</field>
          <field>[vertica.42074.699999340279].[none:path:nk]</field>
          <field>[vertica.42074.699999340279].[none:year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pub Concentration_op'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.42074.699999340279].[none:Publisher:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.42074.699999340279].[none:Calculation_4560311194028184:nk]</field>
          <field>[vertica.42074.699999340279].[none:Publisher:nk]</field>
          <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Publisher Concentration'>
      <zones>
        <zone name='Pub Concentration'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[vertica.42074.699999340279].[none:Publisher:nk]</field>
              <field>[vertica.42074.699999340279].[none:data_source:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone leg-item-order='reversed' name='Pub Concentration' pane-specification-id='4' param='[vertica.42074.699999340279].[none:data_source:nk]&#10;[vertica.42074.699999340279].[none:Publisher:nk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='124' name='Rev calcs_old' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Rev calc_yoy_old' width='192'>
      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
    </thumbnail>
    <thumbnail height='46' name='Rev_calc_mom' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Rev_calc_tot' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Rev_old' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rev' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAO00lEQVR4nO3d629b530H8OdcyEMekqJIihJ1sa6+yMqlarrE
      KbrYSYdlSZouAYZhw15k2J8x9E22d3s5YBgwYNurbVhXDNvaFC3SJW3tJqlTOLNiRapjy5ZE
      SyQlXg957pdnL0xJtkUfUXpMiVK+n1cy+dPDx+RX5/Kc5zzkKKUE4KD4Nus6lLPOxbcbOtx+
      cYea3W8fDtDhdgOk6/oTeeE2m6Vbmj8/uZZ3t//Ig+03u6v+0TZ3Fz/uBR7prX83dhfvvFG7
      fvF+cTv/NcdxHNtu89PUdf1+q8K77767ZzUhxLbtQCDQ8ql7C5/eKtpqXeEcM1+qco6l6prj
      2Gv5kmuqufwmz1MiSKLAtd/sxx++t1ZxYrK4WVZ+9cH7gVjc1eqlcsV1HdN2s9k1nrjr99aF
      AG/aJBQU99VhQsjf/NX3PE+/MpeNiY4gCuuFklYvWWrlv9//aHx8XAq0aHB3s+XVL/7u397/
      xszEneVsIMCvFzYWFz6bu7567tz47uLPfvnDy4v57//TPz7z3DNqQ3VcV9UsOSy17O2Pfvxe
      KpnSNK2hVMo1jTiaojkROdSyeO6TD4umKBLns1//osH1iK4hyfL2e32/+Ofv/cetop2UA5qu
      OZaxupbzXNcwNNs0Niq1L679pjczIvKkUVr9wf98MDgyslko8MS9l9so3VsqGZ5SrVLXyuUL
      1Vo9Hu/hOM62bVPZ+PCj6499p9qk1auq6Syv3KgWN5PJVDDIcRzHi4QT4tlsdiAROT2Z+fcr
      n/7Fn//pvpvmuY8//MAMyJ7L3Zq/VlPs81PphUXFcILFXDae7P3a0+f/9V++//afvRPff7dH
      MolrCyuDqb6rn6wG5fjQ2FS5Vn9uMhWT6OWrc2++8kI7jXx6bT4lGYuL87WG/cnHV869cKlc
      rBCSekw5V1pZCPeN3fr8ar7kVPMrL/7hO6lEi7piqSjw/K8/+dgjxHNdTuCtRj2aGnr91W/v
      LlaqJdult+auZqNRx3Y3P782T7g/eeuNB2uoa64WG7R681rpniNS1eIigmE4kiSRiBxbzldT
      ciAsidRx5N5MQjL/970fcmFZFoREQl7L1yPRrG56hDpSIOBxfLwvk4gEKCW1Ym5g/BxrgHji
      ls3A87PnV+4lU8l0SOJEUVjLbSQTyYgspfuSYyPJuS+LUru7yqbRqfOpoUl1ILK60QjxluEF
      JieC/QO9dfPWaDKdiIWSfX1DoxPRyLVMPHyAbr/w8mumRXiOVKuVeCKZHByNZW9pXnBmZsbj
      Q202MnF+9lIm8fnc3Gadv3jxYiieSoozhLTuz9D49Ld6J4SgJNFGT6bnuqpMn0q2rKxXihOn
      p0VXq+lePBomhAR5T3Nbb02pY7qh1O++OHU3W0ilkkGnvlASHqmxTeOlV17nLcUl3GZFSRNz
      4ebdC9+cLZfKA+m+nmR/TOJ0ww6JnGWoA2PTs4OZtbW8XS8aYvzli9PVuq4oaiIR5Tneo3Rz
      fbnguoMjY0OnZ8vz81ybBxiqqsqy3E7lo29HtUSC0ZgstXxW07SDNUsIsfVGzfD6Ej1PvGUf
      u5u19LpFpGg42H4fqGPmy+pgf3LPyjb7sK20kY8l+4Mi71Os1sqlhjU6nHnkd23bJoRs7xwb
      tWow0vNgUy370G6AqtVqMNjiPWJkGEYo1O5ffDe0vK9m2y+mlFqWJUmt/8wOpw/7KrZtm+d5
      QRDa3YUFg8FO/EETQjrUbOda3lezbRZ7nsfzfDjc7u64E33YV7FpmoIgiOJjNlAAbUKAgAkC
      BEwQIGCCAAETBAiYIEDABAECJvcHEmlhPSv1pIljGmotlhompqK5glavjo6OcS0uogM0NUei
      l24vDQw7t+6uzJ4d+vL2CjVrlpItNwKB5MhglNd13XXdo+0odCeREEIokWWZ8oHxkYyqO5LA
      BWKyKU3oTilIDU3jIhFZ07Sj7ip0I5EQQjhu9ncutHjy6UPuDBw/OIgGJggQMEGAgAkCBEwQ
      IGCCAAETBAiYIEDABAECJggQMEGAgAkCBEwQIGCCAAETBAiYIEDABAECJs050ZZp8GKQUM91
      HDEQJNR1Kee5jhQKYU49+GjelfGLn/309NNfv3l76fx4pqyLglVr1Ev5Te3Sd95OhTnP87Aa
      MLTUnFSf7k/X6ka6N7aWzQ5NPVsr1flgSOANy9A0ygmCgAB1m4rm1A2/W2XkoNAXZV3CcE/N
      SfXPPHdBFB94sdHBR+pwV0a3+XLDWMj5LWU8kZJePttc/+/nN5WG6fkUz47Ip5L7XoFuo243
      Q/NQeuA4WKpUL68WfQoM2rsdoKxiVHTHp3iqP0jIvgNU0Vzk5rjyPOq6fhsV19t5dj6/ma+b
      PsVfH5YI2feKgJRSnMbDwRUtEwECJggQMEGA4OAsy0GA4OBwEA2sECBgggABEwQImCBAwAQB
      AiYIEDBBgIAJAgRMECBggvlAx5VhOkrDb0aibkQOoRvNSfWXP/jZ+NmZOyvZ4YgTHr+gri3W
      dbWQq7z02hs9QdyX0Y1qdX19Q/EpqPR16stoH9ScVB+LxcpVNRTg4rGIYtmq6VhqxXGcumaF
      Od62bXzVwbFWrDRyFd/NlWkdrOX7k+rJ2ORUOJYgnhMQuB6PIz3nHfqUbepymFCPyjK+6uB4
      Uxpmre4XIMs64Abi/i6MS/b1E0IICZAHD4vkjnyjO5wYnofpHMBAaRgIEDBBgIAJAgRMMJAI
      D7Fdmi3vcUo/mtq5hxUBgoeYtvfRnYZ/TSaeELZ+RoDgIRb1bigV/5q3aBwBgtZc19so1f1r
      PI9uHzwjQPAoz9vHWlA4CwMmCBAwQYCACQIETBAgYIIAARMECJggQMBka6X6938yMf3s0vJK
      T8CJpMeJVq7rjUKuevGNN+OYVA+P15xUH+/tLVcbcpD3PE6tVXnqOnrddd2GZoYp77gOJtVD
      S81J9ZNnpkPRHuK5nmvzQvD+bFfHNkMhgRAiS5hUD601J9XHE8mtf0o7T4b2vXQ5fNXgIBqY
      4Go8PMR23Nsrm/41juthOgc8luP7FRyEEEIpIc1zc+zCgAkCBEwQIGCCAAETBAiYIEDABAEC
      JggQMEGAgAkCBEwQIGCCAAETXEztIjXduV30m7gncNzsSOzQ+tMOBKiLrFTUv72y5FMQDvD/
      8Mezh9afdjQDRF39yuVPe/tSgZA8GAv8Nl+L0EZdc0cmz6yvZl+88I2j7SV0re0tEE9drVwL
      28UKl4iapiXyztKXq416SewZ0jQNk+qhpa0AcWIyPZwZ7Pd4MczzkmpIxBweneY4NxSUsFI9
      PE4zQBwvPPO1Z7cf7UkeUXfguMFpPDBBgIAJAgRMECBgggABEwQImCBAwAQBAiYIEDDB1fgu
      4nrUMG2fAt4TfJ49EghQF9ENe3mt7FMQkbru88IuDJggQMAEAQImCBAwQYCACQIETLYm1Xv2
      3P/NJdL9HhEHe0N3CkqYqjYRUwMjpY3c2TOnj7aX0LW2xhWoV6tWSooWDIX1klhyrDDnLny+
      NDG5XKc9I8NDmFQPLW0HiIpBqb8/w4tCMhS0aoZM1Ode/CbHO5M9MUyqh8fZmlQvhr710sXt
      R9PDR9QdOG5wEA1MECBgggABk667unvCUEr/+eo9/5o3n+pPRwKH058nDgHquF/e2eO7Sy5O
      JY5vgLALAyYIEDBBgIAJAgRMECBgggABEwQImCBAwOQkDyQ6Li1rjn9NX1TkOe5w+nMineQA
      bTTMv/zxgn/N3//Rs52+W0/TLf8Cj9KOdqCjTnKACCF7fjIH++hurNcrvtu20WRoPBm+//Nq
      ruLfmmntsZnsZic8QB3y05v5G7m6T8HbT2e2A3SybU2qp3R1ZVmSAoYjjA4m80UlQGwhKIWj
      ca1eS6VSR9tL6FpbWyBXm79+48LLF9VC5db8Qs6wIpy5+MXy9FMTa2XvDy49j0n10NL2abwQ
      iUr51dzo1ClZlgVREnl+dOqc5Qozp4fC4TDP44QfWtiZVH/p917lOI4QEjt77tSuOg7nutDK
      znYFEYEDwI4JmCBAwOQkjwO5nrdZbvjX0OM8CtwNTnSAXK9UVf1rDpafjVJjZd1vMcPqWPwg
      7R5DJzlAnWNajm74LafqON6hdeZoIUBfFR3aWSNAx5Vpe3XNbytomDtbwc2qmS+bPsWaecAr
      DQjQcWXaXkP3+9QN6zCuPuE0HpggQHBwluMhQHBwNgIEjDp1EG0YRqXiN5WT5/mBgYEOvToc
      mg4GqFAo+L2wKCJAJ8DxO41vNBqe5zfOGw6HA4HjutzOsXP8ArSysmLbfgNoY2NjiUTi0Ppz
      wngeUXzHJ8nDFxB3JtXfXVpK96caJu2Ph9eLSpBYfECSYwlVqfT393eux9BVPEpV3/FJQsiD
      2/+tLZCn3VxYvHk3kslkamtGwbRlzlqcv3tuZixX5V69GMWkemhpe6V6QY6GwvEUpU40Giu5
      epC6k+dmPM596kzfAVaqd11XVf2mUuAw5WR4YFL9t39/+9ER5nYNw8jlcj4FkiQxvwgcPQwk
      ApN9nIVRSu9V91gnYCAWCIqdDWU+n/ffn6bTaZyFHZp9BMj26Pd+8oV/zV+/Nj2elNm6tAfT
      NE3Tb2oLjvcPE3ZhwAQBAiYdHIn2v+Dg/ywcF50KkKZpy8vLPgWyvHOo5HrU853xzXNE4HHn
      dTfqimthP7ie+9Vdv9usXhjtfed59sEpePL2EyBKGqrf6Q856I5JdxzF9Bsg0J2dReB0Xfcf
      48ZZ2GHazzgQofcKVf8ay+74h7e5uakoik+Bruud7gNsw1kYMEGAgAkCBEy64iwM7nNcqqh+
      swG97js96IoA1VWjUPJbdllJd/b6WpdwPaoafhnhSdcNhnVFgFTdqtT8LrCr2h7DB3BUcAwE
      THYm1ZuGIYqiS2kwIFq2wxHKcTwviJ7rYPopPM7OSvX/9Z8/ygynk5nxHqr+dlPpIerKSvH8
      7Mzd1dJbr7+CtQShpZ2V6vt6pWhySKluOLbHczzHceFYqpArjJ3qt20bAYKWdibVv/Lad0Wx
      +c8zu+r2e1cGfEXsHERvpwegfSc5NK5Ha77jcgTrRDP7f7WAsl9g8KQdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='184' name='Rev_calc' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='184' name='Rev_alt' width='192'>
      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
      2JN+IAIr/j8E58dLmrnUyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Launches_old' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Launches' width='192'>
      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
      5P811WrkyUbRrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Launches_calc' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACQCAIAAADRMPOnAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAATqElEQVR4nO2deVwT59bHz+0gvgSQKwiyyAf3DassoghYFyj2
      YsstvporKrlQUVEQFaVa0arlg1JxAVzAC1xpRNNGlEorFSuv2gZEWUVBrJXFsCtYBIJixr5/
      BCFIJoQ8LFLP9y8+mTPPnDP88jyZmZNf/vbnn38CgijLe/2dADKwQQEhRKCAECJQQAgRKCCE
      CBQQQgQKCCECBYQQgQJCiEABIUSggBAiUEAIESgghAgUEEIECgghAgWEEIECQohAASFEoIAQ
      IlBACBEoIIQIFBBCBAoIIQIFhBCBAkKIQAEhRKCAECJQQAgRKCCECBQQQgQKCCECBYQQgQJC
      iEABIUSggBAiUEAIESgghAgUEEIECgghAgWEEIECQohAASFEoIAQIlBACBEoIIQIFBBCBAoI
      IUKFaUNhYWFf5oEMUP6GPziHkIBLGEIECggholsCKk/wZ7PZHuEZza0vZISz2Wz/hHLCJCTj
      hmcQDiMPWnh5v48bm81etjv5Sd8eujP9ctBeQokZqEnAPf873fOp9Cq3f4jNrNFcGMg7s3vB
      sP5O5q+EUktY9cXTKbU9nUnvQovFAOpDNKj+TuSvBuNlPDPq6upN+bzTGbN9raRfzghnhwhM
      XA+HuBhBeYL/Jl6pnT/f1yojnB0iGPEPt6mF5y4Xiyi96YsWjXtw/nxmzYvBxk7+u92nar4e
      oKHgu93HLhSIKL3pbls3OxpTANBwPyHiyPnMmheDh4yz9/7czVyLgtbRp9nZlQgE4LQnyn1S
      exZ0fc7Z0NhL9ytF4sF60xetW+M8WYvKCGeHCACglLeJnSbJsEvajgwwuC0hqbo6Fiypch57
      QsmP14tbVEc5+u1orax9nMFDxtn7bmsvWHhpv094Zs2LwXp2a/b42ul0iJaulxZePnjgTG6l
      SKzCMjBbtqX13LwdKDEDmS9xNVXp3jpWll1lsSP2hI8FXZPJO1VqGxQb98U8FWHSYX5+e1B+
      pe6mmFNRGyybMqP3xxcDQO3lQ3t498Z6RfHiAj9sSdq3I764Pfz3VzMO8eOOLZNSD9D5sVv2
      nX8yZWMEjxe1eZqQt3tLbD4NVr58fzsAMHE9zFdIPUDn8YJ598Z6x/D5MV4TazKj/5vytOsq
      i+gFgTERnqai4qQzV6sAAMoTg/bwHoz3juLxojzGFicFH7rcNnU/0bQNiuUFLtSsERz/LhsY
      6626eCw6s3nODh4/zn/ms9fn5m1BmSVM1375wuFQffF0ymMF91CZZDlVEzTHTDACAHNbWy1K
      VU9/GEBTk6g9yNp+vhZFadl+YKUC1Zm55fA060a+uDV8pJ2NCVRfT/u9LXyCxTRNUFVVlTpM
      c+oPyfVgsWSFmRZFaZmtWGIB9ck/pDZDt6Gmrj4RuX1GZXzonh3cfABolM6UARMbu5GqlJbp
      ZBOAohIhAFRlpRWJ1a3trbUoSmv+tjP8M7scdV6HT7O21qKoCZMnAogflVUBU700TQP88fP+
      7eEX6U8iePwj/xrV/YJ6DSWWMABq7CKO3ZUQAe+sumI7GBkMV3z04QZGAKXCChA1NQKAIIQt
      aNtW2z4PsNTU3tyzrrZWeoOaGgsAamvrABSZdaRpzj7uG3wNxjm5uu+wuOh9NK2b+7ciLCkC
      MNH+u8yN71HtCxFN08BU71gHNydBSJKwWMDbL+C9ufD3N0oJCEDNarmraXp0fpPszc0ihg3y
      eEXTABRAdWU5gImxIVCVFAC0fuJQBG0dHYBSUXMzgBoANDeLAFT0dLW7n8tdwbV6MHFd5z7f
      iE6XHdLc3PWcZDxyNAgeVVYrpmCKkl2v5lT3g6eW1T24ezP13PmkB0mH+VYnV5oqMGBfoPSN
      RB375Qs7TCtDdYYBPCkVNkDL/dT0J0z7MXPr+4SSFro+9ZcMMQyfbmYE+rbzTVUgJzW1nqaF
      8f4d7kDJRM3Kca4WZJ+Ny62n6frcuLPZoGXvNKvTTNU1LHV1gCdVNS20MPH7W20va+voAICw
      VEjT9TfS8rocRt92vqmKOOOX1HoaWu5/s57NXv8d8wcY2fXS+TGr2Gz/hGcmFv9YttxmGMAw
      himtX1ByBoL2dez1XDPW2cspOyTp0JrcUY7s6SZwsbSbA5qOboxY7VYsovTsfHYuHgUAOo5+
      u5oijkSucg1TYRlMd9/lZSVfDGoWaw58oR0aG7rWVQQsAzPXwLUuExS4YumwbICdP9+Xvcmp
      ICRp34q0IePs7EwfXcsvuN/gYqRpu9xTUBLL3+x+bbrb3BmQ3dXSJlUBDB4yzt5vw+JRAEw3
      XmXXa+r+5bqmyLidK869aB3Dubsrci+CD1MRIvBZGEIECgghAgWEEIECQohAASFEMF7GP3/+
      vC/zQAYoOAMhRKCAECJQQAgR3RJQRWIAh8Pxisx6/UQqK5LD4QQkVhAmIRk3MotwGHnQZVcO
      b/bkcDgee69IP6eTHLoND6/PD18ufSl3KKaiparouqAeOnP9jxIzkCiNl1g00Hqi7ySdznms
      +dGOkye3O3TuibbZwOVyudyY0DVmopy4fTFZSrQQvaMotYTVXPr26kDriX5FA7A05PdED9K2
      dpytA6Lcu4Q9f4bOQVwu18uSbJQBgRJP41kslqgw/myWbccTlBXJCUszXhwc5GwIFYkB2+KF
      Nhu4XpZZkZywNMMPl77/W+KVUhGla+7sPOZhYmLO4xbVEQs2bl8+ReP1AM/ux++NulgoonTN
      l27ydRhBAUDjb4lRJxJzHreoao6Zt3rj0mlaFLSOPsXG5lFaGiwIOLp8QnsWdP3thIjTV+5X
      iWhVXXPnVZ8tnKhFZUVywtIAQBi/jXNTkmHXSNXQsTjJcWp+jdj8843HNMvEwWerVBWd9m28
      e/pgxNWHDS2gqjlm3trNUrGiu2d2JuWXioA18Z+fb/p0tJqiFS9VvxIeHp9XJaIplv7Uxb6t
      Z6s/UGIGMlu0eCLVvXWs4nb1tK2RR1ab0Y9z4nnCWV+eiNk8W6Us+ei5gvage1W63seij6wz
      b8rhhiaUAEDtlfB98fdHex45GbNzfkvywcCEkvbwItoimBtzmC2lHqAL4gIOJj6ZtDb05Mkj
      66eUx+8NiCugwdKLu8EGAIwXB3PlqedlneCnq7UwZJbVBMaY1xUV0vbB0TGBH+uUJh+MTmNe
      8nLPHEx+aLzsCPfkgUX6DzvG1jaN8jxy8vjKSaLC899crVG44prkKG5Os+3Wk9yYjZbPXp+t
      /kGZJUxn3tKP9Lq1jlHjzadogMbosYYAYGZtrUUN0h2uAyBqljrzM+fM0aIoLWtbCwpqcvIq
      4I+cW4V0a7jJrJnGUJN6s6gtfPy09zVg0KBBUodpvnEp5RmYfbp0mhZFaU1b+qkZPEu5dKPr
      DzRpYRwOh8NZuTG2wGCOz64Vk7t8Pxt/MHf8IBhkMtt2FNDZeQWMgfQrGqDgzFfB394b7x3D
      PbnRpr2lydBqpskg0Bg30RjgUVkFKFqxWCwGqP+/0N0RP9FOh09yDywe2WWJvYVyPdGjnV1t
      roalxZ9nKbaDob6e4qPr6RsCCCsqQSRqAoC0ME5729ZTuT3RT+tk9UTXPZV0uMqhdaFSAr3h
      BgDFwvIKYNjf7GPO1Hun8x4XJMd8lRw7dOpy/01t6w31Xvv7l35Fg6IVG853XZAemlxWeiM+
      9Eb8mx8F+hZle6ItlyyeeJNbyNAW/FyBfuFO0K090TVVFQDGhgagUq0C3frnDtXWARB27Imm
      dIcN7X4ub9C5/5l+9QoAAGqqKwHA2MgQQPYlOTXCYUvYvOby+xlZKT8mZORxuVenb3dg6ElV
      UVGsYo0py/dGs+t+z8+8eSEx+WHy0XPmkf+e3L2aegjle6LnLf2ow7QydKgOQK2wrBFe/pae
      ocRFWubFH0pf0vXpqdk06JlPNQS9mbMnUpCbnl5P02XfB3S4AyUTNcv5dkMg9/tvb9fTdP3t
      b7/PhSFzHWcq0RMNrWoEobCMputv3brzxtaKKz/eqqdflv6aWgyUxVTGf17tlb0eHK/I2xoT
      PljI+WgSAKU9lPkbFYpVTBd848PhBCQ2mJg5sv81UwdAZ2i/dUkT9ES3rmOv35ujF65ccDs0
      +ej6OyYOiyyM4ZKwmwNOGtkUvd6zVETpzlq91WUkAOg4+H4hijoRvd7jOMXSN1/xxUrLLnqi
      zVYGbdaOOB2x0UMELP2pi3esch6v5PWJ2iw2J7309Pnta341Xzp7OuTelN5qOEkt9as1Rx/T
      rInOX3jaMKal4+C7+Y+j3NiNHsdpiqVvvviLFZZyElKoYmryim2eopjvAldeaAFVzTFzfNYt
      VOS6sldg7InGp/GIIuCzMIQIFBBCBAoIIQIFhBCBAkKIwG+mIkTgDIQQgQJCiEABIUQo4RON
      psqtSDJrY5n7hv1JJS1yd2Ey1pYqsut6e8idu2fAGYgUO38+n8/nx0V6W4gyY/dEyvfA+suB
      AuohVLVtneYOg6acvKKug+Vh5BLC5yvs6tfvKP80Xgq6Jj36YOT1YpEYVFhtHsn9Y6oMDXmx
      weEpD551HkNCq8u0g9OztMvFIkrPbtWX3h/oMZpSS5K1sVO9JSiatCZmp70i9paMpUtOV9W1
      cJ9LghqaJVW6zH3l1NKU983WC3eLRcCa7LJj65KxakwFyHPV7gF6YgaqTT5yKOXVx1/z+LzA
      Baziju7PTPSSqTJknwpOemDsFsXnHWEbPEgKjhTIXFLyK4dvlphSC44GdmlKXVZu6H2KF7d1
      LrN6Wup++fHKE9Cys57YZekF4gWHTsXt/6duMWN+0FUtTxrHrP3PmRgvU1HB2eifq7ooQKar
      do/QEwLScdrNPfRv9dT/fP1lyJUnb7g/M9FLpsqS3zTIPxWw51T+xE1x/DP+djJ7dWYscNRT
      3JR6mJmZMUWpqsrq5BGEsNlsNnuFV9RdQ3u/IHfTLvuPTOY7TFAF1ZFzZo8GcUb2XcZAebWM
      mGkzUhU0J0w2ae2n7rards/QA0tY+5y7dakw3m8zv6xzjCKeuAAA8OLFC5mvdzJVfvFc6p1r
      5BLCd5H8aeXL5/vSz8vu3cj44Sv39AqxqeeJXY5dd7UyjQcAAOos5ka2rmyIZbTD0q+6TAcA
      5NdCUe3vfbFYzgmRIKODvGfogRmIpa4BAI+rqumGjITkdvX0hycu1F7es4ztcSRLc9I855VO
      pgAqQ4cOkbG7tKewic0MJTyF5SG/9LLkhPR6uqXk+q9FoGJlMYVpFEVrkdCjBSiOEjNQJ09c
      7888M4NiT613O2dgNstqeEpGYcF92mqCWn944qo5+m2rOxQTtdY1TKzCMpjuusvDStaaYmnO
      OuPrlltHGdv7+TsbMY6nHPJLH2Gq/kuA+6EamjX5f3d5yV5iWytUqBa5J6S3efcepna4QkJI
      wftACBEoIISId28JQ3oUnIEQIlBACBFo84sQgTMQQgQKCCECBYQQ8a7b/AIAQOPd03u8PTkc
      DsfTe0/Mrcd0HyX1VwBtfuGPa8cOJldOXn1cYmN4/WjU1T/e2PtlXX7iAV5un2U7gFCqnaPm
      0rdXHbY76HQd+dYgx+b3YWE+DYZGhhpAaTjt5Dq1vmzoHMR1lvxZ8dPBr+OFNhv6LNsBBNr8
      SqwUKy6EHGBt8LYfrfZaYm01WGVsixeCxLrQZgPXy1JmUnTZW+O826egzS9M/tB5FAX007y4
      3ev8DiQW1r9RlqVX8GJjkNjZe1kyJPU2Oe/2KWjzC2Do9OV+nzkjVAHop3nxewOishqZgxmS
      epucd/sUtPkFAKB0Z6zca+6S/1NURHz+s7TEXxZZOjGEMiRl+RY57/YpaPPbxiBtU+etHhWc
      sDSxWMwYxeTE+xY57/YpaPN7/7QPh+N1LL2eBnhZWiIEGDJ+7PAOIcP1DQHgWWMjTdOyk3qr
      nHf7FLT5nbB0l8/z499Er/c4DhLT3E4/dUBNtp6jm3M9Zp1nhmf4FplJvU3Ou30K2vwiROCz
      MIQIFBBCBAoIIQIFhBCBAkKIwK/1IETgDIQQgQJCiEABIUSgzS8hDXmxAZ5ubDab7eYZcCK9
      hgZ463PuSXAGIuJpSmhwUsUU7xiJjWHKoYiUp2+EtNTdSdgbl90v6fUBPeLS+u7ye/4dMYwY
      YaQJlOYngfxPWl+Wcpgrv7gvkFdq599vKfYyaPNLZPPLUlcHKDsftJe1xW/B2P+hOhzDzp8/
      68YmXilIXN3s/Pm+VrJzHsCgzS+Rza/pRy6jVUBclxu7/TPvvQkFb/ZTW/kedjUBiZ29r5V8
      J96BCdr8ktn8GjkHhfrZGw8GENfl8nZvOZbRwFyzfCfegUlPLGHliQH+cY/0rJesWP35yKM7
      zpUqN4ywpAjARFt2I18nm19RUyO8YfhZ+xQALFw8zQpic2vykyIDkqK1zdwDtjoad/7Hvx5v
      uIERQKmwgnE8AJBv80vpWa85aLHkzsVj4bw79YJzV9lWzgyhco8xQOkJn+hbvxaJwW65n8t0
      EJbI/qqPIj7RxiNHg+BRZTWAkQJHpSgKZJk0U8aO2yPtn5fdu5Fx+cLZ9Nzo/6ZYyfCJftXa
      gF1dWQ5gYmwIVKXs8RRDVft9l52rhewQAU0zf9mJKeeBDPpEk/hE34tdxWZ7hKbW0wAtJUVC
      AK2J4/U75mlgBAANDQ00TfeTlXOvgj7RJD7Rk9yC/F6ERUeucg0DScqdfuqAMrW118tKiVzp
      lr72xPZ+sXLuVd69p/HoE92j4J1ohAgUEELE/wO7Sl8aPkKDdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Launches by Month' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trajectory_old' width='192'>
      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
      Y/cGPgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rev Trajectory vs Plan' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trajectory_old2' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Trajectory_calc' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue Trajectory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pub Concentration' width='192'>
      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
      GNO3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pub Concentration_op' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Publisher Concentration' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAMNklEQVR4nO3d23MbVx0H8CNL2l2vtLKtix3Zsr2+NrGbpG3i
      uIWUSVsCTGGGToHOwAwDM1xmCk+88ED/CHgpvMBMYTod2j5QSqYNNKXJhLhpaOy0uTaJHV9S
      X2XrYuu20u7hwa5XEY4jnyNZWvv7echEirV7sv5q9+z57Z61UUoJAKuaSjcArA0BAi6OSjcA
      yuj0O2+evnC1xu589vnvH+7vXH//ld//4YVfvCgTokU///M7Hw+oclJWv/RIz+q/Xhp6L//l
      Bmjun2+9ef7Tm209BxCgnWxh5u43vvfTEJl6+e2TjlhPUlbl5HhSVsdHr//x5d+K7tAPn31s
      bPLzAbWHEHLy72/MR1Z6Hj2qheeGbl754N3sj3724syVs++eHX76m98R43fODt947OjXjx3p
      v37hg4t3M7956aWR/57HIWyHe+OVl3/3pzeeGDwcC8+FY8urfxJCn/vBz7PTI9fvxgghsfBc
      OBb9aOg/8URqKRIlhOzp3D/Q4x++evnVV//Woba89trrkYWZpt7Dx470E0JmZma6enqdDseR
      J45iD7TDvfDjXz7eHyKEDJ28M377M2dkrGWgj5DstcuXF2NpV62w9nPUOPLk1/xe8bUT/37u
      8ZDP5xVjs2lilz3uvfseblb79dnLfr9v9Wf39vWf/MvJfc3uixc+tOE0fge7OvxhXag/1Ogh
      hKRXIv9674M6r29Pe+/M7cuU6kJDaHBfy+mR0e6AmBED9uTspWtjB4982Zmaz4gBMbOQEQMK
      jQ9dvDJw9FhucYLWhbpDjatLHrv+yfDVW63dfQgQcEEfCLggQMDlAQFKJBLb046tqs6GVWer
      SEkbVrCo8u6BxkdHc2VdwdZl4vMffXwppRmZ+Pzd+Xilm1MgNzT00ScXhhJ5W218fLzcax0Z
      GVnvCEej0S2tsbyn8ROjo7fGrs1OTKZsbtkXDEiZ6Zs3kkqb2qgILuX4sSfLuvYNZeILMxFt
      7sTrdkLnY7mltNESqPMqcmbxzu1Z0v1QqyG4vn382PY3jBBCiH7m1ClJoNcmxxenZlu797oC
      odTsrVtjk8ef/kq5VpmOvvePt8YnRpeTNoPoAZ/PLTlUVS3y42UMUDIy5/DuaRR1X53fVedL
      Zw2qpxRZobJfdSVvp73lW/UmRE9g8JCaDLuz2ayylDjo9fnlmvlY2t4gN4SEni7PxdvpijSM
      EEKI/VvPPpPUncSut+8JdfXuG5uY6XrkkK2cq4xHYz/51a/PnfhrY+uhjqAiOuxb+vgDTuMT
      iYTL5eJrYVlUZ8Oqs1WkpA0rWNTaHmglGr41NZuYnRL8IcmRCy9lutRgU1NTJpNZ/YGcri8n
      UwzrqxUFSRAK3ozFYgyLcjgc601fb9hKMpXVdYalNSjugncymUw6zbL7cbvddrs9v1VVu7mu
      zYbj6QzD0h5XWwoWtbrl1wLkrvdnbnxKNO3m1NJDwVq/rF+/crU+2C6K+mojtGwulTMYViyI
      okuuLXgzmUwyLMrpdOZnf/XvGZ2SHEtPfcNvpM6URUmShC9+6+ubK820ucQyb65cTSRNWA6J
      99vyZh+or+/wciz2WIOSyNploaYxFFcEksqu/SslhGXTErIN49wYSq8gM0Aej8fj8RBCZELI
      fb6gVUhnTTaUBEaigQsCBFwQIOCCC8rKha1rb7kTAgSoLKr5pLW0ig0QJYRpXIMwfQgso+gA
      UZJj+nYYlvtOwVagEw1czD0Q1bXJ6UWpJlsj1NIawSU5LDGWqFPGY+vupBOSLekxwQzQ/J3P
      zg1PtLZ6FFFZii74m3t61WA2m93kw9VAZz227k5J3basl+awYxCi5x/C6pta2tqDQZ9P8ni7
      1FB4bk6SJKfTWZKVwc5DCaH5eyBR8R4dNC/yau/c6EMA90InGrggQMAFAQIuCBBwQYCAS2WK
      qesXZm8J5oGoQqjGm3Rd1zSN4YO7OdkI0D3YolDuALHF2mYr6w2JaxAgC2ALqGFsR40QnWjg
      UliNdwtUkN0pjVqlGg+VVViNVzsbY9PTolu2SjUeKssMUH1TS1u75rbnmg4OOvTI6NTcgb0d
      ebf6Usp0ceHuPEExKNGYLorWrba57leNDxZU4ylzFKy2RUqFrQdrua2FTjRwQYCACwIEXBAg
      4GL9kWjKeHoIJWH5AFG6S0cKqgQOYcAFAQIuCBBwQYCAi9mJ1hKRSzenfS7iFF05m12RXQF/
      ZSaTh/IZW6kZi5Vyr2EGaDk8Nz41LXf4l2LJRHxJ9LYqbhnVeNicGSCXt7GzzagVqbdJdZLk
      zPyyJEnr1XjDoOkMS5hyEu6u35lW50UxAyQp3sOPrB+zGgKNFWkVWMbqvCjoRAMXBAi4IEDA
      BQECLpYvpmZzuqZV24NZCSXUYLq8mVptvkfLB4ga1EA5vnJwCAMuCBBwsfwhbDdgu8t9e+YM
      QYBMlNLtmZBgJzEDlFq6e2p4UvXakxkiugRfoK016Ktgy8AS8qrx0XgmlUgadZRqK5HEwlIm
      0OBCNR42ZwYo0N592FGniLba+iaaS8fj8fxqPMCGzADZ7ILatvZweSK6MLcLFAOd6N0lk8qm
      lllmOL0fBMgCcjmWWo3DscEv19ANvaSPx0KAyqK0F3BW59SfqzASDYyoQQ2dVmYPVJ0TK+u6
      zjZsUZ3/ne1hpQDt5t9T1cIhDLggQMAFAQIuCBBwyavGL0fPf3zZ4xEU2ZPMpgur8ZToOssA
      FGYP29nMANUqnsZGn91IL0RiNJssqMZTQnW2icaRoB0t/zTeUNXORGwh1LPHpmuoxu9Ik9OL
      N+5GmD7at+G7+QFyuFwOl6uVEEKIs6zVeLZc4nLBKlSZgUS2KCBAVQhnYcAFAQJGhkENw0CA
      gFEup2tZ3fLXAxkGZRuggpKwfIB0yjhABSVh+QCVkM1m255HZW8PPPYb1lRzrNGJBi4IEHC5
      pxr//pnz9R7nSmwla3fuf3RQxb3x8CDmHqhWcXV0dNptZE/H3q62wLkzZ9PpNO6Nh83ld6Kd
      /f29hPSuvuh7eICwVj1h98BZmAVggingwnYc2J6jBwJkMgyD7S703XzDmpUCVO7xNErpbo4C
      m8oEqJqHVmFLMJAIXBAg4IIAARcECLhUphON23p2jLwAUX1ialqy0xqhltYILslRvlvDcFvP
      jmEGaPrmlU+nk01SVhCVpeiCv7mnVw2imAqbM/tAdf6ARGidzyd5vF1qKDw3J0mS04mHdsNm
      8p4b72s+/lTz+sv2zko0B6wGZ2HABQECLggQcLFSNd5KKDHY5uOy2tUACFBZUEJzbDMCWu0u
      WxzCgAsCBFwQIOCCAAEXBAi4FFbj3aJdkN0pjZa1Gg87RmE1PqjYF6anRbeMajwUo7Aab7fT
      3oODqMZDke5XjQ+iGg/FwEj07nJ3PnlrarmEC8RZGHBBgIALAgRcECBglNONbE5HgIARJYRS
      7IGADwIEXBAg4IIAARdzJNpIRUdGF+oFzSm6cja7IrsCfm8FWwaWkDdTfSoVDYcFn5SOJRPx
      JdHbqrhlVONhc2aAahxivbdOFqmvSXWS5Mz8Mh77DQ9kBqjW4z10YP2Y1RBovPcHKSGMd5xY
      7D4V2JKtVOPZbnpDfnY0nIUBFwQIuOCCMhOltJofa1KdECBT1T4rg20wRRCEkrfk/1k/QJRa
      b0qLLWILKB73VByDso4vQAmgEw1cECDgggABl8JqvFfUaI1MnA5U46EYZoCi4fDs/AL1OFai
      nxMbFb1t5avGa5rG8CncZ12FzAA1BFv7jFqPZKvdf4jm0vF4HNV4eCAzQDaH2NHesvZCdGFu
      FygGOtHABQECLggQcEGAgAsCBFwQIOCCAAEXBAi4IEDAxfoXlFUnSgjT454sd3WlGSBqaG+f
      OOXIRgMtHXNLkf2PDqpBXwVbBpZgHsKWF8PZnN7df4AKSldb4NyZs+l0GvfGw+bMPZAn0Pzd
      583Hfvc9PEAIQTUeNodONHBBgICVQYlBcRa2y6yskEi0NIuilFCKPRBwQYCACwIEXBAg4IIA
      ARcECLggQMDlnnGgeDyeTa3gsd9QPDNAWiJ66vSHarNvDo/9hqKZhzDdIHWyRGx47DdsQd5E
      40r9M1996otXeOw3FAWdaOCCAAEXBAi4FH05B6XEYLo60WpXicOWFH89ELXpLNOKEYNl6m6w
      ChzCgAsCBFwQIODyP0hIBQoFmUzoAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
