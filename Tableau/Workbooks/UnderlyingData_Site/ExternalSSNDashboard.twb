<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0914.1345                -->
  <repository-location id='ExternalSSNDashboard' path='/t/UnderlyingData/workbooks' revision='5.1' site='UnderlyingData' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Red-Black-Blue' type='ordered-sequential'>
      <color>#993300</color>
      <color>#000000</color>
      <color>#000099</color>
    </color-palette>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column datatype='string' name='[Ad Unit Type]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Total GDS List Page&quot;' />
          <member value='&quot;Total Hotel Details Page&quot;' />
          <member value='&quot;Total Hotel List Page&quot;' />
          <member value='&quot;Total Packages List Page&quot;' />
          <member value='&quot;Total SEM List Page&quot;' />
          <member value='&quot;Apollo List Page&quot;' />
          <member value='&quot;Galileo List Page&quot;' />
          <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
          <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
          <member value='&quot;Hotel List Page - CheapTickets&quot;' />
          <member value='&quot;Hotel List Page - ebookers.com&quot;' />
          <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
          <member value='&quot;Hotel List Page - HotelClub&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
          <member value='&quot;Hotel List Page - RatesToGo&quot;' />
          <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
          <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
          <member value='&quot;HotelReservations.com - SSN - Hotel - OP - List Page&quot;' />
          <member value='&quot;Martini Package Page - Travelocity&quot;' />
          <member value='&quot;Package List Page - CheapTickets&quot;' />
          <member value='&quot;Package List Page - Orbitz Global&quot;' />
          <member value='&quot;Package List Page - Travelocity&quot;' />
          <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
          <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
          <member value='&quot;Worldspan List Page&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Site&quot;'>
        <calculation class='tableau' formula='&quot;Site&quot;' />
        <members>
          <member value='&quot;Site&quot;' />
          <member value='&quot;Page Type&quot;' />
          <member value='&quot;Ad Unit&quot;' />
          <member value='&quot;Segment&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Difference Type]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Difference&quot;'>
        <calculation class='tableau' formula='&quot;Percent Difference&quot;' />
        <members>
          <member value='&quot;Actual Difference&quot;' />
          <member value='&quot;Percent Difference&quot;' />
        </members>
      </column>
      <column caption='OTA Ad Unit Type' datatype='string' name='[GDS Ad Unit Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Total GDS List Page&quot;' />
          <member value='&quot;Total Hotel Details Page&quot;' />
          <member value='&quot;Total Hotel List Page&quot;' />
          <member value='&quot;Total Packages List Page&quot;' />
          <member value='&quot;Total SEM List Page&quot;' />
          <member value='&quot;Apollo List Page&quot;' />
          <member value='&quot;Galileo List Page&quot;' />
          <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
          <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
          <member value='&quot;Hotel List Page - CheapTickets&quot;' />
          <member value='&quot;Hotel List Page - ebookers.com&quot;' />
          <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
          <member value='&quot;Hotel List Page - HotelClub&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
          <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
          <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
          <member value='&quot;Martini Package Page - Travelocity&quot;' />
          <member value='&quot;Package List Page - CheapTickets&quot;' />
          <member value='&quot;Package List Page - Orbitz Global&quot;' />
          <member value='&quot;Package List Page - Travelocity&quot;' />
          <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
          <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
          <member value='&quot;Worldspan List Page&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Aberdeen&quot;' />
          <member value='&quot;Abu Dhabi&quot;' />
          <member value='&quot;Adelaide&quot;' />
          <member value='&quot;Albany&quot;' />
          <member value='&quot;Albuquerque&quot;' />
          <member value='&quot;Amsterdam&quot;' />
          <member value='&quot;Anchorage&quot;' />
          <member value='&quot;Asheville&quot;' />
          <member value='&quot;Aspen&quot;' />
          <member value='&quot;Athens&quot;' />
          <member value='&quot;Atlanta&quot;' />
          <member value='&quot;Atlantic City&quot;' />
          <member value='&quot;Auckland&quot;' />
          <member value='&quot;Austin&quot;' />
          <member value='&quot;Bali&quot;' />
          <member value='&quot;Baltimore&quot;' />
          <member value='&quot;Bangkok&quot;' />
          <member value='&quot;Barcelona&quot;' />
          <member value='&quot;Beijing&quot;' />
          <member value='&quot;Berlin&quot;' />
          <member value='&quot;Big Island&quot;' />
          <member value='&quot;Biloxi&quot;' />
          <member value='&quot;Birmingham&quot;' />
          <member value='&quot;Bloemfontein&quot;' />
          <member value='&quot;Boise&quot;' />
          <member value='&quot;Bologna&quot;' />
          <member value='&quot;Boston&quot;' />
          <member value='&quot;Branson&quot;' />
          <member value='&quot;Breckenridge&quot;' />
          <member value='&quot;Brisbane&quot;' />
          <member value='&quot;Brussels&quot;' />
          <member value='&quot;Budapest&quot;' />
          <member value='&quot;Buenos Aires&quot;' />
          <member value='&quot;Buffalo&quot;' />
          <member value='&quot;Calgary&quot;' />
          <member value='&quot;Cancun&quot;' />
          <member value='&quot;Cape Town&quot;' />
          <member value='&quot;Charleston&quot;' />
          <member value='&quot;Charlotte&quot;' />
          <member value='&quot;Chicago&quot;' />
          <member value='&quot;Cincinnati&quot;' />
          <member value='&quot;Cleveland&quot;' />
          <member value='&quot;Columbus&quot;' />
          <member value='&quot;Copenhagen&quot;' />
          <member value='&quot;Corpus Christi&quot;' />
          <member value='&quot;Dallas&quot;' />
          <member value='&quot;Daytona Beach&quot;' />
          <member value='&quot;Delhi&quot;' />
          <member value='&quot;Denver&quot;' />
          <member value='&quot;Des Moines&quot;' />
          <member value='&quot;Detroit&quot;' />
          <member value='&quot;Dubai&quot;' />
          <member value='&quot;Dublin&quot;' />
          <member value='&quot;Durban&quot;' />
          <member value='&quot;Dusseldorf&quot;' />
          <member value='&quot;East London&quot;' />
          <member value='&quot;Edinburgh&quot;' />
          <member value='&quot;Edmonton&quot;' />
          <member value='&quot;Flagstaff&quot;' />
          <member value='&quot;Florence&quot;' />
          <member value='&quot;Florida Keys&quot;' />
          <member value='&quot;Fort Lauderdale&quot;' />
          <member value='&quot;Fort Myers&quot;' />
          <member value='&quot;Frankfurt&quot;' />
          <member value='&quot;Geneva&quot;' />
          <member value='&quot;Gold Coast&quot;' />
          <member value='&quot;Grand Rapids&quot;' />
          <member value='&quot;Guanacaste&quot;' />
          <member value='&quot;Guangzhou&quot;' />
          <member value='&quot;Halifax&quot;' />
          <member value='&quot;Hamburg&quot;' />
          <member value='&quot;Hartford&quot;' />
          <member value='&quot;Hilton Head&quot;' />
          <member value='&quot;Ho Chi Minh City&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Honolulu&quot;' />
          <member value='&quot;Houston&quot;' />
          <member value='&quot;Indianapolis&quot;' />
          <member value='&quot;Istanbul&quot;' />
          <member value='&quot;Jacksonville&quot;' />
          <member value='&quot;Jakarta&quot;' />
          <member value='&quot;Johannesburg&quot;' />
          <member value='&quot;Kansas City&quot;' />
          <member value='&quot;Kauai&quot;' />
          <member value='&quot;Kimberley&quot;' />
          <member value='&quot;Knoxville&quot;' />
          <member value='&quot;Kuala Lumpur&quot;' />
          <member value='&quot;Lake Tahoe&quot;' />
          <member value='&quot;Lancaster&quot;' />
          <member value='&quot;Las Vegas&quot;' />
          <member value='&quot;Lexington&quot;' />
          <member value='&quot;Lisbon&quot;' />
          <member value='&quot;London&quot;' />
          <member value='&quot;Los Angeles&quot;' />
          <member value='&quot;Los Cabos&quot;' />
          <member value='&quot;Louisville&quot;' />
          <member value='&quot;Macau&quot;' />
          <member value='&quot;Madison&quot;' />
          <member value='&quot;Madrid&quot;' />
          <member value='&quot;Manchester&quot;' />
          <member value='&quot;Manila&quot;' />
          <member value='&quot;Maui&quot;' />
          <member value='&quot;Melbourne&quot;' />
          <member value='&quot;Memphis&quot;' />
          <member value='&quot;Mexico City&quot;' />
          <member value='&quot;Miami&quot;' />
          <member value='&quot;Milan&quot;' />
          <member value='&quot;Milwaukee&quot;' />
          <member value='&quot;Minneapolis&quot;' />
          <member value='&quot;Monterey&quot;' />
          <member value='&quot;Montreal&quot;' />
          <member value='&quot;Moscow&quot;' />
          <member value='&quot;Mumbai&quot;' />
          <member value='&quot;Munich&quot;' />
          <member value='&quot;Myrtle Beach&quot;' />
          <member value='&quot;Naples&quot;' />
          <member value='&quot;Nashville&quot;' />
          <member value='&quot;Nelspruit&quot;' />
          <member value='&quot;New Orleans&quot;' />
          <member value='&quot;New York&quot;' />
          <member value='&quot;Newport&quot;' />
          <member value='&quot;Niagara Falls&quot;' />
          <member value='&quot;Nice&quot;' />
          <member value='&quot;Ocean City&quot;' />
          <member value='&quot;Oklahoma City&quot;' />
          <member value='&quot;Omaha&quot;' />
          <member value='&quot;Orange County&quot;' />
          <member value='&quot;Orlando&quot;' />
          <member value='&quot;Osaka&quot;' />
          <member value='&quot;Other&quot;' />
          <member value='&quot;Palm Beach&quot;' />
          <member value='&quot;Palm Springs&quot;' />
          <member value='&quot;Panama City&quot;' />
          <member value='&quot;Paris&quot;' />
          <member value='&quot;Park City&quot;' />
          <member value='&quot;Pensacola&quot;' />
          <member value='&quot;Perth&quot;' />
          <member value='&quot;Philadelphia&quot;' />
          <member value='&quot;Phoenix&quot;' />
          <member value='&quot;Phuket&quot;' />
          <member value='&quot;Pittsburgh&quot;' />
          <member value='&quot;Polokwane&quot;' />
          <member value='&quot;Port Elizabeth&quot;' />
          <member value='&quot;Portland&quot;' />
          <member value='&quot;Prague&quot;' />
          <member value='&quot;Pretoria&quot;' />
          <member value='&quot;Providence&quot;' />
          <member value='&quot;Puerto Plata&quot;' />
          <member value='&quot;Punta Cana&quot;' />
          <member value='&quot;Raleigh-Durham&quot;' />
          <member value='&quot;Reno&quot;' />
          <member value='&quot;Rest of Argentina&quot;' />
          <member value='&quot;Rest of Australia&quot;' />
          <member value='&quot;Rest of Austria&quot;' />
          <member value='&quot;Rest of Belgium&quot;' />
          <member value='&quot;Rest of Brazil&quot;' />
          <member value='&quot;Rest of Canada&quot;' />
          <member value='&quot;Rest of Chile&quot;' />
          <member value='&quot;Rest of China&quot;' />
          <member value='&quot;Rest of Costa Rica&quot;' />
          <member value='&quot;Rest of Czech Republic&quot;' />
          <member value='&quot;Rest of Denmark&quot;' />
          <member value='&quot;Rest of Dominican Republic&quot;' />
          <member value='&quot;Rest of France&quot;' />
          <member value='&quot;Rest of Germany&quot;' />
          <member value='&quot;Rest of Greece&quot;' />
          <member value='&quot;Rest of Hong Kong&quot;' />
          <member value='&quot;Rest of Hungary&quot;' />
          <member value='&quot;Rest of India&quot;' />
          <member value='&quot;Rest of Indonesia&quot;' />
          <member value='&quot;Rest of Ireland&quot;' />
          <member value='&quot;Rest of Italy&quot;' />
          <member value='&quot;Rest of Japan&quot;' />
          <member value='&quot;Rest of Korea&quot;' />
          <member value='&quot;Rest of Malaysia&quot;' />
          <member value='&quot;Rest of Mexico&quot;' />
          <member value='&quot;Rest of Netherlands&quot;' />
          <member value='&quot;Rest of New Zealand&quot;' />
          <member value='&quot;Rest of Panama&quot;' />
          <member value='&quot;Rest of Philippines&quot;' />
          <member value='&quot;Rest of Portugal&quot;' />
          <member value='&quot;Rest of Puerto Rico&quot;' />
          <member value='&quot;Rest of Russian Federation&quot;' />
          <member value='&quot;Rest of Singapore&quot;' />
          <member value='&quot;Rest of South Africa&quot;' />
          <member value='&quot;Rest of Spain&quot;' />
          <member value='&quot;Rest of Sweden&quot;' />
          <member value='&quot;Rest of Switzerland&quot;' />
          <member value='&quot;Rest of Taiwan&quot;' />
          <member value='&quot;Rest of Thailand&quot;' />
          <member value='&quot;Rest of Turkey&quot;' />
          <member value='&quot;Rest of UAE&quot;' />
          <member value='&quot;Rest of UK&quot;' />
          <member value='&quot;Rest of US&quot;' />
          <member value='&quot;Rest of Vietnam&quot;' />
          <member value='&quot;Rest of World&quot;' />
          <member value='&quot;Richmond&quot;' />
          <member value='&quot;Rio De Janeiro&quot;' />
          <member value='&quot;Rome&quot;' />
          <member value='&quot;Sacramento&quot;' />
          <member value='&quot;Salt Lake City&quot;' />
          <member value='&quot;San Antonio&quot;' />
          <member value='&quot;San Diego&quot;' />
          <member value='&quot;San Francisco&quot;' />
          <member value='&quot;San Jose&quot;' />
          <member value='&quot;San Juan&quot;' />
          <member value='&quot;Santa Barbara&quot;' />
          <member value='&quot;Santa Cruz&quot;' />
          <member value='&quot;Santa Fe&quot;' />
          <member value='&quot;Santiago&quot;' />
          <member value='&quot;Santo Domingo&quot;' />
          <member value='&quot;Sao Paulo&quot;' />
          <member value='&quot;Sarasota&quot;' />
          <member value='&quot;Savannah&quot;' />
          <member value='&quot;Seattle&quot;' />
          <member value='&quot;Sedona&quot;' />
          <member value='&quot;Seoul&quot;' />
          <member value='&quot;Shanghai&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;South Padre Island&quot;' />
          <member value='&quot;Spokane&quot;' />
          <member value='&quot;St. Louis&quot;' />
          <member value='&quot;St. Petersburg&quot;' />
          <member value='&quot;Stockholm&quot;' />
          <member value='&quot;Sydney&quot;' />
          <member value='&quot;Taipei&quot;' />
          <member value='&quot;Tallahassee&quot;' />
          <member value='&quot;Tampa&quot;' />
          <member value='&quot;Tokyo&quot;' />
          <member value='&quot;Toronto&quot;' />
          <member value='&quot;Tucson&quot;' />
          <member value='&quot;Tulsa&quot;' />
          <member value='&quot;Vail&quot;' />
          <member value='&quot;Vallarta&quot;' />
          <member value='&quot;Vancouver&quot;' />
          <member value='&quot;Venice&quot;' />
          <member value='&quot;Vienna&quot;' />
          <member value='&quot;Virginia Beach&quot;' />
          <member value='&quot;Washington DC&quot;' />
          <member value='&quot;Williamsburg&quot;' />
          <member value='&quot;Wisconsin Dells&quot;' />
          <member value='&quot;Zurich&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Metric]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pages Available&quot;'>
        <calculation class='tableau' formula='&quot;Pages Available&quot;' />
        <members>
          <member value='&quot;Pages Available&quot;' />
          <member value='&quot;Fill Rate&quot;' />
          <member value='&quot;Page CTR&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;Gross Media Revenue&quot;' />
          <member value='&quot;Ads per Page&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
        <calculation class='tableau' formula='&quot;True&quot;' />
        <members>
          <member value='&quot;True&quot;' />
          <member value='&quot;False&quot;' />
        </members>
      </column>
      <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OTA&quot;' />
          <member value='&quot;GDS&quot;' />
        </members>
      </column>
      <column caption='GDS Publisher' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OWW&quot;' />
          <member value='&quot;Travelport&quot;' />
          <member value='&quot;Apollo&quot;' />
          <member value='&quot;CheapTickets&quot;' />
          <member value='&quot;ebookers&quot;' />
          <member value='&quot;Galileo&quot;' />
          <member value='&quot;HotelClub&quot;' />
          <member value='&quot;Orbitz&quot;' />
          <member value='&quot;Travelocity&quot;' />
          <member value='&quot;Worldspan&quot;' />
        </members>
      </column>
      <column caption='OTA Publisher' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OWW&quot;' />
          <member value='&quot;Travelport&quot;' />
          <member value='&quot;Apollo&quot;' />
          <member value='&quot;CheapTickets&quot;' />
          <member value='&quot;ebookers&quot;' />
          <member value='&quot;Galileo&quot;' />
          <member value='&quot;HotelClub&quot;' />
          <member value='&quot;Orbitz&quot;' />
          <member value='&quot;Travelocity&quot;' />
          <member value='&quot;Worldspan&quot;' />
        </members>
      </column>
      <column caption='GDS Ad Unit Type' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Total GDS List Page&quot;' />
          <member value='&quot;Total Hotel Details Page&quot;' />
          <member value='&quot;Total Hotel List Page&quot;' />
          <member value='&quot;Total Packages List Page&quot;' />
          <member value='&quot;Total SEM List Page&quot;' />
          <member value='&quot;Apollo List Page&quot;' />
          <member value='&quot;Galileo List Page&quot;' />
          <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
          <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
          <member value='&quot;Hotel List Page - CheapTickets&quot;' />
          <member value='&quot;Hotel List Page - ebookers.com&quot;' />
          <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
          <member value='&quot;Hotel List Page - HotelClub&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
          <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
          <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
          <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
          <member value='&quot;Martini Package Page - Travelocity&quot;' />
          <member value='&quot;Package List Page - CheapTickets&quot;' />
          <member value='&quot;Package List Page - Orbitz Global&quot;' />
          <member value='&quot;Package List Page - Travelocity&quot;' />
          <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
          <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
          <member value='&quot;Worldspan List Page&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OWW&quot;' />
          <member value='&quot;Travelocity&quot;' />
          <member value='&quot;Travelport&quot;' />
          <member value='&quot;Apollo&quot;' />
          <member value='&quot;CheapTickets&quot;' />
          <member value='&quot;ebookers&quot;' />
          <member value='&quot;Galileo&quot;' />
          <member value='&quot;HotelClub&quot;' />
          <member value='&quot;Orbitz&quot;' />
          <member value='&quot;RatesToGo&quot;' />
          <member value='&quot;Worldspan&quot;' />
        </members>
      </column>
      <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2014-07-06#'>
        <calculation class='tableau' formula='#2014-07-06#' />
      </column>
      <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
        <calculation class='tableau' formula='&quot;Yesterday&quot;' />
        <members>
          <member value='&quot;Yesterday&quot;' />
          <member value='&quot;Reference Day&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='market_data' inline='true' name='market_data (copy 2)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;dimensions.*,&#13;&#10;&#9;data.Impressions,&#13;&#10;&#9;data.Clicks,&#13;&#10;&#9;data.Conversions,&#13;&#10;&#9;data.Spend,&#13;&#10;&#9;data.&quot;Auction Position Sum&quot;,&#13;&#10;&#9;data.Revenue,&#13;&#10;&#9;data.&quot;Exposed Conversions&quot;,&#13;&#10;&#9;data.&quot;Exposed Revenue&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select *&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select&#13;&#10;      distinct(aggregation_level_date_in_et) as Date,&#13;&#10;      0 as Zero&#13;&#10;    from intent_media_production.advertiser_account_report_aggregations&#13;&#10;    where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  ) dates,&#13;&#10;  (&#13;&#10;    select&#13;&#10;      imm.name as &quot;Market Name&quot;,&#13;&#10;      imm.report_segment as &quot;Segment&quot;,&#13;&#10;      imm.country as &quot;Country&quot;,&#13;&#10;      imm.finance_region as &quot;Finance Region&quot;&#13;&#10;    from intent_media_production.intent_media_markets imm&#13;&#10;&#13;&#10;    union&#13;&#10;&#13;&#10;    select&#13;&#10;      &apos;Other&apos; as &quot;Market Name&quot;,&#13;&#10;      &apos;Other&apos; as &quot;Segment&quot;,&#13;&#10;      &apos;Other&apos; as &quot;Country&quot;,&#13;&#10;      &apos;Other&apos; as &quot;Finance Region&quot;&#13;&#10;  ) markets,&#13;&#10;  (&#13;&#10;    select&#13;&#10;      (case&#13;&#10;        when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;        else e.name&#13;&#10;      end) as Pub,&#13;&#10;      s.display_name as &quot;Site&quot;,&#13;&#10;      (case&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;        else &apos;OTA&apos;&#13;&#10;      end) as &quot;SSN Channel Type&quot;,&#13;&#10;      (case&#13;&#10;        when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;        when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;        when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;        when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;        else au.name&#13;&#10;      end) as &quot;Type of Ad Unit&quot;,&#13;&#10;      au.name as &quot;Ad Unit&quot;&#13;&#10;    from intent_media_production.advertiser_account_report_aggregations ppra&#13;&#10;    left join intent_media_production.ad_units au on ppra.ad_unit_id = au.id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;    where ad_type = &apos;SSR&apos;&#13;&#10;    group by&#13;&#10;      (case&#13;&#10;        when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;        else e.name&#13;&#10;      end),&#13;&#10;      s.display_name,&#13;&#10;      (case&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;        else &apos;OTA&apos;&#13;&#10;      end),&#13;&#10;      (case&#13;&#10;        when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;        when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;        when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;        when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;        else au.name&#13;&#10;      end),&#13;&#10;      au.name&#13;&#10;&#9;) ad_unit_names&#13;&#10;) dimensions&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    aggregation_level_date_in_et as Date,&#13;&#10;    (case&#13;&#10;      when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;      else e.name&#13;&#10;    end) as Pub,&#13;&#10;    s.display_name as Site,&#13;&#10;    (case&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;      else &apos;OTA&apos;&#13;&#10;    end) as &quot;SSN Channel Type&quot;,&#13;&#10;    (case&#13;&#10;      when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;      when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;      when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;      when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;      else au.name&#13;&#10;    end) as &quot;Type of Ad Unit&quot;,&#13;&#10;    au.name as &quot;Ad Unit&quot;,&#13;&#10;    ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;    ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment&quot;,&#13;&#10;    ifnull(imm.country, &apos;Other&apos;) as &quot;Country&quot;,&#13;&#10;    ifnull(imm.finance_region, &apos;Other&apos;) as &quot;Finance Region&quot;,&#13;&#10;    sum(impression_count) as Impressions,&#13;&#10;    sum(click_count) as Clicks,&#13;&#10;    sum(click_conversion_count) as Conversions,&#13;&#10;    sum(actual_cpc_sum) as Spend,&#13;&#10;    sum(auction_position_sum) as &quot;Auction Position Sum&quot;,&#13;&#10;    sum(click_conversion_value_sum) as Revenue,&#13;&#10;    sum(exposed_conversion_count) as &quot;Exposed Conversions&quot;,&#13;&#10;    sum(exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;&#13;&#10;  from intent_media_production.advertiser_account_report_aggregations aara&#13;&#10;  left join intent_media_production.ad_units au on au.id = aara.ad_unit_id&#13;&#10;  left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;  left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;  left join intent_media_production.intent_media_markets_publisher_markets immpm on immpm.market_id = aara.market_id&#13;&#10;  left join intent_media_production.intent_media_markets imm on imm.id = immpm.intent_media_market_id&#13;&#10;  where&#13;&#10;    (case&#13;&#10;      when s.name = &apos;TRAVELOCITY&apos;&#13;&#10;        then aggregation_level_date_in_et &gt;&gt;= &apos;2011-04-01&apos; and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;      else&#13;&#10;        aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;        and (((au.name like &apos;%SEM%&apos; or au.name like &apos;%Hotel Details%&apos;) and aggregation_level_date_in_et &gt;&gt;= &apos;2012-05-15&apos;)&#13;&#10;        or (au.name not like &apos;%SEM%&apos; and au.name not like &apos;%Hotel Details%&apos;))&#13;&#10;    end)&#13;&#10;  group by&#13;&#10;    (case&#13;&#10;      when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;      else e.name&#13;&#10;    end),&#13;&#10;    s.display_name,&#13;&#10;    (case&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;      else &apos;OTA&apos;&#13;&#10;    end),&#13;&#10;    (case&#13;&#10;      when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;      when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;      when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;      when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;      else au.name&#13;&#10;    end),&#13;&#10;    au.name,&#13;&#10;    aggregation_level_date_in_et,&#13;&#10;    ifnull(imm.name, &apos;Other&apos;),&#13;&#10;    ifnull(imm.report_segment, &apos;Other&apos;),&#13;&#10;    ifnull(imm.country, &apos;Other&apos;),&#13;&#10;    ifnull(imm.finance_region, &apos;Other&apos;)&#13;&#10;) data&#13;&#10;&#13;&#10;on dimensions.Date = data.Date&#13;&#10;and dimensions.Pub = data.Pub&#13;&#10;and dimensions.Site = data.Site&#13;&#10;and dimensions.&quot;SSN Channel Type&quot; = dimensions.&quot;SSN Channel Type&quot;&#13;&#10;and dimensions.&quot;Type of Ad Unit&quot; = data.&quot;Type of Ad Unit&quot;&#13;&#10;and dimensions.&quot;Ad Unit&quot; = data.&quot;Ad Unit&quot;&#13;&#10;and dimensions.&quot;Market Name&quot; = data.&quot;Market Name&quot;&#13;&#10;and dimensions.&quot;Segment&quot; = data.&quot;Segment&quot;&#13;&#10;and dimensions.&quot;Country&quot; = data.&quot;Country&quot;&#13;&#10;and dimensions.&quot;Finance Region&quot; = data.&quot;Finance Region&quot;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[market_data (copy 2)].[sum:Spend - Ref Week:qk]&quot;' value='Spend  ' />
          <alias key='&quot;[market_data (copy 2)].[usr:Clicked ROI - \%D PPW:qk]&quot;' value='Clicked ROI ' />
          <alias key='&quot;[market_data (copy 2)].[usr:Clicked ROI - \%D PW:qk]&quot;' value='Clicked ROI' />
          <alias key='&quot;[market_data (copy 2)].[usr:Clicked ROI - Ref Week:qk]&quot;' value='Clicked ROI  ' />
          <alias key='&quot;[market_data (copy 2)].[usr:Exposed ROI - \%D PPW:qk]&quot;' value='Exposed ROI ' />
          <alias key='&quot;[market_data (copy 2)].[usr:Exposed ROI - \%D PW:qk]&quot;' value='Exposed ROI' />
          <alias key='&quot;[market_data (copy 2)].[usr:Exposed ROI - Ref Week:qk]&quot;' value='Exposed ROI  ' />
          <alias key='&quot;[market_data (copy 2)].[usr:Spend - \%D PPW:qk]&quot;' value='Spend ' />
          <alias key='&quot;[market_data (copy 2)].[usr:Spend - \%D PW:qk]&quot;' value='Spend' />
        </aliases>
      </column>
      <column datatype='integer' name='[Auction Position Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicked ROI - %D PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Clicked ROI - Ref Week]-[Clicked ROI - PPW])/[Clicked ROI - PPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicked ROI - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Clicked ROI - Ref Week]-[Clicked ROI - PW])/[Clicked ROI - PW]' />
      </column>
      <column datatype='real' name='[Clicked ROI - PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Revenue - PPW])/sum([Spend - PPW])' />
      </column>
      <column datatype='real' name='[Clicked ROI - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Revenue - PW])/sum([Spend - PW])' />
      </column>
      <column datatype='real' name='[Clicked ROI - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Revenue - Ref Week])/sum([Spend - Ref Week])' />
      </column>
      <column datatype='real' name='[Clicked ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Revenue])/sum([Spend])' />
      </column>
      <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Conversions per Click]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Conversions])/sum([Clicks])' />
      </column>
      <column datatype='real' name='[Conversions per Impression]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Conversions])/sum([Impressions])' />
      </column>
      <column datatype='integer' name='[Conversions]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Calculation_4640616224747991]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Exposed Conversions]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Exposed ROI - %D PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Exposed ROI - Ref Week]-[Exposed ROI - PPW])/[Exposed ROI - PPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Exposed ROI - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Exposed ROI - Ref Week]-[Exposed ROI - PW])/[Exposed ROI - PW]' />
      </column>
      <column datatype='real' name='[Exposed ROI - PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Revenue - PPW])/sum([Spend - PPW])' />
      </column>
      <column datatype='real' name='[Exposed ROI - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Revenue - PW])/sum([Spend - PW])' />
      </column>
      <column datatype='real' name='[Exposed ROI - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Revenue - Ref Week])/sum([Spend - Ref Week])' />
      </column>
      <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Revenue])/sum([Spend])' />
      </column>
      <column datatype='real' name='[Exposed Revenue - PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -14,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -21,[Ref Day]) THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' name='[Exposed Revenue - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' name='[Exposed Revenue - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' name='[Exposed Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
      </column>
      <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
      </column>
      <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Is Leap Year]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Ref Day]) % 4 = 0 THEN&#13;&#10;    IF YEAR([Ref Day]) % 100 = 0 THEN&#13;&#10;        IF YEAR([Ref Day]) % 400 = 0 THEN&#13;&#10;            1&#13;&#10;        ELSE 0 END&#13;&#10;    ELSE 0 END&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='string' name='[Label - Pub and Ad Unit]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Type of Ad Unit]&#13;&#10;    WHEN &quot;Total&quot; THEN [Parameters].[Publisher]&#13;&#10;    WHEN &quot;Total Exit Units&quot; THEN [Parameters].[Publisher] + &quot; Exit Units&quot;&#13;&#10;    WHEN &quot;Total List Page&quot; THEN [Parameters].[Publisher] + &quot; List Page&quot;&#13;&#10;    ELSE [Type of Ad Unit]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,[Ref Day]) = 7 THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF [Ref Day] = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,[Ref Day]))) THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;month&apos;,[Ref Day]))-1) END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Last Day of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE MONTH([Ref Day])&#13;&#10;WHEN 1 THEN 31&#13;&#10;WHEN 2 THEN (IF [Is Leap Year] = 1 THEN 29 ELSE 28 END)&#13;&#10;WHEN 3 THEN 31&#13;&#10;WHEN 4 THEN 30&#13;&#10;WHEN 5 THEN 31&#13;&#10;WHEN 6 THEN 30&#13;&#10;WHEN 7 THEN 31&#13;&#10;WHEN 8 THEN 31&#13;&#10;WHEN 9 THEN 30&#13;&#10;WHEN 10 THEN 31&#13;&#10;WHEN 11 THEN 30&#13;&#10;WHEN 12 THEN 31&#13;&#10;END' />
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If MONTH([Ref Day]) = 1 THEN 12 &#13;&#10;ELSE MONTH([Ref Day])-1 END' />
      </column>
      <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Revenue - PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -14,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -21,[Ref Day]) THEN [Revenue] END' />
      </column>
      <column datatype='real' name='[Revenue - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Revenue] END' />
      </column>
      <column datatype='real' name='[Revenue - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Revenue] END' />
      </column>
      <column datatype='real' name='[Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' name='[SDPPW]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Ref Day] - 14' />
      </column>
      <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Ref Day]-7' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Spend - %D PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Spend - Ref Week])-sum([Spend - PPW]))/sum([Spend - PPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Spend - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Spend - Ref Week])-sum([Spend - PW]))/sum([Spend - PW])' />
      </column>
      <column datatype='real' name='[Spend - PPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -14,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -21,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' name='[Spend - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Year of Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF MONTH([Ref Day]) = 1 THEN YEAR([Ref Day])-1&#13;&#10;ELSE YEAR([Ref Day])&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Zero]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
      <column-instance column='[Auction Position Sum]' derivation='Sum' name='[sum:Auction Position Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Conversions]' derivation='Sum' name='[sum:Conversions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversions]' derivation='Sum' name='[sum:Exposed Conversions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Revenue]' derivation='Sum' name='[sum:Exposed Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Is Leap Year]' derivation='Sum' name='[sum:Is Leap Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Last Day of Month]' derivation='Sum' name='[sum:Last Day of Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Previous Month]' derivation='Sum' name='[sum:Previous Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend - Ref Week]' derivation='Sum' name='[sum:Spend - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year of Previous Month]' derivation='Sum' name='[sum:Year of Previous Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Zero]' derivation='Sum' name='[sum:Zero:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicked ROI - %D PPW]' derivation='User' name='[usr:Clicked ROI - %D PPW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicked ROI - %D PW]' derivation='User' name='[usr:Clicked ROI - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicked ROI - Ref Week]' derivation='User' name='[usr:Clicked ROI - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicked ROI]' derivation='User' name='[usr:Clicked ROI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Conversions per Click]' derivation='User' name='[usr:Conversions per Click:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Conversions per Impression]' derivation='User' name='[usr:Conversions per Impression:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed ROI - %D PPW]' derivation='User' name='[usr:Exposed ROI - %D PPW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed ROI - %D PW]' derivation='User' name='[usr:Exposed ROI - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed ROI - Ref Week]' derivation='User' name='[usr:Exposed ROI - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend - %D PPW]' derivation='User' name='[usr:Spend - %D PPW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend - %D PW]' derivation='User' name='[usr:Spend - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\sushmit.roy\Documents\My Tableau Repository\Datasources\ssn_dashboard__market_data copy 1.tde' schema='Extract' tablename='Extract' update-time='9/8/2014 7:56:21 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='8461908' timestamp-start='2014-09-08 19:56:21.681000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.434334' measure-ordering='alphabetic' measure-percentage='0.336773' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#67bf5c'>
              <bucket>2012</bucket>
            </map>
            <map to='#729ece'>
              <bucket>2010</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>2013</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>2011</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[market_data (copy 2)]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[market_data (copy 2)].[sum:Auction Position Sum:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[market_data (copy 2)].[usr:Conversions per Click:qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[market_data (copy 2)].[usr:Clicked ROI - \%D PPW:qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[market_data (copy 2)].[usr:Clicked ROI - \%D PW:qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[market_data (copy 2)].[usr:Clicked ROI - Ref Week:qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[market_data (copy 2)].[usr:Clicked ROI:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[market_data (copy 2)].[sum:Revenue:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[market_data (copy 2)].[sum:Is Leap Year:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[market_data (copy 2)].[sum:Exposed Revenue:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[market_data (copy 2)].[usr:Conversions per Impression:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[market_data (copy 2)].[sum:Year of Previous Month:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[market_data (copy 2)].[sum:Last Day of Month:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[market_data (copy 2)].[sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[market_data (copy 2)].[sum:Spend:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[market_data (copy 2)].[sum:Exposed Conversions:qk]&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;[market_data (copy 2)].[sum:Zero:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[market_data (copy 2)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[market_data (copy 2)].[sum:Spend - Ref Week:qk]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[market_data (copy 2)].[usr:Spend - \%D PPW:qk]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[market_data (copy 2)].[usr:Spend - \%D PW:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[market_data (copy 2)].[sum:Previous Month:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[market_data (copy 2)].[sum:Clicks:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[market_data (copy 2)].[usr:Exposed ROI - \%D PPW:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[market_data (copy 2)].[usr:Exposed ROI - \%D PW:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[market_data (copy 2)].[usr:Exposed ROI - Ref Week:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[market_data (copy 2)].[usr:Exposed ROI:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[market_data (copy 2)].[sum:Conversions:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Breakdown Color:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Apollo&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Top 10&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Rest of US&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Worldspan&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;HotelClub&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;CheapTickets&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Travelocity&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Orbitz&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;11 to 40&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Galileo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;ebookers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Ad Unit Type]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Total GDS List Page&quot;' />
            <member value='&quot;Total Hotel Details Page&quot;' />
            <member value='&quot;Total Hotel List Page&quot;' />
            <member value='&quot;Total Packages List Page&quot;' />
            <member value='&quot;Total SEM List Page&quot;' />
            <member value='&quot;Apollo List Page&quot;' />
            <member value='&quot;Galileo List Page&quot;' />
            <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
            <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;Hotel List Page - ebookers.com&quot;' />
            <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
            <member value='&quot;Hotel List Page - HotelClub&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
            <member value='&quot;Hotel List Page - RatesToGo&quot;' />
            <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
            <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
            <member value='&quot;HotelReservations.com - SSN - Hotel - OP - List Page&quot;' />
            <member value='&quot;Martini Package Page - Travelocity&quot;' />
            <member value='&quot;Package List Page - CheapTickets&quot;' />
            <member value='&quot;Package List Page - Orbitz Global&quot;' />
            <member value='&quot;Package List Page - Travelocity&quot;' />
            <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Worldspan List Page&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Site&quot;'>
          <calculation class='tableau' formula='&quot;Site&quot;' />
          <members>
            <member value='&quot;Site&quot;' />
            <member value='&quot;Page Type&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Segment&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Aberdeen&quot;' />
            <member value='&quot;Abu Dhabi&quot;' />
            <member value='&quot;Adelaide&quot;' />
            <member value='&quot;Albany&quot;' />
            <member value='&quot;Albuquerque&quot;' />
            <member value='&quot;Amsterdam&quot;' />
            <member value='&quot;Anchorage&quot;' />
            <member value='&quot;Asheville&quot;' />
            <member value='&quot;Aspen&quot;' />
            <member value='&quot;Athens&quot;' />
            <member value='&quot;Atlanta&quot;' />
            <member value='&quot;Atlantic City&quot;' />
            <member value='&quot;Auckland&quot;' />
            <member value='&quot;Austin&quot;' />
            <member value='&quot;Bali&quot;' />
            <member value='&quot;Baltimore&quot;' />
            <member value='&quot;Bangkok&quot;' />
            <member value='&quot;Barcelona&quot;' />
            <member value='&quot;Beijing&quot;' />
            <member value='&quot;Berlin&quot;' />
            <member value='&quot;Big Island&quot;' />
            <member value='&quot;Biloxi&quot;' />
            <member value='&quot;Birmingham&quot;' />
            <member value='&quot;Bloemfontein&quot;' />
            <member value='&quot;Boise&quot;' />
            <member value='&quot;Bologna&quot;' />
            <member value='&quot;Boston&quot;' />
            <member value='&quot;Branson&quot;' />
            <member value='&quot;Breckenridge&quot;' />
            <member value='&quot;Brisbane&quot;' />
            <member value='&quot;Brussels&quot;' />
            <member value='&quot;Budapest&quot;' />
            <member value='&quot;Buenos Aires&quot;' />
            <member value='&quot;Buffalo&quot;' />
            <member value='&quot;Calgary&quot;' />
            <member value='&quot;Cancun&quot;' />
            <member value='&quot;Cape Town&quot;' />
            <member value='&quot;Charleston&quot;' />
            <member value='&quot;Charlotte&quot;' />
            <member value='&quot;Chicago&quot;' />
            <member value='&quot;Cincinnati&quot;' />
            <member value='&quot;Cleveland&quot;' />
            <member value='&quot;Columbus&quot;' />
            <member value='&quot;Copenhagen&quot;' />
            <member value='&quot;Corpus Christi&quot;' />
            <member value='&quot;Dallas&quot;' />
            <member value='&quot;Daytona Beach&quot;' />
            <member value='&quot;Delhi&quot;' />
            <member value='&quot;Denver&quot;' />
            <member value='&quot;Des Moines&quot;' />
            <member value='&quot;Detroit&quot;' />
            <member value='&quot;Dubai&quot;' />
            <member value='&quot;Dublin&quot;' />
            <member value='&quot;Durban&quot;' />
            <member value='&quot;Dusseldorf&quot;' />
            <member value='&quot;East London&quot;' />
            <member value='&quot;Edinburgh&quot;' />
            <member value='&quot;Edmonton&quot;' />
            <member value='&quot;Flagstaff&quot;' />
            <member value='&quot;Florence&quot;' />
            <member value='&quot;Florida Keys&quot;' />
            <member value='&quot;Fort Lauderdale&quot;' />
            <member value='&quot;Fort Myers&quot;' />
            <member value='&quot;Frankfurt&quot;' />
            <member value='&quot;Geneva&quot;' />
            <member value='&quot;Gold Coast&quot;' />
            <member value='&quot;Grand Rapids&quot;' />
            <member value='&quot;Guanacaste&quot;' />
            <member value='&quot;Guangzhou&quot;' />
            <member value='&quot;Halifax&quot;' />
            <member value='&quot;Hamburg&quot;' />
            <member value='&quot;Hartford&quot;' />
            <member value='&quot;Hilton Head&quot;' />
            <member value='&quot;Ho Chi Minh City&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Honolulu&quot;' />
            <member value='&quot;Houston&quot;' />
            <member value='&quot;Indianapolis&quot;' />
            <member value='&quot;Istanbul&quot;' />
            <member value='&quot;Jacksonville&quot;' />
            <member value='&quot;Jakarta&quot;' />
            <member value='&quot;Johannesburg&quot;' />
            <member value='&quot;Kansas City&quot;' />
            <member value='&quot;Kauai&quot;' />
            <member value='&quot;Kimberley&quot;' />
            <member value='&quot;Knoxville&quot;' />
            <member value='&quot;Kuala Lumpur&quot;' />
            <member value='&quot;Lake Tahoe&quot;' />
            <member value='&quot;Lancaster&quot;' />
            <member value='&quot;Las Vegas&quot;' />
            <member value='&quot;Lexington&quot;' />
            <member value='&quot;Lisbon&quot;' />
            <member value='&quot;London&quot;' />
            <member value='&quot;Los Angeles&quot;' />
            <member value='&quot;Los Cabos&quot;' />
            <member value='&quot;Louisville&quot;' />
            <member value='&quot;Macau&quot;' />
            <member value='&quot;Madison&quot;' />
            <member value='&quot;Madrid&quot;' />
            <member value='&quot;Manchester&quot;' />
            <member value='&quot;Manila&quot;' />
            <member value='&quot;Maui&quot;' />
            <member value='&quot;Melbourne&quot;' />
            <member value='&quot;Memphis&quot;' />
            <member value='&quot;Mexico City&quot;' />
            <member value='&quot;Miami&quot;' />
            <member value='&quot;Milan&quot;' />
            <member value='&quot;Milwaukee&quot;' />
            <member value='&quot;Minneapolis&quot;' />
            <member value='&quot;Monterey&quot;' />
            <member value='&quot;Montreal&quot;' />
            <member value='&quot;Moscow&quot;' />
            <member value='&quot;Mumbai&quot;' />
            <member value='&quot;Munich&quot;' />
            <member value='&quot;Myrtle Beach&quot;' />
            <member value='&quot;Naples&quot;' />
            <member value='&quot;Nashville&quot;' />
            <member value='&quot;Nelspruit&quot;' />
            <member value='&quot;New Orleans&quot;' />
            <member value='&quot;New York&quot;' />
            <member value='&quot;Newport&quot;' />
            <member value='&quot;Niagara Falls&quot;' />
            <member value='&quot;Nice&quot;' />
            <member value='&quot;Ocean City&quot;' />
            <member value='&quot;Oklahoma City&quot;' />
            <member value='&quot;Omaha&quot;' />
            <member value='&quot;Orange County&quot;' />
            <member value='&quot;Orlando&quot;' />
            <member value='&quot;Osaka&quot;' />
            <member value='&quot;Other&quot;' />
            <member value='&quot;Palm Beach&quot;' />
            <member value='&quot;Palm Springs&quot;' />
            <member value='&quot;Panama City&quot;' />
            <member value='&quot;Paris&quot;' />
            <member value='&quot;Park City&quot;' />
            <member value='&quot;Pensacola&quot;' />
            <member value='&quot;Perth&quot;' />
            <member value='&quot;Philadelphia&quot;' />
            <member value='&quot;Phoenix&quot;' />
            <member value='&quot;Phuket&quot;' />
            <member value='&quot;Pittsburgh&quot;' />
            <member value='&quot;Polokwane&quot;' />
            <member value='&quot;Port Elizabeth&quot;' />
            <member value='&quot;Portland&quot;' />
            <member value='&quot;Prague&quot;' />
            <member value='&quot;Pretoria&quot;' />
            <member value='&quot;Providence&quot;' />
            <member value='&quot;Puerto Plata&quot;' />
            <member value='&quot;Punta Cana&quot;' />
            <member value='&quot;Raleigh-Durham&quot;' />
            <member value='&quot;Reno&quot;' />
            <member value='&quot;Rest of Argentina&quot;' />
            <member value='&quot;Rest of Australia&quot;' />
            <member value='&quot;Rest of Austria&quot;' />
            <member value='&quot;Rest of Belgium&quot;' />
            <member value='&quot;Rest of Brazil&quot;' />
            <member value='&quot;Rest of Canada&quot;' />
            <member value='&quot;Rest of Chile&quot;' />
            <member value='&quot;Rest of China&quot;' />
            <member value='&quot;Rest of Costa Rica&quot;' />
            <member value='&quot;Rest of Czech Republic&quot;' />
            <member value='&quot;Rest of Denmark&quot;' />
            <member value='&quot;Rest of Dominican Republic&quot;' />
            <member value='&quot;Rest of France&quot;' />
            <member value='&quot;Rest of Germany&quot;' />
            <member value='&quot;Rest of Greece&quot;' />
            <member value='&quot;Rest of Hong Kong&quot;' />
            <member value='&quot;Rest of Hungary&quot;' />
            <member value='&quot;Rest of India&quot;' />
            <member value='&quot;Rest of Indonesia&quot;' />
            <member value='&quot;Rest of Ireland&quot;' />
            <member value='&quot;Rest of Italy&quot;' />
            <member value='&quot;Rest of Japan&quot;' />
            <member value='&quot;Rest of Korea&quot;' />
            <member value='&quot;Rest of Malaysia&quot;' />
            <member value='&quot;Rest of Mexico&quot;' />
            <member value='&quot;Rest of Netherlands&quot;' />
            <member value='&quot;Rest of New Zealand&quot;' />
            <member value='&quot;Rest of Panama&quot;' />
            <member value='&quot;Rest of Philippines&quot;' />
            <member value='&quot;Rest of Portugal&quot;' />
            <member value='&quot;Rest of Puerto Rico&quot;' />
            <member value='&quot;Rest of Russian Federation&quot;' />
            <member value='&quot;Rest of Singapore&quot;' />
            <member value='&quot;Rest of South Africa&quot;' />
            <member value='&quot;Rest of Spain&quot;' />
            <member value='&quot;Rest of Sweden&quot;' />
            <member value='&quot;Rest of Switzerland&quot;' />
            <member value='&quot;Rest of Taiwan&quot;' />
            <member value='&quot;Rest of Thailand&quot;' />
            <member value='&quot;Rest of Turkey&quot;' />
            <member value='&quot;Rest of UAE&quot;' />
            <member value='&quot;Rest of UK&quot;' />
            <member value='&quot;Rest of US&quot;' />
            <member value='&quot;Rest of Vietnam&quot;' />
            <member value='&quot;Rest of World&quot;' />
            <member value='&quot;Richmond&quot;' />
            <member value='&quot;Rio De Janeiro&quot;' />
            <member value='&quot;Rome&quot;' />
            <member value='&quot;Sacramento&quot;' />
            <member value='&quot;Salt Lake City&quot;' />
            <member value='&quot;San Antonio&quot;' />
            <member value='&quot;San Diego&quot;' />
            <member value='&quot;San Francisco&quot;' />
            <member value='&quot;San Jose&quot;' />
            <member value='&quot;San Juan&quot;' />
            <member value='&quot;Santa Barbara&quot;' />
            <member value='&quot;Santa Cruz&quot;' />
            <member value='&quot;Santa Fe&quot;' />
            <member value='&quot;Santiago&quot;' />
            <member value='&quot;Santo Domingo&quot;' />
            <member value='&quot;Sao Paulo&quot;' />
            <member value='&quot;Sarasota&quot;' />
            <member value='&quot;Savannah&quot;' />
            <member value='&quot;Seattle&quot;' />
            <member value='&quot;Sedona&quot;' />
            <member value='&quot;Seoul&quot;' />
            <member value='&quot;Shanghai&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;South Padre Island&quot;' />
            <member value='&quot;Spokane&quot;' />
            <member value='&quot;St. Louis&quot;' />
            <member value='&quot;St. Petersburg&quot;' />
            <member value='&quot;Stockholm&quot;' />
            <member value='&quot;Sydney&quot;' />
            <member value='&quot;Taipei&quot;' />
            <member value='&quot;Tallahassee&quot;' />
            <member value='&quot;Tampa&quot;' />
            <member value='&quot;Tokyo&quot;' />
            <member value='&quot;Toronto&quot;' />
            <member value='&quot;Tucson&quot;' />
            <member value='&quot;Tulsa&quot;' />
            <member value='&quot;Vail&quot;' />
            <member value='&quot;Vallarta&quot;' />
            <member value='&quot;Vancouver&quot;' />
            <member value='&quot;Venice&quot;' />
            <member value='&quot;Vienna&quot;' />
            <member value='&quot;Virginia Beach&quot;' />
            <member value='&quot;Washington DC&quot;' />
            <member value='&quot;Williamsburg&quot;' />
            <member value='&quot;Wisconsin Dells&quot;' />
            <member value='&quot;Zurich&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
          <calculation class='tableau' formula='&quot;True&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;RatesToGo&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2014-07-06#'>
          <calculation class='tableau' formula='#2014-07-06#' />
        </column>
        <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
          <calculation class='tableau' formula='&quot;Yesterday&quot;' />
          <members>
            <member value='&quot;Yesterday&quot;' />
            <member value='&quot;Reference Day&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='active_hotels_with_budget' inline='true' name='active_hotels_with_budget (copy 2)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;pa.Date,&#13;&#10;&#9;pa.&quot;Advertiser ID&quot;,&#13;&#10;&#9;pa.&quot;Market ID&quot;,&#13;&#10;&#9;pa.Site as &quot;Site&quot;,&#13;&#10;&#9;ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;&#9;ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment&quot;,&#13;&#10;&#9;ifnull(imm.country, &apos;Other&apos;) as &quot;Country&quot;,&#13;&#10;&#9;ifnull(imm.finance_region, &apos;Other&apos;) as &quot;Finance Region&quot;,&#13;&#10;&#9;pa.Pub,&#13;&#10;&#9;pa.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;spend_query.&quot;Impressions Served&quot;,&#13;&#10;&#9;spend_query.Clicks,&#13;&#10;&#9;spend_query.Spend,&#13;&#10;&#9;spend_query.Conversions,&#13;&#10;&#9;spend_query.&quot;Exposed Conversions&quot;,&#13;&#10;&#9;spend_query.&quot;Conversion Value Sum&quot;,&#13;&#10;&#9;spend_query.&quot;Exposed Conversion Value Sum&quot;&#13;&#10;from&#13;&#10;&#9;(&#13;&#10;&#9;  select&#13;&#10;      pa.aggregation_level_date_in_et as Date,&#13;&#10;      pa.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;      pa.market_id as &quot;Market ID&quot;,&#13;&#10;      s.display_name as Site,&#13;&#10;      (case&#13;&#10;        when ep.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;        when ep.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;        else ep.name&#13;&#10;      end) as Pub,&#13;&#10;      ea.ssn_channel_type as &quot;SSN Channel Type&quot;&#13;&#10;    from intent_media_production.participating_advertisers pa&#13;&#10;    left join intent_media_production.sites s on s.name = pa.site&#13;&#10;    left join intent_media_production.entities ep on ep.id = s.publisher_id&#13;&#10;    left join intent_media_production.entities ea on ea.id = pa.advertiser_id&#13;&#10;    where ep.active = 1&#13;&#10;      and ea.active = 1&#13;&#10;      and ea.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;      and ea.first_auction_participation is not null&#13;&#10;      and DATE(ea.first_auction_participation at timezone &apos;America/New_York&apos;) &lt;&lt;= pa.aggregation_level_date_in_et&#13;&#10;    group by&#13;&#10;      pa.aggregation_level_date_in_et,&#13;&#10;      pa.advertiser_id,&#13;&#10;      pa.market_id,&#13;&#10;      s.display_name,&#13;&#10;      (case&#13;&#10;        when ep.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;        when ep.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;        else ep.name&#13;&#10;      end),&#13;&#10;      ea.ssn_channel_type&#13;&#10;  ) pa&#13;&#10;left join&#13;&#10;&#9;(&#13;&#10;&#9;  select&#13;&#10;      aara.aggregation_level_date_in_et as Date,&#13;&#10;      aara.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;      aara.market_id as &quot;Market ID&quot;,&#13;&#10;      s.display_name as Site,&#13;&#10;      sum(impression_count) as &quot;Impressions Served&quot;,&#13;&#10;      sum(click_count) as Clicks,&#13;&#10;      sum(actual_cpc_sum) as Spend,&#13;&#10;      sum(click_conversion_count) as Conversions,&#13;&#10;      sum(exposed_conversion_count) as &quot;Exposed Conversions&quot;,&#13;&#10;      sum(click_conversion_value_sum) as &quot;Conversion Value Sum&quot;,&#13;&#10;      sum(exposed_conversion_value_sum) as &quot;Exposed Conversion Value Sum&quot;&#13;&#10;    from intent_media_production.advertiser_account_report_aggregations aara&#13;&#10;    left join intent_media_production.ad_units au on au.id = aara.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    group by&#13;&#10;      aara.aggregation_level_date_in_et,&#13;&#10;      aara.advertiser_id,&#13;&#10;      aara.market_id,&#13;&#10;      s.display_name&#13;&#10;  ) spend_query&#13;&#10;on pa.Date = spend_query.Date&#13;&#10;and pa.&quot;Advertiser ID&quot; = spend_query.&quot;Advertiser ID&quot;&#13;&#10;and pa.&quot;Market ID&quot; = spend_query.&quot;Market ID&quot;&#13;&#10;and pa.Site = spend_query.Site&#13;&#10;left join intent_media_production.intent_media_markets_publisher_markets immpm on immpm.market_id = pa.&quot;Market ID&quot;&#13;&#10;left join intent_media_production.intent_media_markets imm on imm.id = immpm.intent_media_market_id&#9;&#13;&#10;where pa.Date &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;select&#13;&#10;&#9;Date,&#13;&#10;&#9;cast(null as int) as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&quot;Market ID&quot;,&#13;&#10;&#9;Site,&#13;&#10;&#9;&quot;Market Name&quot;,&#13;&#10;&#9;Segment,&#13;&#10;&#9;Country,&#13;&#10;&#9;&quot;Finance Region&quot;,&#13;&#10;&#9;Pub,&#13;&#10;&#9;&quot;SSN Channel Type&quot;,&#13;&#10;&#9;cast(null as integer) as &quot;Impressions Served&quot;,&#13;&#10;&#9;cast(null as integer) as Clicks,&#13;&#10;&#9;cast(null as float) as Spend,&#13;&#10;&#9;cast(null as integer) as Conversions,&#13;&#10;&#9;cast(null as integer) as &quot;Exposed Conversions&quot;,&#13;&#10;&#9;cast(null as float) as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;cast(null as float) as &quot;Exposed Conversion Value Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;&#9;  distinct(aggregation_level_date_in_et) as Date,&#13;&#10;&#9;  0 as Zero&#13;&#10;  from intent_media_production.publisher_performance_report_aggregations&#13;&#10;  where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;) dates,&#13;&#10;(&#13;&#10;  select&#13;&#10;&#9;  imm.id as &quot;Market ID&quot;,&#13;&#10;&#9;  imm.name as &quot;Market Name&quot;,&#13;&#10;&#9;  imm.report_segment as &quot;Segment&quot;,&#13;&#10;&#9;  imm.country as &quot;Country&quot;,&#13;&#10;&#9;  imm.finance_region as &quot;Finance Region&quot;&#13;&#10;  from intent_media_production.intent_media_markets imm&#13;&#10;&#13;&#10;  union&#13;&#10;&#13;&#10;  select&#13;&#10;&#9;  cast(null as integer) as &quot;Market ID&quot;,&#13;&#10;&#9;  &apos;Other&apos; as &quot;Market Name&quot;,&#13;&#10;&#9;  &apos;Other&apos; as &quot;Segment&quot;,&#13;&#10;&#9;  &apos;Other&apos; as &quot;Country&quot;,&#13;&#10;&#9;  &apos;Other&apos; as &quot;Finance Region&quot;&#13;&#10;) markets,&#13;&#10;(&#13;&#10;  select&#13;&#10;    s.display_name as Site,&#13;&#10;&#9;  (case&#13;&#10;      when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;      else e.name&#13;&#10;    end) as Pub,&#13;&#10;    (case&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;        else &apos;OTA&apos;&#13;&#10;    end) as &quot;SSN Channel Type&quot;&#13;&#10;  from intent_media_production.publisher_performance_report_aggregations ppra&#13;&#10;  left join intent_media_production.ad_units au on ppra.ad_unit_id = au.id&#13;&#10;  left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;  left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;  where ad_type = &apos;SSR&apos;&#13;&#10;  group by&#13;&#10;    s.display_name,&#13;&#10;    (case&#13;&#10;      when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;      else e.name&#13;&#10;    end),&#13;&#10;&#9;  (case&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;        else &apos;OTA&apos;&#13;&#10;    end)&#13;&#10;) sites</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - Ref Day:qk]&quot;' value='Active Hotels' />
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - Ref Week:qk]&quot;' value='Active Hotels  ' />
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels \%D for Table:qk]&quot;' value='Active Hotels Delta' />
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;' value='Active Hotels ' />
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_2600106161507552:qk]&quot;' value='Budget per Hotel  ' />
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_3610106160432967:qk]&quot;' value='Budget per Hotel ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Auction Participant Count for Table:qk]&quot;' value='Auction Participant Count' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Clicks for Table:qk]&quot;' value='Clicks' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;' value='Gross Media Revenue ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Impressions Served for Table:qk]&quot;' value='Impressions Served' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;' value='Pages Available ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Served for Table:qk]&quot;' value='Pages Served' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page \%D for Table:qk]&quot;' value='Ads per Page Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;' value='Ads per Page ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Auction Participant Count \%D for Table:qk]&quot;' value='Auction Participant Count Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM \%D for Table:qk]&quot;' value='Available eCPM Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;' value='Available eCPM' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Clicks \%D for Table:qk]&quot;' value='Clicks Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC \%D for Table:qk]&quot;' value='CPC Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;' value='CPC ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR \%D for Table:qk]&quot;' value='CTR Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;' value='CTR ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate \%D for Table:qk]&quot;' value='Fill Rate Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;' value='Fill Rate ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue \%D for Table:qk]&quot;' value='Gross Media Revenue Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - Ref Day:qk]&quot;' value='Hotels per Auction ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - Ref Week:qk]&quot;' value='Hotels per Auction  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction \%D for Table:qk]&quot;' value='Hotels per Auction Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;' value='Hotels per Auction' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Impressions Served \%D for Table:qk]&quot;' value='Impressions Served Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Available \%D for Table:qk]&quot;' value='Pages Available Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Served \%D for Table:qk]&quot;' value='Pages Served Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM \%D for Table:qk]&quot;' value='Served eCPM Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;' value='Served eCPM' />
          <alias key='&quot;[sold_hotels (copy 2)].[cum:sum:Sold Hotels:qk]&quot;' value='Total Sold Hotels' />
          <alias key='&quot;[sold_hotels (copy 2)].[sum:Budget for Table:qk]&quot;' value='Budget' />
          <alias key='&quot;[sold_hotels (copy 2)].[usr:Budget \%D for Table:qk]&quot;' value='Budget Delta' />
          <alias key='&quot;[sold_hotels (copy 2)].[usr:Budget per Hotel - Ref Day:qk]&quot;' value='Budget per Hotel' />
          <alias key='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;' value='Sold Hotels' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Active Hotels - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Active Hotels - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Active Hotels - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - MTD]-[Active Hotels - PMTD])/[Active Hotels - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - QTD]-[Active Hotels - PQTD])/[Active Hotels - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - Ref Week]-[Active Hotels - PW])/[Active Hotels - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - YTD]-[Active Hotels - PYTD])/[Active Hotels - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - Ref Day]-[Active Hotels - SDPW])/[Active Hotels - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - Ref Day]-[Active Hotels - SDPY])/[Active Hotels - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - MTD]-[Active Hotels - SMTDPY])/[Active Hotels - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - QTD]-[Active Hotels - SQTDPY])/[Active Hotels - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Active Hotels - Ref Week]-[Active Hotels - SWPY])/[Active Hotels - SWPY]' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Advertiser ID] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Advertiser ID] END)&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Advertiser ID] END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;THEN [Advertiser ID] &#13;&#10;END)&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Date] = [Ref Day] THEN [Advertiser ID] END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Advertiser ID] END)' scope-isolation='false' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Advertiser ID] END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Advertiser ID] END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Advertiser ID]&#13;&#10;END)&#13;&#10;END&#13;&#10;)' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Active Hotels - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Active Hotels - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Active Hotels - MTD]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Active Hotels]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Advertiser ID])' />
      </column>
      <column caption='Budget per Hotel - PYTD' datatype='real' default-format='C1033%' name='[Calculation_0040106162202694]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - PYTD])/[Active Hotels - PYTD]' scope-isolation='false' />
      </column>
      <column caption='Month Name' datatype='string' name='[Calculation_0920616224732033]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH([Date])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D PYTD' datatype='real' default-format='p0.0%' name='[Calculation_1070106162755693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2790106162448809]-[Calculation_0040106162202694])/[Calculation_0040106162202694]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D SDPY' datatype='real' default-format='p0.0%' name='[Calculation_1110106160520217]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_3610106160432967]-[Calculation_4300106160335263])/[Calculation_4300106160335263]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - PQTD' datatype='real' default-format='C1033%' name='[Calculation_1230106162113303]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - PQTD])/[Active Hotels - PQTD]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D SDPW' datatype='real' default-format='p0.0%' name='[Calculation_2460106161409047]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_3610106160432967]-[Calculation_6410106161224985])/[Calculation_6410106161224985]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - Ref Week' datatype='real' default-format='C1033%' name='[Calculation_2600106161507552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - Ref Week])/[Active Hotels - Ref Week]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - SMTDPY' datatype='real' default-format='C1033%' name='[Calculation_2670106162036194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - SMTDPY])/[Active Hotels - SMTDPY]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - YTD' datatype='real' default-format='C1033%' name='[Calculation_2790106162448809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - YTD])/[Active Hotels - YTD]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - SQTDPY' datatype='real' default-format='C1033%' name='[Calculation_2840106162136209]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - SQTDPY])/[Active Hotels - SQTDPY]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D PMTD' datatype='real' default-format='p0.0%' name='[Calculation_3020106162305006]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4170106162336528]-[Calculation_6310106162009648])/[Calculation_6310106162009648]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - Ref Day' datatype='real' default-format='C1033%' name='[Calculation_3610106160432967]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - Ref Day])/[Active Hotels - Ref Day]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - SWPY' datatype='real' default-format='C1033%' name='[Calculation_3610106161728278]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - SWPY])/[Active Hotels - SWPY]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - MTD' datatype='real' default-format='C1033%' name='[Calculation_4170106162336528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - MTD])/[Active Hotels - MTD]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - PW' datatype='real' default-format='C1033%' name='[Calculation_4190106161651870]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - PW])/[Active Hotels - PW]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - SDPY' datatype='real' default-format='C1033%' name='[Calculation_4300106160335263]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - SDPY])/[Active Hotels - SDPY]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D SMTDPY' datatype='real' default-format='p0.0%' name='[Calculation_4960106162539043]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4170106162336528] -[Calculation_2670106162036194])/[Calculation_2670106162036194]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D PQTD' datatype='real' default-format='p0.0%' name='[Calculation_6200106162656365]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_9970106162410403]-[Calculation_1230106162113303])/[Calculation_1230106162113303]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - PMTD' datatype='real' default-format='C1033%' name='[Calculation_6310106162009648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - PMTD])/[Active Hotels - PMTD]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D SQTDPY' datatype='real' default-format='p0.0%' name='[Calculation_6380106162722912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_9970106162410403]-[Calculation_2840106162136209])/[Calculation_2840106162136209]' scope-isolation='false' />
      </column>
      <column caption='Budget for Hotel' datatype='real' default-format='C1033%' name='[Calculation_6380106163627707]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget])/[Active Hotels]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - SDPW' datatype='real' default-format='C1033%' name='[Calculation_6410106161224985]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - SDPW])/[Active Hotels - SDPW]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D SWPY' datatype='real' default-format='p0.0%' name='[Calculation_6560106161837608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2600106161507552]-[Calculation_3610106161728278])/[Calculation_3610106161728278]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - %D PW' datatype='real' default-format='p0.0%' name='[Calculation_8590106161806731]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2600106161507552]-[Calculation_4190106161651870])/[Calculation_4190106161651870]' scope-isolation='false' />
      </column>
      <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
      </column>
      <column caption='Budget per Hotel - QTD' datatype='real' default-format='C1033%' name='[Calculation_9970106162410403]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - QTD])/[Active Hotels - QTD]' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN DATE([Date])&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Calculation_0920616224732033]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Filter for GDS Publisher]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;OWW&quot; OR [Parameters].[Parameter 2] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Parameter 2] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Parameter 2] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
      </column>
      <column datatype='string' name='[Filter for OTA Publisher]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 3] = &quot;OWW&quot; OR [Parameters].[Parameter 3] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Parameter 3] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Parameter 3] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Is Leap Year]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Ref Day]) % 4 = 0 THEN&#13;&#10;    IF YEAR([Ref Day]) % 100 = 0 THEN&#13;&#10;        IF YEAR([Ref Day]) % 400 = 0 THEN&#13;&#10;            1&#13;&#10;        ELSE 0 END&#13;&#10;    ELSE 0 END&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='string' name='[Label - Active Hotels]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Active Hotels&quot;' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Label - Total]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total&quot;' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,[Ref Day]) = 7 THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF [Ref Day] = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,[Ref Day]))) THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;month&apos;,[Ref Day]))-1) END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Last Day of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE MONTH([Ref Day])&#13;&#10;WHEN 1 THEN 31&#13;&#10;WHEN 2 THEN (IF [Is Leap Year] = 1 THEN 29 ELSE 28 END)&#13;&#10;WHEN 3 THEN 31&#13;&#10;WHEN 4 THEN 30&#13;&#10;WHEN 5 THEN 31&#13;&#10;WHEN 6 THEN 30&#13;&#10;WHEN 7 THEN 31&#13;&#10;WHEN 8 THEN 31&#13;&#10;WHEN 9 THEN 30&#13;&#10;WHEN 10 THEN 31&#13;&#10;WHEN 11 THEN 30&#13;&#10;WHEN 12 THEN 31&#13;&#10;END' />
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Market ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Percent of Budget Used]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Spend])/SUM([sold_hotels (copy 2)].[Budget])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Percent of Hotels Active]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Advertiser ID])/[sold_hotels (copy 2)].[Gross Media Revenue 7 Day Average]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If MONTH([Ref Day]) = 1 THEN 12 &#13;&#10;ELSE MONTH([Ref Day])-1 END' />
      </column>
      <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[SDPM]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;month&apos;,-1,[Ref Day]))' />
      </column>
      <column datatype='date' name='[SDPQ]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;quarter&apos;,-1,[Ref Day]))' />
      </column>
      <column datatype='real' name='[Total Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Market Name] = &quot;Total&quot; THEN [Spend] END' />
      </column>
      <column datatype='integer' name='[Year of Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF MONTH([Ref Day]) = 1 THEN YEAR([Ref Day])-1&#13;&#10;ELSE YEAR([Ref Day])&#13;&#10;END' />
      </column>
      <column-instance column='[Active Hotels %D for Table]' derivation='User' name='[usr:Active Hotels %D for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Hotels - Ref Day]' derivation='User' name='[usr:Active Hotels - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Hotels - Ref Week]' derivation='User' name='[usr:Active Hotels - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Hotels for Table]' derivation='User' name='[usr:Active Hotels for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Hotels]' derivation='User' name='[usr:Active Hotels:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2600106161507552]' derivation='User' name='[usr:Calculation_2600106161507552:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3610106160432967]' derivation='User' name='[usr:Calculation_3610106160432967:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent of Hotels Active]' derivation='User' name='[usr:Percent of Hotels Active:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[sold_hotels (copy 2)].[Gross Media Revenue 7 Day Average]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\sushmit.roy\Documents\My Tableau Repository\Datasources\ssn_dashboard__active_hotels_with_budget copy 1.tde' schema='Extract' tablename='Extract' update-time='9/8/2014 7:35:10 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0920616224732033]' formula='CASE MONTH([Date])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Total Spend]' formula='IF [Market Name] = &quot;Total&quot; THEN [Spend] END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11480314' timestamp-start='2014-09-08 19:35:10.085000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.35524' measure-ordering='alphabetic' measure-percentage='0.375666' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Percent of Hotels Active:qk:1]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels:qk]&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Total Sold Hotels:qk]&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Total Sold Hotels:qk]&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;[sold_hotels (copy 2)].[sum:Budget:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Percent of Budget:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Gross Media Revenue 7 Day Average:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;[sold_hotels (copy 2)].[cum:sum:Sold Hotels:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2012</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2013</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2011</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Aberdeen&quot;' />
            <member value='&quot;Abu Dhabi&quot;' />
            <member value='&quot;Adelaide&quot;' />
            <member value='&quot;Albany&quot;' />
            <member value='&quot;Albuquerque&quot;' />
            <member value='&quot;Amsterdam&quot;' />
            <member value='&quot;Anchorage&quot;' />
            <member value='&quot;Asheville&quot;' />
            <member value='&quot;Aspen&quot;' />
            <member value='&quot;Athens&quot;' />
            <member value='&quot;Atlanta&quot;' />
            <member value='&quot;Atlantic City&quot;' />
            <member value='&quot;Auckland&quot;' />
            <member value='&quot;Austin&quot;' />
            <member value='&quot;Bali&quot;' />
            <member value='&quot;Baltimore&quot;' />
            <member value='&quot;Bangkok&quot;' />
            <member value='&quot;Barcelona&quot;' />
            <member value='&quot;Beijing&quot;' />
            <member value='&quot;Berlin&quot;' />
            <member value='&quot;Big Island&quot;' />
            <member value='&quot;Biloxi&quot;' />
            <member value='&quot;Birmingham&quot;' />
            <member value='&quot;Bloemfontein&quot;' />
            <member value='&quot;Boise&quot;' />
            <member value='&quot;Bologna&quot;' />
            <member value='&quot;Boston&quot;' />
            <member value='&quot;Branson&quot;' />
            <member value='&quot;Breckenridge&quot;' />
            <member value='&quot;Brisbane&quot;' />
            <member value='&quot;Brussels&quot;' />
            <member value='&quot;Budapest&quot;' />
            <member value='&quot;Buenos Aires&quot;' />
            <member value='&quot;Buffalo&quot;' />
            <member value='&quot;Calgary&quot;' />
            <member value='&quot;Cancun&quot;' />
            <member value='&quot;Cape Town&quot;' />
            <member value='&quot;Charleston&quot;' />
            <member value='&quot;Charlotte&quot;' />
            <member value='&quot;Chicago&quot;' />
            <member value='&quot;Cincinnati&quot;' />
            <member value='&quot;Cleveland&quot;' />
            <member value='&quot;Columbus&quot;' />
            <member value='&quot;Copenhagen&quot;' />
            <member value='&quot;Corpus Christi&quot;' />
            <member value='&quot;Dallas&quot;' />
            <member value='&quot;Daytona Beach&quot;' />
            <member value='&quot;Delhi&quot;' />
            <member value='&quot;Denver&quot;' />
            <member value='&quot;Des Moines&quot;' />
            <member value='&quot;Detroit&quot;' />
            <member value='&quot;Dubai&quot;' />
            <member value='&quot;Dublin&quot;' />
            <member value='&quot;Durban&quot;' />
            <member value='&quot;Dusseldorf&quot;' />
            <member value='&quot;East London&quot;' />
            <member value='&quot;Edinburgh&quot;' />
            <member value='&quot;Edmonton&quot;' />
            <member value='&quot;Flagstaff&quot;' />
            <member value='&quot;Florence&quot;' />
            <member value='&quot;Florida Keys&quot;' />
            <member value='&quot;Fort Lauderdale&quot;' />
            <member value='&quot;Fort Myers&quot;' />
            <member value='&quot;Frankfurt&quot;' />
            <member value='&quot;Geneva&quot;' />
            <member value='&quot;Gold Coast&quot;' />
            <member value='&quot;Grand Rapids&quot;' />
            <member value='&quot;Guanacaste&quot;' />
            <member value='&quot;Guangzhou&quot;' />
            <member value='&quot;Halifax&quot;' />
            <member value='&quot;Hamburg&quot;' />
            <member value='&quot;Hartford&quot;' />
            <member value='&quot;Hilton Head&quot;' />
            <member value='&quot;Ho Chi Minh City&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Honolulu&quot;' />
            <member value='&quot;Houston&quot;' />
            <member value='&quot;Indianapolis&quot;' />
            <member value='&quot;Istanbul&quot;' />
            <member value='&quot;Jacksonville&quot;' />
            <member value='&quot;Jakarta&quot;' />
            <member value='&quot;Johannesburg&quot;' />
            <member value='&quot;Kansas City&quot;' />
            <member value='&quot;Kauai&quot;' />
            <member value='&quot;Kimberley&quot;' />
            <member value='&quot;Knoxville&quot;' />
            <member value='&quot;Kuala Lumpur&quot;' />
            <member value='&quot;Lake Tahoe&quot;' />
            <member value='&quot;Lancaster&quot;' />
            <member value='&quot;Las Vegas&quot;' />
            <member value='&quot;Lexington&quot;' />
            <member value='&quot;Lisbon&quot;' />
            <member value='&quot;London&quot;' />
            <member value='&quot;Los Angeles&quot;' />
            <member value='&quot;Los Cabos&quot;' />
            <member value='&quot;Louisville&quot;' />
            <member value='&quot;Macau&quot;' />
            <member value='&quot;Madison&quot;' />
            <member value='&quot;Madrid&quot;' />
            <member value='&quot;Manchester&quot;' />
            <member value='&quot;Manila&quot;' />
            <member value='&quot;Maui&quot;' />
            <member value='&quot;Melbourne&quot;' />
            <member value='&quot;Memphis&quot;' />
            <member value='&quot;Mexico City&quot;' />
            <member value='&quot;Miami&quot;' />
            <member value='&quot;Milan&quot;' />
            <member value='&quot;Milwaukee&quot;' />
            <member value='&quot;Minneapolis&quot;' />
            <member value='&quot;Monterey&quot;' />
            <member value='&quot;Montreal&quot;' />
            <member value='&quot;Moscow&quot;' />
            <member value='&quot;Mumbai&quot;' />
            <member value='&quot;Munich&quot;' />
            <member value='&quot;Myrtle Beach&quot;' />
            <member value='&quot;Naples&quot;' />
            <member value='&quot;Nashville&quot;' />
            <member value='&quot;Nelspruit&quot;' />
            <member value='&quot;New Orleans&quot;' />
            <member value='&quot;New York&quot;' />
            <member value='&quot;Newport&quot;' />
            <member value='&quot;Niagara Falls&quot;' />
            <member value='&quot;Nice&quot;' />
            <member value='&quot;Ocean City&quot;' />
            <member value='&quot;Oklahoma City&quot;' />
            <member value='&quot;Omaha&quot;' />
            <member value='&quot;Orange County&quot;' />
            <member value='&quot;Orlando&quot;' />
            <member value='&quot;Osaka&quot;' />
            <member value='&quot;Other&quot;' />
            <member value='&quot;Palm Beach&quot;' />
            <member value='&quot;Palm Springs&quot;' />
            <member value='&quot;Panama City&quot;' />
            <member value='&quot;Paris&quot;' />
            <member value='&quot;Park City&quot;' />
            <member value='&quot;Pensacola&quot;' />
            <member value='&quot;Perth&quot;' />
            <member value='&quot;Philadelphia&quot;' />
            <member value='&quot;Phoenix&quot;' />
            <member value='&quot;Phuket&quot;' />
            <member value='&quot;Pittsburgh&quot;' />
            <member value='&quot;Polokwane&quot;' />
            <member value='&quot;Port Elizabeth&quot;' />
            <member value='&quot;Portland&quot;' />
            <member value='&quot;Prague&quot;' />
            <member value='&quot;Pretoria&quot;' />
            <member value='&quot;Providence&quot;' />
            <member value='&quot;Puerto Plata&quot;' />
            <member value='&quot;Punta Cana&quot;' />
            <member value='&quot;Raleigh-Durham&quot;' />
            <member value='&quot;Reno&quot;' />
            <member value='&quot;Rest of Argentina&quot;' />
            <member value='&quot;Rest of Australia&quot;' />
            <member value='&quot;Rest of Austria&quot;' />
            <member value='&quot;Rest of Belgium&quot;' />
            <member value='&quot;Rest of Brazil&quot;' />
            <member value='&quot;Rest of Canada&quot;' />
            <member value='&quot;Rest of Chile&quot;' />
            <member value='&quot;Rest of China&quot;' />
            <member value='&quot;Rest of Costa Rica&quot;' />
            <member value='&quot;Rest of Czech Republic&quot;' />
            <member value='&quot;Rest of Denmark&quot;' />
            <member value='&quot;Rest of Dominican Republic&quot;' />
            <member value='&quot;Rest of France&quot;' />
            <member value='&quot;Rest of Germany&quot;' />
            <member value='&quot;Rest of Greece&quot;' />
            <member value='&quot;Rest of Hong Kong&quot;' />
            <member value='&quot;Rest of Hungary&quot;' />
            <member value='&quot;Rest of India&quot;' />
            <member value='&quot;Rest of Indonesia&quot;' />
            <member value='&quot;Rest of Ireland&quot;' />
            <member value='&quot;Rest of Italy&quot;' />
            <member value='&quot;Rest of Japan&quot;' />
            <member value='&quot;Rest of Korea&quot;' />
            <member value='&quot;Rest of Malaysia&quot;' />
            <member value='&quot;Rest of Mexico&quot;' />
            <member value='&quot;Rest of Netherlands&quot;' />
            <member value='&quot;Rest of New Zealand&quot;' />
            <member value='&quot;Rest of Panama&quot;' />
            <member value='&quot;Rest of Philippines&quot;' />
            <member value='&quot;Rest of Portugal&quot;' />
            <member value='&quot;Rest of Puerto Rico&quot;' />
            <member value='&quot;Rest of Russian Federation&quot;' />
            <member value='&quot;Rest of Singapore&quot;' />
            <member value='&quot;Rest of South Africa&quot;' />
            <member value='&quot;Rest of Spain&quot;' />
            <member value='&quot;Rest of Sweden&quot;' />
            <member value='&quot;Rest of Switzerland&quot;' />
            <member value='&quot;Rest of Taiwan&quot;' />
            <member value='&quot;Rest of Thailand&quot;' />
            <member value='&quot;Rest of Turkey&quot;' />
            <member value='&quot;Rest of UAE&quot;' />
            <member value='&quot;Rest of UK&quot;' />
            <member value='&quot;Rest of US&quot;' />
            <member value='&quot;Rest of Vietnam&quot;' />
            <member value='&quot;Rest of World&quot;' />
            <member value='&quot;Richmond&quot;' />
            <member value='&quot;Rio De Janeiro&quot;' />
            <member value='&quot;Rome&quot;' />
            <member value='&quot;Sacramento&quot;' />
            <member value='&quot;Salt Lake City&quot;' />
            <member value='&quot;San Antonio&quot;' />
            <member value='&quot;San Diego&quot;' />
            <member value='&quot;San Francisco&quot;' />
            <member value='&quot;San Jose&quot;' />
            <member value='&quot;San Juan&quot;' />
            <member value='&quot;Santa Barbara&quot;' />
            <member value='&quot;Santa Cruz&quot;' />
            <member value='&quot;Santa Fe&quot;' />
            <member value='&quot;Santiago&quot;' />
            <member value='&quot;Santo Domingo&quot;' />
            <member value='&quot;Sao Paulo&quot;' />
            <member value='&quot;Sarasota&quot;' />
            <member value='&quot;Savannah&quot;' />
            <member value='&quot;Seattle&quot;' />
            <member value='&quot;Sedona&quot;' />
            <member value='&quot;Seoul&quot;' />
            <member value='&quot;Shanghai&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;South Padre Island&quot;' />
            <member value='&quot;Spokane&quot;' />
            <member value='&quot;St. Louis&quot;' />
            <member value='&quot;St. Petersburg&quot;' />
            <member value='&quot;Stockholm&quot;' />
            <member value='&quot;Sydney&quot;' />
            <member value='&quot;Taipei&quot;' />
            <member value='&quot;Tallahassee&quot;' />
            <member value='&quot;Tampa&quot;' />
            <member value='&quot;Tokyo&quot;' />
            <member value='&quot;Toronto&quot;' />
            <member value='&quot;Tucson&quot;' />
            <member value='&quot;Tulsa&quot;' />
            <member value='&quot;Vail&quot;' />
            <member value='&quot;Vallarta&quot;' />
            <member value='&quot;Vancouver&quot;' />
            <member value='&quot;Venice&quot;' />
            <member value='&quot;Vienna&quot;' />
            <member value='&quot;Virginia Beach&quot;' />
            <member value='&quot;Washington DC&quot;' />
            <member value='&quot;Williamsburg&quot;' />
            <member value='&quot;Wisconsin Dells&quot;' />
            <member value='&quot;Zurich&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
          <calculation class='tableau' formula='&quot;True&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
          </members>
        </column>
        <column caption='GDS Publisher' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column caption='OTA Publisher' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;RatesToGo&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2014-07-06#'>
          <calculation class='tableau' formula='#2014-07-06#' />
        </column>
        <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
          <calculation class='tableau' formula='&quot;Yesterday&quot;' />
          <members>
            <member value='&quot;Yesterday&quot;' />
            <member value='&quot;Reference Day&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='publisher_data (copy 2)'>
        <column caption='Ads per Page %D for Table' datatype='real' default-format='p0.0%' name='[Ads per Page %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - MTD]&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='p0.0%' name='[Auction Participant Count %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Auction Participant Count - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Auction Participant Count - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Auction Participant Count - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Auction Participant Count for Table' datatype='integer' name='[Auction Participant Count for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Auction Participant Count - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Auction Participant Count - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Auction Participant Count - MTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Available eCPM %D for Table' datatype='real' default-format='p0.0%' name='[Available eCPM %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[Available eCPM for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - MTD]&#13;&#10;END' />
        </column>
        <column caption='CPC %D for Table' datatype='real' default-format='p0.0%' name='[CPC %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[CPC for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
        </column>
        <column caption='CTR %D for Table' datatype='real' default-format='p0.0%' name='[CTR %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='p0.0%' name='[CTR for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='p0.0%' name='[Clicks %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Clicks - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Clicks - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Clicks - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Clicks for Table' datatype='integer' name='[Clicks for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Clicks - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Clicks - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Clicks - MTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Fill Rate %D for Table' datatype='real' default-format='p0.0%' name='[Fill Rate %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='p0.0%' name='[Fill Rate for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - MTD]&#13;&#10;END' />
        </column>
        <column caption='Gross Media Revenue %D for Table' datatype='real' default-format='p0.0%' name='[Gross Media Revenue %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[Gross Media Revenue for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - MTD]&#13;&#10;END' />
        </column>
        <column caption='Hotels per Auction %D for Table' datatype='real' default-format='p0.0%' name='[Hotels per Auction %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - Ref Day]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Auction Participant Count - Ref Day])/sum([Pages Available - Ref Day])' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - Ref Week]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Auction Participant Count - Ref Week])/sum([Pages Available - Ref Week])' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - MTD]&#13;&#10;END' />
        </column>
        <column caption='Impressions Served %D for Table' datatype='real' default-format='p0.0%' name='[Impressions Served %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Impressions Served - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Impressions Served - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Impressions Served - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Impressions Served for Table' datatype='integer' name='[Impressions Served for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Impressions Served - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Impressions Served - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Impressions Served - MTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Pages Available %D for Table' datatype='real' default-format='p0.0%' name='[Pages Available %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='integer' name='[Pages Available for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - MTD]&#13;&#10;END' />
        </column>
        <column caption='Pages Served %D for Table' datatype='real' default-format='p0.0%' name='[Pages Served %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Served - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Served - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Served - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='integer' name='[Pages Served for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Served - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Served - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Served - MTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Served eCPM %D for Table' datatype='real' default-format='p0.0%' name='[Served eCPM %D for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - %D PMTD]&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[Served eCPM for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - MTD]&#13;&#10;END' />
        </column>
        <column-instance column='[Auction Participant Count for Table]' derivation='Sum' name='[sum:Auction Participant Count for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Clicks for Table]' derivation='Sum' name='[sum:Clicks for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Gross Media Revenue for Table]' derivation='Sum' name='[sum:Gross Media Revenue for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Impressions Served for Table]' derivation='Sum' name='[sum:Impressions Served for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Pages Available for Table]' derivation='Sum' name='[sum:Pages Available for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Pages Served for Table]' derivation='Sum' name='[sum:Pages Served for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Ads per Page %D for Table]' derivation='User' name='[usr:Ads per Page %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Ads per Page for Table]' derivation='User' name='[usr:Ads per Page for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Auction Participant Count %D for Table]' derivation='User' name='[usr:Auction Participant Count %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Available eCPM %D for Table]' derivation='User' name='[usr:Available eCPM %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Available eCPM for Table]' derivation='User' name='[usr:Available eCPM for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[CPC %D for Table]' derivation='User' name='[usr:CPC %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[CPC for Table]' derivation='User' name='[usr:CPC for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[CTR %D for Table]' derivation='User' name='[usr:CTR %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[CTR for Table]' derivation='User' name='[usr:CTR for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Clicks %D for Table]' derivation='User' name='[usr:Clicks %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Fill Rate %D for Table]' derivation='User' name='[usr:Fill Rate %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Fill Rate for Table]' derivation='User' name='[usr:Fill Rate for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Gross Media Revenue %D for Table]' derivation='User' name='[usr:Gross Media Revenue %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Hotels per Auction %D for Table]' derivation='User' name='[usr:Hotels per Auction %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Hotels per Auction - Ref Day]' derivation='User' name='[usr:Hotels per Auction - Ref Day:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Hotels per Auction - Ref Week]' derivation='User' name='[usr:Hotels per Auction - Ref Week:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Hotels per Auction for Table]' derivation='User' name='[usr:Hotels per Auction for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Impressions Served %D for Table]' derivation='User' name='[usr:Impressions Served %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Pages Available %D for Table]' derivation='User' name='[usr:Pages Available %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Pages Served %D for Table]' derivation='User' name='[usr:Pages Served %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Served eCPM %D for Table]' derivation='User' name='[usr:Served eCPM %D for Table:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Served eCPM for Table]' derivation='User' name='[usr:Served eCPM for Table:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='sold_hotels (copy 2)'>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - MTD]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Budget]&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - PMTD]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Budget] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Budget] END)&#13;&#10;END' />
        </column>
        <column datatype='real' name='[Budget - PQTD]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Budget]&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - PW]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Budget] END' />
        </column>
        <column datatype='real' name='[Budget - PYTD]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;, -1, [Ref Day]) &#13;&#10;THEN [Budget] &#13;&#10;END)&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - QTD]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Budget]&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - Ref Day]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Budget] END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - Ref Week]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Budget] END' />
        </column>
        <column datatype='real' name='[Budget - SDPW]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Budget] END' />
        </column>
        <column datatype='real' name='[Budget - SDPY]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Budget] END' />
        </column>
        <column datatype='real' name='[Budget - SMTDPY]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Budget]&#13;&#10;END' />
        </column>
        <column datatype='real' name='[Budget - SQTDPY]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Budget]&#13;&#10;END' />
        </column>
        <column datatype='real' name='[Budget - SWPY]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Budget]&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - YTD]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Budget]&#13;&#10;END)&#13;&#10;END' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
        </column>
        <column datatype='integer' name='[Gross Media Revenue 7 Day Average]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='RUNNING_SUM(SUM([Sold Hotels]))'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of Ref Day]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [Ref Day] THEN [Sold Hotels] END))'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[Sold Hotels as of Ref Day]' derivation='User' name='[usr:Sold Hotels as of Ref Day:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' />
        </column-instance>
      </datasource-dependencies>
    </datasource>
    <datasource caption='sold_hotels' inline='true' name='sold_hotels (copy 2)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select &#13;&#10;&#9;sold_hotels.Date,&#13;&#10;&#9;sold_hotels.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;sold_hotels.&quot;Sold Hotels&quot;,&#13;&#10;&#9;budgets.&quot;Budget&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;&#9;&#9;dates.date_in_et as Date,&#13;&#10;&#9;&#9;dates.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;sold_hotels_query.sold_hotels as &quot;Sold Hotels&quot;&#9;&#9;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select *&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select&#13;&#10;        distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;      from intent_media_production.participating_advertisers&#13;&#10;    ) dates,&#13;&#10;    (&#13;&#10;      select&#13;&#10;        distinct(ssn_channel_type) as ssn_channel_type&#13;&#10;      from intent_media_production.entities&#13;&#10;      where ssn_channel_type is not null&#13;&#10;    ) ssn_channel_types&#13;&#10;  ) dates&#13;&#10;  left join&#13;&#10;  (&#13;&#10;    select&#13;&#10;      sold_date_in_et as date_in_et,&#13;&#10;      ssn_channel_type,&#13;&#10;      count(distinct(id)) as sold_hotels&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select&#13;&#10;        id,&#13;&#10;        ssn_channel_type,&#13;&#10;        DATE(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;      from intent_media_production.entities&#13;&#10;      where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;        and active = 1&#13;&#10;        and first_auction_participation is not null&#13;&#10;    ) sold_dates&#13;&#10;  group by&#13;&#10;    date_in_et,&#13;&#10;    ssn_channel_type&#13;&#10;  ) sold_hotels_query&#13;&#10;  on sold_hotels_query.date_in_et = dates.date_in_et&#13;&#10;  and sold_hotels_query.ssn_channel_type = dates.ssn_channel_type&#13;&#10;) sold_hotels&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;&#9;  pa.Date,&#13;&#10;&#9;  pa.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;  sum(budgets_query.Budget) as Budget&#13;&#10;  from&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      aggregation_level_date_in_et as Date,&#13;&#10;      e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;      advertiser_id as &quot;Advertiser ID&quot;&#13;&#10;    from intent_media_production.participating_advertisers p&#13;&#10;    left join intent_media_production.entities e on e.id = p.advertiser_id&#13;&#10;    group by&#13;&#10;      aggregation_level_date_in_et,&#13;&#10;      e.ssn_channel_type,&#13;&#10;      advertiser_id&#13;&#10;  ) pa&#13;&#10;  left join&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      latest.date_in_et,&#13;&#10;      latest.ssn_channel_type,&#13;&#10;      latest.advertiser_id,&#13;&#10;      allocated_budget as &quot;Budget&quot;&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select&#13;&#10;        date_in_et,&#13;&#10;        e.ssn_channel_type,&#13;&#10;        advertiser_id,&#13;&#10;        max(h.id) as latest_id&#13;&#10;      from intent_media_production.historical_budgets h&#13;&#10;      left join intent_media_production.entities e on e.id = h.advertiser_id&#13;&#10;      group by&#13;&#10;        date_in_et,&#13;&#10;        e.ssn_channel_type,&#13;&#10;        advertiser_id&#13;&#10;    ) latest&#13;&#10;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;and latest.latest_id = hb.id&#13;&#10;  ) budgets_query&#13;&#10;  on budgets_query.date_in_et = pa.Date&#13;&#10;    and budgets_query.ssn_channel_type = pa.&quot;SSN Channel Type&quot;&#13;&#10;    and budgets_query.advertiser_id = pa.&quot;Advertiser ID&quot;&#13;&#10;  group by Date, &quot;SSN Channel Type&quot;&#13;&#10;) budgets&#13;&#10;on budgets.Date = sold_hotels.Date&#13;&#10;and budgets.&quot;SSN Channel Type&quot; = sold_hotels.&quot;SSN Channel Type&quot;&#13;&#10;where sold_hotels.Date &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='Budget %D for Table' datatype='real' default-format='p0.0%' name='[Budget %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Budget - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Budget - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Budget - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - MTD])-sum([Budget - PMTD]))/sum([Budget - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - QTD]) - sum([Budget - PQTD]))/sum([Budget - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - Ref Week])-sum([Budget - PW]))/sum([Budget - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - YTD])-sum([Budget - PYTD]))/sum([Budget - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - Ref Day])-sum([Budget - SDPW]))/sum([Budget - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - Ref Day]) - sum([Budget - SDPY]))/sum([Budget - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - MTD])-sum([Budget - SMTDPY]))/sum([Budget - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - QTD])-sum([Budget - SQTDPY]))/sum([Budget - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Budget - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Budget - Ref Week])-sum([Budget - SWPY]))/sum([Budget - SWPY])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Budget]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Budget] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Budget] END)&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Budget - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Budget]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Budget] END' />
      </column>
      <column datatype='real' name='[Budget - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;, -1, [Ref Day]) &#13;&#10;THEN [Budget] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Budget]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Budget] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Budget] END' />
      </column>
      <column datatype='real' name='[Budget - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Budget] END' />
      </column>
      <column datatype='real' name='[Budget - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Budget] END' />
      </column>
      <column datatype='real' name='[Budget - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Budget]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Budget - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Budget]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Budget - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Budget]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Budget]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column caption='Budget for Table' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Budget - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Budget - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Budget - MTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
      </column>
      <column caption='Month Name' datatype='string' name='[Calculation_6030616224834024]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH([Date])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN DATE([Date])&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Calculation_6030616224834024]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Gross Media Revenue 7 Day Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Sold Hotels]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Is Leap Year]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Ref Day]) % 4 = 0 THEN&#13;&#10;    IF YEAR([Ref Day]) % 100 = 0 THEN&#13;&#10;        IF YEAR([Ref Day]) % 400 = 0 THEN&#13;&#10;            1&#13;&#10;        ELSE 0 END&#13;&#10;    ELSE 0 END&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,[Ref Day]) = 7 THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF [Ref Day] = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,[Ref Day]))) THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;month&apos;,[Ref Day]))-1) END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Last Day of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE MONTH([Ref Day])&#13;&#10;WHEN 1 THEN 31&#13;&#10;WHEN 2 THEN (IF [Is Leap Year] = 1 THEN 29 ELSE 28 END)&#13;&#10;WHEN 3 THEN 31&#13;&#10;WHEN 4 THEN 30&#13;&#10;WHEN 5 THEN 31&#13;&#10;WHEN 6 THEN 30&#13;&#10;WHEN 7 THEN 31&#13;&#10;WHEN 8 THEN 31&#13;&#10;WHEN 9 THEN 30&#13;&#10;WHEN 10 THEN 31&#13;&#10;WHEN 11 THEN 30&#13;&#10;WHEN 12 THEN 31&#13;&#10;END' />
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent of Budget' datatype='real' default-format='p0%' name='[Percent of Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([active_hotels_with_budget (copy 2)].[Spend])/sum([Budget])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If MONTH([Ref Day]) = 1 THEN 12 &#13;&#10;ELSE MONTH([Ref Day])-1 END' />
      </column>
      <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[SDPM]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;month&apos;,-1,[Ref Day]))' />
      </column>
      <column datatype='date' name='[SDPQ]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;quarter&apos;,-1,[Ref Day]))' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPM])/[Sold Hotels as of SDPM]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPQ]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPQ])/[Sold Hotels as of SDPQ]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPW])/[Sold Hotels as of SDPW]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPY])/[Sold Hotels as of SDPY]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [Ref Day] THEN [Sold Hotels] END))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of SDPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [SDPM] THEN [Sold Hotels] END))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of SDPQ]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [SDPQ] THEN [Sold Hotels] END))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Sold Hotels] END))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Sold Hotels] END))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Year of Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF MONTH([Ref Day]) = 1 THEN YEAR([Ref Day])-1&#13;&#10;ELSE YEAR([Ref Day])&#13;&#10;END' />
      </column>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\sushmit.roy\Documents\My Tableau Repository\Datasources\ssn_dashboard__sold_hotels copy 1.tde' schema='Extract' tablename='Extract' update-time='9/8/2014 8:16:53 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_6030616224834024]' formula='CASE MONTH([Date])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3276' timestamp-start='2014-09-08 20:16:53.709000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.293522' measure-ordering='alphabetic' measure-percentage='0.535425' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2012</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2013</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2011</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
          <calculation class='tableau' formula='&quot;True&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
          </members>
        </column>
        <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2014-07-06#'>
          <calculation class='tableau' formula='#2014-07-06#' />
        </column>
        <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
          <calculation class='tableau' formula='&quot;Yesterday&quot;' />
          <members>
            <member value='&quot;Yesterday&quot;' />
            <member value='&quot;Reference Day&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
        <column datatype='real' name='[Spend]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='publisher_data' inline='true' name='publisher_data (copy 2)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>/* last Change done for Hipmunk 89524306 */&#13;&#10;&#13;&#10;select&#13;&#10;&#9;dimensions.*,&#13;&#10;&#9;data.&quot;Pages Available&quot;, &#13;&#10;&#9;data.&quot;Pages Served&quot;, &#13;&#10;&#9;data.&quot;Spend&quot;, &#13;&#10;&#9;data.&quot;Clicks&quot;, &#13;&#10;&#9;data.&quot;Impressions Served&quot;,&#13;&#10;&#9;data.&quot;Auction Participant Count&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select *&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select&#13;&#10;      distinct(aggregation_level_date_in_et) as Date,&#13;&#10;      0 as Zero&#13;&#10;    from intent_media_production.publisher_performance_report_aggregations&#13;&#10;    where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  ) dates,&#13;&#10;  (&#13;&#10;    select&#13;&#10;      (case&#13;&#10;        when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;        else e.name&#13;&#10;      end) as Pub,&#13;&#10;      s.display_name as Site,&#13;&#10;      (case&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;        else &apos;OTA&apos;&#13;&#10;      end) as &quot;SSN Channel Type&quot;,&#13;&#10;      (case&#13;&#10;        when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;        when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;        when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;        when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;        when au.name like &apos;%Hipmunk%&apos; then &apos;Total Hotel List Page&apos;  --Added for Hipmunk&#13;&#10;        else au.name&#13;&#10;      end) as &quot;Type of Ad Unit&quot;,&#13;&#10;      au.name as &quot;Ad Unit&quot;,&#13;&#10;      ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;      ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment&quot;,&#13;&#10;      ifnull(imm.country, &apos;Other&apos;) as &quot;Country&quot;,&#13;&#10;      ifnull(imm.finance_region, &apos;Other&apos;) as &quot;Finance Region&quot;&#13;&#10;    from intent_media_production.publisher_performance_report_aggregations ppra&#13;&#10;    left join intent_media_production.ad_units au on au.id = ppra.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;    left join intent_media_production.intent_media_markets_publisher_markets immpm on immpm.market_id = ppra.market_id&#13;&#10;    left join intent_media_production.intent_media_markets imm on imm.id = immpm.intent_media_market_id&#13;&#10;    where&#13;&#10;      (case&#13;&#10;        when s.name = &apos;TRAVELOCITY&apos; then aggregation_level_date_in_et &gt;&gt;= &apos;2011-04-01&apos; and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;        when s.name = &apos;HIPMUNK&apos;   then aggregation_level_date_in_et &gt;&gt;=  &apos;2015-03-02&apos; and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;) -- Added for Hipmunk&#13;&#10;        else aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;) and (((au.name like &apos;%SEM%&apos; or au.name like &apos;%Hotel Details%&apos;) and aggregation_level_date_in_et &gt;&gt;= &apos;2012-05-15&apos;) or (au.name not like &apos;%SEM%&apos; and au.name not like &apos;%Hotel Details%&apos;))&#13;&#10;      end)&#13;&#10;    group by&#13;&#10;      (case&#13;&#10;        when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;        else e.name&#13;&#10;      end),&#13;&#10;      s.display_name,&#13;&#10;      (case&#13;&#10;        when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;        else &apos;OTA&apos;&#13;&#10;      end),&#13;&#10;      (case&#13;&#10;        when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;        when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;        when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;        when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;        when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;        when au.name like &apos;%Hipmunk%&apos; then &apos;Total Hotel List Page&apos;   -- Added for hipmunk&#13;&#10;        else au.name&#13;&#10;      end),&#13;&#10;      au.name,&#13;&#10;      ifnull(imm.name, &apos;Other&apos;),&#13;&#10;      ifnull(imm.report_segment, &apos;Other&apos;),&#13;&#10;      ifnull(imm.country, &apos;Other&apos;),&#13;&#10;      ifnull(imm.finance_region, &apos;Other&apos;)&#13;&#10;  ) ad_unit_names&#13;&#10;) dimensions&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;&#9;  aggregation_level_date_in_et as Date,&#13;&#10;    (case&#13;&#10;      when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;      else e.name&#13;&#10;    end) as Pub,&#13;&#10;    s.display_name as Site,&#13;&#10;    (case&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;      else &apos;OTA&apos;&#13;&#10;    end) as &quot;SSN Channel Type&quot;,&#13;&#10;    (case&#13;&#10;      when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;      when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;      when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;      when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;      when au.name like &apos;%Hipmunk%&apos; then &apos;Total Hotel List Page&apos;  -- Added for Hipmunk&#13;&#10;      else au.name&#13;&#10;    end) as &quot;Type of Ad Unit&quot;,&#13;&#10;    au.name as &quot;Ad Unit&quot;,&#13;&#10;    ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;    ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment&quot;,&#13;&#10;    ifnull(imm.country, &apos;Other&apos;) as &quot;Country&quot;,&#13;&#10;    ifnull(imm.finance_region, &apos;Other&apos;) as &quot;Finance Region&quot;,&#13;&#10;    sum(ad_call_count) as &quot;Pages Available&quot;,&#13;&#10;    sum(case when positions_filled &gt;&gt; 0 then ad_call_count else 0 end) as &quot;Pages Served&quot;,&#13;&#10;    sum(gross_actual_cpc_sum) as &quot;Spend&quot;,&#13;&#10;    sum(click_count) as &quot;Clicks&quot;,&#13;&#10;    sum(ad_call_count * positions_filled) as &quot;Impressions Served&quot;,&#13;&#10;    sum(auction_participant_count) as &quot;Auction Participant Count&quot;&#13;&#10;  from intent_media_production.publisher_performance_report_aggregations ppra&#13;&#10;  left join intent_media_production.ad_units au on au.id = ppra.ad_unit_id&#13;&#10;  left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;  left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;  left join intent_media_production.intent_media_markets_publisher_markets immpm on immpm.market_id = ppra.market_id&#13;&#10;  left join intent_media_production.intent_media_markets imm on imm.id = immpm.intent_media_market_id&#13;&#10;  where&#13;&#10;    (case&#13;&#10;      when s.name = &apos;TRAVELOCITY&apos; then aggregation_level_date_in_et &gt;&gt;= &apos;2011-04-01&apos; and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;      when s.name = &apos;HIPMUNK&apos;   then aggregation_level_date_in_et &gt;&gt;=  &apos;2015-03-02&apos; and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;) -- Added for Hipmunk&#13;&#10;      else aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;) and (((au.name like &apos;%SEM%&apos; or au.name like &apos;%Hotel Details%&apos;) and aggregation_level_date_in_et &gt;&gt;= &apos;2012-05-15&apos;) or (au.name not like &apos;%SEM%&apos; and au.name not like &apos;%Hotel Details%&apos;))&#13;&#10;    end)&#13;&#10;  group by&#13;&#10;    (case&#13;&#10;      when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;Travelport&apos;&#13;&#10;      else e.name&#13;&#10;    end),&#13;&#10;    s.display_name,&#13;&#10;    (case&#13;&#10;      when e.name like &apos;%Travelport%&apos; then &apos;GDS&apos;&#13;&#10;      else &apos;OTA&apos;&#13;&#10;    end),&#13;&#10;    (case&#13;&#10;      when au.name = &apos;Travelocity Martini Package Page&apos; then &apos;Total Flight-Hotel Cross-Sell Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (Legacy)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name = &apos;Travelocity List Page (New Platform)&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name in (&apos;Apollo List Page&apos;,&apos;Galileo List Page&apos;,&apos;Worldspan List Page&apos;) then &apos;Total GDS List Page&apos;&#13;&#10;      when au.name like &apos;%SEM%&apos; then &apos;Total SEM List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel List Page%&apos; then &apos;Total Hotel List Page&apos;&#13;&#10;      when au.name like &apos;%Hotel Details Page%&apos; then &apos;Total Hotel Details Page&apos;&#13;&#10;      when au.name like &apos;%Trip Details Page%&apos; then &apos;Total Trip Details Page&apos;&#13;&#10;      when au.name like &apos;%Package%&apos; then &apos;Total Packages List Page&apos;&#13;&#10;      when au.name like &apos;%Hipmunk%&apos; then &apos;Total Hotel List Page&apos; -- Added for Hipmunk&#13;&#10;      else au.name&#13;&#10;    end),&#13;&#10;    au.name,&#13;&#10;    aggregation_level_date_in_et,&#13;&#10;    ifnull(imm.name, &apos;Other&apos;),&#13;&#10;    ifnull(imm.report_segment, &apos;Other&apos;),&#13;&#10;    ifnull(imm.country, &apos;Other&apos;),&#13;&#10;    ifnull(imm.finance_region, &apos;Other&apos;)&#13;&#10;) data&#13;&#10;&#13;&#10;on dimensions.Date = data.Date&#13;&#10;and dimensions.Pub = data.Pub&#13;&#10;and dimensions.Site = data.Site&#13;&#10;and dimensions.&quot;SSN Channel Type&quot; = data.&quot;SSN Channel Type&quot;&#13;&#10;and dimensions.&quot;Type of Ad Unit&quot; = data.&quot;Type of Ad Unit&quot;&#13;&#10;and dimensions.&quot;Ad Unit&quot; = data.&quot;Ad Unit&quot;&#13;&#10;and dimensions.&quot;Market Name&quot; = data.&quot;Market Name&quot;&#13;&#10;and dimensions.Segment = data.Segment&#13;&#10;and dimensions.Country = data.Country&#13;&#10;and dimensions.&quot;Finance Region&quot; = data.&quot;Finance Region&quot;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;' value='Active Hotels' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' value=' ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Clicks - 28Days:qk]&quot;' value='Clicks  ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Clicks - QTD:qk]&quot;' value='Clicks   ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Day:qk]&quot;' value='Clicks' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;' value='Clicks ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Clicks - YTD:qk]&quot;' value='Clicks    ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - 28Days:qk]&quot;' value='Gross Media Revenue  ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - QTD:qk]&quot;' value='Gross Media Revenue   ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Day:qk]&quot;' value='Gross Media Revenue' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;' value='Gross Media Revenue ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - YTD:qk]&quot;' value='Gross Media Revenue    ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;' value='Gross Media Revenue     ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Impressions Served - 28Days:qk]&quot;' value='Impressions Served  ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Impressions Served - QTD:qk]&quot;' value='Impressions Served   ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Day:qk]&quot;' value='Impressions Served' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;' value='Impressions Served ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Impressions Served - YTD:qk]&quot;' value='Impressions Served    ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - Ref Day:qk]&quot;' value='Net Media Revenue' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - Ref Week:qk]&quot;' value='Net Media Revenue ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available - 28Days:qk]&quot;' value='Pages Available  ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available - QTD:qk]&quot;' value='Pages Available   ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Day:qk]&quot;' value='Pages Available' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;' value='Pages Available ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available - YTD:qk]&quot;' value='Pages Available    ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;' value='Pages Available     ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Served - 28Days:qk]&quot;' value='Pages Served  ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Served - QTD:qk]&quot;' value='Pages Served   ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Day:qk]&quot;' value='Pages Served' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;' value='Pages Served ' />
          <alias key='&quot;[publisher_data (copy 2)].[sum:Pages Served - YTD:qk]&quot;' value='Pages Served    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D P28Days:qk]&quot;' value='Ads per Page Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PQTD:qk]&quot;' value='Ads per Page Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PW:qk]&quot;' value='Ads per Page Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PYTD:qk]&quot;' value='Ads per Page Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - 28Days:qk]&quot;' value='Ads per Page  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - QTD:qk]&quot;' value='Ads per Page   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Day:qk]&quot;' value='Ads per Page' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;' value='Ads per Page ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page - YTD:qk]&quot;' value='Ads per Page    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;' value='Ads per Page     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D P28Days:qk]&quot;' value='Available eCPM Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PQTD:qk]&quot;' value='Available eCPM Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PW:qk]&quot;' value='Available eCPM Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PYTD:qk]&quot;' value='Available eCPM Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - 28Days:qk]&quot;' value='Available eCPM  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - QTD:qk]&quot;' value='Available eCPM   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Day:qk]&quot;' value='Available eCPM' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;' value='Available eCPM ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM - YTD:qk]&quot;' value='Available eCPM    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;' value='Available eCPM     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D P28Days:qk]&quot;' value='Clicks Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PQTD:qk]&quot;' value='Clicks Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PW:qk]&quot;' value='Clicks Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PYTD:qk]&quot;' value='Clicks Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - \%D P28Days:qk]&quot;' value='CPC Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PQTD:qk]&quot;' value='CPC Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PW:qk]&quot;' value='CPC Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PYTD:qk]&quot;' value='CPC Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - 28Days:qk]&quot;' value='CPC  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - QTD:qk]&quot;' value='CPC   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - Ref Day:qk]&quot;' value='CPC' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;' value='CPC ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC - YTD:qk]&quot;' value='CPC    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;' value='CPC     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - \%D P28Days:qk]&quot;' value='CTR Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PQTD:qk]&quot;' value='CTR Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PW:qk]&quot;' value='CTR Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PYTD:qk]&quot;' value='CTR Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - 28Days:qk]&quot;' value='CTR  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - QTD:qk]&quot;' value='CTR   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - Ref Day:qk]&quot;' value='CTR' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;' value='CTR ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR - YTD:qk]&quot;' value='CTR    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;' value='CTR     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D P28Days:qk]&quot;' value='Fill Rate Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PQTD:qk]&quot;' value='Fill Rate Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PW:qk]&quot;' value='Fill Rate Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PYTD:qk]&quot;' value='Fill Rate Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - 28Days:qk]&quot;' value='Fill Rate  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - QTD:qk]&quot;' value='Fill Rate   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Day:qk]&quot;' value='Fill Rate' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;' value='Fill Rate ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate - YTD:qk]&quot;' value='Fill Rate    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;' value='Fill Rate     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D P28Days:qk]&quot;' value='Gross Media Revenue Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PQTD:qk]&quot;' value='Gross Media Revenue Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PW:qk]&quot;' value='Gross Media Revenue Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PYTD:qk]&quot;' value='Gross Media Revenue Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;' value='Hotels per Auction' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D P28Days:qk]&quot;' value='Impressions Served Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PQTD:qk]&quot;' value='Impressions Served Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PW:qk]&quot;' value='Impressions Served Delta' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PYTD:qk]&quot;' value='Impressions Served Delta     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D P28Days:qk]&quot;' value='Page CTR Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PQTD:qk]&quot;' value='Page CTR Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;' value='Page CTR Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PYTD:qk]&quot;' value='Page CTR Delta     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - 28Days:qk]&quot;' value='Page CTR  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - QTD:qk]&quot;' value='Page CTR   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Day:qk]&quot;' value='Page CTR' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;' value='Page CTR ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Page CTR - YTD:qk]&quot;' value='Page CTR    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D P28Days:qk]&quot;' value='Pages Available Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PQTD:qk]&quot;' value='Pages Available Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PW:qk]&quot;' value='Pages Available Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PYTD:qk]&quot;' value='Pages Available Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D P28Days:qk]&quot;' value='Pages Served Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PQTD:qk]&quot;' value='Pages Served Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PW:qk]&quot;' value='Pages Served Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PYTD:qk]&quot;' value='Pages Served Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D P28Days:qk]&quot;' value='Served eCPM Delta  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PQTD:qk]&quot;' value='Served eCPM Delta   ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PW:qk]&quot;' value='Served eCPM Delta ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PYTD:qk]&quot;' value='Served eCPM Delta    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - 28Days:qk]&quot;' value='Served eCPM  ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - QTD:qk]&quot;' value='Served eCPM    ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Day:qk]&quot;' value='Served eCPM' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;' value='Served eCPM ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM - YTD:qk]&quot;' value='Served eCPM     ' />
          <alias key='&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;' value='Served eCPM   ' />
        </aliases>
      </column>
      <column caption='Ads per Page %D for Table' datatype='real' default-format='p0.0%' name='[Ads per Page %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - 28Days]-[Ads per Page - P28Days])/[Ads per Page - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - MTD]-[Ads per Page - PMTD])/[Ads per Page - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - QTD]-[Ads per Page - PQTD])/[Ads per Page - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - Ref Week]-[Ads per Page - PW])/[Ads per Page - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - YTD]-[Ads per Page - PYTD])/[Ads per Page - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - 28Days] - [Ads per Page - S28DaysPY])/[Ads per Page - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - Ref Day] - [Ads per Page - SDPW])/[Ads per Page - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - Ref Day]-[Ads per Page - SDPY])/[Ads per Page - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - MTD] - [Ads per Page - SMTDPY])/[Ads per Page - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - QTD] - [Ads per Page - SQTDPY])/[Ads per Page - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ads per Page - Ref Week] - [Ads per Page - SWPY])/[Ads per Page - SWPY]' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - 28Days])/sum([Pages Served - 28Days])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - MTD])/sum([Pages Served - MTD])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - P28Days])/sum([Pages Served - P28Days])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - PMTD])/sum([Pages Served - PMTD])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - PQTD])/sum([Pages Served - PQTD])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - PW])/sum([Pages Served - PW])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - PYTD])/sum([Pages Served - PYTD])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - QTD])/sum([Pages Served - QTD])' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - Ref Day])/sum([Pages Served - Ref Day])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - Ref Week])/sum([Pages Served - Ref Week])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - S28DaysPY])/sum([Pages Served - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - SDPW])/sum([Pages Served - SDPW])' />
      </column>
      <column datatype='real' name='[Ads per Page - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - SDPY])/sum([Pages Served - SDPY])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - SMTDPY])/sum([Pages Served - SMTDPY])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - SQTDPY])/sum([Pages Served - SQTDPY])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - SWPY])/sum([Pages Served - SWPY])' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served - YTD])/sum([Pages Served - YTD])' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions Served])/sum([Pages Served])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Auction Participant Count - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Auction Participant Count - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Auction Participant Count - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - 28Days]) - sum([Auction Participant Count - P28Days]))/sum([Auction Participant Count - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - MTD]) - sum([Auction Participant Count - PMTD]))/sum([Auction Participant Count - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - QTD]) - sum([Auction Participant Count - PQTD]))/sum([Auction Participant Count - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - Ref Week])-sum([Auction Participant Count - PW]))/sum([Auction Participant Count - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - YTD])-sum([Auction Participant Count - PYTD]))/sum([Auction Participant Count - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - 28Days])-sum([Auction Participant Count - S28DaysPY]))/sum([Auction Participant Count - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - Ref Day])-sum([Auction Participant Count - SDPW]))/sum([Auction Participant Count - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - Ref Day])-sum([Auction Participant Count - SDPY]))/sum([Auction Participant Count - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - MTD])-sum([Auction Participant Count - SMTDPY]))/sum([Auction Participant Count - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - QTD])-sum([Auction Participant Count - SQTDPY]))/sum([Auction Participant Count - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Auction Participant Count - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Auction Participant Count - Ref Week])-sum([Auction Participant Count - SWPY]))/sum([Auction Participant Count - SWPY])' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-55,[Ref Day]) AND [Date] &lt;= DATEADD(&apos;day&apos;,-28,[Ref Day])&#13;&#10;THEN [Auction Participant Count] &#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Auction Participant Count] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Auction Participant Count] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Auction Participant Count] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;THEN [Auction Participant Count] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Auction Participant Count] END' scope-isolation='false' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Auction Participant Count] END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;year&apos;,-1,DATEADD(&apos;day&apos;,-27,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Auction Participant Count] END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Auction Participant Count] END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Auction Participant Count - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Auction Participant Count - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Auction Participant Count]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column caption='Auction Participant Count for Table' datatype='integer' name='[Auction Participant Count for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Auction Participant Count - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Auction Participant Count - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Auction Participant Count - MTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Available eCPM %D for Table' datatype='real' default-format='p0.0%' name='[Available eCPM %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - 28Days]-[Available eCPM - P28Days])/[Available eCPM - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - MTD]-[Available eCPM - PMTD])/[Available eCPM - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - QTD]-[Available eCPM - PQTD])/[Available eCPM - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - Ref Week]-[Available eCPM - PW])/[Available eCPM - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - YTD]-[Available eCPM - PYTD])/[Available eCPM - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - 28Days] - [Available eCPM - S28DaysPY])/[Available eCPM - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - Ref Day]-[Available eCPM - SDPW])/[Available eCPM - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - Ref Day] - [Available eCPM - SDPY])/[Available eCPM - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - MTD] - [Available eCPM - SMTDPY])/[Available eCPM - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - QTD] - [Available eCPM - SQTDPY])/[Available eCPM - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Available eCPM - Ref Week] - [Available eCPM - SWPY])/[Available eCPM - SWPY]' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Pages Available - 28Days])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - MTD])/sum([Pages Available - MTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - P28Days])/sum([Pages Available - P28Days])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PMTD])/sum([Pages Available - PMTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PQTD])/sum([Pages Available - PQTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PW])/sum([Pages Available - PW])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PYTD])/sum([Pages Available - PYTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Pages Available - QTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Day])/sum([Pages Available - Ref Day])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Available - Ref Week])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - S28DaysPY])/sum([Pages Available - S28DaysPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SDPW])/sum([Pages Available - SDPW])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SDPY])/sum([Pages Available - SDPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SMTDPY])/sum([Pages Available - SMTDPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SQTDPY])/sum([Pages Available - SQTDPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SWPY])/sum([Pages Available - SWPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Available - YTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Pages Available])*1000' />
      </column>
      <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
      </column>
      <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
      </column>
      <column caption='CPC %D for Table' datatype='real' default-format='p0.0%' name='[CPC %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - 28Days]-[CPC - P28Days])/[CPC - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - MTD]-[CPC - PMTD])/[CPC - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - QTD]-[CPC - PQTD])/[CPC - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - Ref Week]-[CPC - PW])/[CPC - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - YTD]-[CPC - PYTD])/[CPC - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - 28Days] - [CPC - S28DaysPY])/[CPC - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - Ref Day]-[CPC - SDPW])/[CPC - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - Ref Day]-[CPC - SDPY])/[CPC - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - MTD] - [CPC - SMTDPY])/[CPC - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - QTD] - [CPC - SQTDPY])/[CPC - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CPC - Ref Week] - [CPC - SWPY])/[CPC - SWPY]' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Clicks - 28Days])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - MTD])/sum([Clicks - MTD])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - P28Days])/sum([Clicks - P28Days])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PMTD])/sum([Clicks - PMTD])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PQTD])/sum([Clicks - PQTD])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PW])/sum([Clicks - PW])' />
      </column>
      <column datatype='real' name='[CPC - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PYTD])/sum([Clicks - PYTD])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Clicks - QTD])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Day])/sum([Clicks - Ref Day])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Clicks - Ref Week])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - S28DaysPY])/sum([Clicks - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SDPW])/sum([Clicks - SDPW])' />
      </column>
      <column datatype='real' name='[CPC - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SDPY])/sum([Clicks - SDPY])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SMTDPY])/sum([Clicks - SMTDPY])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SQTDPY])/sum([Clicks - SQTDPY])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SWPY])/sum([Clicks - SWPY])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Clicks - YTD])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
      </column>
      <column caption='CTR %D for Table' datatype='real' default-format='p0.0%' name='[CTR %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - 28Days] - [CTR - P28Days])/[CTR - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - MTD] - [CTR - PMTD])/[CTR - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - QTD] - [CTR - PQTD])/[CTR - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - Ref Week]-[CTR - PW])/[CTR - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - YTD]-[CTR - PYTD])/[CTR - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - 28Days] - [CTR - S28DaysPY])/[CTR - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - Ref Day]-[CTR - SDPW])/[CTR - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - Ref Day] - [CTR - SDPY])/[CTR - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - MTD] - [CTR - SMTDPY])/[CTR - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - QTD] - [CTR - SQTDPY])/[CTR - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CTR - Ref Week] - [CTR - SWPY])/[CTR - SWPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - 28Days])/sum([Impressions Served - 28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - MTD])/sum([Impressions Served - MTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - P28Days])/sum([Impressions Served - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PMTD])/sum([Impressions Served - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PQTD])/sum([Impressions Served - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PW])/sum([Impressions Served - PW])' />
      </column>
      <column datatype='real' name='[CTR - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PYTD])/sum([Impressions Served - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Impressions Served - QTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Ref Day])/sum([Impressions Served - Ref Day])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Impressions Served - Ref Week])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - S28DaysPY])/sum([Impressions Served - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SDPW])/sum([Impressions Served - SDPW])' />
      </column>
      <column datatype='real' name='[CTR - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SDPY])/sum([Impressions Served - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SMTDPY])/sum([Impressions Served - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SQTDPY])/sum([Impressions Served - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SWPY])/sum([Impressions Served - SWPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Impressions Served - YTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions Served])' />
      </column>
      <column caption='Month Name' datatype='string' name='[Calculation_0530616224817770]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH([Date])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for GDS Ad Unit Type' datatype='string' name='[Calculation_0750102131316031]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Parameter 4],&quot;Total&quot;) THEN IF [Parameters].[Parameter 4] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Parameter 4] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for OTA Publisher' datatype='string' name='[Calculation_1850102131152453]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 3] = &quot;OWW&quot; OR [Parameters].[Parameter 3] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Parameter 3] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Parameter 3] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for GDS Publisher' datatype='string' name='[Calculation_5050102131026937]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;OWW&quot; OR [Parameters].[Parameter 2] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Parameter 2] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Parameter 2] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for OTA Ad Unit Type' datatype='string' name='[Calculation_6870102131437484]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[GDS Ad Unit Type (copy)] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[GDS Ad Unit Type (copy)],&quot;Total&quot;) THEN IF [Parameters].[GDS Ad Unit Type (copy)] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[GDS Ad Unit Type (copy)] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Clicks - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Clicks - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Clicks - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - 28Days]) - sum([Clicks - P28Days]))/sum([Clicks - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - MTD]) - sum([Clicks - PMTD]))/sum([Clicks - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - QTD]) - sum([Clicks - PQTD]))/sum([Clicks - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - Ref Week])-sum([Clicks - PW]))/sum([Clicks - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - YTD])-sum([Clicks - PYTD]))/sum([Clicks - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - 28Days])-sum([Clicks - S28DaysPY]))/sum([Clicks - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - Ref Day])-sum([Clicks - SDPW]))/sum([Clicks - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - Ref Day])-sum([Clicks - SDPY]))/sum([Clicks - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - MTD])-sum([Clicks - SMTDPY]))/sum([Clicks - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - QTD])-sum([Clicks - SQTDPY]))/sum([Clicks - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicks - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Clicks - Ref Week])-sum([Clicks - SWPY]))/sum([Clicks - SWPY])' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-55,[Ref Day]) AND [Date] &lt;= DATEADD(&apos;day&apos;,-28,[Ref Day])&#13;&#10;THEN [Clicks] &#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Clicks] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Clicks] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Clicks - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;THEN [Clicks] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Clicks - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Clicks - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;year&apos;,-1,DATEADD(&apos;day&apos;,-27,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Clicks - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Clicks - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Clicks - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column caption='Clicks for Table' datatype='integer' name='[Clicks for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Clicks - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Clicks - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Clicks - MTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[Current Month Name]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Current Quarter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,[Ref Day]))' />
      </column>
      <column datatype='integer' name='[Current Year]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([Ref Day])' />
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date Filter for Table]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN IF [Date] = [Ref Day] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;    WHEN &quot;Week&quot; THEN IF [Date] &lt;= [Ref Day] &#13;&#10;                        AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) &#13;&#10;                        THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;    WHEN &quot;Month&quot; THEN IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;                        AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;                        THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date without Year by Day Only]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[MM] + &quot;-&quot; + [DD]' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Previous Month Name]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column caption='Fill Rate %D for Table' datatype='real' default-format='p0.0%' name='[Fill Rate %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - 28Days]-[Fill Rate - P28Days])/[Fill Rate - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - MTD]-[Fill Rate - PMTD])/[Fill Rate - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - QTD]-[Fill Rate - PQTD])/[Fill Rate - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - Ref Week]-[Fill Rate - PW])/[Fill Rate - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - YTD]-[Fill Rate - PYTD])/[Fill Rate - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - 28Days] - [Fill Rate - S28DaysPY])/[Fill Rate - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - Ref Day]-[Fill Rate - SDPW])/[Fill Rate - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - Ref Day] - [Fill Rate - SDPY])/[Fill Rate - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - MTD] - [Fill Rate - SMTDPY])/[Fill Rate - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - QTD] - [Fill Rate - SQTDPY])/[Fill Rate - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Fill Rate - Ref Week] - [Fill Rate - SWPY])/[Fill Rate - SWPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - 28Days])/sum([Pages Available - 28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - MTD])/sum([Pages Available - MTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - P28Days])/sum([Pages Available - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - PMTD])/sum([Pages Available - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - PQTD])/sum([Pages Available - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - PW])/sum([Pages Available - PW])' />
      </column>
      <column datatype='real' name='[Fill Rate - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - PYTD])/sum([Pages Available - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - QTD])/sum([Pages Available - QTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - Ref Day])/sum([Pages Available - Ref Day])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - Ref Week])/sum([Pages Available - Ref Week])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - S28DaysPY])/sum([Pages Available - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - SDPW])/sum([Pages Available - SDPW])' />
      </column>
      <column datatype='real' name='[Fill Rate - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - SDPY])/sum([Pages Available - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - SMTDPY])/sum([Pages Available - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - SQTDPY])/sum([Pages Available - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - SWPY])/sum([Pages Available - SWPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served - YTD])/sum([Pages Available - YTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Fill Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Pages Served])/sum([Pages Available])' />
      </column>
      <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
      </column>
      <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
      </column>
      <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
      </column>
      <column caption='Gross Media Revenue %D for Table' datatype='real' default-format='p0.0%' name='[Gross Media Revenue %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - 28Days])-sum([Gross Media Revenue - P28Days]))/sum([Gross Media Revenue - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - MTD])-sum([Gross Media Revenue - PMTD]))/sum([Gross Media Revenue - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - QTD]) - sum([Gross Media Revenue - PQTD]))/sum([Gross Media Revenue - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Week])-sum([Gross Media Revenue - PW]))/sum([Gross Media Revenue - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - YTD])-sum([Gross Media Revenue - PYTD]))/sum([Gross Media Revenue - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - 28Days])-sum([Gross Media Revenue - S28DaysPY]))/sum([Gross Media Revenue - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Day])-sum([Gross Media Revenue - SDPW]))/sum([Gross Media Revenue - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Day]) - sum([Gross Media Revenue - SDPY]))/sum([Gross Media Revenue - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - MTD])-sum([Gross Media Revenue - SMTDPY]))/sum([Gross Media Revenue - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - QTD])-sum([Gross Media Revenue - SQTDPY]))/sum([Gross Media Revenue - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Week])-sum([Gross Media Revenue - SWPY]))/sum([Gross Media Revenue - SWPY])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-55,[Ref Day]) AND [Date] &lt;= DATEADD(&apos;day&apos;,-28,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Spend] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Spend] END)&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;, -1, [Ref Day]) &#13;&#10;THEN [Spend] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;year&apos;,-1,DATEADD(&apos;day&apos;,-27,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Spend] END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Gross Media Revenue 7 Day Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ATTR(DATEPART(&apos;dayofyear&apos;,[Date])) &gt;= 7 THEN&#13;&#10;WINDOW_AVG(SUM([Spend]), -6, 0)&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - MTD]&#13;&#10;END' />
      </column>
      <column caption='Hotels per Auction %D for Table' datatype='real' default-format='p0.0%' name='[Hotels per Auction %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - 28Days]-[Hotels per Auction - P28Days])/[Hotels per Auction - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - MTD]-[Hotels per Auction - PMTD])/[Hotels per Auction - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - QTD]-[Hotels per Auction - PQTD])/[Hotels per Auction - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - Ref Week]-[Hotels per Auction - PW])/[Hotels per Auction - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - YTD]-[Hotels per Auction - PYTD])/[Hotels per Auction - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - 28Days] - [Hotels per Auction - S28DaysPY])/[Hotels per Auction - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - Ref Day]-[Hotels per Auction - SDPW])/[Hotels per Auction - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - Ref Day]-[Hotels per Auction - SDPY])/[Hotels per Auction - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - MTD] - [Hotels per Auction - SMTDPY])/[Hotels per Auction - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - QTD] - [Hotels per Auction - SQTDPY])/[Hotels per Auction - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Hotels per Auction - Ref Week] - [Hotels per Auction - SWPY])/[Hotels per Auction - SWPY]' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - 28Days])/sum([Pages Available - 28Days])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - MTD])/sum([Pages Available - MTD])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - P28Days])/sum([Pages Available - P28Days])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - PMTD])/sum([Pages Available - PMTD])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - PQTD])/sum([Pages Available - PQTD])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - PW])/sum([Pages Available - PW])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - PYTD])/sum([Pages Available - PYTD])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - QTD])/sum([Pages Available - QTD])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - Ref Day])/sum([Pages Available - Ref Day])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - Ref Week])/sum([Pages Available - Ref Week])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - S28DaysPY])/sum([Pages Available - S28DaysPY])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - SDPW])/sum([Pages Available - SDPW])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - SDPY])/sum([Pages Available - SDPY])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - SMTDPY])/sum([Pages Available - SMTDPY])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - SQTDPY])/sum([Pages Available - SQTDPY])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - SWPY])/sum([Pages Available - SWPY])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count - YTD])/sum([Pages Available - YTD])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Participant Count])/sum([Pages Available])' scope-isolation='false' />
      </column>
      <column caption='Impressions Served %D for Table' datatype='real' default-format='p0.0%' name='[Impressions Served %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Impressions Served - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Impressions Served - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Impressions Served - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - 28Days]) - sum([Impressions Served - P28Days]))/sum([Impressions Served - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - MTD]) - sum([Impressions Served - PMTD]))/sum([Impressions Served - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - QTD]) - sum([Impressions Served - PQTD]))/sum([Impressions Served - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - Ref Week])-sum([Impressions Served - PW]))/sum([Impressions Served - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - YTD])-sum([Impressions Served - PYTD]))/sum([Impressions Served - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - 28Days])-sum([Impressions Served - S28DaysPY]))/sum([Impressions Served - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - Ref Day])-sum([Impressions Served - SDPW]))/sum([Impressions Served - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - Ref Day])-sum([Impressions Served - SDPY]))/sum([Impressions Served - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - MTD])-sum([Impressions Served - SMTDPY]))/sum([Impressions Served - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - QTD])-sum([Impressions Served - SQTDPY]))/sum([Impressions Served - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Impressions Served - Ref Week])-sum([Impressions Served - SWPY]))/sum([Impressions Served - SWPY])' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-55,[Ref Day]) AND [Date] &lt;= DATEADD(&apos;day&apos;,-28,[Ref Day])&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Impressions Served] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Impressions Served] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions Served - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Impressions Served] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;THEN [Impressions Served] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions Served - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions Served - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Impressions Served] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Impressions Served] END' />
      </column>
      <column datatype='integer' name='[Impressions Served - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;year&apos;,-1,DATEADD(&apos;day&apos;,-27,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions Served - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Impressions Served] END' />
      </column>
      <column datatype='integer' name='[Impressions Served - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Impressions Served] END' />
      </column>
      <column datatype='integer' name='[Impressions Served - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions Served - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions Served - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column caption='Impressions Served for Table' datatype='integer' name='[Impressions Served for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Impressions Served - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Impressions Served - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Impressions Served - MTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Is Leap Year]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Ref Day]) % 4 = 0 THEN&#13;&#10;    IF YEAR([Ref Day]) % 100 = 0 THEN&#13;&#10;        IF YEAR([Ref Day]) % 400 = 0 THEN&#13;&#10;            1&#13;&#10;        ELSE 0 END&#13;&#10;    ELSE 0 END&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='string' name='[Label - Pub and Ad Unit]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE([Parameters].[Publisher] + &quot; &quot; + [Parameters].[Ad Unit Type], &quot;Total Total&quot;, &quot;Total&quot;)' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,[Ref Day]) = 7 THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF [Ref Day] = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,[Ref Day]))) THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;month&apos;,[Ref Day]))-1) END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Last Day of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE MONTH([Ref Day])&#13;&#10;WHEN 1 THEN 31&#13;&#10;WHEN 2 THEN (IF [Is Leap Year] = 1 THEN 29 ELSE 28 END)&#13;&#10;WHEN 3 THEN 31&#13;&#10;WHEN 4 THEN 30&#13;&#10;WHEN 5 THEN 31&#13;&#10;WHEN 6 THEN 30&#13;&#10;WHEN 7 THEN 31&#13;&#10;WHEN 8 THEN 31&#13;&#10;WHEN 9 THEN 30&#13;&#10;WHEN 10 THEN 31&#13;&#10;WHEN 11 THEN 30&#13;&#10;WHEN 12 THEN 31&#13;&#10;END' />
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Media Revenue - %D SWPY]' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - 28Days]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - 28Days]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - MTD]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - MTD]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - QTD]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - QTD]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - Ref Day]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - Ref Day]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - Ref Week]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - Ref Week]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - YTD]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - YTD]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Spend]*0.752&#13;&#10;ELSE&#13;&#10;[Spend]*0.665&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - 28Days] - [Page CTR - P28Days])/[Page CTR - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - MTD] - [Page CTR - PMTD])/[Page CTR - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - QTD] - [Page CTR - PQTD])/[Page CTR - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - Ref Week]-[Page CTR - PW])/[Page CTR - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - YTD]-[Page CTR - PYTD])/[Page CTR - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - 28Days] - [Page CTR - S28DaysPY])/[Page CTR - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - Ref Day]-[Page CTR - SDPW])/[Page CTR - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - Ref Day]-[Page CTR - SDPY])/[Page CTR - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - MTD] - [Page CTR - SMTDPY])/[Page CTR - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - QTD] - [Page CTR - SQTDPY])/[Page CTR - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Page CTR - Ref Week] - [Page CTR - SWPY])/[Page CTR - SWPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - 28Days])/sum([Pages Served - 28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - MTD])/sum([Pages Served - MTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - P28Days])/sum([Pages Served - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PMTD])/sum([Pages Served - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PQTD])/sum([Pages Served - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PW])/sum([Pages Served - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PYTD])/sum([Pages Served - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Pages Served - QTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Ref Day])/sum([Pages Served - Ref Day])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Pages Served - Ref Week])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - S28DaysPY])/sum([Pages Served - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SDPW])/sum([Pages Served - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SDPY])/sum([Pages Served - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SMTDPY])/sum([Pages Served - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SQTDPY])/sum([Pages Served - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SWPY])/sum([Pages Served - SWPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Pages Served - YTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Page CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
      </column>
      <column caption='Pages Available %D for Table' datatype='real' default-format='p0.0%' name='[Pages Available %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - 28Days]) - sum([Pages Available - P28Days]))/sum([Pages Available - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - MTD]) - sum([Pages Available - PMTD]))/sum([Pages Available - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - QTD]) - sum([Pages Available - PQTD]))/sum([Pages Available - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - Ref Week])-sum([Pages Available - PW]))/sum([Pages Available - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - YTD])-sum([Pages Available - PYTD]))/sum([Pages Available - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - 28Days])-sum([Pages Available - S28DaysPY]))/sum([Pages Available - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - Ref Day])-sum([Pages Available - SDPW]))/sum([Pages Available - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - Ref Day])-sum([Pages Available - SDPY]))/sum([Pages Available - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - MTD])-sum([Pages Available - SMTDPY]))/sum([Pages Available - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - QTD])-sum([Pages Available - SQTDPY]))/sum([Pages Available - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Available - Ref Week])-sum([Pages Available - SWPY]))/sum([Pages Available - SWPY])' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day]) AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day]) THEN [Pages Available] END' scope-isolation='false' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-55,[Ref Day]) AND [Date] &lt;= DATEADD(&apos;day&apos;,-28,[Ref Day])&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month] AND MONTH([Date]) = [Previous Month] THEN [Pages Available] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month] AND MONTH([Date]) = [Previous Month] AND DAY([Date]) &lt;= DAY([Ref Day]) THEN [Pages Available] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Pages Available - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Pages Available] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;, -1, [Ref Day]) &#13;&#10;THEN [Pages Available] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Available - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Pages Available] END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Available] END' />
      </column>
      <column datatype='integer' name='[Pages Available - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;year&apos;,-1,DATEADD(&apos;day&apos;,-27,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Pages Available] END' />
      </column>
      <column datatype='integer' name='[Pages Available - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Pages Available] END' />
      </column>
      <column datatype='integer' name='[Pages Available - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Available - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Available - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Available for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - MTD]&#13;&#10;END' />
      </column>
      <column caption='Pages Served %D for Table' datatype='real' default-format='p0.0%' name='[Pages Served %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Served - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Served - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Served - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - 28Days]) - sum([Pages Served - P28Days]))/sum([Pages Served - P28Days])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - MTD]) - sum([Pages Served - PMTD]))/sum([Pages Served - PMTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - QTD]) - sum([Pages Served - PQTD]))/sum([Pages Served - PQTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - Ref Week])-sum([Pages Served - PW]))/sum([Pages Served - PW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - YTD])-sum([Pages Served - PYTD]))/sum([Pages Served - PYTD])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - 28Days])-sum([Pages Served - S28DaysPY]))/sum([Pages Served - S28DaysPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - Ref Day])-sum([Pages Served - SDPW]))/sum([Pages Served - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - Ref Day])-sum([Pages Served - SDPY]))/sum([Pages Served - SDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - MTD])-sum([Pages Served - SMTDPY]))/sum([Pages Served - SMTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - QTD])-sum([Pages Served - SQTDPY]))/sum([Pages Served - SQTDPY])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Pages Served - Ref Week])-sum([Pages Served - SWPY]))/sum([Pages Served - SWPY])' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-55,[Ref Day]) AND [Date] &lt;= DATEADD(&apos;day&apos;,-28,[Ref Day])&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Pages Served] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Pages Served] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Served - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATEADD(&apos;quarter&apos;,-1,DATETRUNC(&apos;quarter&apos;,[Ref Day]))&#13;&#10;AND [Date] &lt;= DATEADD(&apos;quarter&apos;,-1,[Ref Day])&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Pages Served] END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1) &#13;&#10;THEN&#13;&#10;(IF [Date] &lt;= DATEADD(&apos;year&apos;, -1, [Ref Day]) &#13;&#10;THEN [Pages Served] &#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Served - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Pages Served] END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;year&apos;,-1,DATEADD(&apos;day&apos;,-27,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = DATEADD(&apos;year&apos;,-1,[Ref Day]) THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;month&apos;,[Date]) = DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) =( DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Served - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;quarter&apos;,[Date]) = DATEPART(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND  [Date] &lt;=DATEADD(&apos;year&apos;,-1, [Ref Day])&#13;&#10;AND DATEPART(&apos;year&apos;,[Date]) = (DATEPART(&apos;year&apos;,[Ref Day])-1)&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Served - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; DATEADD(&apos;year&apos;, -1, DATEADD(&apos;day&apos;, -7,[Ref Day])) AND [Date] &lt;= DATEADD(&apos;year&apos;,-1,[Ref Day])&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='N' name='[Pages Served - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Pages Served for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Served - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Served - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Served - MTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Previous Month Name]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Previous Month]&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If MONTH([Ref Day]) = 1 THEN 12 ELSE MONTH([Ref Day]) - 1 END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Previous Quarter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,DATEADD(&apos;quarter&apos;,-1,[Ref Day])))' />
      </column>
      <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Current Year]-1' />
      </column>
      <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[SDPM]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;month&apos;,-1,[Ref Day]))' />
      </column>
      <column datatype='date' name='[SDPQ]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;quarter&apos;,-1,[Ref Day]))' />
      </column>
      <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Ref Day]-7' />
      </column>
      <column datatype='date' name='[SDPY]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;year&apos;,-1, [Ref Day]))' />
      </column>
      <column aggregation='CountD' datatype='string' name='[Segment]' role='dimension' type='nominal'>
      </column>
      <column caption='Served eCPM %D for Table' datatype='real' default-format='p0.0%' name='[Served eCPM %D for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - %D SDPW]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - %D PW]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - %D PMTD]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - 28Days]-[Served eCPM - P28Days])/[Served eCPM - P28Days]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - MTD]-[Served eCPM - PMTD])/[Served eCPM - PMTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - QTD]-[Served eCPM - PQTD])/[Served eCPM - PQTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - Ref Week]-[Served eCPM - PW])/[Served eCPM - PW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - YTD]-[Served eCPM - PYTD])/[Served eCPM - PYTD]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - 28Days] - [Served eCPM - S28DaysPY])/[Served eCPM - S28DaysPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - Ref Day]-[Served eCPM - SDPW])/[Served eCPM - SDPW]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - Ref Day]-[Served eCPM - SDPY])/[Served eCPM - SDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - MTD] - [Served eCPM - SMTDPY])/[Served eCPM - SMTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - QTD] - [Served eCPM - SQTDPY])/[Served eCPM - SQTDPY]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Served eCPM - Ref Week] - [Served eCPM - SWPY])/[Served eCPM - SWPY]' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - 28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Pages Served - 28Days])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - MTD])/sum([Pages Served - MTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - P28Days]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - P28Days])/sum([Pages Served - P28Days])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PMTD])/sum([Pages Served - PMTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - PQTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PQTD])/sum([Pages Served - PQTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PW])/sum([Pages Served - PW])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - PYTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - PYTD])/sum([Pages Served - PYTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - QTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Pages Served - QTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Day])/sum([Pages Served - Ref Day])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Served - Ref Week])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - S28DaysPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - S28DaysPY])/sum([Pages Served - S28DaysPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SDPW])/sum([Pages Served - SDPW])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - SDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SDPY])/sum([Pages Served - SDPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - SMTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SMTDPY])/sum([Pages Served - SMTDPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - SQTDPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SQTDPY])/sum([Pages Served - SQTDPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - SWPY]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - SWPY])/sum([Pages Served - SWPY])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM - YTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Served - YTD])*1000' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM for Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Pages Served])*1000' />
      </column>
      <column caption='Gross Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Tornado Measure - Day ABS]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Tornado Measure - Day])' />
      </column>
      <column datatype='real' name='[Tornado Measure - Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Difference Type]&#13;&#10;WHEN &quot;Actual Difference&quot; THEN&#13;&#10;    CASE [Parameters].[Metric]&#13;&#10;        WHEN &quot;Ads per Page&quot; THEN [Ads per Page - Ref Day] - [Ads per Page - SDPW]&#13;&#10;        WHEN &quot;CPC&quot; THEN [CPC - Ref Day] - [CPC - SDPW]&#13;&#10;        WHEN &quot;Page CTR&quot; THEN [CTR - Ref Day] - [CTR - SDPW]&#13;&#10;        WHEN &quot;Fill Rate&quot; THEN [Fill Rate - Ref Day] - [Fill Rate - SDPW]&#13;&#10;        WHEN &quot;Pages Available&quot; THEN sum([Pages Available - Ref Day]) - sum([Pages Available - SDPW])&#13;&#10;        WHEN &quot;Gross Media Revenue&quot; THEN sum([Gross Media Revenue - Ref Day]) - sum([Gross Media Revenue - SDPW])&#13;&#10;    END&#13;&#10;WHEN &quot;Percent Difference&quot; THEN&#13;&#10;    CASE [Parameters].[Metric]&#13;&#10;        WHEN &quot;Ads per Page&quot; THEN ([Ads per Page - Ref Day] - [Ads per Page - SDPW])/[Ads per Page - SDPW]&#13;&#10;        WHEN &quot;CPC&quot; THEN ([CPC - Ref Day] - [CPC - SDPW])/[CPC - SDPW]&#13;&#10;        WHEN &quot;Page CTR&quot; THEN ([CTR - Ref Day] - [CTR - SDPW])/[CTR - SDPW]&#13;&#10;        WHEN &quot;Fill Rate&quot; THEN ([Fill Rate - Ref Day] - [Fill Rate - SDPW])/[Fill Rate - SDPW]&#13;&#10;        WHEN &quot;Pages Available&quot; THEN (sum([Pages Available - Ref Day]) - sum([Pages Available - SDPW]))/sum([Pages Available - SDPW])&#13;&#10;        WHEN &quot;Gross Media Revenue&quot; THEN (sum([Gross Media Revenue - Ref Day]) - sum([Gross Media Revenue - SDPW]))/sum([Gross Media Revenue - SDPW])&#13;&#10;    END&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Tornado Measure - MTD ABS]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Tornado Measure - MTD])' />
      </column>
      <column datatype='real' name='[Tornado Measure - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Difference Type]&#13;&#10;WHEN &quot;Actual Difference&quot; THEN&#13;&#10;    CASE [Parameters].[Metric]&#13;&#10;        WHEN &quot;Ads per Page&quot; THEN [Ads per Page - MTD] - [Ads per Page - PMTD]&#13;&#10;        WHEN &quot;CPC&quot; THEN [CPC - MTD] - [CPC - PMTD]&#13;&#10;        WHEN &quot;Page CTR&quot; THEN [CTR - MTD] - [CTR - PMTD]&#13;&#10;        WHEN &quot;Fill Rate&quot; THEN [Fill Rate - MTD] - [Fill Rate - PMTD]&#13;&#10;        WHEN &quot;Pages Available&quot; THEN sum([Pages Available - MTD]) - sum([Pages Available - PMTD])&#13;&#10;        WHEN &quot;Gross Media Revenue&quot; THEN sum([Gross Media Revenue - MTD]) - sum([Gross Media Revenue - PMTD])&#13;&#10;    END&#13;&#10;WHEN &quot;Percent Difference&quot; THEN&#13;&#10;    CASE [Parameters].[Metric]&#13;&#10;        WHEN &quot;Ads per Page&quot; THEN ([Ads per Page - MTD] - [Ads per Page - PMTD])/[Ads per Page - PMTD]&#13;&#10;        WHEN &quot;CPC&quot; THEN ([CPC - MTD] - [CPC - PMTD])/[CPC - PMTD]&#13;&#10;        WHEN &quot;Page CTR&quot; THEN ([CTR - MTD] - [CTR - PMTD])/[CTR - PMTD]&#13;&#10;        WHEN &quot;Fill Rate&quot; THEN ([Fill Rate - MTD] - [Fill Rate - PMTD])/[Fill Rate - PMTD]&#13;&#10;        WHEN &quot;Pages Available&quot; THEN (sum([Pages Available - MTD]) - sum([Pages Available - PMTD]))/sum([Pages Available - PMTD])&#13;&#10;        WHEN &quot;Gross Media Revenue&quot; THEN (sum([Gross Media Revenue - MTD]) - sum([Gross Media Revenue - PMTD]))/sum([Gross Media Revenue - PMTD])&#13;&#10;    END&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Tornado Measure - Week ABS]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Tornado Measure - Week])' />
      </column>
      <column datatype='real' name='[Tornado Measure - Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Difference Type]&#13;&#10;WHEN &quot;Actual Difference&quot; THEN&#13;&#10;    CASE [Parameters].[Metric]&#13;&#10;        WHEN &quot;Ads per Page&quot; THEN [Ads per Page - Ref Week] - [Ads per Page - PW]&#13;&#10;        WHEN &quot;CPC&quot; THEN [CPC - Ref Week] - [CPC - PW]&#13;&#10;        WHEN &quot;Page CTR&quot; THEN [CTR - Ref Week] - [CTR - PW]&#13;&#10;        WHEN &quot;Fill Rate&quot; THEN [Fill Rate - Ref Week] - [Fill Rate - PW]&#13;&#10;        WHEN &quot;Pages Available&quot; THEN sum([Pages Available - Ref Week]) - sum([Pages Available - PW])&#13;&#10;        WHEN &quot;Gross Media Revenue&quot; THEN sum([Gross Media Revenue - Ref Week]) - sum([Gross Media Revenue - PW])&#13;&#10;    END&#13;&#10;WHEN &quot;Percent Difference&quot; THEN&#13;&#10;    CASE [Parameters].[Metric]&#13;&#10;        WHEN &quot;Ads per Page&quot; THEN ([Ads per Page - Ref Week] - [Ads per Page - PW])/[Ads per Page - PW]&#13;&#10;        WHEN &quot;CPC&quot; THEN ([CPC - Ref Week] - [CPC - PW])/[CPC - PW]&#13;&#10;        WHEN &quot;Page CTR&quot; THEN ([CTR - Ref Week] - [CTR - PW])/[CTR - PW]&#13;&#10;        WHEN &quot;Fill Rate&quot; THEN ([Fill Rate - Ref Week] - [Fill Rate - PW])/[Fill Rate - PW]&#13;&#10;        WHEN &quot;Pages Available&quot; THEN (sum([Pages Available - Ref Week]) - sum([Pages Available - PW]))/sum([Pages Available - PW])&#13;&#10;        WHEN &quot;Gross Media Revenue&quot; THEN (sum([Gross Media Revenue - Ref Week]) - sum([Gross Media Revenue - PW]))/sum([Gross Media Revenue - PW])&#13;&#10;    END&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year of Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF MONTH([Ref Day]) = 1 THEN YEAR([Ref Day]) - 1 ELSE YEAR([Ref Day]) END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Zero]' role='measure' type='ordinal'>
      </column>
      <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
      <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - 28Days]' derivation='Sum' name='[sum:Clicks - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - QTD]' derivation='Sum' name='[sum:Clicks - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - Ref Day]' derivation='Sum' name='[sum:Clicks - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - Ref Week]' derivation='Sum' name='[sum:Clicks - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - YTD]' derivation='Sum' name='[sum:Clicks - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - 28Days]' derivation='Sum' name='[sum:Gross Media Revenue - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - QTD]' derivation='Sum' name='[sum:Gross Media Revenue - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - Ref Day]' derivation='Sum' name='[sum:Gross Media Revenue - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - Ref Week]' derivation='Sum' name='[sum:Gross Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - YTD]' derivation='Sum' name='[sum:Gross Media Revenue - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue for Table]' derivation='Sum' name='[sum:Gross Media Revenue for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - 28Days]' derivation='Sum' name='[sum:Impressions Served - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - QTD]' derivation='Sum' name='[sum:Impressions Served - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - Ref Day]' derivation='Sum' name='[sum:Impressions Served - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - Ref Week]' derivation='Sum' name='[sum:Impressions Served - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - YTD]' derivation='Sum' name='[sum:Impressions Served - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Media Revenue - Ref Day]' derivation='Sum' name='[sum:Net Media Revenue - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Media Revenue - Ref Week]' derivation='Sum' name='[sum:Net Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - 28Days]' derivation='Sum' name='[sum:Pages Available - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - QTD]' derivation='Sum' name='[sum:Pages Available - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - Ref Day]' derivation='Sum' name='[sum:Pages Available - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - Ref Week]' derivation='Sum' name='[sum:Pages Available - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - YTD]' derivation='Sum' name='[sum:Pages Available - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available for Table]' derivation='Sum' name='[sum:Pages Available for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - 28Days]' derivation='Sum' name='[sum:Pages Served - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - QTD]' derivation='Sum' name='[sum:Pages Served - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - Ref Day]' derivation='Sum' name='[sum:Pages Served - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - Ref Week]' derivation='Sum' name='[sum:Pages Served - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - YTD]' derivation='Sum' name='[sum:Pages Served - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - %D P28Days]' derivation='User' name='[usr:Ads per Page - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - %D PQTD]' derivation='User' name='[usr:Ads per Page - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - %D PW]' derivation='User' name='[usr:Ads per Page - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - %D PYTD]' derivation='User' name='[usr:Ads per Page - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - 28Days]' derivation='User' name='[usr:Ads per Page - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - QTD]' derivation='User' name='[usr:Ads per Page - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - Ref Day]' derivation='User' name='[usr:Ads per Page - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - Ref Week]' derivation='User' name='[usr:Ads per Page - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page - YTD]' derivation='User' name='[usr:Ads per Page - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ads per Page for Table]' derivation='User' name='[usr:Ads per Page for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - %D P28Days]' derivation='User' name='[usr:Available eCPM - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - %D PQTD]' derivation='User' name='[usr:Available eCPM - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - %D PW]' derivation='User' name='[usr:Available eCPM - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - %D PYTD]' derivation='User' name='[usr:Available eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - 28Days]' derivation='User' name='[usr:Available eCPM - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - QTD]' derivation='User' name='[usr:Available eCPM - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - Ref Day]' derivation='User' name='[usr:Available eCPM - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - Ref Week]' derivation='User' name='[usr:Available eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM - YTD]' derivation='User' name='[usr:Available eCPM - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Available eCPM for Table]' derivation='User' name='[usr:Available eCPM for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - %D P28Days]' derivation='User' name='[usr:CPC - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - %D PQTD]' derivation='User' name='[usr:CPC - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - %D PW]' derivation='User' name='[usr:CPC - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - %D PYTD]' derivation='User' name='[usr:CPC - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - 28Days]' derivation='User' name='[usr:CPC - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - QTD]' derivation='User' name='[usr:CPC - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - Ref Day]' derivation='User' name='[usr:CPC - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - Ref Week]' derivation='User' name='[usr:CPC - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - YTD]' derivation='User' name='[usr:CPC - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC for Table]' derivation='User' name='[usr:CPC for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - %D P28Days]' derivation='User' name='[usr:CTR - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - %D PQTD]' derivation='User' name='[usr:CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - %D PW]' derivation='User' name='[usr:CTR - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - %D PYTD]' derivation='User' name='[usr:CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - 28Days]' derivation='User' name='[usr:CTR - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - QTD]' derivation='User' name='[usr:CTR - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - Ref Day]' derivation='User' name='[usr:CTR - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - Ref Week]' derivation='User' name='[usr:CTR - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - YTD]' derivation='User' name='[usr:CTR - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR for Table]' derivation='User' name='[usr:CTR for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - %D P28Days]' derivation='User' name='[usr:Clicks - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - %D PQTD]' derivation='User' name='[usr:Clicks - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - %D PW]' derivation='User' name='[usr:Clicks - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - %D PYTD]' derivation='User' name='[usr:Clicks - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - %D P28Days]' derivation='User' name='[usr:Fill Rate - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - %D PQTD]' derivation='User' name='[usr:Fill Rate - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - %D PW]' derivation='User' name='[usr:Fill Rate - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - %D PYTD]' derivation='User' name='[usr:Fill Rate - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - 28Days]' derivation='User' name='[usr:Fill Rate - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - QTD]' derivation='User' name='[usr:Fill Rate - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - Ref Day]' derivation='User' name='[usr:Fill Rate - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - Ref Week]' derivation='User' name='[usr:Fill Rate - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate - YTD]' derivation='User' name='[usr:Fill Rate - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fill Rate for Table]' derivation='User' name='[usr:Fill Rate for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - %D P28Days]' derivation='User' name='[usr:Gross Media Revenue - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - %D PQTD]' derivation='User' name='[usr:Gross Media Revenue - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - %D PW]' derivation='User' name='[usr:Gross Media Revenue - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Media Revenue - %D PYTD]' derivation='User' name='[usr:Gross Media Revenue - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hotels per Auction for Table]' derivation='User' name='[usr:Hotels per Auction for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - %D P28Days]' derivation='User' name='[usr:Impressions Served - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - %D PQTD]' derivation='User' name='[usr:Impressions Served - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - %D PW]' derivation='User' name='[usr:Impressions Served - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions Served - %D PYTD]' derivation='User' name='[usr:Impressions Served - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - %D P28Days]' derivation='User' name='[usr:Page CTR - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - %D PQTD]' derivation='User' name='[usr:Page CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - %D PW]' derivation='User' name='[usr:Page CTR - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - %D PYTD]' derivation='User' name='[usr:Page CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - 28Days]' derivation='User' name='[usr:Page CTR - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - QTD]' derivation='User' name='[usr:Page CTR - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - Ref Day]' derivation='User' name='[usr:Page CTR - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - Ref Week]' derivation='User' name='[usr:Page CTR - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Page CTR - YTD]' derivation='User' name='[usr:Page CTR - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - %D P28Days]' derivation='User' name='[usr:Pages Available - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - %D PQTD]' derivation='User' name='[usr:Pages Available - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - %D PW]' derivation='User' name='[usr:Pages Available - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available - %D PYTD]' derivation='User' name='[usr:Pages Available - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - %D P28Days]' derivation='User' name='[usr:Pages Served - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - %D PQTD]' derivation='User' name='[usr:Pages Served - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - %D PW]' derivation='User' name='[usr:Pages Served - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Served - %D PYTD]' derivation='User' name='[usr:Pages Served - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - %D P28Days]' derivation='User' name='[usr:Served eCPM - %D P28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - %D PQTD]' derivation='User' name='[usr:Served eCPM - %D PQTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - %D PW]' derivation='User' name='[usr:Served eCPM - %D PW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - %D PYTD]' derivation='User' name='[usr:Served eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - 28Days]' derivation='User' name='[usr:Served eCPM - 28Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - QTD]' derivation='User' name='[usr:Served eCPM - QTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - Ref Day]' derivation='User' name='[usr:Served eCPM - Ref Day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - Ref Week]' derivation='User' name='[usr:Served eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM - YTD]' derivation='User' name='[usr:Served eCPM - YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Served eCPM for Table]' derivation='User' name='[usr:Served eCPM for Table:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\sushmit.roy\Documents\My Tableau Repository\Datasources\ssn_dashboard__publisher_data copy 1.tde' schema='Extract' tablename='Extract' update-time='3/27/2015 10:21:34 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Blank]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Calculation_0530616224817770]' formula='CASE MONTH([Date])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[Date without Year by Day Only]' formula='[MM] + &quot;-&quot; + [DD]' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Net Media Revenue]' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Spend]*0.752&#13;&#10;ELSE&#13;&#10;[Spend]*0.665&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5409234' timestamp-start='2015-03-27 22:21:32.745000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.340731' measure-ordering='alphabetic' measure-percentage='0.379896' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Breakdown Color:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Top 10&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Rest of US&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;HotelClub&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;CheapTickets&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Total Details Page&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;HotelReservations&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Worldspan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Apollo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Travelocity&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;RatesToGo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Galileo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Orbitz&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;11 to 40&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hipmunk&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Total List Page&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;ebookers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#67bf5c'>
              <bucket>2012</bucket>
            </map>
            <map to='#729ece'>
              <bucket>2010</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>2013</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>2011</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Ad Unit Type]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Total GDS List Page&quot;' />
            <member value='&quot;Total Hotel Details Page&quot;' />
            <member value='&quot;Total Hotel List Page&quot;' />
            <member value='&quot;Total Packages List Page&quot;' />
            <member value='&quot;Total SEM List Page&quot;' />
            <member value='&quot;Apollo List Page&quot;' />
            <member value='&quot;Galileo List Page&quot;' />
            <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
            <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;Hotel List Page - ebookers.com&quot;' />
            <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
            <member value='&quot;Hotel List Page - HotelClub&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
            <member value='&quot;Hotel List Page - RatesToGo&quot;' />
            <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
            <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
            <member value='&quot;HotelReservations.com - SSN - Hotel - OP - List Page&quot;' />
            <member value='&quot;Martini Package Page - Travelocity&quot;' />
            <member value='&quot;Package List Page - CheapTickets&quot;' />
            <member value='&quot;Package List Page - Orbitz Global&quot;' />
            <member value='&quot;Package List Page - Travelocity&quot;' />
            <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Worldspan List Page&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Site&quot;'>
          <calculation class='tableau' formula='&quot;Site&quot;' />
          <members>
            <member value='&quot;Site&quot;' />
            <member value='&quot;Page Type&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Segment&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Difference Type]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Difference&quot;'>
          <calculation class='tableau' formula='&quot;Percent Difference&quot;' />
          <members>
            <member value='&quot;Actual Difference&quot;' />
            <member value='&quot;Percent Difference&quot;' />
          </members>
        </column>
        <column caption='OTA Ad Unit Type' datatype='string' name='[GDS Ad Unit Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Total GDS List Page&quot;' />
            <member value='&quot;Total Hotel Details Page&quot;' />
            <member value='&quot;Total Hotel List Page&quot;' />
            <member value='&quot;Total Packages List Page&quot;' />
            <member value='&quot;Total SEM List Page&quot;' />
            <member value='&quot;Apollo List Page&quot;' />
            <member value='&quot;Galileo List Page&quot;' />
            <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
            <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;Hotel List Page - ebookers.com&quot;' />
            <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
            <member value='&quot;Hotel List Page - HotelClub&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
            <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
            <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
            <member value='&quot;Martini Package Page - Travelocity&quot;' />
            <member value='&quot;Package List Page - CheapTickets&quot;' />
            <member value='&quot;Package List Page - Orbitz Global&quot;' />
            <member value='&quot;Package List Page - Travelocity&quot;' />
            <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Worldspan List Page&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Aberdeen&quot;' />
            <member value='&quot;Abu Dhabi&quot;' />
            <member value='&quot;Adelaide&quot;' />
            <member value='&quot;Albany&quot;' />
            <member value='&quot;Albuquerque&quot;' />
            <member value='&quot;Amsterdam&quot;' />
            <member value='&quot;Anchorage&quot;' />
            <member value='&quot;Asheville&quot;' />
            <member value='&quot;Aspen&quot;' />
            <member value='&quot;Athens&quot;' />
            <member value='&quot;Atlanta&quot;' />
            <member value='&quot;Atlantic City&quot;' />
            <member value='&quot;Auckland&quot;' />
            <member value='&quot;Austin&quot;' />
            <member value='&quot;Bali&quot;' />
            <member value='&quot;Baltimore&quot;' />
            <member value='&quot;Bangkok&quot;' />
            <member value='&quot;Barcelona&quot;' />
            <member value='&quot;Beijing&quot;' />
            <member value='&quot;Berlin&quot;' />
            <member value='&quot;Big Island&quot;' />
            <member value='&quot;Biloxi&quot;' />
            <member value='&quot;Birmingham&quot;' />
            <member value='&quot;Bloemfontein&quot;' />
            <member value='&quot;Boise&quot;' />
            <member value='&quot;Bologna&quot;' />
            <member value='&quot;Boston&quot;' />
            <member value='&quot;Branson&quot;' />
            <member value='&quot;Breckenridge&quot;' />
            <member value='&quot;Brisbane&quot;' />
            <member value='&quot;Brussels&quot;' />
            <member value='&quot;Budapest&quot;' />
            <member value='&quot;Buenos Aires&quot;' />
            <member value='&quot;Buffalo&quot;' />
            <member value='&quot;Calgary&quot;' />
            <member value='&quot;Cancun&quot;' />
            <member value='&quot;Cape Town&quot;' />
            <member value='&quot;Charleston&quot;' />
            <member value='&quot;Charlotte&quot;' />
            <member value='&quot;Chicago&quot;' />
            <member value='&quot;Cincinnati&quot;' />
            <member value='&quot;Cleveland&quot;' />
            <member value='&quot;Columbus&quot;' />
            <member value='&quot;Copenhagen&quot;' />
            <member value='&quot;Corpus Christi&quot;' />
            <member value='&quot;Dallas&quot;' />
            <member value='&quot;Daytona Beach&quot;' />
            <member value='&quot;Delhi&quot;' />
            <member value='&quot;Denver&quot;' />
            <member value='&quot;Des Moines&quot;' />
            <member value='&quot;Detroit&quot;' />
            <member value='&quot;Dubai&quot;' />
            <member value='&quot;Dublin&quot;' />
            <member value='&quot;Durban&quot;' />
            <member value='&quot;Dusseldorf&quot;' />
            <member value='&quot;East London&quot;' />
            <member value='&quot;Edinburgh&quot;' />
            <member value='&quot;Edmonton&quot;' />
            <member value='&quot;Flagstaff&quot;' />
            <member value='&quot;Florence&quot;' />
            <member value='&quot;Florida Keys&quot;' />
            <member value='&quot;Fort Lauderdale&quot;' />
            <member value='&quot;Fort Myers&quot;' />
            <member value='&quot;Frankfurt&quot;' />
            <member value='&quot;Geneva&quot;' />
            <member value='&quot;Gold Coast&quot;' />
            <member value='&quot;Grand Rapids&quot;' />
            <member value='&quot;Guanacaste&quot;' />
            <member value='&quot;Guangzhou&quot;' />
            <member value='&quot;Halifax&quot;' />
            <member value='&quot;Hamburg&quot;' />
            <member value='&quot;Hartford&quot;' />
            <member value='&quot;Hilton Head&quot;' />
            <member value='&quot;Ho Chi Minh City&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Honolulu&quot;' />
            <member value='&quot;Houston&quot;' />
            <member value='&quot;Indianapolis&quot;' />
            <member value='&quot;Istanbul&quot;' />
            <member value='&quot;Jacksonville&quot;' />
            <member value='&quot;Jakarta&quot;' />
            <member value='&quot;Johannesburg&quot;' />
            <member value='&quot;Kansas City&quot;' />
            <member value='&quot;Kauai&quot;' />
            <member value='&quot;Kimberley&quot;' />
            <member value='&quot;Knoxville&quot;' />
            <member value='&quot;Kuala Lumpur&quot;' />
            <member value='&quot;Lake Tahoe&quot;' />
            <member value='&quot;Lancaster&quot;' />
            <member value='&quot;Las Vegas&quot;' />
            <member value='&quot;Lexington&quot;' />
            <member value='&quot;Lisbon&quot;' />
            <member value='&quot;London&quot;' />
            <member value='&quot;Los Angeles&quot;' />
            <member value='&quot;Los Cabos&quot;' />
            <member value='&quot;Louisville&quot;' />
            <member value='&quot;Macau&quot;' />
            <member value='&quot;Madison&quot;' />
            <member value='&quot;Madrid&quot;' />
            <member value='&quot;Manchester&quot;' />
            <member value='&quot;Manila&quot;' />
            <member value='&quot;Maui&quot;' />
            <member value='&quot;Melbourne&quot;' />
            <member value='&quot;Memphis&quot;' />
            <member value='&quot;Mexico City&quot;' />
            <member value='&quot;Miami&quot;' />
            <member value='&quot;Milan&quot;' />
            <member value='&quot;Milwaukee&quot;' />
            <member value='&quot;Minneapolis&quot;' />
            <member value='&quot;Monterey&quot;' />
            <member value='&quot;Montreal&quot;' />
            <member value='&quot;Moscow&quot;' />
            <member value='&quot;Mumbai&quot;' />
            <member value='&quot;Munich&quot;' />
            <member value='&quot;Myrtle Beach&quot;' />
            <member value='&quot;Naples&quot;' />
            <member value='&quot;Nashville&quot;' />
            <member value='&quot;Nelspruit&quot;' />
            <member value='&quot;New Orleans&quot;' />
            <member value='&quot;New York&quot;' />
            <member value='&quot;Newport&quot;' />
            <member value='&quot;Niagara Falls&quot;' />
            <member value='&quot;Nice&quot;' />
            <member value='&quot;Ocean City&quot;' />
            <member value='&quot;Oklahoma City&quot;' />
            <member value='&quot;Omaha&quot;' />
            <member value='&quot;Orange County&quot;' />
            <member value='&quot;Orlando&quot;' />
            <member value='&quot;Osaka&quot;' />
            <member value='&quot;Other&quot;' />
            <member value='&quot;Palm Beach&quot;' />
            <member value='&quot;Palm Springs&quot;' />
            <member value='&quot;Panama City&quot;' />
            <member value='&quot;Paris&quot;' />
            <member value='&quot;Park City&quot;' />
            <member value='&quot;Pensacola&quot;' />
            <member value='&quot;Perth&quot;' />
            <member value='&quot;Philadelphia&quot;' />
            <member value='&quot;Phoenix&quot;' />
            <member value='&quot;Phuket&quot;' />
            <member value='&quot;Pittsburgh&quot;' />
            <member value='&quot;Polokwane&quot;' />
            <member value='&quot;Port Elizabeth&quot;' />
            <member value='&quot;Portland&quot;' />
            <member value='&quot;Prague&quot;' />
            <member value='&quot;Pretoria&quot;' />
            <member value='&quot;Providence&quot;' />
            <member value='&quot;Puerto Plata&quot;' />
            <member value='&quot;Punta Cana&quot;' />
            <member value='&quot;Raleigh-Durham&quot;' />
            <member value='&quot;Reno&quot;' />
            <member value='&quot;Rest of Argentina&quot;' />
            <member value='&quot;Rest of Australia&quot;' />
            <member value='&quot;Rest of Austria&quot;' />
            <member value='&quot;Rest of Belgium&quot;' />
            <member value='&quot;Rest of Brazil&quot;' />
            <member value='&quot;Rest of Canada&quot;' />
            <member value='&quot;Rest of Chile&quot;' />
            <member value='&quot;Rest of China&quot;' />
            <member value='&quot;Rest of Costa Rica&quot;' />
            <member value='&quot;Rest of Czech Republic&quot;' />
            <member value='&quot;Rest of Denmark&quot;' />
            <member value='&quot;Rest of Dominican Republic&quot;' />
            <member value='&quot;Rest of France&quot;' />
            <member value='&quot;Rest of Germany&quot;' />
            <member value='&quot;Rest of Greece&quot;' />
            <member value='&quot;Rest of Hong Kong&quot;' />
            <member value='&quot;Rest of Hungary&quot;' />
            <member value='&quot;Rest of India&quot;' />
            <member value='&quot;Rest of Indonesia&quot;' />
            <member value='&quot;Rest of Ireland&quot;' />
            <member value='&quot;Rest of Italy&quot;' />
            <member value='&quot;Rest of Japan&quot;' />
            <member value='&quot;Rest of Korea&quot;' />
            <member value='&quot;Rest of Malaysia&quot;' />
            <member value='&quot;Rest of Mexico&quot;' />
            <member value='&quot;Rest of Netherlands&quot;' />
            <member value='&quot;Rest of New Zealand&quot;' />
            <member value='&quot;Rest of Panama&quot;' />
            <member value='&quot;Rest of Philippines&quot;' />
            <member value='&quot;Rest of Portugal&quot;' />
            <member value='&quot;Rest of Puerto Rico&quot;' />
            <member value='&quot;Rest of Russian Federation&quot;' />
            <member value='&quot;Rest of Singapore&quot;' />
            <member value='&quot;Rest of South Africa&quot;' />
            <member value='&quot;Rest of Spain&quot;' />
            <member value='&quot;Rest of Sweden&quot;' />
            <member value='&quot;Rest of Switzerland&quot;' />
            <member value='&quot;Rest of Taiwan&quot;' />
            <member value='&quot;Rest of Thailand&quot;' />
            <member value='&quot;Rest of Turkey&quot;' />
            <member value='&quot;Rest of UAE&quot;' />
            <member value='&quot;Rest of UK&quot;' />
            <member value='&quot;Rest of US&quot;' />
            <member value='&quot;Rest of Vietnam&quot;' />
            <member value='&quot;Rest of World&quot;' />
            <member value='&quot;Richmond&quot;' />
            <member value='&quot;Rio De Janeiro&quot;' />
            <member value='&quot;Rome&quot;' />
            <member value='&quot;Sacramento&quot;' />
            <member value='&quot;Salt Lake City&quot;' />
            <member value='&quot;San Antonio&quot;' />
            <member value='&quot;San Diego&quot;' />
            <member value='&quot;San Francisco&quot;' />
            <member value='&quot;San Jose&quot;' />
            <member value='&quot;San Juan&quot;' />
            <member value='&quot;Santa Barbara&quot;' />
            <member value='&quot;Santa Cruz&quot;' />
            <member value='&quot;Santa Fe&quot;' />
            <member value='&quot;Santiago&quot;' />
            <member value='&quot;Santo Domingo&quot;' />
            <member value='&quot;Sao Paulo&quot;' />
            <member value='&quot;Sarasota&quot;' />
            <member value='&quot;Savannah&quot;' />
            <member value='&quot;Seattle&quot;' />
            <member value='&quot;Sedona&quot;' />
            <member value='&quot;Seoul&quot;' />
            <member value='&quot;Shanghai&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;South Padre Island&quot;' />
            <member value='&quot;Spokane&quot;' />
            <member value='&quot;St. Louis&quot;' />
            <member value='&quot;St. Petersburg&quot;' />
            <member value='&quot;Stockholm&quot;' />
            <member value='&quot;Sydney&quot;' />
            <member value='&quot;Taipei&quot;' />
            <member value='&quot;Tallahassee&quot;' />
            <member value='&quot;Tampa&quot;' />
            <member value='&quot;Tokyo&quot;' />
            <member value='&quot;Toronto&quot;' />
            <member value='&quot;Tucson&quot;' />
            <member value='&quot;Tulsa&quot;' />
            <member value='&quot;Vail&quot;' />
            <member value='&quot;Vallarta&quot;' />
            <member value='&quot;Vancouver&quot;' />
            <member value='&quot;Venice&quot;' />
            <member value='&quot;Vienna&quot;' />
            <member value='&quot;Virginia Beach&quot;' />
            <member value='&quot;Washington DC&quot;' />
            <member value='&quot;Williamsburg&quot;' />
            <member value='&quot;Wisconsin Dells&quot;' />
            <member value='&quot;Zurich&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Metric]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pages Available&quot;'>
          <calculation class='tableau' formula='&quot;Pages Available&quot;' />
          <members>
            <member value='&quot;Pages Available&quot;' />
            <member value='&quot;Fill Rate&quot;' />
            <member value='&quot;Page CTR&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;Gross Media Revenue&quot;' />
            <member value='&quot;Ads per Page&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
          <calculation class='tableau' formula='&quot;True&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
          </members>
        </column>
        <column caption='GDS Publisher' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column caption='OTA Publisher' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column caption='GDS Ad Unit Type' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Total GDS List Page&quot;' />
            <member value='&quot;Total Hotel Details Page&quot;' />
            <member value='&quot;Total Hotel List Page&quot;' />
            <member value='&quot;Total Packages List Page&quot;' />
            <member value='&quot;Total SEM List Page&quot;' />
            <member value='&quot;Apollo List Page&quot;' />
            <member value='&quot;Galileo List Page&quot;' />
            <member value='&quot;Hotel Details Page - CheapTickets&quot;' />
            <member value='&quot;Hotel Details Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;Hotel List Page - ebookers.com&quot;' />
            <member value='&quot;Hotel List Page - ebookers.ie&quot;' />
            <member value='&quot;Hotel List Page - HotelClub&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Classic&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Hotel List Page - Orbitz Global - Mobile&quot;' />
            <member value='&quot;Hotel List Page - Travelocity GT&quot;' />
            <member value='&quot;Hotel List Page - Travelocity WebApp&quot;' />
            <member value='&quot;Martini Package Page - Travelocity&quot;' />
            <member value='&quot;Package List Page - CheapTickets&quot;' />
            <member value='&quot;Package List Page - Orbitz Global&quot;' />
            <member value='&quot;Package List Page - Travelocity&quot;' />
            <member value='&quot;SEM Hotel List Page - CheapTickets&quot;' />
            <member value='&quot;SEM Hotel List Page - Orbitz Global&quot;' />
            <member value='&quot;Worldspan List Page&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Publisher]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OWW&quot;' />
            <member value='&quot;Travelocity&quot;' />
            <member value='&quot;Travelport&quot;' />
            <member value='&quot;Apollo&quot;' />
            <member value='&quot;CheapTickets&quot;' />
            <member value='&quot;ebookers&quot;' />
            <member value='&quot;Galileo&quot;' />
            <member value='&quot;HotelClub&quot;' />
            <member value='&quot;Orbitz&quot;' />
            <member value='&quot;RatesToGo&quot;' />
            <member value='&quot;Worldspan&quot;' />
          </members>
        </column>
        <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2014-07-06#'>
          <calculation class='tableau' formula='#2014-07-06#' />
        </column>
        <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
          <calculation class='tableau' formula='&quot;Yesterday&quot;' />
          <members>
            <member value='&quot;Yesterday&quot;' />
            <member value='&quot;Reference Day&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
        <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels for Table]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Active Hotels - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Active Hotels - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Active Hotels - MTD]&#13;&#10;END' />
        </column>
        <column-instance column='[Active Hotels for Table]' derivation='User' name='[usr:Active Hotels for Table:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='active_hotels_with_budget (copy 2)'>
      <datasources>
        <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
      </datasources>
      <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[active_hotels_with_budget (copy 2)].[none:Date:qk]' included-values='all'>
      </filter>
    </shared-view>
    <shared-view name='publisher_data (copy 2)'>
      <datasources>
        <datasource caption='publisher_data' name='publisher_data (copy 2)' />
      </datasources>
      <datasource-dependencies datasource='publisher_data (copy 2)'>
        <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
        </column>
        <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
        <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]'>
        <groupfilter from='&quot;Apollo&quot;' function='range' level='[none:Breakdown Color:nk]' to='&quot;Worldspan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[publisher_data (copy 2)].[none:Country:nk]'>
        <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[publisher_data (copy 2)].[none:Date:qk]' included-values='all'>
      </filter>
      <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]'>
        <groupfilter function='member' level='[none:Filter for Ad Unit Type:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Channel Type:nk]'>
        <groupfilter function='member' level='[none:Filter for Channel Type:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Publisher:nk]'>
        <groupfilter function='member' level='[none:Filter for Publisher:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[publisher_data (copy 2)].[none:Finance Region:nk]'>
        <groupfilter function='level-members' level='[none:Finance Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='28Days Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Past 28 Days through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; &#10;vs. Past 28 Days through &lt;[publisher_data (copy 2)].[tdy:SDPM:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - 28Days]-[Ads per Page - P28Days])/[Ads per Page - P28Days]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - 28Days])/sum([Pages Served - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - 28Days]-[Available eCPM - P28Days])/[Available eCPM - P28Days]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Pages Available - 28Days])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - 28Days]-[CPC - P28Days])/[CPC - P28Days]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Clicks - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - 28Days] - [CTR - P28Days])/[CTR - P28Days]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - 28Days])/sum([Impressions Served - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - 28Days]) - sum([Clicks - P28Days]))/sum([Clicks - P28Days])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Current Month Name]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - 28Days]-[Fill Rate - P28Days])/[Fill Rate - P28Days]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - 28Days])/sum([Pages Available - 28Days])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - 28Days])-sum([Gross Media Revenue - P28Days]))/sum([Gross Media Revenue - P28Days])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - 28Days]) - sum([Impressions Served - P28Days]))/sum([Impressions Served - P28Days])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - 28Days] - [Page CTR - P28Days])/[Page CTR - P28Days]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - 28Days])/sum([Pages Served - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - 28Days]) - sum([Pages Available - P28Days]))/sum([Pages Available - P28Days])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - 28Days]) - sum([Pages Served - P28Days]))/sum([Pages Served - P28Days])' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Previous Month Name]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Previous Month]&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPM]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEADD(&apos;month&apos;,-1,[Ref Day]))' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - 28Days]-[Served eCPM - P28Days])/[Served eCPM - P28Days]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Pages Served - 28Days])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Month Name]' derivation='None' name='[none:Current Month Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Month Name]' derivation='None' name='[none:Previous Month Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - 28Days]' derivation='Sum' name='[sum:Clicks - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - 28Days]' derivation='Sum' name='[sum:Gross Media Revenue - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - 28Days]' derivation='Sum' name='[sum:Impressions Served - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - 28Days]' derivation='Sum' name='[sum:Pages Available - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - 28Days]' derivation='Sum' name='[sum:Pages Served - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPM]' derivation='Day-Trunc' name='[tdy:SDPM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D P28Days]' derivation='User' name='[usr:Ads per Page - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - 28Days]' derivation='User' name='[usr:Ads per Page - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D P28Days]' derivation='User' name='[usr:Available eCPM - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - 28Days]' derivation='User' name='[usr:Available eCPM - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D P28Days]' derivation='User' name='[usr:CPC - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - 28Days]' derivation='User' name='[usr:CPC - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D P28Days]' derivation='User' name='[usr:CTR - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - 28Days]' derivation='User' name='[usr:CTR - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D P28Days]' derivation='User' name='[usr:Clicks - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D P28Days]' derivation='User' name='[usr:Fill Rate - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - 28Days]' derivation='User' name='[usr:Fill Rate - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D P28Days]' derivation='User' name='[usr:Gross Media Revenue - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D P28Days]' derivation='User' name='[usr:Impressions Served - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D P28Days]' derivation='User' name='[usr:Page CTR - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - 28Days]' derivation='User' name='[usr:Page CTR - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D P28Days]' derivation='User' name='[usr:Pages Available - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D P28Days]' derivation='User' name='[usr:Pages Served - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D P28Days]' derivation='User' name='[usr:Served eCPM - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - 28Days]' derivation='User' name='[usr:Served eCPM - 28Days:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D P28Days:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D P28Days:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='54' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Pub:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='true' />
            <format attr='font-weight' field='[publisher_data (copy 2)].[none:Pub:nk]' value='bold' />
            <format attr='text-decoration' field='[publisher_data (copy 2)].[none:Pub:nk]' value='underline' />
            <format attr='text-align' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPM:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Month Name:nk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Month Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='28Days Data 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;[publisher_data (copy 2)].[none:Current Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; &#10;vs. &lt;[publisher_data (copy 2)].[none:Previous Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPM:qk]&gt;</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - 28Days]-[Ads per Page - P28Days])/[Ads per Page - P28Days]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - 28Days])/sum([Pages Served - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - 28Days]-[Available eCPM - P28Days])/[Available eCPM - P28Days]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Pages Available - 28Days])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - 28Days]-[CPC - P28Days])/[CPC - P28Days]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Clicks - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - 28Days] - [CTR - P28Days])/[CTR - P28Days]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - 28Days])/sum([Impressions Served - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - 28Days]) - sum([Clicks - P28Days]))/sum([Clicks - P28Days])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Current Month Name]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - 28Days]-[Fill Rate - P28Days])/[Fill Rate - P28Days]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - 28Days])/sum([Pages Available - 28Days])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - 28Days])-sum([Gross Media Revenue - P28Days]))/sum([Gross Media Revenue - P28Days])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - 28Days]) - sum([Impressions Served - P28Days]))/sum([Impressions Served - P28Days])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - 28Days] - [Page CTR - P28Days])/[Page CTR - P28Days]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - 28Days])/sum([Pages Served - 28Days])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - 28Days]) - sum([Pages Available - P28Days]))/sum([Pages Available - P28Days])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - 28Days]) - sum([Pages Served - P28Days]))/sum([Pages Served - P28Days])' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= DATEADD(&apos;day&apos;,-27,[Ref Day]) AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Previous Month Name]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Previous Month]&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPM]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEADD(&apos;month&apos;,-1,[Ref Day]))' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D P28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - 28Days]-[Served eCPM - P28Days])/[Served eCPM - P28Days]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - 28Days]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - 28Days])/sum([Pages Served - 28Days])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Month Name]' derivation='None' name='[none:Current Month Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Month Name]' derivation='None' name='[none:Previous Month Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - 28Days]' derivation='Sum' name='[sum:Clicks - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - 28Days]' derivation='Sum' name='[sum:Gross Media Revenue - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - 28Days]' derivation='Sum' name='[sum:Impressions Served - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - 28Days]' derivation='Sum' name='[sum:Pages Available - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - 28Days]' derivation='Sum' name='[sum:Pages Served - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPM]' derivation='Day-Trunc' name='[tdy:SDPM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D P28Days]' derivation='User' name='[usr:Ads per Page - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - 28Days]' derivation='User' name='[usr:Ads per Page - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D P28Days]' derivation='User' name='[usr:Available eCPM - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - 28Days]' derivation='User' name='[usr:Available eCPM - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D P28Days]' derivation='User' name='[usr:CPC - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - 28Days]' derivation='User' name='[usr:CPC - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D P28Days]' derivation='User' name='[usr:CTR - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - 28Days]' derivation='User' name='[usr:CTR - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D P28Days]' derivation='User' name='[usr:Clicks - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D P28Days]' derivation='User' name='[usr:Fill Rate - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - 28Days]' derivation='User' name='[usr:Fill Rate - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D P28Days]' derivation='User' name='[usr:Gross Media Revenue - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D P28Days]' derivation='User' name='[usr:Impressions Served - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D P28Days]' derivation='User' name='[usr:Page CTR - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - 28Days]' derivation='User' name='[usr:Page CTR - 28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D P28Days]' derivation='User' name='[usr:Pages Available - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D P28Days]' derivation='User' name='[usr:Pages Served - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D P28Days]' derivation='User' name='[usr:Served eCPM - %D P28Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - 28Days]' derivation='User' name='[usr:Served eCPM - 28Days:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D P28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - 28Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D P28Days:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D P28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - 28Days:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D P28Days:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='true' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Pub:nk]' value='false' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPM:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Month Name:nk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Month Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Ad CTR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions Served])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:CTR:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ads per Page'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served])/sum([Pages Served])' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page]' derivation='User' name='[usr:Ads per Page:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:Ads per Page:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Available eCPM'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Pages Available])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM]' derivation='User' name='[usr:Available eCPM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:Available eCPM:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Blank Title'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Æ &#10;</run>
            <run bold='true' fontsize='8'>Æ   &#10;   </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[publisher_data (copy 2)].[sum:Blank:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols total='true'>[publisher_data (copy 2)].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CPC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:CPC:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gross Media Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[sum:Spend:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gross Media Revenue %'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend]' derivation='Sum' name='[pcto:sum:Spend:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[pcto:sum:Spend:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gross Revenue Graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>[publisher_data (copy 2)].[none:Label - Pub and Ad Unit:nk]</run>
            <run bold='true'>&gt;</run>
            <run bold='true'> Gross Revenue by Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Date without Year by Day Only]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[MM] + &quot;-&quot; + [DD]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Gross Media Revenue 7 Day Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ATTR(DATEPART(&apos;dayofyear&apos;,[Date])) &gt;= 7 THEN&#13;&#10;WINDOW_AVG(SUM([Spend]), -6, 0)&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Label - Pub and Ad Unit]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE([Parameters].[Publisher] + &quot; &quot; + [Parameters].[Ad Unit Type], &quot;Total Total&quot;, &quot;Total&quot;)' scope-isolation='false' />
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date without Year by Day Only]' derivation='None' name='[none:Date without Year by Day Only:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Label - Pub and Ad Unit]' derivation='None' name='[none:Label - Pub and Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue 7 Day Average]' derivation='User' name='[usr:Gross Media Revenue 7 Day Average:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' tc-options='NullIfIncomplete' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[publisher_data (copy 2)].[usr:Gross Media Revenue 7 Day Average:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[publisher_data (copy 2)].[usr:Gross Media Revenue 7 Day Average:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[publisher_data (copy 2)].[sum:Spend:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[publisher_data (copy 2)].[yr:Date:ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[publisher_data (copy 2)].[yr:Date:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Label - Pub and Ad Unit:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3010752201080322' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[publisher_data (copy 2)].[usr:Gross Media Revenue 7 Day Average:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[yr:Date:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Label - Pub and Ad Unit:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95150536298751831' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[publisher_data (copy 2)].[sum:Spend:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[publisher_data (copy 2)].[yr:Date:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Label - Pub and Ad Unit:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([publisher_data (copy 2)].[sum:Spend:qk] + [publisher_data (copy 2)].[usr:Gross Media Revenue 7 Day Average:qk])</rows>
        <cols>[publisher_data (copy 2)].[none:Date without Year by Day Only:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hotels per Auction'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Participant Count])/sum([Pages Available])' scope-isolation='false' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotels per Auction]' derivation='User' name='[usr:Hotels per Auction:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[publisher_data (copy 2)].[usr:Hotels per Auction:qk]' value='true' />
            <format attr='break-on-special' field='[publisher_data (copy 2)].[usr:Hotels per Auction:qk]' value='true' />
            <format attr='show-null-value-warning' field='[publisher_data (copy 2)].[usr:Hotels per Auction:qk]' value='true' />
            <format attr='omit-on-special' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' value='true' />
            <format attr='break-on-special' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' value='true' />
            <format attr='show-null-value-warning' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:Hotels per Auction:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Key Performance Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
              <calculation class='tableau' formula='&quot;Week&quot;' />
              <members>
                <member value='&quot;Day&quot;' />
                <member value='&quot;Week&quot;' />
                <member value='&quot;Month&quot;' />
              </members>
            </column>
            <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2014-07-06#'>
              <calculation class='tableau' formula='#2014-07-06#' />
            </column>
            <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
              <calculation class='tableau' formula='&quot;Yesterday&quot;' />
              <members>
                <member value='&quot;Yesterday&quot;' />
                <member value='&quot;Reference Day&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Active Hotels - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Active Hotels - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Active Hotels - MTD]&#13;&#10;END' />
            </column>
            <column-instance column='[Active Hotels for Table]' derivation='User' name='[usr:Active Hotels for Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day]) AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day]) THEN [Pages Available] END' scope-isolation='false' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Day]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Pages Available] END' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Available] END' />
            </column>
            <column datatype='integer' name='[Pages Available for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - MTD]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Pages Available]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - MTD]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross Media Revenue for Table]' derivation='Sum' name='[sum:Gross Media Revenue for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available for Table]' derivation='Sum' name='[sum:Pages Available for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page for Table]' derivation='User' name='[usr:Ads per Page for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM for Table]' derivation='User' name='[usr:Available eCPM for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC for Table]' derivation='User' name='[usr:CPC for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR for Table]' derivation='User' name='[usr:CTR for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate for Table]' derivation='User' name='[usr:Fill Rate for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotels per Auction for Table]' derivation='User' name='[usr:Hotels per Auction for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM for Table]' derivation='User' name='[usr:Served eCPM for Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Market Name:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Pages Available for Table])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Market Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[publisher_data (copy 2)].[sum:Pages Available for Table:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[sum:Pages Available for Table:qk]</column>
            <column>[publisher_data (copy 2)].[none:Market Name:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[publisher_data (copy 2)].[:Measure Names]' value='bold' />
            <format attr='text-align' field='[publisher_data (copy 2)].[:Measure Names]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[none:Filter for Channel Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[publisher_data (copy 2)].[none:Market Name:nk]</rows>
        <cols>[publisher_data (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Key Performance Metrics for GDS'>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Active Hotels - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Active Hotels - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Active Hotels - MTD]&#13;&#10;END' />
            </column>
            <column-instance column='[Active Hotels for Table]' derivation='User' name='[usr:Active Hotels for Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Pages Available for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - MTD]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross Media Revenue for Table]' derivation='Sum' name='[sum:Gross Media Revenue for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available for Table]' derivation='Sum' name='[sum:Pages Available for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page for Table]' derivation='User' name='[usr:Ads per Page for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM for Table]' derivation='User' name='[usr:Available eCPM for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC for Table]' derivation='User' name='[usr:CPC for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR for Table]' derivation='User' name='[usr:CTR for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate for Table]' derivation='User' name='[usr:Fill Rate for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotels per Auction for Table]' derivation='User' name='[usr:Hotels per Auction for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM for Table]' derivation='User' name='[usr:Served eCPM for Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[publisher_data (copy 2)].[sum:Pages Available for Table:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[sum:Pages Available for Table:qk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[publisher_data (copy 2)].[:Measure Names]' value='bold' />
            <format attr='text-align' field='[publisher_data (copy 2)].[:Measure Names]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[none:Filter for Channel Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[publisher_data (copy 2)].[none:Market Name:nk]</rows>
        <cols>[publisher_data (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='MTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;[publisher_data (copy 2)].[none:Current Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; &#10;vs. &lt;[publisher_data (copy 2)].[none:Previous Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPM:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - MTD])/sum([Pages Served - MTD])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - MTD])/sum([Pages Available - MTD])*1000' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - MTD])/sum([Clicks - MTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - MTD])/sum([Impressions Served - MTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Clicks]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - MTD])/sum([Pages Available - MTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - MTD]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - MTD]*0.665&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - MTD])/sum([Pages Served - MTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day]) AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day]) THEN [Pages Available] END' scope-isolation='false' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - MTD])/sum([Pages Served - MTD])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - MTD]' derivation='Sum' name='[sum:Clicks - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - MTD]' derivation='Sum' name='[sum:Gross Media Revenue - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - MTD]' derivation='Sum' name='[sum:Impressions Served - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - MTD]' derivation='Sum' name='[sum:Net Media Revenue - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - MTD]' derivation='Sum' name='[sum:Pages Available - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - MTD]' derivation='Sum' name='[sum:Pages Served - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - MTD]' derivation='User' name='[usr:Ads per Page - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - MTD]' derivation='User' name='[usr:Available eCPM - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - MTD]' derivation='User' name='[usr:CPC - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - MTD]' derivation='User' name='[usr:CTR - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - MTD]' derivation='User' name='[usr:Fill Rate - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - MTD]' derivation='User' name='[usr:Page CTR - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - MTD]' derivation='User' name='[usr:Served eCPM - MTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - MTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - MTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - MTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='240' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='MTD Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='Budget per Hotel - MTD' datatype='real' default-format='C1033%' name='[Calculation_4170106162336528]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - MTD])/[Active Hotels - MTD]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - MTD]' derivation='User' name='[usr:Active Hotels - MTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4170106162336528]' derivation='User' name='[usr:Calculation_4170106162336528:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - MTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Participant Count - MTD])/sum([Pages Available - MTD])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - MTD]' derivation='User' name='[usr:Hotels per Auction - MTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of Ref Day]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [Ref Day] THEN [Sold Hotels] END))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels as of Ref Day]' derivation='User' name='[usr:Sold Hotels as of Ref Day:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - MTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - MTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - MTD:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_4170106162336528:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - MTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='216' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='PMTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;[publisher_data (copy 2)].[none:Current Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; &#10;vs. &lt;[publisher_data (copy 2)].[none:Previous Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPM:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - MTD]-[Ads per Page - PMTD])/[Ads per Page - PMTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - MTD]-[Available eCPM - PMTD])/[Available eCPM - PMTD]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - MTD]-[CPC - PMTD])/[CPC - PMTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - MTD] - [CTR - PMTD])/[CTR - PMTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - MTD]) - sum([Clicks - PMTD]))/sum([Clicks - PMTD])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - MTD]-[Fill Rate - PMTD])/[Fill Rate - PMTD]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - MTD])-sum([Gross Media Revenue - PMTD]))/sum([Gross Media Revenue - PMTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - MTD]) - sum([Impressions Served - PMTD]))/sum([Impressions Served - PMTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D PMTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - MTD] - [Page CTR - PMTD])/[Page CTR - PMTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - MTD]) - sum([Pages Available - PMTD]))/sum([Pages Available - PMTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - MTD]) - sum([Pages Served - PMTD]))/sum([Pages Served - PMTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - MTD]-[Served eCPM - PMTD])/[Served eCPM - PMTD]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PMTD]' derivation='User' name='[usr:Ads per Page - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PMTD]' derivation='User' name='[usr:Available eCPM - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PMTD]' derivation='User' name='[usr:CPC - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PMTD]' derivation='User' name='[usr:CTR - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PMTD]' derivation='User' name='[usr:Clicks - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PMTD]' derivation='User' name='[usr:Fill Rate - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PMTD]' derivation='User' name='[usr:Gross Media Revenue - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PMTD]' derivation='User' name='[usr:Impressions Served - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D PMTD]' derivation='User' name='[usr:Net Media Revenue - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PMTD]' derivation='User' name='[usr:Page CTR - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PMTD]' derivation='User' name='[usr:Pages Available - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PMTD]' derivation='User' name='[usr:Pages Served - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PMTD]' derivation='User' name='[usr:Served eCPM - %D PMTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PMTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PMTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='240' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='PMTD Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - MTD]-[Active Hotels - PMTD])/[Active Hotels - PMTD]' />
            </column>
            <column caption='Budget per Hotel - %D PMTD' datatype='real' default-format='p0.0%' name='[Calculation_3020106162305006]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4170106162336528]-[Calculation_6310106162009648])/[Calculation_6310106162009648]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D PMTD]' derivation='User' name='[usr:Active Hotels - %D PMTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3020106162305006]' derivation='User' name='[usr:Calculation_3020106162305006:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - MTD]-[Hotels per Auction - PMTD])/[Hotels per Auction - PMTD]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D PMTD]' derivation='User' name='[usr:Hotels per Auction - %D PMTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPM])/[Sold Hotels as of SDPM]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPM]' derivation='User' name='[usr:Sold Hotels - %D SDPM:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPM]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPM:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PMTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PMTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPM:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PMTD:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_3020106162305006:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PMTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='216' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='PQTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             &lt;[publisher_data (copy 2)].[none:Current Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. &lt;[publisher_data (copy 2)].[none:Previous Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPQ:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - QTD]-[Ads per Page - PQTD])/[Ads per Page - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - QTD]-[Available eCPM - PQTD])/[Available eCPM - PQTD]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - QTD]-[CPC - PQTD])/[CPC - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - QTD] - [CTR - PQTD])/[CTR - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - QTD]) - sum([Clicks - PQTD]))/sum([Clicks - PQTD])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - QTD]-[Fill Rate - PQTD])/[Fill Rate - PQTD]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - QTD]) - sum([Gross Media Revenue - PQTD]))/sum([Gross Media Revenue - PQTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - QTD]) - sum([Impressions Served - PQTD]))/sum([Impressions Served - PQTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - QTD] - [Page CTR - PQTD])/[Page CTR - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - QTD]) - sum([Pages Available - PQTD]))/sum([Pages Available - PQTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - QTD]) - sum([Pages Served - PQTD]))/sum([Pages Served - PQTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - QTD]-[Served eCPM - PQTD])/[Served eCPM - PQTD]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PQTD]' derivation='User' name='[usr:Ads per Page - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PQTD]' derivation='User' name='[usr:Available eCPM - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PQTD]' derivation='User' name='[usr:CPC - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PQTD]' derivation='User' name='[usr:CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PQTD]' derivation='User' name='[usr:Clicks - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PQTD]' derivation='User' name='[usr:Fill Rate - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PQTD]' derivation='User' name='[usr:Gross Media Revenue - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PQTD]' derivation='User' name='[usr:Impressions Served - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D PQTD]' derivation='User' name='[usr:Net Media Revenue - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PQTD]' derivation='User' name='[usr:Page CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PQTD]' derivation='User' name='[usr:Pages Available - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PQTD]' derivation='User' name='[usr:Pages Served - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PQTD]' derivation='User' name='[usr:Served eCPM - %D PQTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PQTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PQTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='PQTD Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - QTD]-[Active Hotels - PQTD])/[Active Hotels - PQTD]' />
            </column>
            <column caption='Budget per Hotel - %D PQTD' datatype='real' default-format='p0.0%' name='[Calculation_6200106162656365]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_9970106162410403]-[Calculation_1230106162113303])/[Calculation_1230106162113303]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D PQTD]' derivation='User' name='[usr:Active Hotels - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6200106162656365]' derivation='User' name='[usr:Calculation_6200106162656365:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - QTD]-[Hotels per Auction - PQTD])/[Hotels per Auction - PQTD]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D PQTD]' derivation='User' name='[usr:Hotels per Auction - %D PQTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPQ]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPQ])/[Sold Hotels as of SDPQ]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPQ]' derivation='User' name='[usr:Sold Hotels - %D SDPQ:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPQ]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPQ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PQTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPQ:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_6200106162656365:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PQTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='216' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='PW'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - Ref Week]-[Ads per Page - PW])/[Ads per Page - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - Ref Week]-[Available eCPM - PW])/[Available eCPM - PW]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - Ref Week]-[CPC - PW])/[CPC - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - Ref Week]-[CTR - PW])/[CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - Ref Week])-sum([Clicks - PW]))/sum([Clicks - PW])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - Ref Week]-[Fill Rate - PW])/[Fill Rate - PW]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Week])-sum([Gross Media Revenue - PW]))/sum([Gross Media Revenue - PW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - Ref Week])-sum([Impressions Served - PW]))/sum([Impressions Served - PW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Week]-[Page CTR - PW])/[Page CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - Ref Week])-sum([Pages Available - PW]))/sum([Pages Available - PW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - Ref Week])-sum([Pages Served - PW]))/sum([Pages Served - PW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - Ref Week]-[Served eCPM - PW])/[Served eCPM - PW]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PW]' derivation='User' name='[usr:Ads per Page - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PW]' derivation='User' name='[usr:Available eCPM - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PW]' derivation='User' name='[usr:CPC - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PW]' derivation='User' name='[usr:CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PW]' derivation='User' name='[usr:Clicks - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PW]' derivation='User' name='[usr:Fill Rate - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PW]' derivation='User' name='[usr:Gross Media Revenue - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PW]' derivation='User' name='[usr:Impressions Served - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D PW]' derivation='User' name='[usr:Net Media Revenue - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PW]' derivation='User' name='[usr:Page CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PW]' derivation='User' name='[usr:Pages Available - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PW]' derivation='User' name='[usr:Pages Served - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PW]' derivation='User' name='[usr:Served eCPM - %D PW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='PW Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - Ref Week]-[Active Hotels - PW])/[Active Hotels - PW]' />
            </column>
            <column caption='Budget per Hotel - %D PW' datatype='real' default-format='p0.0%' name='[Calculation_8590106161806731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2600106161507552]-[Calculation_4190106161651870])/[Calculation_4190106161651870]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D PW]' derivation='User' name='[usr:Active Hotels - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8590106161806731]' derivation='User' name='[usr:Calculation_8590106161806731:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - Ref Week]-[Hotels per Auction - PW])/[Hotels per Auction - PW]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D PW]' derivation='User' name='[usr:Hotels per Auction - %D PW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPW])/[Sold Hotels as of SDPW]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPW]' derivation='User' name='[usr:Sold Hotels - %D SDPW:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPW]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PW:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_8590106161806731:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PW:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='PYTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[none:Current Year:ok]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> through </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[tdy:Ref Day:qk]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> &#10;  vs. </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[none:Previous Year:ok]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> through </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[tdy:SDPY:qk]</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - YTD]-[Ads per Page - PYTD])/[Ads per Page - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - YTD]-[Available eCPM - PYTD])/[Available eCPM - PYTD]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - YTD]-[CPC - PYTD])/[CPC - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - YTD]-[CTR - PYTD])/[CTR - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - YTD])-sum([Clicks - PYTD]))/sum([Clicks - PYTD])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='integer' name='[Current Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Ref Day])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - YTD]-[Fill Rate - PYTD])/[Fill Rate - PYTD]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - YTD])-sum([Gross Media Revenue - PYTD]))/sum([Gross Media Revenue - PYTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - YTD])-sum([Impressions Served - PYTD]))/sum([Impressions Served - PYTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - YTD]-[Page CTR - PYTD])/[Page CTR - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - YTD])-sum([Pages Available - PYTD]))/sum([Pages Available - PYTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - YTD])-sum([Pages Served - PYTD]))/sum([Pages Served - PYTD])' />
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPY]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEADD(&apos;year&apos;,-1, [Ref Day]))' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - YTD]-[Served eCPM - PYTD])/[Served eCPM - PYTD]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Year]' derivation='None' name='[none:Current Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPY]' derivation='Day-Trunc' name='[tdy:SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PYTD]' derivation='User' name='[usr:Ads per Page - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PYTD]' derivation='User' name='[usr:Available eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PYTD]' derivation='User' name='[usr:CPC - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PYTD]' derivation='User' name='[usr:CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PYTD]' derivation='User' name='[usr:Clicks - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PYTD]' derivation='User' name='[usr:Fill Rate - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PYTD]' derivation='User' name='[usr:Gross Media Revenue - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PYTD]' derivation='User' name='[usr:Impressions Served - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D PYTD]' derivation='User' name='[usr:Net Media Revenue - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PYTD]' derivation='User' name='[usr:Page CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PYTD]' derivation='User' name='[usr:Pages Available - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PYTD]' derivation='User' name='[usr:Pages Served - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PYTD]' derivation='User' name='[usr:Served eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PYTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PYTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='240' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[none:Current Year:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='PYTD Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - YTD]-[Active Hotels - PYTD])/[Active Hotels - PYTD]' />
            </column>
            <column caption='Budget per Hotel - %D PYTD' datatype='real' default-format='p0.0%' name='[Calculation_1070106162755693]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2790106162448809]-[Calculation_0040106162202694])/[Calculation_0040106162202694]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D PYTD]' derivation='User' name='[usr:Active Hotels - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1070106162755693]' derivation='User' name='[usr:Calculation_1070106162755693:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - YTD]-[Hotels per Auction - PYTD])/[Hotels per Auction - PYTD]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D PYTD]' derivation='User' name='[usr:Hotels per Auction - %D PYTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPY])/[Sold Hotels as of SDPY]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPY]' derivation='User' name='[usr:Sold Hotels - %D SDPY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPY]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PYTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_1070106162755693:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D PYTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Page CTR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR]' derivation='User' name='[usr:Page CTR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:Page CTR:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Page Fill Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served])/sum([Pages Available])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[usr:Fill Rate:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pages Available'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Pages Available]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pages Available]' derivation='Sum' name='[sum:Pages Available:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[publisher_data (copy 2)].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[sum:Pages Available:qk]</rows>
        <cols>[publisher_data (copy 2)].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Performance by Region &amp; Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Active Hotels - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Active Hotels - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Active Hotels - MTD]&#13;&#10;END' />
            </column>
            <column-instance column='[Active Hotels for Table]' derivation='User' name='[usr:Active Hotels for Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Ads per Page for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Ads per Page - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Ads per Page - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Ads per Page - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Available eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Available eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Available eCPM - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Fill Rate - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Fill Rate - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Fill Rate - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Gross Media Revenue - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Gross Media Revenue - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Gross Media Revenue - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Hotels per Auction - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Hotels per Auction - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Hotels per Auction - MTD]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Pages Available for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Pages Available - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Pages Available - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Pages Available - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM for Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Day&quot; THEN [Served eCPM - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Served eCPM - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Served eCPM - MTD]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross Media Revenue for Table]' derivation='Sum' name='[sum:Gross Media Revenue for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available for Table]' derivation='Sum' name='[sum:Pages Available for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page for Table]' derivation='User' name='[usr:Ads per Page for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM for Table]' derivation='User' name='[usr:Available eCPM for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC for Table]' derivation='User' name='[usr:CPC for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR for Table]' derivation='User' name='[usr:CTR for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate for Table]' derivation='User' name='[usr:Fill Rate for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotels per Auction for Table]' derivation='User' name='[usr:Hotels per Auction for Table:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM for Table]' derivation='User' name='[usr:Served eCPM for Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM for Table:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM for Table:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[publisher_data (copy 2)].[sum:Pages Available for Table:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[sum:Pages Available for Table:qk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[publisher_data (copy 2)].[:Measure Names]' value='bold' />
            <format attr='text-align' field='[publisher_data (copy 2)].[:Measure Names]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[none:Filter for Channel Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([publisher_data (copy 2)].[none:Finance Region:nk] / [publisher_data (copy 2)].[none:Country:nk])</rows>
        <cols>[publisher_data (copy 2)].[:Measure Names]</cols>
        <subtotals>
          <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='QTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             &lt;[publisher_data (copy 2)].[none:Current Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. &lt;[publisher_data (copy 2)].[none:Previous Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPQ:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - QTD])/sum([Pages Served - QTD])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Pages Available - QTD])*1000' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Clicks - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Impressions Served - QTD])' />
            </column>
            <column datatype='integer' name='[Clicks - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - QTD])/sum([Pages Available - QTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Impressions Served - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - QTD]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - QTD]*0.665&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Pages Served - QTD])' />
            </column>
            <column datatype='integer' name='[Pages Available - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Pages Served - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Pages Served - QTD])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - QTD]' derivation='Sum' name='[sum:Clicks - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - QTD]' derivation='Sum' name='[sum:Gross Media Revenue - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - QTD]' derivation='Sum' name='[sum:Impressions Served - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - QTD]' derivation='Sum' name='[sum:Net Media Revenue - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - QTD]' derivation='Sum' name='[sum:Pages Available - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - QTD]' derivation='Sum' name='[sum:Pages Served - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - QTD]' derivation='User' name='[usr:Ads per Page - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - QTD]' derivation='User' name='[usr:Available eCPM - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - QTD]' derivation='User' name='[usr:CPC - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - QTD]' derivation='User' name='[usr:CTR - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - QTD]' derivation='User' name='[usr:Fill Rate - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - QTD]' derivation='User' name='[usr:Page CTR - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - QTD]' derivation='User' name='[usr:Served eCPM - QTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - QTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - QTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='QTD Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             &lt;[publisher_data (copy 2)].[none:Current Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. &lt;[publisher_data (copy 2)].[none:Previous Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPQ:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - QTD]-[Ads per Page - PQTD])/[Ads per Page - PQTD]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - QTD])/sum([Pages Served - QTD])' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - QTD]-[CPC - PQTD])/[CPC - PQTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Clicks - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - QTD] - [CTR - PQTD])/[CTR - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Impressions Served - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - QTD]) - sum([Clicks - PQTD]))/sum([Clicks - PQTD])' />
            </column>
            <column datatype='integer' name='[Clicks - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Current Quarter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,[Ref Day]))' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - QTD]-[Fill Rate - PQTD])/[Fill Rate - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - QTD])/sum([Pages Available - QTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - QTD]) - sum([Gross Media Revenue - PQTD]))/sum([Gross Media Revenue - PQTD])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - QTD]) - sum([Impressions Served - PQTD]))/sum([Impressions Served - PQTD])' />
            </column>
            <column datatype='integer' name='[Impressions Served - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - QTD]) - sum([Pages Available - PQTD]))/sum([Pages Available - PQTD])' />
            </column>
            <column datatype='integer' name='[Pages Available - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - QTD]) - sum([Pages Served - PQTD]))/sum([Pages Served - PQTD])' />
            </column>
            <column datatype='integer' name='[Pages Served - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Previous Quarter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,DATEADD(&apos;quarter&apos;,-1,[Ref Day])))' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPQ]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEADD(&apos;quarter&apos;,-1,[Ref Day]))' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Quarter]' derivation='None' name='[none:Current Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Quarter]' derivation='None' name='[none:Previous Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - QTD]' derivation='Sum' name='[sum:Clicks - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - QTD]' derivation='Sum' name='[sum:Gross Media Revenue - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - QTD]' derivation='Sum' name='[sum:Impressions Served - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - QTD]' derivation='Sum' name='[sum:Pages Available - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - QTD]' derivation='Sum' name='[sum:Pages Served - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPQ]' derivation='Day-Trunc' name='[tdy:SDPQ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PQTD]' derivation='User' name='[usr:Ads per Page - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - QTD]' derivation='User' name='[usr:Ads per Page - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PQTD]' derivation='User' name='[usr:CPC - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - QTD]' derivation='User' name='[usr:CPC - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PQTD]' derivation='User' name='[usr:CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - QTD]' derivation='User' name='[usr:CTR - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PQTD]' derivation='User' name='[usr:Clicks - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PQTD]' derivation='User' name='[usr:Fill Rate - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - QTD]' derivation='User' name='[usr:Fill Rate - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PQTD]' derivation='User' name='[usr:Gross Media Revenue - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PQTD]' derivation='User' name='[usr:Impressions Served - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PQTD]' derivation='User' name='[usr:Pages Available - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PQTD]' derivation='User' name='[usr:Pages Served - %D PQTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PQTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PQTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='text-align' value='right' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='58' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Pub:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='font-weight' field='[publisher_data (copy 2)].[none:Pub:nk]' value='bold' />
            <format attr='text-decoration' field='[publisher_data (copy 2)].[none:Pub:nk]' value='underline' />
            <format attr='text-align' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Quarter:nk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Quarter:nk]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPQ:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='QTD Data 2'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - QTD]-[Ads per Page - PQTD])/[Ads per Page - PQTD]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - QTD])/sum([Pages Served - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - QTD]-[Available eCPM - PQTD])/[Available eCPM - PQTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Pages Available - QTD])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - QTD]-[CPC - PQTD])/[CPC - PQTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Clicks - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - QTD] - [CTR - PQTD])/[CTR - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Impressions Served - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - QTD]) - sum([Clicks - PQTD]))/sum([Clicks - PQTD])' />
            </column>
            <column datatype='integer' name='[Clicks - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - QTD]-[Fill Rate - PQTD])/[Fill Rate - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - QTD])/sum([Pages Available - QTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - QTD]) - sum([Gross Media Revenue - PQTD]))/sum([Gross Media Revenue - PQTD])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - QTD]) - sum([Impressions Served - PQTD]))/sum([Impressions Served - PQTD])' />
            </column>
            <column datatype='integer' name='[Impressions Served - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - QTD] - [Page CTR - PQTD])/[Page CTR - PQTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - QTD])/sum([Pages Served - QTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - QTD]) - sum([Pages Available - PQTD]))/sum([Pages Available - PQTD])' />
            </column>
            <column datatype='integer' name='[Pages Available - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - QTD]) - sum([Pages Served - PQTD]))/sum([Pages Served - PQTD])' />
            </column>
            <column datatype='integer' name='[Pages Served - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PQTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - QTD]-[Served eCPM - PQTD])/[Served eCPM - PQTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - QTD])/sum([Pages Served - QTD])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - QTD]' derivation='Sum' name='[sum:Clicks - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - QTD]' derivation='Sum' name='[sum:Gross Media Revenue - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - QTD]' derivation='Sum' name='[sum:Impressions Served - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - QTD]' derivation='Sum' name='[sum:Pages Available - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - QTD]' derivation='Sum' name='[sum:Pages Served - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PQTD]' derivation='User' name='[usr:Ads per Page - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - QTD]' derivation='User' name='[usr:Ads per Page - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PQTD]' derivation='User' name='[usr:Available eCPM - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - QTD]' derivation='User' name='[usr:Available eCPM - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PQTD]' derivation='User' name='[usr:CPC - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - QTD]' derivation='User' name='[usr:CPC - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PQTD]' derivation='User' name='[usr:CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - QTD]' derivation='User' name='[usr:CTR - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PQTD]' derivation='User' name='[usr:Clicks - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PQTD]' derivation='User' name='[usr:Fill Rate - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - QTD]' derivation='User' name='[usr:Fill Rate - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PQTD]' derivation='User' name='[usr:Gross Media Revenue - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PQTD]' derivation='User' name='[usr:Impressions Served - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PQTD]' derivation='User' name='[usr:Page CTR - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - QTD]' derivation='User' name='[usr:Page CTR - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PQTD]' derivation='User' name='[usr:Pages Available - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PQTD]' derivation='User' name='[usr:Pages Served - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PQTD]' derivation='User' name='[usr:Served eCPM - %D PQTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - QTD]' derivation='User' name='[usr:Served eCPM - QTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PQTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PQTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank (copy):qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PQTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - QTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PQTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Pub:nk]' value='false' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='QTD Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;quarter&apos;,[Date]) = DATETRUNC(&apos;quarter&apos;,[Ref Day])&#13;&#10;AND [Date] &lt;= [Ref Day]&#13;&#10;THEN [Advertiser ID]&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column caption='Budget per Hotel - QTD' datatype='real' default-format='C1033%' name='[Calculation_9970106162410403]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - QTD])/[Active Hotels - QTD]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - QTD]' derivation='User' name='[usr:Active Hotels - QTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9970106162410403]' derivation='User' name='[usr:Calculation_9970106162410403:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - QTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Participant Count - QTD])/sum([Pages Available - QTD])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - QTD]' derivation='User' name='[usr:Hotels per Auction - QTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of Ref Day]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [Ref Day] THEN [Sold Hotels] END))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels as of Ref Day]' derivation='User' name='[usr:Sold Hotels as of Ref Day:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - QTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - QTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - QTD:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_9970106162410403:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - QTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='216' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Ref Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Available - Ref Week])*1000' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Clicks - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Impressions Served - Ref Week])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Clicks] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - Ref Week])/sum([Pages Available - Ref Week])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Impressions Served] END' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - Ref Week]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - Ref Week]*0.665&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Available] END' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Served] END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Served - Ref Week])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - Ref Week]' derivation='Sum' name='[sum:Clicks - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - Ref Week]' derivation='Sum' name='[sum:Gross Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - Ref Week]' derivation='Sum' name='[sum:Impressions Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - Ref Week]' derivation='Sum' name='[sum:Net Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - Ref Week]' derivation='Sum' name='[sum:Pages Available - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - Ref Week]' derivation='Sum' name='[sum:Pages Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - Ref Week]' derivation='User' name='[usr:Ads per Page - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - Ref Week]' derivation='User' name='[usr:Available eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - Ref Week]' derivation='User' name='[usr:CPC - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - Ref Week]' derivation='User' name='[usr:CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - Ref Week]' derivation='User' name='[usr:Fill Rate - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - Ref Week]' derivation='User' name='[usr:Page CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - Ref Week]' derivation='User' name='[usr:Served eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='192' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='true' />
            <format attr='font-size' field='[publisher_data (copy 2)].[:Measure Names]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
            <format attr='border-style' data-class='subtotal' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='solid' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='Ref Week Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Advertiser ID] END)' scope-isolation='false' />
            </column>
            <column caption='Budget per Hotel - Ref Week' datatype='real' default-format='C1033%' name='[Calculation_2600106161507552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - Ref Week])/[Active Hotels - Ref Week]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - Ref Week]' derivation='User' name='[usr:Active Hotels - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2600106161507552]' derivation='User' name='[usr:Calculation_2600106161507552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Participant Count - Ref Week])/sum([Pages Available - Ref Week])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - Ref Week]' derivation='User' name='[usr:Hotels per Auction - Ref Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of Ref Day]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [Ref Day] THEN [Sold Hotels] END))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels as of Ref Day]' derivation='User' name='[usr:Sold Hotels as of Ref Day:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - Ref Week:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_2600106161507552:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - Ref Week:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='89' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='216' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='true' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Reference Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='None' name='[none:Ref Day:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[publisher_data (copy 2)].[none:Ref Day:ok]' value='55' />
            <format attr='text-align' value='left' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[none:Ref Day:ok]' value='148' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[publisher_data (copy 2)].[none:Ref Day:ok]' value='left' />
            <format attr='vertical-align' field='[publisher_data (copy 2)].[none:Ref Day:ok]' value='top' />
            <format attr='font-size' field='[publisher_data (copy 2)].[none:Ref Day:ok]' value='18' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='20' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[none:Ref Day:ok]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='SDPW'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - Ref Day] - [Ads per Page - SDPW])/[Ads per Page - SDPW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - Ref Day]-[Available eCPM - SDPW])/[Available eCPM - SDPW]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - Ref Day]-[CPC - SDPW])/[CPC - SDPW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - Ref Day]-[CTR - SDPW])/[CTR - SDPW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - Ref Day])-sum([Clicks - SDPW]))/sum([Clicks - SDPW])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - Ref Day]-[Fill Rate - SDPW])/[Fill Rate - SDPW]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Day])-sum([Gross Media Revenue - SDPW]))/sum([Gross Media Revenue - SDPW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - Ref Day])-sum([Impressions Served - SDPW]))/sum([Impressions Served - SDPW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D SDPW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Week]-[Page CTR - PW])/[Page CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Day]-[Page CTR - SDPW])/[Page CTR - SDPW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - Ref Day])-sum([Pages Available - SDPW]))/sum([Pages Available - SDPW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - Ref Day])-sum([Pages Served - SDPW]))/sum([Pages Served - SDPW])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - Ref Day]-[Served eCPM - SDPW])/[Served eCPM - SDPW]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D SDPW]' derivation='User' name='[usr:Ads per Page - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D SDPW]' derivation='User' name='[usr:Available eCPM - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D SDPW]' derivation='User' name='[usr:CPC - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D SDPW]' derivation='User' name='[usr:CTR - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D SDPW]' derivation='User' name='[usr:Clicks - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D SDPW]' derivation='User' name='[usr:Fill Rate - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D SDPW]' derivation='User' name='[usr:Gross Media Revenue - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D SDPW]' derivation='User' name='[usr:Impressions Served - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D SDPW]' derivation='User' name='[usr:Net Media Revenue - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PW]' derivation='User' name='[usr:Page CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D SDPW]' derivation='User' name='[usr:Page CTR - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D SDPW]' derivation='User' name='[usr:Pages Available - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D SDPW]' derivation='User' name='[usr:Pages Served - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D SDPW]' derivation='User' name='[usr:Served eCPM - %D SDPW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SDPW:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='SDPW Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - Ref Day]-[Active Hotels - SDPW])/[Active Hotels - SDPW]' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D SDPW]' derivation='User' name='[usr:Active Hotels - %D SDPW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - Ref Day]-[Hotels per Auction - SDPW])/[Hotels per Auction - SDPW]' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - Ref Day]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Participant Count - Ref Day])/sum([Pages Available - Ref Day])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D SDPW]' derivation='User' name='[usr:Hotels per Auction - %D SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotels per Auction - Ref Day]' derivation='User' name='[usr:Hotels per Auction - Ref Day:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPW])/[Sold Hotels as of SDPW]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPW]' derivation='User' name='[usr:Sold Hotels - %D SDPW:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPW]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SDPW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SDPW:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Budget per Hotel - \%D SDPW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - Ref Day:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='SDPY'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - Ref Day]-[Ads per Page - SDPY])/[Ads per Page - SDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - Ref Day] - [Available eCPM - SDPY])/[Available eCPM - SDPY]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - Ref Day]-[CPC - SDPY])/[CPC - SDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - Ref Day] - [CTR - SDPY])/[CTR - SDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - Ref Day])-sum([Clicks - SDPY]))/sum([Clicks - SDPY])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - Ref Day] - [Fill Rate - SDPY])/[Fill Rate - SDPY]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Day]) - sum([Gross Media Revenue - SDPY]))/sum([Gross Media Revenue - SDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - Ref Day])-sum([Impressions Served - SDPY]))/sum([Impressions Served - SDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D SDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Day]-[Page CTR - SDPY])/[Page CTR - SDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - Ref Day])-sum([Pages Available - SDPY]))/sum([Pages Available - SDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - Ref Day])-sum([Pages Served - SDPY]))/sum([Pages Served - SDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - Ref Day]-[Served eCPM - SDPY])/[Served eCPM - SDPY]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D SDPY]' derivation='User' name='[usr:Ads per Page - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D SDPY]' derivation='User' name='[usr:Available eCPM - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D SDPY]' derivation='User' name='[usr:CPC - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D SDPY]' derivation='User' name='[usr:CTR - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D SDPY]' derivation='User' name='[usr:Clicks - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D SDPY]' derivation='User' name='[usr:Fill Rate - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D SDPY]' derivation='User' name='[usr:Gross Media Revenue - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D SDPY]' derivation='User' name='[usr:Impressions Served - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D SDPY]' derivation='User' name='[usr:Net Media Revenue - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D SDPY]' derivation='User' name='[usr:Page CTR - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D SDPY]' derivation='User' name='[usr:Pages Available - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D SDPY]' derivation='User' name='[usr:Pages Served - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D SDPY]' derivation='User' name='[usr:Served eCPM - %D SDPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SDPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SDPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='SDPY Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - Ref Day]-[Active Hotels - SDPY])/[Active Hotels - SDPY]' />
            </column>
            <column caption='Budget per Hotel - %D SDPY' datatype='real' default-format='p0.0%' name='[Calculation_1110106160520217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3610106160432967]-[Calculation_4300106160335263])/[Calculation_4300106160335263]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D SDPY]' derivation='User' name='[usr:Active Hotels - %D SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1110106160520217]' derivation='User' name='[usr:Calculation_1110106160520217:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - Ref Day]-[Hotels per Auction - SDPY])/[Hotels per Auction - SDPY]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D SDPY]' derivation='User' name='[usr:Hotels per Auction - %D SDPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPY])/[Sold Hotels as of SDPY]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPY]' derivation='User' name='[usr:Sold Hotels - %D SDPY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPY]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SDPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_1110106160520217:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SDPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='SMTDPY'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;[publisher_data (copy 2)].[none:Current Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; &#10;vs. &lt;[publisher_data (copy 2)].[none:Previous Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPM:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - MTD] - [Ads per Page - SMTDPY])/[Ads per Page - SMTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - MTD] - [Available eCPM - SMTDPY])/[Available eCPM - SMTDPY]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - MTD] - [CPC - SMTDPY])/[CPC - SMTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - MTD] - [CTR - SMTDPY])/[CTR - SMTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - MTD])-sum([Clicks - SMTDPY]))/sum([Clicks - SMTDPY])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - MTD] - [Fill Rate - SMTDPY])/[Fill Rate - SMTDPY]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - MTD])-sum([Gross Media Revenue - SMTDPY]))/sum([Gross Media Revenue - SMTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - MTD])-sum([Impressions Served - SMTDPY]))/sum([Impressions Served - SMTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D SMTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - MTD] - [Page CTR - SMTDPY])/[Page CTR - SMTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - MTD])-sum([Pages Available - SMTDPY]))/sum([Pages Available - SMTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - MTD])-sum([Pages Served - SMTDPY]))/sum([Pages Served - SMTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - MTD] - [Served eCPM - SMTDPY])/[Served eCPM - SMTDPY]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D SMTDPY]' derivation='User' name='[usr:Ads per Page - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D SMTDPY]' derivation='User' name='[usr:Available eCPM - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D SMTDPY]' derivation='User' name='[usr:CPC - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D SMTDPY]' derivation='User' name='[usr:CTR - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D SMTDPY]' derivation='User' name='[usr:Clicks - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D SMTDPY]' derivation='User' name='[usr:Fill Rate - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D SMTDPY]' derivation='User' name='[usr:Gross Media Revenue - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D SMTDPY]' derivation='User' name='[usr:Impressions Served - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D SMTDPY]' derivation='User' name='[usr:Net Media Revenue - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D SMTDPY]' derivation='User' name='[usr:Page CTR - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D SMTDPY]' derivation='User' name='[usr:Pages Available - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D SMTDPY]' derivation='User' name='[usr:Pages Served - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D SMTDPY]' derivation='User' name='[usr:Served eCPM - %D SMTDPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SMTDPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SMTDPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='240' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='SMTDPY Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - MTD]-[Active Hotels - SMTDPY])/[Active Hotels - SMTDPY]' />
            </column>
            <column caption='Budget per Hotel - %D SMTDPY' datatype='real' default-format='p0.0%' name='[Calculation_4960106162539043]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4170106162336528] -[Calculation_2670106162036194])/[Calculation_2670106162036194]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D SMTDPY]' derivation='User' name='[usr:Active Hotels - %D SMTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4960106162539043]' derivation='User' name='[usr:Calculation_4960106162539043:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SMTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - MTD] - [Hotels per Auction - SMTDPY])/[Hotels per Auction - SMTDPY]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D SMTDPY]' derivation='User' name='[usr:Hotels per Auction - %D SMTDPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPY])/[Sold Hotels as of SDPY]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPY]' derivation='User' name='[usr:Sold Hotels - %D SDPY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPY]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SMTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SMTDPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SMTDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_4960106162539043:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SMTDPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='SQTDPY'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             &lt;[publisher_data (copy 2)].[none:Current Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. &lt;[publisher_data (copy 2)].[none:Previous Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:SDPQ:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - QTD] - [Ads per Page - SQTDPY])/[Ads per Page - SQTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - QTD] - [Available eCPM - SQTDPY])/[Available eCPM - SQTDPY]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - QTD] - [CPC - SQTDPY])/[CPC - SQTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - QTD] - [CTR - SQTDPY])/[CTR - SQTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - QTD])-sum([Clicks - SQTDPY]))/sum([Clicks - SQTDPY])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - QTD] - [Fill Rate - SQTDPY])/[Fill Rate - SQTDPY]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - QTD])-sum([Gross Media Revenue - SQTDPY]))/sum([Gross Media Revenue - SQTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - QTD])-sum([Impressions Served - SQTDPY]))/sum([Impressions Served - SQTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D SQTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - QTD] - [Page CTR - SQTDPY])/[Page CTR - SQTDPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - QTD])-sum([Pages Available - SQTDPY]))/sum([Pages Available - SQTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - QTD])-sum([Pages Served - SQTDPY]))/sum([Pages Served - SQTDPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - QTD] - [Served eCPM - SQTDPY])/[Served eCPM - SQTDPY]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D SQTDPY]' derivation='User' name='[usr:Ads per Page - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D SQTDPY]' derivation='User' name='[usr:Available eCPM - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D SQTDPY]' derivation='User' name='[usr:CPC - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D SQTDPY]' derivation='User' name='[usr:CTR - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D SQTDPY]' derivation='User' name='[usr:Clicks - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D SQTDPY]' derivation='User' name='[usr:Fill Rate - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D SQTDPY]' derivation='User' name='[usr:Gross Media Revenue - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D SQTDPY]' derivation='User' name='[usr:Impressions Served - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D SQTDPY]' derivation='User' name='[usr:Net Media Revenue - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D SQTDPY]' derivation='User' name='[usr:Page CTR - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D SQTDPY]' derivation='User' name='[usr:Pages Available - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D SQTDPY]' derivation='User' name='[usr:Pages Served - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D SQTDPY]' derivation='User' name='[usr:Served eCPM - %D SQTDPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SQTDPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SQTDPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='SQTDPY Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - QTD]-[Active Hotels - SQTDPY])/[Active Hotels - SQTDPY]' />
            </column>
            <column caption='Budget per Hotel - %D SQTDPY' datatype='real' default-format='p0.0%' name='[Calculation_6380106162722912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_9970106162410403]-[Calculation_2840106162136209])/[Calculation_2840106162136209]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D SQTDPY]' derivation='User' name='[usr:Active Hotels - %D SQTDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6380106162722912]' derivation='User' name='[usr:Calculation_6380106162722912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SQTDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - QTD] - [Hotels per Auction - SQTDPY])/[Hotels per Auction - SQTDPY]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D SQTDPY]' derivation='User' name='[usr:Hotels per Auction - %D SQTDPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPY])/[Sold Hotels as of SDPY]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPY]' derivation='User' name='[usr:Sold Hotels - %D SDPY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPY]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SQTDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SQTDPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SQTDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_6380106162722912:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SQTDPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='SWPY'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - Ref Week] - [Ads per Page - SWPY])/[Ads per Page - SWPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - Ref Week] - [Available eCPM - SWPY])/[Available eCPM - SWPY]' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - Ref Week] - [CPC - SWPY])/[CPC - SWPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - Ref Week] - [CTR - SWPY])/[CTR - SWPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - Ref Week])-sum([Clicks - SWPY]))/sum([Clicks - SWPY])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - Ref Week] - [Fill Rate - SWPY])/[Fill Rate - SWPY]' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Week])-sum([Gross Media Revenue - SWPY]))/sum([Gross Media Revenue - SWPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - Ref Week])-sum([Impressions Served - SWPY]))/sum([Impressions Served - SWPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Net Media Revenue - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Media Revenue - %D SWPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Week] - [Page CTR - SWPY])/[Page CTR - SWPY]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - Ref Week])-sum([Pages Available - SWPY]))/sum([Pages Available - SWPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - Ref Week])-sum([Pages Served - SWPY]))/sum([Pages Served - SWPY])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - Ref Week] - [Served eCPM - SWPY])/[Served eCPM - SWPY]' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D SWPY]' derivation='User' name='[usr:Ads per Page - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D SWPY]' derivation='User' name='[usr:Available eCPM - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D SWPY]' derivation='User' name='[usr:CPC - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D SWPY]' derivation='User' name='[usr:CTR - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D SWPY]' derivation='User' name='[usr:Clicks - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D SWPY]' derivation='User' name='[usr:Fill Rate - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D SWPY]' derivation='User' name='[usr:Gross Media Revenue - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D SWPY]' derivation='User' name='[usr:Impressions Served - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - %D SWPY]' derivation='User' name='[usr:Net Media Revenue - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D SWPY]' derivation='User' name='[usr:Page CTR - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D SWPY]' derivation='User' name='[usr:Pages Available - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D SWPY]' derivation='User' name='[usr:Pages Served - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D SWPY]' derivation='User' name='[usr:Served eCPM - %D SWPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SWPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Net Media Revenue - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D SWPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[publisher_data (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <color column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='SWPY Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Active Hotels - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Active Hotels - Ref Week]-[Active Hotels - SWPY])/[Active Hotels - SWPY]' />
            </column>
            <column caption='Budget per Hotel - %D SWPY' datatype='real' default-format='p0.0%' name='[Calculation_6560106161837608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2600106161507552]-[Calculation_3610106161728278])/[Calculation_3610106161728278]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - %D SWPY]' derivation='User' name='[usr:Active Hotels - %D SWPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6560106161837608]' derivation='User' name='[usr:Calculation_6560106161837608:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Hotels per Auction - %D SWPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Hotels per Auction - Ref Week] - [Hotels per Auction - SWPY])/[Hotels per Auction - SWPY]' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - %D SWPY]' derivation='User' name='[usr:Hotels per Auction - %D SWPY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Sold Hotels - %D SDPY]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Sold Hotels as of Ref Day]-[Sold Hotels as of SDPY])/[Sold Hotels as of SDPY]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels - %D SDPY]' derivation='User' name='[usr:Sold Hotels - %D SDPY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of Ref Day]' ordering-type='Rows' />
              <table-calc field='[sold_hotels (copy 2)].[Sold Hotels as of SDPY]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SWPY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SWPY:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels - \%D SDPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - \%D SWPY:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_6560106161837608:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - \%D SWPY:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='236' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' max='0.29999999999999999' min='-0.29999999999999999' num-steps='3' palette='Red-Black-Blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
              <color column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Title Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;</run>
            <run bold='true' fontsize='8'>Æ  &#10;</run>
            <run bold='true' fontalignment='2' fontsize='8'>      Current            vs. Previous               vs. &lt;[publisher_data (copy 2)].[none:Previous Year:ok]&gt; </run>
            <run bold='true' fontalignment='2' fontcolor='#f0f0f0' fontsize='8'>   .</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Available - Ref Week])*1000' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Clicks - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Impressions Served - Ref Week])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Clicks] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - Ref Week])/sum([Pages Available - Ref Week])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Impressions Served] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Available] END' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Served] END' />
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Served - Ref Week])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - Ref Week]' derivation='Sum' name='[sum:Clicks - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - Ref Week]' derivation='Sum' name='[sum:Gross Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - Ref Week]' derivation='Sum' name='[sum:Impressions Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - Ref Week]' derivation='Sum' name='[sum:Pages Available - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - Ref Week]' derivation='Sum' name='[sum:Pages Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - Ref Week]' derivation='User' name='[usr:Ads per Page - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - Ref Week]' derivation='User' name='[usr:Available eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - Ref Week]' derivation='User' name='[usr:CPC - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - Ref Week]' derivation='User' name='[usr:CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - Ref Week]' derivation='User' name='[usr:Fill Rate - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - Ref Week]' derivation='User' name='[usr:Page CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - Ref Week]' derivation='User' name='[usr:Served eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[publisher_data (copy 2)].[sum:Blank:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='208' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols total='true'>[publisher_data (copy 2)].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Title MTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>&lt;[publisher_data (copy 2)].[none:Current Month Name:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;</run>
            <run bold='true'>Æ &#10;</run>
            <run bold='true' fontsize='5'>Æ   </run>
            <run bold='true' fontsize='8'>Æ&#10;</run>
            <run bold='true' fontalignment='2' fontsize='8'>      Current              vs. Previous            vs. &lt;[publisher_data (copy 2)].[none:Previous Year:ok]&gt;    </run>
            <run bold='true' fontalignment='2' fontcolor='#f0f0f0' fontsize='8'>.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Current Month Name]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE DATEPART(&apos;month&apos;,[Ref Day])&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Month Name]' derivation='None' name='[none:Current Month Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[publisher_data (copy 2)].[sum:Blank:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Month Name:nk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols total='true'>[publisher_data (copy 2)].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Title QTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>&lt;[publisher_data (copy 2)].[none:Current Quarter:nk]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' fontsize='5'>Æ  </run>
            <run bold='true' fontsize='8'>Æ&#10;</run>
            <run bold='true' fontalignment='2' fontsize='8'> Current              vs. Previous               vs. &lt;[publisher_data (copy 2)].[none:Previous Year:ok]&gt;      </run>
            <run bold='true' fontalignment='2' fontcolor='#f0f0f0' fontsize='8'> .</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Current Quarter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,[Ref Day]))' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Quarter]' derivation='None' name='[none:Current Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[publisher_data (copy 2)].[sum:Blank:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Quarter:nk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols total='true'>[publisher_data (copy 2)].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Title Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Past 7 Days through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' fontsize='5'>Æ  &#10;</run>
            <run bold='true' fontalignment='2' fontsize='8'>      Current            vs. Previous               vs. &lt;[publisher_data (copy 2)].[none:Previous Year:ok]&gt; </run>
            <run bold='true' fontalignment='2' fontcolor='#f0f0f0' fontsize='8'>   .</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[publisher_data (copy 2)].[sum:Blank:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols total='true'>[publisher_data (copy 2)].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Title YTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>&lt;[publisher_data (copy 2)].[none:Current Year:ok]&gt; through &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; </run>
            <run bold='true'>Æ&#10;</run>
            <run bold='true' fontsize='5'>Æ  </run>
            <run bold='true' fontsize='8'>Æ&#10;</run>
            <run bold='true' fontalignment='2' fontsize='8'>      Current                      vs. &lt;[publisher_data (copy 2)].[none:Previous Year:ok]&gt; </run>
            <run bold='true' fontalignment='2' fontcolor='#f0f0f0' fontsize='8'>             .</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='integer' name='[Current Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Ref Day])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Year]' derivation='None' name='[none:Current Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[publisher_data (copy 2)].[sum:Blank:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Year:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols total='true'>[publisher_data (copy 2)].[sum:Blank:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Week Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>                             Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt;&#10;                             vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run bold='true'>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - Ref Week]-[Ads per Page - PW])/[Ads per Page - PW]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - Ref Week]-[Available eCPM - PW])/[Available eCPM - PW]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Available - Ref Week])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - Ref Week]-[CPC - PW])/[CPC - PW]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Clicks - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - Ref Week]-[CTR - PW])/[CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Impressions Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - Ref Week])-sum([Clicks - PW]))/sum([Clicks - PW])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Clicks] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - Ref Week]-[Fill Rate - PW])/[Fill Rate - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - Ref Week])/sum([Pages Available - Ref Week])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Week])-sum([Gross Media Revenue - PW]))/sum([Gross Media Revenue - PW])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - Ref Week])-sum([Impressions Served - PW]))/sum([Impressions Served - PW])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Impressions Served] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Week]-[Page CTR - PW])/[Page CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - Ref Week])-sum([Pages Available - PW]))/sum([Pages Available - PW])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Available] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - Ref Week])-sum([Pages Served - PW]))/sum([Pages Served - PW])' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Served] END' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Ref Day]-7' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - Ref Week]-[Served eCPM - PW])/[Served eCPM - PW]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Served - Ref Week])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - Ref Week]' derivation='Sum' name='[sum:Clicks - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - Ref Week]' derivation='Sum' name='[sum:Gross Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - Ref Week]' derivation='Sum' name='[sum:Impressions Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - Ref Week]' derivation='Sum' name='[sum:Pages Available - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - Ref Week]' derivation='Sum' name='[sum:Pages Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPW]' derivation='Day-Trunc' name='[tdy:SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PW]' derivation='User' name='[usr:Ads per Page - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - Ref Week]' derivation='User' name='[usr:Ads per Page - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PW]' derivation='User' name='[usr:Available eCPM - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - Ref Week]' derivation='User' name='[usr:Available eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PW]' derivation='User' name='[usr:CPC - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - Ref Week]' derivation='User' name='[usr:CPC - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PW]' derivation='User' name='[usr:CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - Ref Week]' derivation='User' name='[usr:CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PW]' derivation='User' name='[usr:Clicks - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PW]' derivation='User' name='[usr:Fill Rate - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - Ref Week]' derivation='User' name='[usr:Fill Rate - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PW]' derivation='User' name='[usr:Gross Media Revenue - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PW]' derivation='User' name='[usr:Impressions Served - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PW]' derivation='User' name='[usr:Page CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - Ref Week]' derivation='User' name='[usr:Page CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PW]' derivation='User' name='[usr:Pages Available - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PW]' derivation='User' name='[usr:Pages Served - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PW]' derivation='User' name='[usr:Served eCPM - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - Ref Week]' derivation='User' name='[usr:Served eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PW:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank (copy):qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='text-align' value='right' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='54' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Pub:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='font-weight' field='[publisher_data (copy 2)].[none:Pub:nk]' value='bold' />
            <format attr='text-decoration' field='[publisher_data (copy 2)].[none:Pub:nk]' value='underline' />
            <format attr='text-align' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[publisher_data (copy 2)].[none:Date:qk]' value='Date'>
              <formatted-text>
                <run fontsize='8'>Date</run>
              </formatted-text>
            </format>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPW:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Week Data 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>                                         Week Ending &lt;[publisher_data (copy 2)].[tdy:Ref Day:qk]&gt; &#10;                                          vs. Week Ending &lt;[publisher_data (copy 2)].[tdy:SDPW:qk]&gt;</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - Ref Week]-[Ads per Page - PW])/[Ads per Page - PW]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - Ref Week]-[Available eCPM - PW])/[Available eCPM - PW]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Available - Ref Week])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - Ref Week]-[CPC - PW])/[CPC - PW]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Clicks - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - Ref Week]-[CTR - PW])/[CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Impressions Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - Ref Week])-sum([Clicks - PW]))/sum([Clicks - PW])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Clicks] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - Ref Week]-[Fill Rate - PW])/[Fill Rate - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - Ref Week])/sum([Pages Available - Ref Week])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - Ref Week])-sum([Gross Media Revenue - PW]))/sum([Gross Media Revenue - PW])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - Ref Week])-sum([Impressions Served - PW]))/sum([Impressions Served - PW])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Impressions Served] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - Ref Week]-[Page CTR - PW])/[Page CTR - PW]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Pages Served - Ref Week])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - Ref Week])-sum([Pages Available - PW]))/sum([Pages Available - PW])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Available] END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - Ref Week])-sum([Pages Served - PW]))/sum([Pages Served - PW])' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Pages Served] END' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Ref Day]-7' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - Ref Week]-[Served eCPM - PW])/[Served eCPM - PW]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - Ref Week]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - Ref Week])/sum([Pages Served - Ref Week])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - Ref Week]' derivation='Sum' name='[sum:Clicks - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - Ref Week]' derivation='Sum' name='[sum:Gross Media Revenue - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - Ref Week]' derivation='Sum' name='[sum:Impressions Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - Ref Week]' derivation='Sum' name='[sum:Pages Available - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - Ref Week]' derivation='Sum' name='[sum:Pages Served - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPW]' derivation='Day-Trunc' name='[tdy:SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PW]' derivation='User' name='[usr:Ads per Page - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - Ref Week]' derivation='User' name='[usr:Ads per Page - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PW]' derivation='User' name='[usr:Available eCPM - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - Ref Week]' derivation='User' name='[usr:Available eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PW]' derivation='User' name='[usr:CPC - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - Ref Week]' derivation='User' name='[usr:CPC - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PW]' derivation='User' name='[usr:CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - Ref Week]' derivation='User' name='[usr:CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PW]' derivation='User' name='[usr:Clicks - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PW]' derivation='User' name='[usr:Fill Rate - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - Ref Week]' derivation='User' name='[usr:Fill Rate - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PW]' derivation='User' name='[usr:Gross Media Revenue - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PW]' derivation='User' name='[usr:Impressions Served - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PW]' derivation='User' name='[usr:Page CTR - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - Ref Week]' derivation='User' name='[usr:Page CTR - Ref Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PW]' derivation='User' name='[usr:Pages Available - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PW]' derivation='User' name='[usr:Pages Served - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PW]' derivation='User' name='[usr:Served eCPM - %D PW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - Ref Week]' derivation='User' name='[usr:Served eCPM - Ref Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank (copy):qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PW:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - Ref Week:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PW:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Pub:nk]' value='false' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPW:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='YTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[none:Current Year:ok]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> through </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[tdy:Ref Day:qk]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> &#10;  vs. </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[none:Previous Year:ok]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> through </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[tdy:SDPY:qk]</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - YTD])/sum([Pages Served - YTD])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Available - YTD])*1000' />
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Clicks - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Impressions Served - YTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - YTD])/sum([Pages Available - YTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Net Media Revenue - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Pub] = &quot;OWW&quot; THEN&#13;&#10;[Gross Media Revenue - YTD]*0.752&#13;&#10;ELSE&#13;&#10;[Gross Media Revenue - YTD]*0.665&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Pages Served - YTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Served - YTD])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - YTD]' derivation='Sum' name='[sum:Clicks - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - YTD]' derivation='Sum' name='[sum:Gross Media Revenue - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - YTD]' derivation='Sum' name='[sum:Impressions Served - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Media Revenue - YTD]' derivation='Sum' name='[sum:Net Media Revenue - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - YTD]' derivation='Sum' name='[sum:Pages Available - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - YTD]' derivation='Sum' name='[sum:Pages Served - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - YTD]' derivation='User' name='[usr:Ads per Page - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - YTD]' derivation='User' name='[usr:Available eCPM - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - YTD]' derivation='User' name='[usr:CPC - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - YTD]' derivation='User' name='[usr:CTR - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - YTD]' derivation='User' name='[usr:Fill Rate - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - YTD]' derivation='User' name='[usr:Page CTR - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - YTD]' derivation='User' name='[usr:Served eCPM - YTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - YTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Net Media Revenue - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Blank:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - YTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='240' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'></cols>
      </table>
    </worksheet>
    <worksheet name='YTD Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[none:Current Year:ok]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> through </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[tdy:Ref Day:qk]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> &#10;  vs. </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[none:Previous Year:ok]</run>
            <run bold='true' fontsize='12'>&gt;</run>
            <run bold='true' fontsize='12'> through </run>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[publisher_data (copy 2)].[tdy:SDPY:qk]</run>
            <run bold='true' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - YTD]-[Ads per Page - PYTD])/[Ads per Page - PYTD]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - YTD])/sum([Pages Served - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - YTD]-[Available eCPM - PYTD])/[Available eCPM - PYTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Available - YTD])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - YTD]-[CPC - PYTD])/[CPC - PYTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Clicks - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - YTD]-[CTR - PYTD])/[CTR - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Impressions Served - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - YTD])-sum([Clicks - PYTD]))/sum([Clicks - PYTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='integer' name='[Current Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Ref Day])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - YTD]-[Fill Rate - PYTD])/[Fill Rate - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - YTD])/sum([Pages Available - YTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - YTD])-sum([Gross Media Revenue - PYTD]))/sum([Gross Media Revenue - PYTD])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - YTD])-sum([Impressions Served - PYTD]))/sum([Impressions Served - PYTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - YTD]-[Page CTR - PYTD])/[Page CTR - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Pages Served - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - YTD])-sum([Pages Available - PYTD]))/sum([Pages Available - PYTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - YTD])-sum([Pages Served - PYTD]))/sum([Pages Served - PYTD])' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPY]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEADD(&apos;year&apos;,-1, [Ref Day]))' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - YTD]-[Served eCPM - PYTD])/[Served eCPM - PYTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Served - YTD])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Year]' derivation='None' name='[none:Current Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - YTD]' derivation='Sum' name='[sum:Clicks - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - YTD]' derivation='Sum' name='[sum:Gross Media Revenue - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - YTD]' derivation='Sum' name='[sum:Impressions Served - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - YTD]' derivation='Sum' name='[sum:Pages Available - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - YTD]' derivation='Sum' name='[sum:Pages Served - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPY]' derivation='Day-Trunc' name='[tdy:SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PYTD]' derivation='User' name='[usr:Ads per Page - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - YTD]' derivation='User' name='[usr:Ads per Page - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PYTD]' derivation='User' name='[usr:Available eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - YTD]' derivation='User' name='[usr:Available eCPM - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PYTD]' derivation='User' name='[usr:CPC - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - YTD]' derivation='User' name='[usr:CPC - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PYTD]' derivation='User' name='[usr:CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - YTD]' derivation='User' name='[usr:CTR - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PYTD]' derivation='User' name='[usr:Clicks - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PYTD]' derivation='User' name='[usr:Fill Rate - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - YTD]' derivation='User' name='[usr:Fill Rate - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PYTD]' derivation='User' name='[usr:Gross Media Revenue - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PYTD]' derivation='User' name='[usr:Impressions Served - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PYTD]' derivation='User' name='[usr:Page CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - YTD]' derivation='User' name='[usr:Page CTR - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PYTD]' derivation='User' name='[usr:Pages Available - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PYTD]' derivation='User' name='[usr:Pages Served - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PYTD]' derivation='User' name='[usr:Served eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - YTD]' derivation='User' name='[usr:Served eCPM - YTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Available - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Pages Served - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Impressions Served - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CTR - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Clicks - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:CPC - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PYTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PYTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='58' />
            <format attr='height' field='[publisher_data (copy 2)].[none:Pub:nk]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='true' />
            <format attr='font-weight' field='[publisher_data (copy 2)].[none:Pub:nk]' value='bold' />
            <format attr='text-decoration' field='[publisher_data (copy 2)].[none:Pub:nk]' value='underline' />
            <format attr='text-align' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Year:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='YTD Data 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;</run>
            <run fontsize='12'>[publisher_data (copy 2)].[none:Current Year:ok]</run>
            <run fontsize='12'>&gt;</run>
            <run fontsize='12'> through </run>
            <run fontsize='12'>&lt;</run>
            <run fontsize='12'>[publisher_data (copy 2)].[tdy:Ref Day:qk]</run>
            <run fontsize='12'>&gt;</run>
            <run fontsize='12'> &#10;  vs. </run>
            <run fontsize='12'>&lt;</run>
            <run fontsize='12'>[publisher_data (copy 2)].[none:Previous Year:ok]</run>
            <run fontsize='12'>&gt;</run>
            <run fontsize='12'> through </run>
            <run fontsize='12'>&lt;</run>
            <run fontsize='12'>[publisher_data (copy 2)].[tdy:SDPY:qk]</run>
            <run fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='real' default-format='p0.0%' name='[Ads per Page - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ads per Page - YTD]-[Ads per Page - PYTD])/[Ads per Page - PYTD]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ads per Page - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions Served - YTD])/sum([Pages Served - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Available eCPM - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Available eCPM - YTD]-[Available eCPM - PYTD])/[Available eCPM - PYTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Available - YTD])*1000' />
            </column>
            <column datatype='string' name='[Breakdown Color]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Ad Unit&quot; THEN [Ad Unit]&#13;&#10;WHEN &quot;Page Type&quot; THEN [Type of Ad Unit]&#13;&#10;WHEN &quot;Segment&quot; THEN [Segment]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CPC - YTD]-[CPC - PYTD])/[CPC - PYTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Clicks - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CTR - YTD]-[CTR - PYTD])/[CTR - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Impressions Served - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicks - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Clicks - YTD])-sum([Clicks - PYTD]))/sum([Clicks - PYTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Clicks - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Clicks]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='integer' name='[Current Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Ref Day])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Fill Rate - YTD]-[Fill Rate - PYTD])/[Fill Rate - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Fill Rate - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Pages Served - YTD])/sum([Pages Available - YTD])' />
            </column>
            <column datatype='string' name='[Filter for Ad Unit Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Ad Unit Type] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF CONTAINS([Parameters].[Ad Unit Type],&quot;Total&quot;) THEN IF [Parameters].[Ad Unit Type] = [Type of Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Ad Unit Type] = [Ad Unit] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='string' name='[Filter for Publisher]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Publisher] = &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSEIF [Parameters].[Publisher] = &quot;OWW&quot; OR [Parameters].[Publisher] = &apos;Travelport&apos; THEN IF [Pub] = [Parameters].[Publisher] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;ELSE IF [Parameters].[Publisher] = [Site] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region' datatype='string' name='[Finance Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Gross Media Revenue - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Gross Media Revenue - YTD])-sum([Gross Media Revenue - PYTD]))/sum([Gross Media Revenue - PYTD])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Gross Media Revenue - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Spend]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impressions Served - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Impressions Served - YTD])-sum([Impressions Served - PYTD]))/sum([Impressions Served - PYTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Impressions Served - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Impressions Served]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Page CTR - YTD]-[Page CTR - PYTD])/[Page CTR - PYTD]' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Page CTR - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - YTD])/sum([Pages Served - YTD])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Available - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Available - YTD])-sum([Pages Available - PYTD]))/sum([Pages Available - PYTD])' />
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Pages Available - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Available]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Pages Served - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Pages Served - YTD])-sum([Pages Served - PYTD]))/sum([Pages Served - PYTD])' />
            </column>
            <column datatype='integer' default-format='N' name='[Pages Served - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Pages Served]&#13;&#10;END)&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Previous Year]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Current Year]-1' />
            </column>
            <column datatype='string' name='[Pub]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPY]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEADD(&apos;year&apos;,-1, [Ref Day]))' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Served eCPM - %D PYTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Served eCPM - YTD]-[Served eCPM - PYTD])/[Served eCPM - PYTD]' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue - YTD])/sum([Pages Served - YTD])*1000' />
            </column>
            <column-instance column='[Breakdown Color]' derivation='None' name='[none:Breakdown Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Year]' derivation='None' name='[none:Current Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Ad Unit Type]' derivation='None' name='[none:Filter for Ad Unit Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Publisher]' derivation='None' name='[none:Filter for Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance Region]' derivation='None' name='[none:Finance Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Previous Year]' derivation='None' name='[none:Previous Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pub]' derivation='None' name='[none:Pub:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - YTD]' derivation='Sum' name='[sum:Clicks - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - YTD]' derivation='Sum' name='[sum:Gross Media Revenue - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - YTD]' derivation='Sum' name='[sum:Impressions Served - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - YTD]' derivation='Sum' name='[sum:Pages Available - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - YTD]' derivation='Sum' name='[sum:Pages Served - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPY]' derivation='Day-Trunc' name='[tdy:SDPY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - %D PYTD]' derivation='User' name='[usr:Ads per Page - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ads per Page - YTD]' derivation='User' name='[usr:Ads per Page - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - %D PYTD]' derivation='User' name='[usr:Available eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Available eCPM - YTD]' derivation='User' name='[usr:Available eCPM - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - %D PYTD]' derivation='User' name='[usr:CPC - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - YTD]' derivation='User' name='[usr:CPC - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - %D PYTD]' derivation='User' name='[usr:CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - YTD]' derivation='User' name='[usr:CTR - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks - %D PYTD]' derivation='User' name='[usr:Clicks - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - %D PYTD]' derivation='User' name='[usr:Fill Rate - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate - YTD]' derivation='User' name='[usr:Fill Rate - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue - %D PYTD]' derivation='User' name='[usr:Gross Media Revenue - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions Served - %D PYTD]' derivation='User' name='[usr:Impressions Served - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - %D PYTD]' derivation='User' name='[usr:Page CTR - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page CTR - YTD]' derivation='User' name='[usr:Page CTR - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available - %D PYTD]' derivation='User' name='[usr:Pages Available - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served - %D PYTD]' derivation='User' name='[usr:Pages Served - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - %D PYTD]' derivation='User' name='[usr:Served eCPM - %D PYTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served eCPM - YTD]' derivation='User' name='[usr:Served eCPM - YTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[publisher_data (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PYTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PYTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[publisher_data (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Available - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Available - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Fill Rate - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Pages Served - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Pages Served - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Ads per Page - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Impressions Served - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Impressions Served - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CTR - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Clicks - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Clicks - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:CPC - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[sum:Gross Media Revenue - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Gross Media Revenue - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Available eCPM - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Served eCPM - \%D PYTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - YTD:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Page CTR - \%D PYTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[publisher_data (copy 2)].[none:Breakdown Color:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Total&quot;</bucket>
              <bucket>&quot;Total Hotel List Page&quot;</bucket>
              <bucket>&quot;Hotel Details Page&quot;</bucket>
              <bucket>&quot;Total Packages List Page&quot;</bucket>
              <bucket>&quot;Total Flight-Hotel Cross-Sell Page&quot;</bucket>
              <bucket>&quot;Total SEM List Page&quot;</bucket>
              <bucket>&quot;Orbitz&quot;</bucket>
              <bucket>&quot;CheapTickets&quot;</bucket>
              <bucket>&quot;ebookers&quot;</bucket>
              <bucket>&quot;HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity&quot;</bucket>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - Orbitz Classic&quot;</bucket>
              <bucket>&quot;Hotel Details Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - Orbitz Global&quot;</bucket>
              <bucket>&quot;Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel Details Page - CheapTickets&quot;</bucket>
              <bucket>&quot;SEM Hotel List Page - CheapTickets&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.com&quot;</bucket>
              <bucket>&quot;Hotel List Page - ebookers.ie&quot;</bucket>
              <bucket>&quot;Hotel List Page - HotelClub&quot;</bucket>
              <bucket>&quot;Travelocity List Page (Legacy)&quot;</bucket>
              <bucket>&quot;Travelocity List Page (New Platform)&quot;</bucket>
              <bucket>&quot;Travelocity Package Page&quot;</bucket>
              <bucket>&quot;Travelocity Martini Package Page&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[publisher_data (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[publisher_data (copy 2)].[:Measure Names]</column>
            <column>[publisher_data (copy 2)].[none:Date:qk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Market:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Publisher:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</column>
            <column>[publisher_data (copy 2)].[none:Breakdown Color:nk]</column>
            <column>[publisher_data (copy 2)].[none:Country:nk]</column>
            <column>[publisher_data (copy 2)].[none:Finance Region:nk]</column>
            <column>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='95' />
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='width' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[publisher_data (copy 2)].[:Measure Names]' value='216' />
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[publisher_data (copy 2)].[Multiple Values]' value='11' />
            <format attr='display' field='[publisher_data (copy 2)].[:Measure Names]' value='true' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Pub:nk]' value='false' />
            <format attr='display' field='[publisher_data (copy 2)].[none:Breakdown Color:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e1e8fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[publisher_data (copy 2)].[Multiple Values]' />
              <lod column='[publisher_data (copy 2)].[tdy:Ref Day:qk]' />
              <lod column='[publisher_data (copy 2)].[none:Current Year:ok]' />
              <lod column='[publisher_data (copy 2)].[none:Previous Year:ok]' />
              <lod column='[publisher_data (copy 2)].[tdy:SDPY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[publisher_data (copy 2)].[:Measure Names]</rows>
        <cols total='true'>([publisher_data (copy 2)].[none:Pub:nk] / [publisher_data (copy 2)].[none:Breakdown Color:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='YTD Hotels'>
      <table>
        <view>
          <datasources>
            <datasource caption='active_hotels_with_budget' name='active_hotels_with_budget (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='sold_hotels' name='sold_hotels (copy 2)' />
            <datasource caption='publisher_data' name='publisher_data (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='active_hotels_with_budget (copy 2)'>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Active Hotels - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF DATETRUNC(&apos;year&apos;, [Date]) = DATETRUNC(&apos;year&apos;,[Ref Day])&#13;&#10;THEN &#13;&#10;(IF [Date] &lt;= [Ref Day]&#13;&#10;THEN [Advertiser ID]&#13;&#10;END)&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='Budget per Hotel - YTD' datatype='real' default-format='C1033%' name='[Calculation_2790106162448809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sold_hotels (copy 2)].[Budget - YTD])/[Active Hotels - YTD]' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_8830912141655380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Total&quot; OR [Parameters].[Parameter 1] = [SSN Channel Type]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Yesterday or Reference Day] = &quot;Yesterday&quot; THEN&#13;&#10;TODAY()-1&#13;&#10;ELSE&#13;&#10;[Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_8830912141655380]' derivation='None' name='[none:Calculation_8830912141655380:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Market]' derivation='None' name='[none:Filter for Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Hotels - YTD]' derivation='User' name='[usr:Active Hotels - YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2790106162448809]' derivation='User' name='[usr:Calculation_2790106162448809:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='publisher_data (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Market]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Market] = &quot;Total&quot;) OR ([Parameters].[Market] = [Market Name])' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Hotels per Auction - YTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Participant Count - YTD])/sum([Pages Available - YTD])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Hotels per Auction - YTD]' derivation='User' name='[usr:Hotels per Auction - YTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='sold_hotels (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sold Hotels as of Ref Day]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM(IF [Date] &lt;= [Ref Day] THEN [Sold Hotels] END))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Sold Hotels as of Ref Day]' derivation='User' name='[usr:Sold Hotels as of Ref Day:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - YTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[active_hotels_with_budget (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[sold_hotels (copy 2)].[usr:Sold Hotels as of Ref Day:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Active Hotels - YTD:qk]&quot;</bucket>
              <bucket>&quot;[active_hotels_with_budget (copy 2)].[usr:Calculation_2790106162448809:qk]&quot;</bucket>
              <bucket>&quot;[publisher_data (copy 2)].[usr:Hotels per Auction - YTD:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_8830912141655380:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]'>
            <groupfilter function='member' level='[none:Filter for Market:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[active_hotels_with_budget (copy 2)].[none:Filter for Market:nk]</column>
            <column>[active_hotels_with_budget (copy 2)].[:Measure Names]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Date:qk]</column>
            <column>[active_hotels_with_budget (copy 2)].[none:Calculation_8830912141655380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[Multiple Values]' value='12' />
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='216' />
            <format attr='height' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]' value='false' />
            <format attr='font-size' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='12' />
            <format attr='display' field='[active_hotels_with_budget (copy 2)].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[active_hotels_with_budget (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[active_hotels_with_budget (copy 2)].[:Measure Names]</rows>
        <cols>[active_hotels_with_budget (copy 2)].[tdy:Ref Day:ok]</cols>
        <join-lod-include-overrides>
          <column>[publisher_data (copy 2)].[Date]</column>
          <column>[publisher_data (copy 2)].[Filter for Market]</column>
          <column>[publisher_data (copy 2)].[SSN Channel Type]</column>
          <column>[sold_hotels (copy 2)].[Date]</column>
          <column>[sold_hotels (copy 2)].[SSN Channel Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Gross Revenue Trend'>
      <style>
      </style>
      <size maxheight='1100' maxwidth='1400' minheight='1100' minwidth='1400' />
      <zones>
        <zone h='100000' id='9' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='66' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' param='horz' type='layout-flow' w='99714' x='0' y='0'>
              <zone h='100000' id='2' type='layout-basic' w='99714' x='0' y='0'>
                <zone h='57455' id='1' name='Gross Revenue Graph' show-title='true' w='87929' x='0' y='0'>
                </zone>
                <zone h='28091' id='7' name='Ref Week' w='22931' x='0' y='71909'>
                </zone>
                <zone h='28091' id='12' name='PW' w='6855' x='22931' y='71909'>
                </zone>
                <zone h='28091' id='14' name='SWPY' w='6644' x='29786' y='71909'>
                </zone>
                <zone h='28091' id='15' name='MTD' w='8571' x='36430' y='71909'>
                </zone>
                <zone h='28091' id='16' name='PMTD' w='6428' x='45001' y='71909'>
                </zone>
                <zone h='28091' id='17' name='SMTDPY' w='6642' x='51429' y='71909'>
                </zone>
                <zone h='28091' id='18' name='QTD' w='8500' x='58071' y='71909'>
                </zone>
                <zone h='28091' id='19' name='PQTD' w='6500' x='66571' y='71909'>
                </zone>
                <zone h='28091' id='20' name='SQTDPY' w='7429' x='73071' y='71909'>
                </zone>
                <zone h='28091' id='21' name='YTD' w='10214' x='80500' y='71909'>
                </zone>
                <zone h='28091' id='22' name='PYTD' w='9000' x='90714' y='71909'>
                </zone>
                <zone h='2909' id='6' name='Gross Revenue Graph' param='[publisher_data (copy 2)].[yr:Date:ok]' type='color' w='75522' x='24192' y='57455'>
                </zone>
                <zone h='5091' id='25' name='Title Week' show-title='true' w='23073' x='13357' y='60364'>
                </zone>
                <zone h='5091' id='35' name='Blank Title' show-title='true' w='13357' x='0' y='60364'>
                </zone>
                <zone h='5091' id='36' name='Title MTD' show-title='true' w='21641' x='36430' y='60364'>
                </zone>
                <zone h='5091' id='37' name='Title QTD' show-title='true' w='22428' x='58071' y='60364'>
                </zone>
                <zone h='5091' id='38' name='Title YTD' show-title='true' w='19215' x='80499' y='60364'>
                </zone>
                <zone h='2909' id='49' type='empty' w='24192' x='0' y='57455'>
                </zone>
                <zone h='6454' id='54' name='Ref Week Hotels' w='22931' x='0' y='65455'>
                </zone>
                <zone h='6454' id='55' name='PW Hotels' w='6855' x='22931' y='65455'>
                </zone>
                <zone h='6454' id='56' name='SWPY Hotels' w='6644' x='29786' y='65455'>
                </zone>
                <zone h='6454' id='57' name='MTD Hotels' w='8571' x='36430' y='65455'>
                </zone>
                <zone h='6454' id='58' name='PMTD Hotels' w='6428' x='45001' y='65455'>
                </zone>
                <zone h='6454' id='59' name='SMTDPY Hotels' w='6642' x='51429' y='65455'>
                </zone>
                <zone h='6454' id='60' name='QTD Hotels' w='8513' x='58071' y='65455'>
                </zone>
                <zone h='6454' id='61' name='PQTD Hotels' w='6488' x='66584' y='65455'>
                </zone>
                <zone h='6454' id='62' name='SQTDPY Hotels' w='7427' x='73072' y='65455'>
                </zone>
                <zone h='6454' id='63' name='YTD Hotels' w='10215' x='80499' y='65455'>
                </zone>
                <zone h='6454' id='64' name='PYTD Hotels' w='9000' x='90714' y='65455'>
                </zone>
                <zone h='5000' id='67' param='[Parameters].[Parameter 1]' type='paramctrl' w='11785' x='87929' y='0'>
                </zone>
                <zone h='4455' id='68' param='[Parameters].[Publisher]' type='paramctrl' w='11785' x='87929' y='5000'>
                </zone>
                <zone h='43455' id='70' param='[Parameters].[Market]' type='paramctrl' w='11785' x='87929' y='14000'>
                </zone>
                <zone h='4545' id='69' param='[Parameters].[Ad Unit Type]' type='paramctrl' w='11785' x='87929' y='9455'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Key Performance Metrics by GDS Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Publisher]</run>
            <run>&gt;</run>
            <run> Key Performance Metrics by Top Market</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='2000' maxwidth='1400' minheight='2000' minwidth='1400' />
      <zones>
        <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' param='vert' type='layout-flow' w='88571' x='0' y='0'>
              <zone h='2000' id='9' type='title' w='88571' x='0' y='0'>
              </zone>
              <zone h='98000' id='4' param='horz' type='layout-flow' w='88571' x='0' y='2000'>
                <zone h='98000' id='2' type='layout-basic' w='88571' x='0' y='2000'>
                  <zone h='98000' id='17' name='Key Performance Metrics for GDS' w='88571' x='0' y='2000'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='18' is-fixed='true' param='vert' type='layout-flow' w='11429' x='88571' y='0'>
              <zone h='2700' id='20' param='[Parameters].[Publisher]' type='paramctrl' w='11429' x='88571' y='0'>
              </zone>
              <zone h='2500' id='21' param='[Parameters].[Parameter 1]' type='paramctrl' w='11429' x='88571' y='2700'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Key Performance Metrics by Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Publisher]</run>
            <run>&gt;</run>
            <run> Key Performance Metrics by Top Markets</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1100' maxwidth='1000' minheight='1100' minwidth='1000' />
      <zones>
        <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3637' id='9' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96363' id='4' param='horz' type='layout-flow' w='100000' x='0' y='3637'>
              <zone h='96363' id='2' type='layout-basic' w='99600' x='0' y='3637'>
                <zone h='96363' id='16' name='Key Performance Metrics' w='99600' x='0' y='3637'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Performance by Region and Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Publisher]</run>
            <run>&gt;</run>
            <run> Key Performance Metrics by Region &amp; Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='2000' maxwidth='1400' minheight='2000' minwidth='1400' />
      <zones>
        <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97500' id='19' param='horz' type='layout-flow' w='88357' x='0' y='2500'>
            <zone h='52650' id='22' name='Performance by Region &amp; Country' w='88357' x='0' y='2500'>
              <layout-cache cell-count-w='10' fixed-size-h='1041' non-cell-size-w='200' type-h='fixed' type-w='cell' />
            </zone>
          </zone>
          <zone h='2500' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2000' id='9' type='title' w='100000' x='0' y='0'>
            </zone>
          </zone>
          <zone fixed-size='160' h='97500' id='18' is-fixed='true' param='vert' type='layout-flow' w='11643' x='88357' y='2500'>
            <zone h='2500' id='20' param='[Parameters].[Publisher]' type='paramctrl' w='11643' x='88357' y='2500'>
            </zone>
            <zone h='2500' id='21' param='[Parameters].[Parameter 1]' type='paramctrl' w='11643' x='88357' y='5000'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Publisher Funnel by Page'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='2700' maxwidth='2200' minheight='2700' minwidth='2200' />
      <zones>
        <zone h='100000' id='21' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='23' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='15' param='vert' type='layout-flow' w='99818' x='0' y='0'>
              <zone h='1481' id='14' type='title' w='99818' x='0' y='0'>
              </zone>
              <zone h='98519' id='4' param='horz' type='layout-flow' w='99818' x='0' y='1481'>
                <zone h='98519' id='2' type='layout-basic' w='99818' x='0' y='1481'>
                  <zone h='19260' id='1' name='Week Data' show-title='true' w='99818' x='0' y='1481'>
                  </zone>
                  <zone h='5185' id='7' name='Week Data 2' w='99818' x='0' y='20741'>
                  </zone>
                  <zone h='19111' id='8' name='28Days Data' show-title='true' w='99818' x='0' y='25926'>
                  </zone>
                  <zone h='5444' id='9' name='28Days Data 2' w='99818' x='0' y='45037'>
                  </zone>
                  <zone h='5741' id='11' name='QTD Data 2' w='99818' x='0' y='69370'>
                  </zone>
                  <zone h='5741' id='13' name='YTD Data 2' w='99818' x='0' y='94259'>
                  </zone>
                  <zone h='19148' id='12' name='YTD Data' show-title='true' w='99818' x='0' y='75111'>
                  </zone>
                  <zone h='18889' id='10' name='QTD Data' show-title='true' w='99818' x='0' y='50481'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Publisher Metrics'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Publisher]</run>
            <run>&gt;</run>
            <run> Key Performance Metrics</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='2000' maxwidth='1400' minheight='2000' minwidth='1400' />
      <zones>
        <zone h='100000' id='1' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='20' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2000' id='19' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='97800' id='6' param='horz' type='layout-flow' w='100000' x='0' y='2000'>
              <zone h='97800' id='2' param='vert' type='layout-flow' w='83571' x='0' y='2000'>
                <zone h='97800' id='3' type='layout-basic' w='83571' x='0' y='2000'>
                  <zone h='18994' id='4' name='Pages Available' show-title='true' w='41786' x='0' y='2000'>
                  </zone>
                  <zone h='18994' id='10' name='Page Fill Rate' show-title='true' w='41785' x='41786' y='2000'>
                  </zone>
                  <zone h='20075' id='11' name='Gross Media Revenue' show-title='true' w='41786' x='0' y='60268'>
                  </zone>
                  <zone h='20075' id='12' name='Gross Media Revenue %' show-title='true' w='41785' x='41786' y='60268'>
                  </zone>
                  <zone h='19354' id='13' name='Page CTR' show-title='true' w='41786' x='0' y='40914'>
                  </zone>
                  <zone h='19354' id='14' name='CPC' show-title='true' w='41785' x='41786' y='40914'>
                  </zone>
                  <zone h='19920' id='15' name='Ad CTR' show-title='true' w='41786' x='0' y='20994'>
                  </zone>
                  <zone h='19920' id='16' name='Ads per Page' show-title='true' w='41785' x='41786' y='20994'>
                  </zone>
                  <zone h='19457' id='17' name='Available eCPM' show-title='true' w='41786' x='0' y='80343'>
                  </zone>
                  <zone h='19457' id='27' type='empty' w='41785' x='41786' y='80343'>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='230' h='97800' id='5' is-fixed='true' param='vert' type='layout-flow' w='16429' x='83571' y='2000'>
                <zone h='1050' id='26' type='text' w='16429' x='83571' y='2000'>
                  <formatted-text>
                    <run bold='true' fontalignment='0'>&lt;</run>
                    <run bold='true' fontalignment='0'>[Parameters].[Breakdown]</run>
                    <run bold='true' fontalignment='0'>&gt;</run>
                  </formatted-text>
                </zone>
                <zone h='11400' id='21' name='Page Fill Rate' param='[publisher_data (copy 2)].[none:Breakdown Color:nk]' type='color' w='16429' x='83571' y='3050'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Title Page'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_5' value='top' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='57125' id='3' name='Reference Date' w='45600' x='54400' y='42875'>
          </zone>
          <zone h='6375' id='1' type='text' w='100000' x='0' y='30625'>
            <formatted-text>
              <run fontsize='36'>&lt;</run>
              <run fontsize='36'>[Parameters].[Publisher]</run>
              <run fontsize='36'>&gt;</run>
            </formatted-text>
          </zone>
          <zone h='30625' id='4' type='empty' w='100000' x='0' y='0'>
          </zone>
          <zone h='57125' id='5' type='text' w='54400' x='0' y='42875'>
            <formatted-text>
              <run fontalignment='2' fontsize='18'>Data for Week Ending</run>
              <run fontalignment='2'>Æ&#10;</run>
            </formatted-text>
          </zone>
          <zone h='5875' id='6' type='text' w='100000' x='0' y='37000'>
            <formatted-text>
              <run fontsize='24'>SSN Weekly Performance Report</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='81' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Reference Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Title Page'>
      <zones>
        <zone forceUpdate='true' name='' type='text' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Gross Revenue Graph'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Ad Unit Type]' type='parameter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Date without Year:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[publisher_data (copy 2)].[none:Label - Pub and Ad Unit:nk]</field>
          <field>[publisher_data (copy)].[none:Filter for Channel Type:nk]</field>
          <field>[publisher_data].[none:Ad Unit Filter:nk]</field>
          <field>[publisher_data].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[publisher_data].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Date without Year by Day Only:nk]</field>
          <field>[publisher_data].[none:Date:qk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Ad Unit Type:nk]</field>
          <field>[publisher_data].[none:Filter for Graphs without Total:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
          <field>[publisher_data].[none:Filter for Market:nk]</field>
          <field>[publisher_data].[none:Filter for Publisher:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
          <field>[publisher_data].[none:Site:nk]</field>
          <field>[publisher_data].[none:Type of Ad Unit:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Blank Title'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card size='96' type='filters' />
            <card size='221' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Title Day'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card size='96' type='filters' />
            <card size='221' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
            <card param='[publisher_data (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Year:ok]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SDPW'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SDPW Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SDPY'>
      <cards>
        <edge name='left'>
          <strip size='284'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SDPY Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Title Week'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card size='96' type='filters' />
            <card size='221' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Year:ok]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ref Week'>
      <cards>
        <edge name='left'>
          <strip size='214'>
            <card size='96' type='filters' />
            <card size='221' type='marks' />
            <card size='360' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
            <card param='[publisher_data (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Yesterday or Reference Day]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Reference Day]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ref Week Hotels'>
      <cards>
        <edge name='left'>
          <strip size='236'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PW'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
            <card param='[publisher_data (copy)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PW Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SWPY'>
      <cards>
        <edge name='left'>
          <strip size='284'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SWPY Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Title MTD'>
      <cards>
        <edge name='left'>
          <strip size='289'>
            <card size='88' type='filters' />
            <card size='257' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='MTD'>
      <cards>
        <edge name='left'>
          <strip size='289'>
            <card size='88' type='filters' />
            <card size='257' type='marks' />
            <card size='331' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='MTD Hotels'>
      <cards>
        <edge name='left'>
          <strip size='265'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PMTD'>
      <cards>
        <edge name='left'>
          <strip size='288'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data (copy 2)].[none:Filter for Market:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PMTD Hotels'>
      <cards>
        <edge name='left'>
          <strip size='283'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SMTDPY'>
      <cards>
        <edge name='left'>
          <strip size='288'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SMTDPY Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Title QTD'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card size='96' type='filters' />
            <card size='221' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Year:ok]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[yr:SDPQ:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='QTD'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card size='96' type='filters' />
            <card size='221' type='marks' />
            <card size='360' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[yr:SDPQ:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='QTD Hotels'>
      <cards>
        <edge name='left'>
          <strip size='290'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PQTD'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[yr:SDPQ:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PQTD Hotels'>
      <cards>
        <edge name='left'>
          <strip size='283'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SQTDPY'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[yr:SDPQ:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='SQTDPY Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Title YTD'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='62' type='filters' />
            <card size='257' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='YTD'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='62' type='filters' />
            <card size='257' type='marks' />
            <card size='357' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='YTD Hotels'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PYTD'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Year:ok]</field>
          <field>[mysql.41193.431456574071].[none:Previous Year:ok]</field>
          <field>[mysql.41193.431456574071].[yr:Ref Day:ok]</field>
          <field>[mysql.41193.431456574071].[yr:SDPY:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown:nk]</field>
          <field>[publisher_data].[none:Filter for Gross Revenue Trend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='PYTD Hotels'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget].[none:Filter for Market:nk]</field>
          <field>[active_hotels_with_budget].[none:Market Name:nk]</field>
          <field>[active_hotels_with_budget].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Gross Revenue Trend'>
      <active id='1' />
      <zones>
        <zone name='Gross Revenue Graph'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Ref Week'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PW'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='SWPY'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='MTD'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PMTD'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='SMTDPY'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='QTD'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PQTD'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='SQTDPY'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='YTD'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PYTD'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Gross Revenue Graph' pane-specification-id='1' param='[publisher_data (copy 2)].[yr:Date:ok]' type='color' />
        <zone name='Title Week'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Blank Title'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Title MTD'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Title QTD'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Title YTD'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Ref Week Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PW Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='SWPY Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='MTD Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PMTD Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='SMTDPY Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='QTD Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PQTD Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='SQTDPY Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='YTD Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='PYTD Hotels'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Publisher]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Ad Unit Type]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pages Available'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Ad Unit Type]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[active_hotels_with_budget (copy)].[none:SSN Channel Type:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data (copy)].[none:Breakdown Color:nk]</field>
          <field>[publisher_data (copy)].[none:SSN Channel Type:nk]</field>
          <field>[publisher_data].[none:Dimension Filter without Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Page Fill Rate'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy 2)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad CTR'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ads per Page'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Ad Unit Type]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Page CTR'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPC'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Gross Media Revenue'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter without Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Gross Media Revenue %'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter without Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Available eCPM'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[publisher_data (copy)].[none:Breakdown Color:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Ad Unit Type]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotels per Auction'>
      <cards>
        <edge name='left'>
          <strip size='256'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Ad Unit Type]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41193.431456574071].[none:Ad Unit Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit Type Filter without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[mysql.41193.431456574071].[none:Date:qk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs with Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Filter for Graphs without Total:nk]</field>
          <field>[mysql.41193.431456574071].[none:Publisher:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[none:Type of Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[yr:Date Axis:ok]</field>
          <field>[publisher_data].[none:Dimension Filter with Totals:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Publisher Metrics'>
      <zones>
        <zone name='Pages Available'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[mysql.41193.431456574071].[none:Breakdown Color:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Page Fill Rate'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Gross Media Revenue'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Gross Media Revenue %'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Page CTR'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CPC'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Ad CTR'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Ads per Page'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Available eCPM'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Page Fill Rate' pane-specification-id='0' param='[publisher_data (copy 2)].[none:Breakdown Color:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Key Performance Metrics'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</field>
          <field>[publisher_data (copy 2)].[none:Market Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Key Performance Metrics by Market'>
      <zones>
        <zone name='Key Performance Metrics'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Key Performance Metrics for GDS'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[publisher_data (copy 2)].[none:Breakdown Color:nk]</field>
          <field>[publisher_data (copy 2)].[none:Country:nk]</field>
          <field>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</field>
          <field>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</field>
          <field>[publisher_data (copy 2)].[none:Finance Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Key Performance Metrics by GDS Market'>
      <zones>
        <zone name='Key Performance Metrics for GDS'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Publisher]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Performance by Region &amp; Country'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
            <card mode='compact' param='[Parameters].[Yesterday or Reference Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[publisher_data (copy 2)].[none:Country:nk]</field>
          <field>[publisher_data (copy 2)].[none:Filter for Ad Unit Type:nk]</field>
          <field>[publisher_data (copy 2)].[none:Filter for Channel Type:nk]</field>
          <field>[publisher_data (copy 2)].[none:Finance Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Performance by Region and Country'>
      <zones>
        <zone name='Performance by Region &amp; Country'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Publisher]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Week Data'>
      <cards>
        <edge name='left'>
          <strip size='235'>
            <card size='120' type='filters' />
            <card size='221' type='marks' />
            <card size='324' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Week Data 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='28' type='filters' />
            <card size='221' type='marks' />
            <card size='552' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='28Days Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='88' type='filters' />
            <card size='257' type='marks' />
            <card size='331' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='28Days Data 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='0' type='filters' />
            <card size='269' type='marks' />
            <card size='412' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='QTD Data'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card size='167' type='filters' />
            <card size='269' type='marks' />
            <card size='296' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Publisher]' type='parameter' />
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Current Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Month Name:nk]</field>
          <field>[mysql.41193.431456574071].[none:Previous Quarter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site Filter:nk]</field>
          <field>[mysql.41193.431456574071].[none:Site:nk]</field>
          <field>[mysql.41193.431456574071].[yr:SDPQ:ok]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='QTD Data 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='28' type='filters' />
            <card size='221' type='marks' />
            <card size='552' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='YTD Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='95' type='filters' />
            <card size='269' type='marks' />
            <card size='301' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='YTD Data 2'>
      <cards>
        <edge name='left'>
          <strip size='248'>
            <card size='28' type='filters' />
            <card size='269' type='marks' />
            <card size='504' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Publisher]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41014.596836111108].[:Measure Names]</field>
          <field>[mysql.41014.596836111108].[none:Date:qk]</field>
          <field>[mysql.41014.596836111108].[none:Site Filter with Total:nk]</field>
          <field>[mysql.41014.596836111108].[none:Site:nk]</field>
          <field>[mysql.41014.596836111108].[yr:Ref Day:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPM:ok]</field>
          <field>[mysql.41014.596836111108].[yr:SDPW:ok]</field>
          <field>[mysql.41193.431456574071].[none:Ad Unit:nk]</field>
          <field>[publisher_data].[none:Breakdown Color:nk]</field>
          <field>[publisher_data].[none:Dimension Filter with No Breakdown by Ad Unit Totaled:nk]</field>
          <field>[publisher_data].[none:Pub:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Publisher Funnel by Page'>
      <active id='14' />
      <zones>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='69' name='Reference Date' width='192'>
      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
      /k6b//2IouIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Title Page' width='192'>
      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
      BAQk/wtQz9hqu9l9NwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gross Revenue Graph' width='192'>
      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
      9aDCMAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Blank Title' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAYCAIAAAAj02USAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAAWUlEQVRoge3SwQ3AIBDAsNL9dz52IA+EZE+QR9bMfHDqvx3A
      2wxEYiASA5EYiMRAJAYiMRCJgUgMRGIgEgORGIjEQCQGIjEQiYFIDERiIBIDkRiIxEAkBiLZ
      8dADLTtsO04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Title Day' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAYCAIAAAAj02USAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAAWUlEQVRoge3SwQ3AIBDAsNL9dz52IA+EZE+QR9bMfHDqvx3A
      2wxEYiASA5EYiMRAJAYiMRCJgUgMRGIgEgORGIjEQCQGIjEQiYFIDERiIBIDkRiIxEAkBiLZ
      8dADLTtsO04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SDPW' width='84'>
      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
    </thumbnail>
    <thumbnail height='64' name='SDPW Hotels' width='81'>
      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
    </thumbnail>
    <thumbnail height='192' name='SDPY' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAADACAIAAAA7u/JRAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABBUlEQVR4nO3aMQqEQBQFQZW9/2UEzzbZ7AlMFCwGulKT3xjJ
      c59zbis79AFvFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAV
      oP3uHlzn9eUdj+398IQVoBWgFaAVoBWgFaAVoBWgLR9w+008xvjyjseWfwMFaAVoBWgFaAVo
      BWgFaAVoBWjNrFoBWgFaAVoBWgFaAVoBWgFaAVo7sVaAVoBWgFaAVoBWgFaAVoBWgNZOrBWg
      FaAVoBWgFaAVoBWgFaAVoLUTawVoBWgFaAVoBWgFaAVoBWgFaO3EWgFaAVoBWgFaAVoBWgFa
      AVoBWjuxVoD2B+jVHjZ7AqMfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='SDPY Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAAg0lEQVRoge3aMQ6AIBAAQTX+/zMmvo0OX0CLxey0NLehIeTO
      OeeBuf4e4Ac1G2o21Gy4Vwfv8+6cY6ezNwmhZkPNhpoNNRtqNtRsqNlQs0FsXv6HjTF2zrGT
      eM81G2o21Gyo2VCzoWZDzYaaDWJze0OGmg01G2o21Gyo2VCzoWaD2PwBwWUOgJ/euxgAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Title Week' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAYCAIAAAAj02USAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAAWUlEQVRoge3SwQ3AIBDAsNL9dz52IA+EZE+QR9bMfHDqvx3A
      2wxEYiASA5EYiMRAJAYiMRCJgUgMRGIgEgORGIjEQCQGIjEQiYFIDERiIBIDkRiIxEAkBiLZ
      8dADLTtsO04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ref Week' width='191'>
      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
    </thumbnail>
    <thumbnail height='64' name='Ref Week Hotels' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PW' width='64'>
      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
    </thumbnail>
    <thumbnail height='64' name='PW Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAG7ElEQVRoge1aT2jbaBZ/HrIgQQsS5CBDA9XiOagkEJkt1KY9
      rJcu1KELSchCYpjDeDOHtnNok/TQenzIerJQnA7MJB3IyjOHog5MsQMbpByKNYcUecBFCnSQ
      Ci1RoAUZWpCgAxIk8O3Bdvw/aXdmbTf2Dx/0ve89WT99f/S9x8+DEIIew0edfoAOoM+5N9Dn
      3Bvoc+4NDLTqEDfEdj5HO+Hpn0l6Ap3jvJ0745Fq1s8rg8RTHk+KZMXlJ+4R4bYxiWeWX1RZ
      nukRJuXxpMiwqtoVc+7mg8h6bSzqCF7uzJziALLCgeWtefUUZzoI7SHlThrD0ivPW4dbZuI8
      B5BOVnysxDDHfGE6ew4/xWHTO07RbGqhc8pObXQHxtlYl/wfS5k3NUZ3U1l9RVMYwACwC6HE
      qJVYKzQNt39WJ0eExJNa6xtT/gWCAQobwAIB0s0XdAAAEOMqHWfpWt+2c96U/jhToJfG5CWy
      2oxNhREKlVsEPQQF22kS/kINBxRjPGT8SDfpbXBO7LKJS/XmtnNmgzuvZ9LXKeIQn/2CvAX0
      ENmki2J4M6p8TVN1H9lBb3AY5FzB3XdzOYu6TLMAmbgejDNUwz1afp//X6CwIwdI/0petsmV
      6Wav5QRGn2gaRNx+GNTGBfyfQE/5xTgF27mEzYrnm/n+njvT+2DnbrpmDyvDErMUcIG71hHx
      YrZ2D6uDk55KJ1SE9ixuiseAwwaFRL60r7V9nA+FvSn5Jwz6zqR0/bC5fzQeq/PAKqOg/0v8
      x0tGc1jvuui9rIZeBgIDXXYmYcIGtTgpLRDYb7qNm1oyo7doAlxJdKgLXgYD4qyXLZjyLkAH
      1nNrFB5KZ76ezH7+20YYAB6rMYI1Rkst/GT9C+yacX6mTvzd+B0Ig728YM4v0hgAABYK44Zo
      6C7YeVOlvMHTAN0zzrnvlByAx5OqmM75d3IsDSB+lhqDEFp7hw8ygLuppEZYxVdqMgth7qkY
      xBXX501ssIEBgH5e1Svoc+4N9CLnlvu26x6VtX+w6MVx7nNuJ7ZVPy5LjfZ9e/kCj18xm0ft
      u2Jc8g/xOM6TQ5nIN3al8vVCj7A8jvPev9XUw+RbmWhtPaxDnF8Z0SlNb9ZjfCvX132qIN0Q
      I4+wZD7iOBFzkzHjwsS3RX728rSij49ZbyeThBa6YZR2o4L+5RYTG6+5SSfqYRtycESuq4eV
      sKtH4xa0yqp+NVL/dibiwRAFAIANM6lFMrekyXBQDyOwASx4lnTzdvGFSos6HWc6XQ97JJ/5
      pEAvjkmLTUo//A3FXgjGhlvEnqB5J5Kqqm95KQzeQMsPzK4e22VuX6w3t53ziF8zJ/jPiaYJ
      1LWn9MpN8t2TZyVvgg8n4aAeZrv7rpy3iEsUC5BZ1ENfMN6GqLZzpjC6FSfbiKwFg++e6b3Q
      57+BwBWaBQAg5n7wM+sCeTL95b5fvOWFbTVpM1cDTeK6JZcEAPGmnHy3hBEAwDavXVL0835l
      tjxjfAyvMgf9mbtmOB727tv8J9K1dQcGydh6eO5PAN3DWbrCT94HuM+X2k8k/HtacIKhRtdX
      RvTPcua0X34aWWk+ZVx+QjLi4diou3pRSJwNWY4XdvUgI2J6+OrpruEcuhdx7hUv7dULwvxI
      yLnXuBJLhMWP/cp/GLrVs28pMYLRy7Uh8gRe1/9BncP27eVp+QHllw8hDPbqLXs+Xq4N/RU3
      Ng3dBTtn6oMEewqge+b2IZCu8GMQcu55Ia8lnwCAcuakUtVPJvXw1dOlhvtIS42wcrnJXA9x
      T6UQqbk+b2K9tEG2rA3186pjhT7n3kAvcu7Xt3sDfc7txP+qlSps5P4ylPJ4UuRQ5tpGldtx
      1UpZYpYCfmLNcvaQY2gzp/ioWFQPvIdWqgOcdzJZFuMwrIaz86MAkC23rOQ5jlowG0KtxHAV
      H4ScTBajZBkh9FoLAxcVESqqNnyyghBCSJjli8ZqfFhaKcv4BcLjlaIDNkKyBVN+1uK/jolW
      CqChdGTpxvtppTpRG2oudqqgqJWaa6KVImkfCD9V6QOfW2rpirj9MMg+FPA/8DGoaKXmj4FW
      yvxOwICPZhwHIcfQZnwcVl7GtThMK9VdnC0xS2Nc4I7lNA9CCCFtTWAHOQCOuaxkc0oAuLmt
      BqctmZ7asRDSlng4p2gOsh4IGCXLewh1G2cKjiBcjy2ZAoF7XWd1uEvphIoQclbOl/f/50qg
      rKHronNYUSslHyYOc1cvpPDPjIN2LqMVLtJjg7Vej9UYwc4dF60UNvmpF+6ry9sAAIV1aeIr
      fK5+Zz5aK9Utc1te4ABqf+XzkzDLwezBUcpR7goMwQFwxKiQzNevA0fMMrOVQwvas7hpngAO
      81Wc+7lkb+C/BOEk5wN0W4gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SWPY' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAADACAIAAAA7u/JRAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABBUlEQVR4nO3aMQqEQBQFQZW9/2UEzzbZ7AlMFCwGulKT3xjJ
      c59zbis79AFvFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAVoBWgFaAV
      oP3uHlzn9eUdj+398IQVoBWgFaAVoBWgFaAVoBWgLR9w+008xvjyjseWfwMFaAVoBWgFaAVo
      BWgFaAVoBWjNrFoBWgFaAVoBWgFaAVoBWgFaAVo7sVaAVoBWgFaAVoBWgFaAVoBWgNZOrBWg
      FaAVoBWgFaAVoBWgFaAVoLUTawVoBWgFaAVoBWgFaAVoBWgFaO3EWgFaAVoBWgFaAVoBWgFa
      AVoBWjuxVoD2B+jVHjZ7AqMfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='SWPY Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAF80lEQVRoge2ZT2jbVhzHfx45yNCCBDnIkEAEKVQhhdqsEJvm
      UI8O4rBBU3zIzHqYl0Ob9tA66cGkOXhuBsHpoW12qdyd1MGGEmixeghxDhnPBxep0GIVGmIf
      AjI0IMECEtjwdogd/41bRmeHSh908Pu993vWV+/9fnrvyYExBovxVa9voAfYmq2Brdka2Jqt
      Qd9xFeILsZv30U0c9prEEnRdc9lM/yqOUEmHI0mNp5OvzFrVXp5yJh2OJOUWV+rtR+zIPkfS
      0XL9/BIAAN4pITbpcCSpgCzrNafM3Weh9cZ+cHeRYjwMbAoqxhjnlgWCSHEqxhjjf9TZAU41
      MC5haVkgCOHx+4/1VdISFzniopQrYYy1+CjH3lONksEHOWJ61zhso+b8Y9Juo193NZd2wwQX
      eGpUy1p8mPM+NDDGxp8pgM0je2KMo+fVzp2pT1O1R/MhFwAuLGKM8e4DAYaRhDHGODXDHxrr
      OTZv/y/0MZwRriub2kHlFxEM1CVTkhmEom506uogvxBVmejV2eHj2+zI8YJ7baLZ3LscZpqZ
      X9Cqycz9SDRXlYtoG5hBqoN3/omc1F3xW2Sl3O/yjQLKFM2ymclo9HeMG2BtUfEtsnSr82eY
      sf+B55v0WZ4EzhtTtVJzZW5ZgI/EsxqhOfp24+RXcj+c5QA4JihJGsYyck/k2oZHjzQf8kGN
      jHL0ddWos2niJg2c94HWyXEb0cDH5Q4tDCEoxGWMSxoX5AngiP5UPFv5n55qrqSuFPehUtTE
      TYbgvMua0dELzXNAI9ShxTZigrsaxrklHsaknIG1ZymCRqiEMcY9XpMQpwgAU6++TtlAno5d
      Tc+TLSFej462gLjCeI9tYCaX1HCUIcFMiwY97mIJIC+43EUVFQC6ncMKsu9oCQEAAMU9HQiS
      HQIAKP6VHnl4FX1EMMCBhl5B4FKb3FThb3mBdEfOV0rO0y39faZJ+okYqZnamkTdRl6C8z7U
      MMZYkbzAfVIfiuTuFMxaYkxIVPNf27nd9XguGalbAk1yABw5IMw+r0QumucAGq/q+ik1w8FM
      3VJK3ASoqWrCEDfZmd1aOihp3DRPAkcMpxLVHGbvq6yBrdkaWFHzsfsq02y3a/8isOI425q7
      yWvZ40TpektBcTr5o+vmRjuvsikupj2DvNPJU4NroUd67eRrRwm5eaeTd33fcB6GomvhxvOw
      7p6THLGXDwdzCjANRkVLGSF/R7/0HTGUpYVsyE+D+VYJjKem+ibT10kAfWVaUq5MalFC+Enw
      3yHVpwwBAEXl/jb7eKmhkx6Mc/4F8p1Da/st9ne6p7PnQT75xJha9PlpAABilE3GqMxSDgHA
      voregs9LEn2E7wJlZnUFAADSMYVZZBsfbffHeQONXCtOxSZXAfnuNtTIsjbV2fcUwxsN9++i
      CdiHY18wBWWhwAqXm81dH+dznpw6xd8iyeYKVdqCw0B1udMrW5/0ppSyKgw7KTg6D9PNsomy
      GjlBuwHWYor/Hutq8eq6Zppg2u6PCzraB+F9yDBC6C48Dojtc1g9O8rcI/DeYNwAAGTkDw+7
      nqJOC/fLHjHqgtdyQmdn2x0s9CiHtTLEpg328Ccz7edl/puYErncHIo1dPXmhKRc9Egz1Rkz
      zPIye1S/9kANLAZcZZ2/lr65bkA/tbAeiHwNcGLfz65BCt5q+bZ1e/nwGZ4K6rNvQtoGy7QZ
      NZOfEnN3AgvnzdWJ1NyQVzNC2jYjjIurBYATpHkLUc7a1185qxFXXL7WZnv58CUknvFIL1n2
      uDOkbWmBZOeqZ0PUKWdT/YnRPD4SGdUUE6AMyu/pyAsqHm0J/LK+Mo2e0R70vO3wHqKvRvW5
      xUNfwv+tM/8yr5igZ1Sln3QPAJygeO4jFzYmXS5eN4EcYxIZf6j6USZ9g58Ev/GbC7K5xCsA
      kEZOS3WeVEIJzA5VCuZGLnnOjapF9rafe5P2Uzlz2BVf9/n6ADp8c7f3VV8UtmZrYEXN9vm2
      NbA1WwNbszWwNVsDW7M1sDVbA1uzNbA1WwMrav4XGuueGJ2nDMUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Title MTD' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAYCAYAAACssfJFAAAABHNCSVQICAgIfAhkiAAAAAlw
      SFlzAAAOvAAADrwBlbxySQAAAF1JREFUeJzt06EBwDAMxMA0++/s8ixgoDv46InOAQAASr53
      mJnZOAIb7vYB2CQA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRA2g8d7gQkbuVM7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MTD' width='84'>
      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
      +flLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='MTD Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAE9ElEQVRoge2aQWjbVhiAf40cnqAF6yZBDBVsMIcE4kChMs2h
      Cj3UoYO6dJCYDoKaQGe3h9kdrAs9BG+D4mSQ2TmUKIaA15MzmLEDNXMOKc4hxQqkWIWMKIeC
      fSjI0IAECWiH2LHlyN4GTZsX+bv5/997+LOk9/Sef8IwDLAZn33qL/AJ6Drbg66zPeg624Oe
      dolsOvsxv8fHhOi+k9gCHJyrkjg1wlAEQRCUcySYrphyv/r7KIIgSMrtF1/rFt0P5VmOIKaa
      HlXjrLMbu4roW4vF94ZhaOUVgQY68EKr5eY51DueVDTjQCs+5RDypdTW/qU5DgHAZOY4cuad
      pQgL7qjcCGQmEdxYVA3DMAohGvhn5XpmN3oFXD+XTN13YhxCCJmcz/y9PfjjrlEMfdkIME4G
      1KoKAFv5lYrbO0zXMyzvZeVsXmm0rYgPw9XHycigacgz79xKpbiugJNlAKCsKMCyvY2c4wIN
      LyX5uGlCCG4HxB/cLUO0XZ/PJtX09HSODrzwolqAQhfaNV0JfFsU/kxxPeWCOYOV85tZ79ci
      TGYi19G/Na1mvwsUJpKKVUt8nN/ER7iwcjcjL3gdjaiq7wM0X2qEEEA1HRZWR0WZt/5tTnve
      /SComxEOAT2ZUQ+aonLUbZ7SizMsXI3tGkZm0tJVOJq7MXBWNyMcQuz9zIml9z+sVfU4Vuuz
      mhFooCdOChtG7Z3Et7jd6Z0EP2d1ydvhLjUMtTg37nIAAHIMji9ua1ZjtDp391X2oOtsD+zo
      3PY9TNet9t/nAjte567zGWcrMkQG86aQLj8P8k6KJEnKyYdXy43MXpwnTQRztQw+zm9XhDs/
      yeaY8pvX86TsXy1rmlpa6Ev5PMG1+jQkFzeQkNEaxK7XMlg460o66Bnwr7wzbw33VyJPZP9C
      UuhHAIi5GZ29UxET2SNp5Y0M17ghq+FwcM6F+77JszOF/IyrOayvpn6H275rxz8E8i1r2rIP
      AQDokiS5hz2O1rEA8HAeCJXKpeQDd4uAvCNBv4vaivsvMxRJMl80P8/F4hroufCQkyJJknHf
      nl2rHnfEwZlmWavzDvWtAnvRwByaXi+r79XCDJvyeYK5KgDAnlR4ByrtS+2omqYWvnfEvO5a
      Cg/nDuzz4WeCCwH0IHZMFCeq4kxSAYBLgbymKUt+FgEAYsfE5AO9lsLamR3goH/I3XQYxrpc
      8EpWrBozThZey/g7D4+6XmXzjX+vdEmS4QY3BABrQYocFRupqrQpo1u8BwCwdoZ+ITpRCt+N
      FCo6HOpywh967gg98jsAYFgI9ecjD0VZBzjU5YQQSrsjj4+mdKydwcHPS/mv5OBlhrxI8fMo
      vC5FOAAA6HFP5wphFOcZkrzI8MtMZCMb+LzWre3ZUHdfda7oOtsDOzp3z7ftQdcZCzqVTrXp
      kb7HEJ7Zv+ufT/1ftg9Mp9Ipa9SM0AsAXHSnFsDNuVPplCXaX/dphFCzM273dofSKUteTvsT
      nuSSvzmGm3MrTaVTJzncCI/FhxbiPvOpEj41NFacKJ0yIf0ixC9FSxM0rJoTp/v4nSpytFZY
      0zbLxY6e4ayA8xx2jBzjHScqiY45KEWvAPe0Xk9zDpytS6ea2YlyVnc7N7dr4OjcvnSqPebr
      jNscVs2Gb04rYy3VgP8PzNaq6h9xsQKVxChFNHPvqAg/O2Wux29Ddy9pD/4BwYzabG4447kA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PMTD' width='84'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='64' name='PMTD Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAJuElEQVRoge1aXWjbWBY+XvIgQQckyIMFDVRDB0ahhcikEJnm
      IV66UJsMxMGFNmSg6+k8bNpCGzcwqScPGU8Xsk4W+rfQlVuYwSlMkAsNUmCC1YcUaSFFKrRY
      hZYo0IIMDUjQBwka0D7YjuW/TJlpXBjnww+555x7cj/de869Oro+13Whw/CXTz2AT4B9zp2B
      fc6dgX3OnYGuVgphWWjnONoJ3/6ZpCOwx5yfyr0+sSZI3ujJr3I4mvH5MjgtzD9x6rtsW/NM
      xvet3tyhVcx8myPwjM+XwXty55c93V9oY1TG58vgYVW1qmJ5anHsQa0Td+/weuPMQRYgz+9I
      3hkTB1n6yoZhu+57V5njEIS7+bKmU2GBQ4CFcxvNPJo3j7P+kYLyznVd18jl/ZCd+LWsSh1h
      qe8N+72djbHI6Q27JDYKoQGlztdecd7I5WmERZAazvYvPECef1/lkB5g/VeMareXClPq1ZSz
      KpHApbWqgD/HwsmC6bru20IY2Ljguq67scDBYUkpG2RLQi/2Zm2viJ+fKZLXItI13CtGYmHX
      DYWrewVG9kDRsnfamYuKNR1K9bVw28dsuNHJL6sCogcF0zFbDeOVmtqkUyfrxXvDmQ5uvD3D
      XfJju5ttF6U1IHuqz+X8s97Md/guPWrhKGs29GAEAHQTwSMgyUVn25Fl0z9M0gC5GS04Q/kb
      urXcn/8Q/Aj5AVbav6V5C795uvJkLD1+l2G6LOnD/om1LCVX0YlfSQQAALu6FCyM8OgPQMYC
      wowfnsopixaON+v5RwN3V2wscDU5zANTyPuBZRbMisDmz7K265aCvEUO80BTGIT1n9swm6tt
      LsalVNd9b7KxLAIs0s2n1st57dPsz9aKGIjq5NyoeKk8ydayFF8pzdgH4IX6V0bRx0PabbJ5
      +DxWE0BP9IH2L+Gb15Rix43rkBpW5W2AT3ImKS6JVFj3z46KV7AdktKyXizqPl/G5+MS/wP4
      r+ir29grsJ7IQVopxELabRJrHppO5poRnyYxcETB9g8SFALYMYIuGtImwF7Fc2sUl0T6lN57
      fTR/oWaGwnfi7p3Sn9Y8wyWOhtw7TXKC9UQODxaKZ1vPMAA8VpMYrVeSP/pZ/epp7zy/UKOn
      dHKunvCHwtITwwX9dEjZhTBY81eMxGwpTJBQGNUFXXPAWjdUPxE8BNDmeZbvKjIATHG+KY90
      ILAh063zvDXPcNypUekSZj3QMkWAeyJ+z2tA8m4oXGk4K0rmKK0cLjepK2H2mRBEFecwkVqm
      mS6A/feqTsE+585AJ3Jumbcdp+Ft/s+CTpznfc4fHU/VACqJXsmmFkKzqOd3frWiciwCz6Jo
      NhBVhTctXWr3pVBPFkWzxBdCYsUTgK+0MTqLolniq5p6mDSdi9fWw/aS8xs9HitodULNlBGS
      t8fsyu/mibIm9y0vGmP2u9GUXx8dkqTtJi6tJTH4Dyv0YNS2x5QFjIsK5x+VNfOnFW0kYr4b
      TWOF0GW9/DCK2o9rVHKkxslecdaXpeBRKbfVIH9hwRAeaOywqaWXgEIAupDwHB19oy+uNRo5
      /H3DiVHJfgQAiOHgfMzOLBkAAFuG9ByCDIZ0IcFjuLNulZ61OKuRM1TdwXZvOK9KvV8XydmI
      OFtf6FFVkx4kmrwhHKIke6z898faMza15CZ19US9eG84Hw0UjGj2AtbAzVAegbOqBEoBSYvz
      jxrYOVZ2ShP7euODjX6RyDiBLWmpJw4AWCvS5BIajxEAO/Uwy9l2pHUTO+mnAXKzWuh7imjw
      0t562KYlbYHpJ8VciERAvy+GwoL+MLoT0voNIXLbNDbR6F2KajY0bCQkvBLCg9yPAADAzEbS
      Q2XN5P2AEuPxfwI5EhCmCXiqpi2KY5oNo1W9yf4YKMxxAHm+tUH+Agv9SqFWaKpKuJtlFoxG
      e/5sFg7y7DPbtm1jTWIQlplrYmbbdjbGXZVt+53BjpTqYVxqraz6xPsz0YPDc7PuOw3yJZWe
      wuXLBbHOelNL3kPSq6GxwwAAWD8t/kLKU9KtzTo7JxsVCpfDyT7n1kk+cYgx7TFzjeQGhZJl
      ezk/knBUyBSrAnXdREaIYEW1Izdem9CP1wfIASDAlNarAmvLAQQhumvN1pQkRiUqtSH8AFrn
      pr2cB3snj5ipi5rmAGyDdk+cXMZT0yQCAIO9qeNmSa7fF8duoPHZ+j0GuqmJc2huWsy+AgBw
      nmvxGYOeDkQPeI2sW9NWYqZSG/obqq/omgOWbGjdGH0QoN01wC4suRrBL4ohQrEcwAbItFxe
      qNCFTSxFCCJrOYAdIZJr0Yn+CodBPnsqIl3AACC0EJa+kOJD2W+2AOlGw1MRoba05qwWMkdp
      6VC5SV0Ksc/EEF5wDhOpB8Hg7rWh/feqPxX2OXcGOpHzfn27M9CJnNv+XfIHlM95dn4qPbo4
      ib2Zzw0n6q6FkDfcUNNbAiVszudGEljVRtOmRqVVDfBw4HqWPlI5qDxNLC4Gz8xFa/r+xuf8
      j4yCEgNucfc7BAVlHGHH0y0uEHhs+iC/Vm6bdyh25Krx3rUfRtmBM9WbUmcZ5XV95zavbd18
      6ScaztFeOA8Syks6cG1yl6+11v248rJGYKgaHAn6uwChg7gjFzcBAOBxUj2YLJ2xvWj39+ci
      RPytrkIBgCNINwT061uNA61iKyNdt3pnUr91v0hXb+v0xXCjoq2cHU2y8YL2dyJD+zIMnptZ
      tGqLm9ZSSrejzDjd2kdRmzlvRTPMUa8QI2gKnkvFbXBUycSj5JcAq0mNTlHdzXz8vrj8fTBm
      EXaAkdYN13VdU5Ia4lYaAvaatIsHW4iyJyYM23VfpzlPPLtuoXCFYvuAPRlVnpmuq0ixcOFt
      cydtzmG1eMtyfYhn3C7bR0paa/t3fH7In5dt123kXANbiHK3Fdd1zVw0OwDsAMbfUeyK9pPu
      z90EBo6le0pDpWXZHJZ+La4PZIIDv3mjSlZvAD1Ow6sfhVmD+tmOr9yCu2H1SVm9h/uz9XOQ
      W5DLjdI+3NSuOgQNhsKNVxUrkPSVIkAku1IVmRd8mWE+PluTqJwHKWM4xRwAZ5238SBxGAFg
      CLKoazr0k7CnnLFxKT7uFejq158rlBT/rlKAfaEWgaKOVbYuRyP6m6TZCsIh1fNq8GY+N+w9
      k+xAVv+D0Q8rWfAA3rgq2rm2Sep0FB5OyI+LAABbgjyTguE0VbnjA0Ud/+CbgK1g/TxpjKfK
      1bBjEfQ1r79ywJIN3XMu+CjJ6MNhixPcCYztA/Y4xd/O217dWrzxzGT+xLCnm53JmuYwm8+P
      xDc8Ts3cmexxYAdI/qdqDtt/l+wM/B/yPf7G4+cj9QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SMTDPY' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAADACAIAAAA7u/JRAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAP5ElEQVR4nO1cb2gTWbt/evHDDHRhBvpCAi50QGFHFDpFwQz6
      oQN9oSm9YEov2NCF7tiFtV1hmypsjf3gjb2gSRe0VaiJgmUUvCQFJVPY4vihy+RCJSO0ZF6w
      dAoWJqAwAxZmwMDcD0na/O22b01HYX7kS855npPzmznn5Dnnd85psiwLvmX8h90VOCgcAnbD
      IWA3HAJ2wyFgNxwCdsMhYDccAnbDIWA3HAJ2wyFgNxwCdsMhYDccAnbDIWA3HAJ2wyFgNxwC
      dsMhYDccAnbDIWA3HAJ2wyFgNxwCduNIvQz+JX+Y9fi30eRseLIZX4SAlPI1CX+VJZn/d4v3
      4TGqKca083OSWemiSP1NMarqM5Fvt7J87USMaoox3dKqvuP0duzptURlSdZBoa5fdUXb4NVS
      SZoc4to86XeGZVmWIYoXkPjT9d1L0Z54omc9acWyLEubJaMXrqufLeOFL3q2f90o/FBm0JN+
      X+l4sDewmRD+ixCW9Irk7Mtpg+wljiEAAIiH7CG1l4lKo1J8jIn3JfwKR7UCgK5KMpykXUcA
      oWjcTGU3AADgr6B0NEgdrXQ9CAFe6PFnXaHuhyH8AKUAmMrdoOoOMheJ+jaKdF+hrnirMw5C
      oJ2e1/rvBlxYZYarZwRX4sqaCQBgSsqijPf4qqyK2JyRXuruoeGiAeamSFgVszkwJVHDfcQP
      AItBmQqRLbXcD9wHLOt9OF7RByzL+JPl2iDaBtE24H6PG/W91duuaEdALUvLZK6S0TaIdvnS
      K5plpcU+b+ZDbfeGENCeeKIXAusf8p14PXPVxd1I1uEgih3A3U/vUrzB++L305ZlaQkfdxai
      Z7HkbHq7tEYQePXqLCQT2o6BEo63EaJcy1cKRNtcorRL6aLY5Vv/ZFnviiObxiXPusTlQvZe
      +4A+R++M1v2R3YYUMMEE5B8lbf4IACjGx1rFSgIgvURb/bLmQ2pPkGgGczlp4LT7GAKYx01k
      VVnZKXsvwAZEdmCPtjiKg1GakAMAEnfVqJ62IoEnWCOngJT0AKNeUIVvzThSZdGIUMJDDnmU
      2TFlwwQAyGWVR2GtM0Qeq7ZU9E1Aj9cdPfW5gDoQIvJ/J2e60fdJZc0EPaUqLjdZ8NrrG9gX
      sIuCv2WM/9ktfNCh2YV7Y/6bXqRQJxoGxGLzUrR3gPTUGWBNPj1/gnpapHfsunciww+i6Rzh
      vsxTpwvJTjRqNxwCduObJ1B3FDLNqknIV4lv/g04BOpCGMHRUtD3lEoDtAYKZroY7HDjKOqm
      RhKbOz7qXC99Rz4UAmtS2vSEZWMb4q8VIQMzbZRCTQ664CgbGiAAzMRo98z3YeWTxl8Q/Rci
      hSrnxMiUO/QLeSgE3mWkFppq3bN9Ksw+BnY2zGAAkE4vmuQZGjuCUB4aVtPyFgCA8mBM/CnA
      NJf5NSQWAgBJSkFXmN6ruTJzLaL3caGO6nCziC0h8ogOL1dGfg16A3rmjYK9m2GOu1EUxb9n
      Rp7Ju4zK5mIk9IYMjG7Pm9vbOxF5WdRzppQSoYPxNIP8IKiOBuiqB94gAunUazCPMDMrqmEY
      2ruYZ8HrrezE29DjD2J6xzC7M61BfFPJ4fdjxHe4d5GJz7JuPRF6wgQuuqud60ajX/iPbIFF
      +9Hkh2mmus1mY93ECPZE4/rqth9pkg4f57k+ECe8vXckHSPZu8npPjcc3v/AERTMtLxZI0df
      5AXwendp/Vku9NI7dgEz5wPdj8nYe0N76RN/vBTLAhzuH1ntKopLPJxj6JprPnmDu7eQ0RHq
      CIivE+YZhm4B5DRNgyCtADSKwMYMg7qDqZ0EU9fgZDfTWm0qpVNAdNB1p5XZ2K1FNthX7N7N
      aMVjaAyBVv9Inxl7nFDza3O6NDMrsZMsWW2ZU5U1oI7XyAEAAFO4OUNMDuez6Q4f8jopfATz
      jSgCQ51qHAHAfI8yseZpmkBRFCU6QjAuTncWniJ6Wdgx3FRkAByr0wE2YsEVNtBZyEUuRJKD
      CnscxXt4JhFlXQCHNwo1DE40ajccAnbDWdiyGw4BgJo68Tb0x3SMulQvks6bKKNoYq7UZB86
      8cEJZJVr3ky9Cm5EhNlUnbw89OwDr/C67E9Tf9grrvm6ly3/b0h6aFgpZGbluyJ5xVfh3xCd
      uAhFmghqdYJQAAA9JV0hk0+kitSvRSc250fSW0HmZ6pWJgAo0mU6/bGXmY/vog/vGNfRiQ8y
      qW+n5zWkFYHNSI3MjzHhdvrEgyS+kqzj7iYnVarVBcCXN0DMTZGwIGZzXkwSNdxHF3Xi/lpz
      hoO8ARfSWq956MrkiO7lPPXVOwAEaa0tjmFDcfpYInmmiXsA7XeDLpBSD3Vq0FPTuCHLKubr
      MWGV7X7B/LsFkOTtzPYUwVwIqR0hTwvo87387YQBmPsngRmi8g+vAQS2ePG/k8QN2VW/9+4H
      KekeUM8pWLvF31TJ/zWolgTf5ZUo1XMaYO8E9Dk6PlUcEMlw79NA3b0PbxOKloVRPFZSCYGK
      Efcs5ty+q2/Oh9SekKdUJwaPm8gqsgKniX0Q2IdOfC7KStHtb/ocHZ86wUjRPQw11bBHJ/5i
      2ItOfNgE9Dl6120KJcjrxH2lOjEhD6KxriA4OvFXBIeA3fjmCTg6sd1wCPw9dP5nN3p+puas
      U7hSLiZvm9mvExehLwaH5+rPOZdNz1RmRyxeGiYAvg6dOI8tIXiZ0+vF1Tk58xaj26rDvH3o
      xI0lIE6ynCc2fbFO9mo6BV76zN7KyuvEvxySTgwAAKmg/0H79G1fDXEUAAD0FUlpUWa6CDeK
      oribucwVxWT7dWKAnBS6MkNMhv31N4WmlwXYAuaerBqG8UGJeXhvz4ySg33pxHW3HhsHQ2aS
      Qs6F890zOQhwOpz5Gw/D+BTvB4R9USNHvEH5nqiGob66SmEAgJHsk/V8VmPewFrEPw7BB8P7
      m4UdQVAw0/+qGm8PXydWFuISSMFThcG9+zHAm7ETKD2z8fe+SFUrt0EnJn4VSxtAsQmJw62l
      VspMJ+oeF3cStnQNyO7z5a/NHp14TyD8P/vMuVgiWxSTH05Lg2H2ZKmNbTrxbtjWibE+LjOL
      T5/Pi8lMKBcU7zJlqzWOTvwNwCFgN755As7Clt1wCADU0on17Jw/waAxqil23p2YeKrnariZ
      r4OFM8cePHEtkt3azrH9PPESGz3rEZdVy7KsD/FXnRCdFCv9UsPcWUpcUi3Lsox0egCJDkzn
      T//Zf55Y+ZMDb8hz2gUA0OJjfvNBSig3MpXnM0ZHyHPOBQCAUNRkCF8JyW/ha9CJpexbE28t
      CSpJGn+fVLKlNggxZbGTJbpvC4FA1tiCOjjU88Sq8R4wooTAEQBIaWu7FrYh60CgLbDf88QN
      0on3C115Mm2cCpA/AHwNOvF+Yb4eE14T7c+2D3XvQye2/3/AXL3FjyeJO3yd0xIp6R5QA0Wd
      eM5gF2bgkVd6U8huxHliN/o96ErJ3DwHAB68Vv3Mt7f4oWnkmsCcq60723KemHK1IZl3MkCx
      H8uihtN05QioZx/2Ju9niEmJ6aq3eGSTTkyc98FiMPVXFgBg86nwRwLt6q2ooz7nTd4X8VGh
      fu3tO08MnRFmlZUmiJhmQrML7+C8Vz3FOuXPE6fkxykA0KZOxKZ2/PDRdd9A8b0554m/DTgE
      7MY3T8DRie2GQyCPt1I7KgqlKTmTH+UJN4eiHNEp8rWOwAGAuiAyxzkU5dzH+bGFkka7Jvsp
      DkU5939KUkngJY4n2PkvTmBTYfsycnmacIX3rxC84jcMv/wA5/pEoSoA1BdFul/vnvcbhl9d
      oaln/MhiISdyMS1f6NY+9YaxDDO6s3v61hIZvPBFCSgvRfqUmKi4uWZVGnsMgTskmQ9jjpFj
      PVn/bbWi/rFxBb1KB/KCAIL5RwnhJ1EEgI+quAq0B0OOIPQZ3FzW809HuCkTE2SFbHUwAovi
      iR+zxM1u4Wb5rFg1ZHC1l0gV2HeI/lovV78MZRU8VEkUjSHYRz1Vb+a5IQc3yOudlckHI3Cq
      PaP6uF+xmrF8pdr1VqveLoFWDuOaogC0uOmTIKZ0M2eKyxrW5aIAEjdl5gZZrbMejIALIWrO
      iv+BEqBLJc9SkbXqyruOQbp03eqdVuxIWOBZOzmfxL+L38q18+NueCuFdXK41qy4McNoG3m9
      S5ueUvJnKZVnwsizaiOMvYbL9zN8FgDA3FDY0ZI3dIzkJL9h+DNPSQqDxJTqnSDdOZ3rT+Ao
      h3/PR/Y7pdwnEP/T7uCW1O7mUHdibJPkJnBoqTwK4R7wiuNm8AyHohw9qvsft5MAWHNVYSkx
      CORIG8h/CJfeE6LmV24joQuimANo4KoEgrFPfGzxmzguwBniRJUVOcikB3cqqgBOHq8wMbk7
      ev8EjYHJ/Wlg510kAuBxkx8VaRPo1kadJ5YZlCsO6gBgSsvA9BDlfd2c6eTwyztjq/JW1zsI
      pmL1aikdxMix4jkEvBmt+KkGnScm2C7gbsuyCZAD5WU6tkFcH6hoQYjvRxyeSZFVAABzTYnM
      moHKcUafGdfHJgqzYuafqLKgyCboKVVuwfLrpA1qQoj/Ubd+RWDwtI4A2dMeWyap4k+hl1Xj
      vhsA3ANeQRfYTi6oA3bSHXzoGz5dVoq5mImdosTWwlfyNya6IjB4xjzmDs3T+a03jk5sNxwC
      duObJ+AsbNkNh0BNLFxqqgE6UjZZ4Wsb/ZG/YysVPI+jTU04eal073T2cXf7/5TPXg+sE+8B
      WpI9Cq6hpLa70ZALjrJJzbIsI34RQfo47bORvkHCyVAmb/JZDJxkk5/K3A6DgHjVBUeHX33a
      1Wgp4ALX8J95UVsMuMAztW5ZlsWzAL74J8uyrPUpTyGxBI0X+dYigTu673mIqQ70d6BErkb0
      vnios77sucXfekRHpKqtqA144qUwkkMuOBlKf97ViGddQIZ2rg4ub0KdUdWyMpOU95Fa7dtg
      Ah+iXgBmtsYPl0CLdkG+liVp4vVzGAKAnR5OvrcsLe47FhBrPYXGElBnme0WXN8oygD4nu9y
      t7aVvkn5nmuWpYm/F/dOPy/wbSgBLdoF0BXddfCxtEdeAG+0zsXelmVZatTbFkp/toxEP+Ji
      4x8sY/k6CUz+lTWSwOckC+C5+zcX9ycHAc5N72IkXiV8zzXLsl79ghQfR5IFYHnLOuh2m92x
      KglAVO6FroQkLQHxz93u2AousKGdvdOVUnEjCbxXFKBqXTddgvwdWz/UvWOLn4gQtwOFvdOd
      PmSJ54t7pz15/fuLNZgqrE95ANhkVToMlaS9C3uKjaEG3oU9Z8MlrUsTf/dgCABGDb8odGIn
      nLYbDgG78c0TcHRiu9EwmXVDZlAOLfmULFZvw5zpLLNBtxer9yyzfokJTUFmLY8GZC2FEEmN
      3u2Gm5ya/gtY3j/dUZFRlFnHkfhPcWYUUx8RCBRk1unJMtP/B5LIGRzihD/yAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='64' name='SMTDPY Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAAg0lEQVRoge3aMQ6AIBAAQTX+/zMmvo0OX0CLxey0NLehIeTO
      OeeBuf4e4Ac1G2o21Gy4Vwfv8+6cY6ezNwmhZkPNhpoNNRtqNtRsqNlQs0FsXv6HjTF2zrGT
      eM81G2o21Gyo2VCzoWZDzYaaDWJze0OGmg01G2o21Gyo2VCzoWaD2PwBwWUOgJ/euxgAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Title QTD' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAYCAYAAACssfJFAAAABHNCSVQICAgIfAhkiAAAAAlw
      SFlzAAAOvAAADrwBlbxySQAAAF1JREFUeJzt06EBwDAMxMA0++/s8ixgoDv46InOAQAASr53
      mJnZOAIb7vYB2CQA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRA2g8d7gQkbuVM7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='QTD' width='104'>
      iVBORw0KGgoAAAANSUhEUgAAAGgAAADACAYAAADoUyYiAAAABHNCSVQICAgIfAhkiAAAAAlw
      SFlzAAAOvAAADrwBlbxySQAADjxJREFUeJztnT1rG9kax/++3EbfYAVeWIl1oUsat4YUkXDA
      Iwis4X4AW64cNUZ2ikSlk2IdEVi0riTrAyw4kIsmYKNJYXDrxqwKL9aCBaNvoO3mFvOieTln
      zpmRbB1Fzw+msHTOM+P5z3nTzPMfgCAIgiDmw0r4A8uyrHkcCMHmX/M+ACIeEkhxSCDFIYEU
      hwRSHBJIcUggxSGBFIcEUhwSSHFIIMUhgRSHBFIcEkhxSCDFIYEUhwRSHBJIcUggxSGBFIcE
      UhwSSHFIIMUhgRSHBFIcEkhxSCDFIYEUhwRSHBJIcUggxSGBFIcEUhwSSHFIIMUhgRSHBFIc
      EkhxSCDFIYEUhwRSHBJIcUggxfm3qID+P/0pjoPgQGZKikNdnOI8qUDGmxWUOyPGNyO0tRWs
      rEw2drkQwzbKvjorb4xkcb8dBr4LbmW0h9z/BIesOpH9B4/z8Bv/X+GfmxDWY2HULACWdmaG
      vjCt1hYsoGb1hGWj8WqG+0HPqgXqpIzrxMFRj1/koWVp/rgCekcIHSv7f2Ed15MIZJ5pFgD2
      QTy0LA2a1Xpg1eGdBPvkh2MF6qSK655Mwck3aha2WlaczIGy4AsUe26spxDIqFmAZrUewle4
      TD3OieKc/NnEjbnSHXpHghbmYV9ItTNOXIlz8/hj0IuPsKwuKqvJqhlfG8BWAf9hfXnXh44C
      cqvBsUCmD4+La/y2B32rhcMXcRFGGNwCGvTA+Mfa96hTwR5aONzkhJI4N2rO4r4donQC1I4q
      +IFbqIHSSgOFBwuWZcF6aAG72XiR4uIO22icANp/yzH7BIA/0f8K6LcFtK24fRv4uKsL/ocU
      SLTblEh2cW6fHdeFcAbV2PFFEFc0NokI1w90g8Kuk39uhL8kPCWjThnZXR046sH6tSgsX/gp
      eG3+8FMBQB+DIQBftyGOO0L3Dx04qkG8VzaBfaONxomG1kPaaBOU6eKMNyvI7urQzkyxOGsF
      aDONa3dbWoE54iVmdHkOHTr2fnTGqB/3oANoFEXrqyhKCDTqlFE6AbQzE90diR57NYcCgP7f
      wfFm9HcfQAG51YRxhwP0oWF7U2LfnEWnf98/7HTtsck3RmkAaoaVasIUIGUXLAGnn3X6Z+np
      t0t4oRqOkyRu3NQ7An8BzB1jphiD5i6Qf6EW3SYnwTzTootD3yIQodiycSdl+QJF9+2KNNli
      106LIdC0mFbrSHL1/h3tW4kxSIphF+fIzXZNsQD7XhiBRpfnKGxNP21dtH3TDTvFWZgWtKwI
      f0n4559/nuI4CA7UghSHBFKc5RLoqo5MJsPZ2L+RXb/NoNwxpcKbnXJ8vGEbZff7V22Eo7L2
      tVwCPT/GeDwObT3UAODgXfQ3sqs6Sp/kQl+/zSC/DzTvnLgX66iuZVC/ckuYaO9XgdN7jMdj
      9J5VkX97PQkwbOP9bROtnWwg7nIJxOD6bQkN1ND7sBH43OyUkXnZkAsybOP9J6B42pqI/PwY
      96dFNE6cljLUcX4JrP9sC5BbKwK3fa8VXZ9WsX5UQTYUerkFck5s7eIYAXmu6k5rcFqXiMEA
      BorY3gye3uzP68DlOXTR7QWn9bx+Hv1qqQW6Pq3C2GScmOfHGI+nvC0QZlXD9iZw85fdZgZ3
      BvCsgCz4rQdYZoHcbukXjXliEpHLoQgDg0HwY/OvG99fWVROm8B+HplMBqXbJu4/bMS2HmCJ
      BTIvz2Gghnc7U8sDrFbw7gBovKzDG/aHbeztG5FyXXdy8qXitJ5zbJ9WkIWJ9qvoDHBJBTKh
      fzaAAy049kzBxocxegcNlNxp9NoA7+6a8c84XNVRgj17NDt7qKKJe28GaIu9pAINMLgEimu5
      mUbd+OCfvh9jYzCAgXUUmGOZifbJDZr7G/AuGGdMsrvMG/SHyyrQsI8bxqwrPdeoZ6KLzOuv
      DX4rvfod1WfBtRfrgllOgWKv7DRsQDsAjP3fJ2PQVR2lT0WnhYTxtx4AyEL7pQjjs26vi3zH
      t5QCBWdXKWN0yoGfayJj0Eugx5mqm529SOvJ7rTQRBX5TAaZlzdo3tlrM+ENO7rdMF+WsgUt
      EiSQ4pBAikMCKQ491aM41IIUhwRSHGUEGnXKkh4FPgI+B6E60h4ICT0PpOvIlEnhDzGH58Od
      1Hdf1rYoncMrE64jyvxmeCAk9DyQriMsI+fjMH+BOHk8zHSTybdMnwRRejzTAyGJ50GSOqIy
      kj4O8xeId+XHtQhOvk1sng+njrznQbI6aeJalhVJJlNmDEqOhsJa8BM7kZcN2wNB3vMgWZ00
      cZ3jDPk4zF+gtQI06OjfBT+2cz453PXBd7FzM619cD0QZD0PktZJExdy/hDJ2+T0RMYGpzvi
      dnEJu8WkHghpPBNk6qTxcZh/CwJQ/NVC76iBktsd/NhHzcmMZhKbhj/J8rZxPRA0aQ+EoOfB
      7Orwyow6ZawUG0wfByUEAmyRLC91/SOKnh8Pr4ZstzhbD4RZI/JxUEAge0EX7puNrw3+Vb9a
      xvZW1Cfhzz6jpcR5IEh4HqSqIxk3sT8EoMgYJLPolF2oxnogpPA8kKojUUbSx0EJgSxr4koI
      ho+BZbEXrkEvBLag4sFb7HmQzichvoysj4MyAokhnwS1IZ8EtSGfBAfLojuqKrEwLWhZIZ8E
      xaEWpDgkkOKQQFL4s9/sTdY7ARB4Lfi9EzIZZPyp+SCBJDDRfpVH9bKGnpucdVGDsZ+XEynO
      a+GqjsxaFesXPs+GT6VAXBJIxFDH+WXRSwcB4HkgBPKBGMR7LZhonzRQPL3HsZdAvIHXobhK
      +WYryWoF3XEl8nH25/X4ej6vhcFaCZGMJEf47dOQt8JOF+Odyd/UglJy/bUBbObAzXIVeS14
      WXR2+iRvbCOB0uCMKzWO+YQ8DZQy75Fz/X3ubB8FGoOm4apujysHPd/YkZ6Av89qBa3QGEQC
      JcAb9A96GH+YjcOCa67kYo9tdgo+QJMEaa7fZlD6BBRP79GdhTtJLif1EAu1IAnMTnm24gDA
      agHrmJgrefv66wbwWQSQQCIcz52ZigMA2MCxs+D1TP+8fb321lwkkADbdAkwHJeq4DYxTwr7
      Jkjx/BjjixoaL11/H9uR0X8hkE+C4lALUhwSSHFIIMUhgRSHnupRHGpBikMCKc6TCmS84edp
      pvJJcNI8+N4Gkj4EwjiRo5WLG+fjkKSMn0d7CpzzemfLmsYnwV8m/CZFOR8CcZwwSeIK0mMk
      yjyJQP5UC9n3qKbxSQikmkj5EEjECTNF3GBqvpzXw+ML5F0VnCsztU+CyFUk7njiRUxFJK7A
      x0HS6+Hxx6AXH6d/PXIYL3816IeT2IdgijixcQHI+TiIy8x/FpfGJwEA0EBppYHCw7Q+BCni
      iOLK+DhIej3MX6DVCmpHQKN4CG/uNGyjsss/fBftrB24n98+06DvfgRzDvbt0Et1//gi+FWi
      OAnizoL5C4QUPgkOhZ+COW9pfAiSxAnDjSvj4yDp9aCEQEBCn4TYfy5IrA9BgjiJ4gKQ83EQ
      l1FAoDQ+CTkUEPVJSOxDIBknjDiuhI9DEq8HPzOYcHLgLwDT+yTE+A5I+hAk9i9IFHdBFqo2
      8Sv0ND4JngERYxEs60MgihPed5K48j4O/DJPKNC0kE+C2pBPgtqQT4KDZdEdVZVYmBa0rJBP
      guJQC1IcEkhxSCABsR4HjLKTB+sZzxf4PREYD9qz9kUCxRHncRDCTvDyeymso7rmF8lEe9/O
      XhiPx+g9qyLvN61w3undCqW4kEAc4j0OQjgvbq9d+L0UXqO5aeD80mkRQx3nl5OUx9xaEbjt
      e63o+rSKdUZSMgnEwudxUJMp77xEnZVUbNwNxPWd1vOaUZ8EYiHyOJDA7Oyheul7E/Gqhu3N
      Scrj4G7y7m5e6wEoiXjmmJ0y8vv2zfLaxdgnchaV0ybO1/LI7APYbOL+y8Zk7PnAjkctaMZk
      d7qeKcXNy5B7ldMVjsdjjL9UnNZzju3TCrIBR63J5IIEeiwcUwp8es9/nPeqjhLsd3qbnT1U
      0cS9NwO0819JoEck3nDJRPvkxhmjTOifJ2OS7aFgm1mQQLPgqo5MJjNJp3cIex4E6/yO6rN3
      gYlIcS1qzUQCzYLnr9HcBBonvl8HrurIhzwPJvhbDwBkof1ShPFZt+t7Tlg0i0uN2Skj/3kb
      918qyCKLypd74FUe+UzVK1O7YK+NzM4eqs/eYexrPdmdFpqf3fpFNO+62AD5JCgPdXGKQwIp
      DgmkOCSQ4tBTPYpDLUhxSCDFWXCBJP0KXDivz3RTYFbCm9AvQRQX8R4MAY+E8MbxTJjD8+Ep
      kfQr8OFmUET8Fx5alpbw1dBScRN7MEzKuKn4iyuQlF+BD1+KCfNEcj0ZBHDjpvBgsKK5Uosr
      EA/mi23tk1U7Y3sThM0j5ImJm8aDgeGdsOBjUJSoXwEw6lSwhxYON1k1RhjcAhr0wFghk4Yf
      GzeFB4Px2x70rRYO47LFU1xG6sD0+LH79Jphcdw9nD7f38VJpTkK4npdn68VxcXlfPf9COSe
      kFBXFei+OPYrLKTGiri4nAkLLy7v8+/iftCoU0Z2V4/6FQzbaJxoaD0kT74KeCWE74gmiBvr
      weDFHaH7hw4c1cSvCxBfW2rhTnFZ3UZ8wq9MFrlM4i8nLq+1MuPyp98LLZB7ooQp8S6skybp
      OpU4LuekM+PGzPgWVyBZvwJGHdZ6hbXglRmr+HEZcXjHzFwa2CysQIl8EFy4kwRXpMnGbFG8
      xWzc5EPgwTD5X9jHTLcbpBmh/aaL8q+VJ03H/+4Wqo/GnLwSSCBJ5uWVQF2c4lALUhzySVAc
      akGKQwJ5XKOe9B10TwAJ5GW2ldC4rCLPSCMB4KWYcD0QIgTf0e1t/ow7ibj/B1zfuIP5SaDI
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='QTD Hotels' width='81'>
      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
      8TvQW0t2B/8BUiJ7rvI9QEgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PQTD' width='84'>
      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
    </thumbnail>
    <thumbnail height='64' name='PQTD Hotels' width='81'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SQTDPY' width='84'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='SQTDPY Hotels' width='81'>
      iVBORw0KGgoAAAANSUhEUgAAAFEAAABACAIAAADtZwxfAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAAg0lEQVRoge3aMQ6AIBAAQTX+/zMmvo0OX0CLxey0NLehIeTO
      OeeBuf4e4Ac1G2o21Gy4Vwfv8+6cY6ezNwmhZkPNhpoNNRtqNtRsqNlQs0FsXv6HjTF2zrGT
      eM81G2o21Gyo2VCzoWZDzYaaDWJze0OGmg01G2o21Gyo2VCzoWaD2PwBwWUOgJ/euxgAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Title YTD' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAYCAYAAACssfJFAAAABHNCSVQICAgIfAhkiAAAAAlw
      SFlzAAAOvAAADrwBlbxySQAAAF1JREFUeJzt06EBwDAMxMA0++/s8ixgoDv46InOAQAASr53
      mJnZOAIb7vYB2CQA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRA2g8d7gQkbuVM7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='YTD' width='104'>
      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
      WKwbnDge4MAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='YTD Hotels' width='81'>
      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
    </thumbnail>
    <thumbnail height='192' name='PYTD' width='84'>
      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
      vjDqcT2l/wNoOBCouowVygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='PYTD Hotels' width='81'>
      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
      4ts5S7YH/gU2phbtNOLlnwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gross Revenue Trend' width='192'>
      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
      SqAcuEp7KesAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pages Available' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Page Fill Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ad CTR' width='192'>
      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
      nhLTcAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ads per Page' width='192'>
      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
      0Q7jTdNATOfkpYCSXkL1+M4v2i99ycXOwkS1L2rH05jWA27y3JicS5N9e9CVNDV/G4YbcRTf
      MGuI6R06Dsg+6Xzxv1/d+dffbX348lVseYapI51um4SoMYnJUK38aydH4WmSyDPLQTA9Cm9i
      rvKWzQTUT5KnSXzrdlTn5CCJN+LOX3fiD7YML01As5zqQOjFeDq+rVQpZG6WHF3S4VG4e2Yn
      dyVThbjG4TpOw9+C438/a23cvhnVmQq1qcQtTa01dbekP+6pwTy70RmqDkQeJ6REazw9IDiM
      iY2JPvo4+ujjyX9qrulBd7+zu/v1n6hC4cZmFLcbZ7+XCmh2Bbp3/56q3vns18xkhy6ocfLj
      XvzBTcO8jCvQPAWRU+2JDjIqaDpUac6/iVjVHiRucnpZobC1iaPwM5m9hNnym++XZw90VpOh
      Sk90mFFB3AxonXltUUyub23SfekofCNe4ee53r3jgNxB93/ubv/7f/6ucSKV1Q1oVkE6EOpl
      Onk3x1W6zsxcfg5ORAUdzlUSUzfVWmCuR4ExbAKcEcya+Z+xwpvXG5d2H1AhbhlqHR4AKOlA
      5GlKD5QqNH1DNxtT5fjepgkZ2LSX2EfbkqbmWhBuxOF6jJ3T8QrUfbSTDBKOt+589PJdiJdj
      BVrgaKgyVKotHKoc/Ylc0oPE9fbTviUisxZF8WbYivlNb01fXTOjDFU7vKBRxvLISQeivYyc
      kqG5E5VZk1FdL0kPEslSEwThRjtcjxvNK3H75cwK9ENnr7N78x9+EzcuepSxJHLSvkwnKubw
      Mrc4psMzJ9vbl4ElorAVNdY3w9YlHf0WMwFt379HpPGtOxc/C1tOZxmqHDu5PoXTzdPqr0/6
      RPRxehyQjtxXX//pV//y28aJ4QACetVIp1e6yVBlcqWbM1SZdUnWp4LkgaWCzKcznw+08+Ce
      U/71Z7dLvhoBLXCWCd1LCnL9JO0laT+RLJtOf9eX/tkVIflzwu1A6+O9Rzsv3VCmuVDFcEXv
      Pdi588nNL/77y3/6j982ait1En2x3GFMOrMyne4YUpxL+/tpLxFrqcpha7OxHi/bHb3aF7mf
      pHVrh/umHm5+slV+R2Ln+07camw/7MTtrajOk8f0z//lrjanqkpDpRdjHSmZw8XpND2ouqEl
      1dRazTVzlpjD1kWuT+Lc3v2/iLXh329G77cbzWgy7cGz8eeidEJX9tjTPMfr0zCdzOzOaX1S
      TTq7yV936Dm1//lX0YftE7+PgM7dZEJnD2NqMkULx72vmszseknaT+hFZq5HYSsO1zff7q1z
      rp/sP9qRZzZ8L47qm43PPy7d2CGgC1VMnnlSHWRUIV4LeJ1pwbi3jAxd2ttP+4k4SxyErSha
      f/MbClQk+W7HPt41UbR56zY/JaqQ+eXc6yYCWhqTy1yulKrmYxLltYCjkgcyF9Bcxdmxqkw2
      T0PLxkzXp8aiQacM7d6jHRUJm9HkwXPtiz5Oza2ImotCREDL6sQzdGvzH8hcaGZ9Somrk/XJ
      tA7vUSnIPul0H/6FTXDjF7ePhsf60KqQ+TR67S4NAa0CnZnQ8cyE7owxaa5pP3G96bO/bAJ5
      nkbtG+1P7hxvxnOS+wmvB/zRqXZUCGjV5Icrkzu8d6D5mnsHyhUkI3fy3qahyrfW/PI1l61Z
      CGiV5aQDoedKBVExpgrRterrbx8opaTfWS3I3IpOdYx+CAFdIkcPZIqSYY6qp7l9gIhopHLf
      8q2QN878XS4PSESMMToSrhsEtJIm4147Powp4NacewecygNrPo3eZN0qD6jQew927nx6++7v
      v/j4898EhWKUsdqO7h3IieqHzzwZosktGd3U/GN8+jPxE8r28RWO1yMRaTSjKtGbfcQdLJE6
      c73BHzaIpg9kyoOEakwFEZP53Ou2buyBwAt+Zip4QUDgBQGBFwQEXhAQeEFA4AUBgRcEBF7K
      A5KREFH3h65q6e8DTJUFVOhOZ5eIwjrbgRPBHAPmKguownEci8hupxs2DIYYsABmYeAFm2jw
      goDACwICLwgIvCAg8IKAwAsCAi8ICLyUB9R90iWinQfbboRhGCxSHlCWK6lUrwW2bzELgwXK
      A9rciEWJaBx/EGOIAQtgFgZesIkGLwgIvCAg8IKAwAsCAi8ICLwgIPCCgMBLSUA6TO7+8Z4U
      dPcPX1rMwmChkg83U1WuUSbCHIgToTN/oDVcHeWjDOecMUZzNfiUVliofG1pNBpExG/0417g
      SsEmGrwgIPCCgMALAgIvCAi8ICDwgoDAS3lAbuiIyDl3vi8GVk9JQHLQ3evuOZFvvv7GOlF8
      TiLMVxIQGxbRsWrUDAnxwEJ4rAe8YBMNXhAQeEFA4AUBgRcEBF4QEHhBQOAFAYGX8oBs3xIR
      hhjwWiUBuYNu0kuc0vYfv3I5SY6PuIO5SgIyxshIKReq8FgVz2bAApiFgRdsosELAgIvCAi8
      ICDwgoDACwICL/8PnG5iJYkEydYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Page CTR' width='192'>
      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
      S57gyGcp1jMW4rgg/Rzqny4iZRddzzkt23o4F6K0BbVFsAQ9X+znxPEc+Wdt9GdHOEKKeNYm
      /Tmkv6iTWjb+811t+3gk/ZyF+VmE08WRzz8n9w8d5HNddMmcafcZC9u2SD+3qH9aRzwr8fKt
      +7imXaA/GABdp56a2enEL3fhP9+F/kxzhCON/qZ4zzscIYfdwRc/+5OQI6nF0t8swjGHni/6
      OMcdbPsoqT7CEcsyK83PNM4XujhyzOpo5kv/PiGp1pG/LKn//HOcEw49z/dw9MhRYyseE5yw
      jnLkeI4T/8BC5B2sdivALyzEP7QZPOlT/ThG2DaQ4n2xH8c+asaAZSHEUdJP68xGD3nh1/ux
      j7efg6fvT3P0HwiWFhfhRBc9PT6OfQL7eA6dpuSaY+u/1nn4XyK6enycZ9vch2cs6n+bPCEb
      oNX/284o696zCq2NV+qR+2btUh83a391O+ywv5v1Zad21ur7sN57t5N2V7exup2d3N/N+rrT
      dnlcqRDWuk60+v9221jFjgaTter3Tvu4Wfvr3rtj+69VXxqPhfdDovnEuKVXD7yGxyqaj1BV
      ReWjCklVQarNPu+mZ8UClZgDT5rv2fEeb4vdvb/Wut+tPutR2t3+yzP2E1orVF0jdERYKYOQ
      eF0Ofp9PPBcS1ZagqgnOBIAgmpmi/LCxl9sCbUlGzw5RnizheB5LnyzhOA5xHBOcKeJ3YP88
      7TQF4L+F98PP97QnGY/E0ic1lnI5E6xMNXEcr+RrWTm8fg+tG4+fyDEVligOjyBSDQKihRin
      y6O2WDMrVdoQjmpMWI339uKeAP8/1weCmz4XskgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CPC' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gross Media Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gross Media Revenue %' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Available eCPM' width='192'>
      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
      Vxe77P8fP97g6uTZaLUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hotels per Auction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Publisher Metrics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Key Performance Metrics' width='192'>
      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
      65MO5AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Key Performance Metrics by Market' width='192'>
      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
      /w/FM610DSl14wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Key Performance Metrics for GDS' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Key Performance Metrics by GDS Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance by Region &amp; Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance by Region and Country' width='192'>
      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
      GcFm2/n/NDbh+sU447wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Week Data 2' width='192'>
      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
      AyY17YnuNmXcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='28Days Data' width='192'>
      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
      i+R5W022rv8FkVK1phWx32kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='28Days Data 2' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='QTD Data' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='QTD Data 2' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='YTD Data' width='192'>
      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
      XrlSfFMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Publisher Funnel by Page' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
