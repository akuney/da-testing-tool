<?xml version='1.0' encoding='utf-8' ?>

<workbook locale='en_US' version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/workbooks/AfTPlacementReport?rev=2.7' id='ExternalSCAPlacementReport' path='/t/UnderlyingData/workbooks' revision='1.2' site='UnderlyingData' />
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Max Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2022-06-05#'>
        <calculation class='tableau' formula='#2022-06-05#' />
      </column>
      <column datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2012-03-23#'>
        <calculation class='tableau' formula='#2012-03-23#' />
      </column>
      <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
        <calculation class='tableau' formula='&quot;Yesterday&quot;' />
        <members>
          <member value='&quot;Yesterday&quot;' />
          <member value='&quot;Reference Day&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='external_sca_placement_report' inline='true' name='aft_placement_report (copy)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>/* FLIGHTS by Placement */&#13;&#10;select&#13;&#10;&#9;&apos;Flights&apos; as &apos;Product Category Type&apos;,&#13;&#10;&#9;i.date_in_et as Date,&#13;&#10;&#9;(case&#13;&#10;&#9;&#9;when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Kayak Software Corporation&apos; then &apos;Kayak&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Travelocity on Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;else e.name&#13;&#10;&#9;end) as &quot;Publisher&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;(case au.name&#13;&#10;&#9;&#9;when &apos;Orbitz Exit Unit - Firefox&apos; then &apos;Orbitz Exit Unit&apos;&#13;&#10;&#9;&#9;when &apos;CheapTickets Exit Unit - Firefox&apos; then &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;else au.name&#13;&#10;&#9;end) as &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;p.&quot;Placement&quot;,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Revenue Proportion&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then i.net_revenue_sum * (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      aggregation_level_date_in_et as date_in_et,&#13;&#10;      ad_unit_id,&#13;&#10;      sum(ad_call_count) as ad_call_count,&#13;&#10;      sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;      sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;      sum(ad_unit_served_count) as ad_unit_served_count,&#13;&#10;      sum(impression_count) as impression_count,&#13;&#10;      sum(interaction_count) as interaction_count,&#13;&#10;      sum(click_count) as click_count,&#13;&#10;      sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;      sum(available_impression_count) as available_impression_count,&#13;&#10;      sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;      sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;      sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;      sum(suppressed_by_route) as suppressed_by_route,&#13;&#10;      0 as suppressed_by_unknown_hotel_city,&#13;&#10;      sum(suppressed_by_c13n_segment) as suppressed_by_c13n_segment,&#13;&#10;      sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;      sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;      sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;      sum(suppressed_by_c13n_above_threshold) as suppressed_by_c13n_above_threshold,&#13;&#10;      sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;    from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;    left join intent_media_production.ad_units au on au.id = acmpa.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      aggregation_level_date_in_et,&#13;&#10;      ad_unit_id&#13;&#10;&#9;) i&#13;&#10;left join&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      acptpa.date_in_et,&#13;&#10;      acptpa.ad_unit_id,&#13;&#10;      (case&#13;&#10;        when au.name like &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos;&#13;&#10;        when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;        when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;        else&#13;&#10;          (case acptpa.placement_type&#13;&#10;            when &apos;DIALOG&apos; then &apos;Dialog&apos;&#13;&#10;            when &apos;EXIT_OVERLAY&apos; then &apos;Exit Overlay&apos;&#13;&#10;            when &apos;EXIT_UNIT&apos; then &apos;Exit Unit&apos;&#13;&#10;            when &apos;FOOTER&apos; then &apos;Footer&apos;&#13;&#10;            when &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;            when &apos;INTER_CARD&apos; then &apos;Inter Card&apos;&#13;&#10;            when &apos;MINI_CARD&apos; then &apos;Mini Card&apos;&#13;&#10;            when &apos;RIGHT_RAIL&apos; then &apos;Rail&apos;&#13;&#10;            when &apos;SEARCH_FORM&apos; then &apos;Search Form&apos;&#13;&#10;            when &apos;TOASTER&apos; then &apos;Toaster&apos;&#13;&#10;            when &apos;TOP_CARD&apos; then &apos;Top Card&apos;&#13;&#10;            else acptpa.placement_type&#13;&#10;          end)&#13;&#10;      end) as &quot;Placement&quot;,&#13;&#10;      sum(acptpa.click_count) as click_count,&#13;&#10;      sum(acptpa.click_conversion_count) as click_conversion_count,&#13;&#10;      sum(acptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;      sum(acptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;      sum(acptpa.interaction_count) as interaction_count&#13;&#10;    from intent_media_production.air_ct_placement_type_performance_aggregations acptpa&#13;&#10;    left join intent_media_production.ad_units au on au.id = acptpa.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      acptpa.date_in_et,&#13;&#10;      acptpa.ad_unit_id,&#13;&#10;      (case&#13;&#10;        when au.name like &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos;&#13;&#10;        when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;        when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;        else&#13;&#10;          (case acptpa.placement_type&#13;&#10;            when &apos;DIALOG&apos; then &apos;Dialog&apos;&#13;&#10;            when &apos;EXIT_OVERLAY&apos; then &apos;Exit Overlay&apos;&#13;&#10;            when &apos;EXIT_UNIT&apos; then &apos;Exit Unit&apos;&#13;&#10;            when &apos;FOOTER&apos; then &apos;Footer&apos;&#13;&#10;            when &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;            when &apos;INTER_CARD&apos; then &apos;Inter Card&apos;&#13;&#10;            when &apos;MINI_CARD&apos; then &apos;Mini Card&apos;&#13;&#10;            when &apos;RIGHT_RAIL&apos; then &apos;Rail&apos;&#13;&#10;            when &apos;SEARCH_FORM&apos; then &apos;Search Form&apos;&#13;&#10;            when &apos;TOASTER&apos; then &apos;Toaster&apos;&#13;&#10;            when &apos;TOP_CARD&apos; then &apos;Top Card&apos;&#13;&#10;            else acptpa.placement_type&#13;&#10;          end)&#13;&#10;      end)&#13;&#10;  ) p&#13;&#10;on i.date_in_et = p.date_in_et and i.ad_unit_id = p.ad_unit_id&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;/* FLIGHTS by Total */&#13;&#10;select&#13;&#10;&#9;&apos;Flights&apos; as &apos;Product Category Type&apos;,&#13;&#10;&#9;i.date_in_et as Date,&#13;&#10;&#9;(case&#13;&#10;&#9;&#9;when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Kayak Software Corporation&apos; then &apos;Kayak&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Travelocity on Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;else e.name&#13;&#10;&#9;end) as &quot;Publisher&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;(case au.name&#13;&#10;&#9;&#9;when &apos;Orbitz Exit Unit - Firefox&apos; then &apos;Orbitz Exit Unit&apos;&#13;&#10;&#9;&#9;when &apos;CheapTickets Exit Unit - Firefox&apos; then &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;else au.name&#13;&#10;&#9;end) as &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;&apos;Total List Page&apos; as Placement,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Revenue Proportion&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then i.net_revenue_sum * (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from&#13;&#10;  (&#13;&#10;    select&#13;&#10;      aggregation_level_date_in_et as date_in_et,&#13;&#10;      ad_unit_id,&#13;&#10;      sum(ad_call_count) as ad_call_count,&#13;&#10;      sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;      sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;      sum(ad_unit_served_count) as ad_unit_served_count,&#13;&#10;      sum(impression_count) as impression_count,&#13;&#10;      sum(interaction_count) as interaction_count,&#13;&#10;      sum(click_count) as click_count,&#13;&#10;      sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;      sum(available_impression_count) as available_impression_count,&#13;&#10;      sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;      sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;      sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;      sum(suppressed_by_route) as suppressed_by_route,&#13;&#10;      0 as suppressed_by_unknown_hotel_city,&#13;&#10;      sum(suppressed_by_c13n_segment) as suppressed_by_c13n_segment,&#13;&#10;      sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;      sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;      sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;      sum(suppressed_by_c13n_above_threshold) as suppressed_by_c13n_above_threshold,&#13;&#10;      sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;    from intent_media_production.air_ct_media_performance_aggregations acmpa&#13;&#10;    left join intent_media_production.ad_units au on acmpa.ad_unit_id = au.id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      aggregation_level_date_in_et,&#13;&#10;      ad_unit_id&#13;&#10;  ) i&#13;&#10;left join&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      acptpa.date_in_et,&#13;&#10;      acptpa.ad_unit_id,&#13;&#10;      sum(acptpa.click_count) as click_count,&#13;&#10;      sum(acptpa.click_conversion_count) as click_conversion_count,&#13;&#10;      sum(acptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;      sum(acptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;      sum(acptpa.interaction_count) as interaction_count&#13;&#10;    from intent_media_production.air_ct_placement_type_performance_aggregations acptpa&#13;&#10;    left join intent_media_production.ad_units au on au.id = acptpa.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;      and (not (au.name like &apos;%Firefox%&apos; or au.name = &apos;Hotwire Media Fill In&apos; or au.name like &apos;%Trip.com%&apos; or acptpa.placement_type = &apos;EXIT_UNIT&apos;))&#13;&#10;    group by&#13;&#10;      acptpa.date_in_et,&#13;&#10;      acptpa.ad_unit_id&#13;&#10;  ) p&#13;&#10;on i.date_in_et = p.date_in_et and i.ad_unit_id = p.ad_unit_id&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;/* HOTELS by Placement */&#13;&#10;select&#13;&#10;&#9;&apos;Hotels&apos; as &apos;Product Category Type&apos;,&#13;&#10;&#9;i.date_in_et as Date,&#13;&#10;&#9;(case&#13;&#10;&#9;&#9;when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Kayak Software Corporation&apos; then &apos;Kayak&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Travelocity on Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;else e.name&#13;&#10;&#9;end) as &quot;Publisher&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;(case au.name&#13;&#10;&#9;&#9;when &apos;Orbitz Exit Unit - Firefox&apos; then &apos;Orbitz Exit Unit&apos;&#13;&#10;&#9;&#9;when &apos;CheapTickets Exit Unit - Firefox&apos; then &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;else au.name&#13;&#10;&#9;end) as &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;p.&quot;Placement&quot;,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Revenue Proportion&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then i.net_revenue_sum * (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      aggregation_level_date_in_et as date_in_et,&#13;&#10;      ad_unit_id,&#13;&#10;      sum(ad_call_count) as ad_call_count,&#13;&#10;      sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;      sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;      sum(served_ad_count) as ad_unit_served_count,&#13;&#10;      sum(impression_count) as impression_count,&#13;&#10;      sum(interaction_count) as interaction_count,&#13;&#10;      sum(click_count) as click_count,&#13;&#10;      sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;      sum(available_impression_count) as available_impression_count,&#13;&#10;      sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;      sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;      sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;      0 as suppressed_by_route,&#13;&#10;      sum(suppressed_by_unknown_hotel_destination) as suppressed_by_unknown_hotel_city,&#13;&#10;      0 as suppressed_by_c13n_segment,&#13;&#10;      sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;      sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;      sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;      0 as suppressed_by_c13n_above_threshold,&#13;&#10;      sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;    from intent_media_production.hotel_ct_media_performance_aggregations hcmpa&#13;&#10;    left join intent_media_production.ad_units au on au.id = hcmpa.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      aggregation_level_date_in_et,&#13;&#10;      ad_unit_id&#13;&#10;&#9;) i&#13;&#10;left join&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      hcptpa.date_in_et,&#13;&#10;      hcptpa.ad_unit_id,&#13;&#10;      (case&#13;&#10;        when au.name like &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos;&#13;&#10;        when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;        when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;        else&#13;&#10;          (case hcptpa.placement_type&#13;&#10;            when &apos;DIALOG&apos; then &apos;Dialog&apos;&#13;&#10;            when &apos;EXIT_OVERLAY&apos; then &apos;Exit Overlay&apos;&#13;&#10;            when &apos;EXIT_UNIT&apos; then &apos;Exit Unit&apos;&#13;&#10;            when &apos;FOOTER&apos; then &apos;Footer&apos;&#13;&#10;            when &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;            when &apos;INTER_CARD&apos; then &apos;Inter Card&apos;&#13;&#10;            when &apos;MINI_CARD&apos; then &apos;Mini Card&apos;&#13;&#10;            when &apos;RIGHT_RAIL&apos; then &apos;Rail&apos;&#13;&#10;            when &apos;SEARCH_FORM&apos; then &apos;Search Form&apos;&#13;&#10;            when &apos;TOASTER&apos; then &apos;Toaster&apos;&#13;&#10;            when &apos;TOP_CARD&apos; then &apos;Top Card&apos;&#13;&#10;            else hcptpa.placement_type&#13;&#10;          end)&#13;&#10;      end) as &quot;Placement&quot;,&#13;&#10;      sum(hcptpa.click_count) as click_count,&#13;&#10;      sum(hcptpa.click_conversion_count) as click_conversion_count,&#13;&#10;      sum(hcptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;      sum(hcptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;      sum(hcptpa.interaction_count) as interaction_count&#13;&#10;    from intent_media_production.hotel_ct_placement_type_performance_aggregations hcptpa&#13;&#10;    left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      hcptpa.date_in_et,&#13;&#10;      hcptpa.ad_unit_id,&#13;&#10;      (case&#13;&#10;        when au.name like &apos;%Firefox%&apos; then &apos;Exit Unit FF&apos;&#13;&#10;        when au.name = &apos;Hotwire Media Fill In&apos; then &apos;MFI&apos;&#13;&#10;        when au.name like &apos;%Trip.com%&apos; then &apos;Search Form&apos;&#13;&#10;        else&#13;&#10;          (case hcptpa.placement_type&#13;&#10;            when &apos;DIALOG&apos; then &apos;Dialog&apos;&#13;&#10;            when &apos;EXIT_OVERLAY&apos; then &apos;Exit Overlay&apos;&#13;&#10;            when &apos;EXIT_UNIT&apos; then &apos;Exit Unit&apos;&#13;&#10;            when &apos;FOOTER&apos; then &apos;Footer&apos;&#13;&#10;            when &apos;FORM_COMPARE&apos; then &apos;Integrated Form Compare&apos;&#13;&#10;            when &apos;INTER_CARD&apos; then &apos;Inter Card&apos;&#13;&#10;            when &apos;MINI_CARD&apos; then &apos;Mini Card&apos;&#13;&#10;            when &apos;RIGHT_RAIL&apos; then &apos;Rail&apos;&#13;&#10;            when &apos;SEARCH_FORM&apos; then &apos;Search Form&apos;&#13;&#10;            when &apos;TOASTER&apos; then &apos;Toaster&apos;&#13;&#10;            when &apos;TOP_CARD&apos; then &apos;Top Card&apos;&#13;&#10;            else hcptpa.placement_type&#13;&#10;          end)&#13;&#10;      end)&#13;&#10;  ) p&#13;&#10;on i.date_in_et = p.date_in_et and i.ad_unit_id = p.ad_unit_id&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;/* HOTELS by Total */&#13;&#10;select&#13;&#10;&#9;&apos;Hotels&apos; as &apos;Product Category Type&apos;,&#13;&#10;&#9;i.date_in_et as Date,&#13;&#10;&#9;(case&#13;&#10;&#9;&#9;when e.name = &apos;Orbitz&apos; then &apos;OWW&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Kayak Software Corporation&apos; then &apos;Kayak&apos;&#13;&#10;&#9;&#9;when e.name = &apos;Travelocity on Expedia&apos; then &apos;Expedia Inc.&apos;&#13;&#10;&#9;&#9;else e.name&#13;&#10;&#9;end) as &quot;Publisher&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;(case au.name&#13;&#10;&#9;&#9;when &apos;Orbitz Exit Unit - Firefox&apos; then &apos;Orbitz Exit Unit&apos;&#13;&#10;&#9;&#9;when &apos;CheapTickets Exit Unit - Firefox&apos; then &apos;CheapTickets Exit Unit&apos;&#13;&#10;&#9;&#9;else au.name&#13;&#10;&#9;end) as &quot;Ad Unit&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;&apos;Total List Page&apos; as Placement,&#13;&#10;&#9;p.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;p.click_conversion_count as &quot;Conversions&quot;,&#13;&#10;&#9;p.actual_cpc_sum as &quot;Gross Media Revenue&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Revenue Proportion&quot;,&#13;&#10;&#9;p.click_conversion_value_sum as &quot;Conversion Value Sum&quot;,&#13;&#10;&#9;p.interaction_count as &quot;Interactions&quot;,&#13;&#10;&#9;i.ad_call_count as &quot;Page Views&quot;,&#13;&#10;&#9;i.not_pure_ad_call_count as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_count as &quot;Not Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_addressable_ad_call_count as &quot;Addressable Page Views&quot;,&#13;&#10;&#9;i.pure_ad_call_count as &quot;Pure Page Views&quot;,&#13;&#10;&#9;i.pure_low_converting_ad_call_count as &quot;Pure Low Value Page Views&quot;,&#13;&#10;&#9;i.low_converting_ad_call_count as &quot;Low Value Page Views&quot;,&#13;&#10;&#9;i.not_pure_low_converting_ad_call_with_ads_count as &quot;Fillable Pages&quot;,&#13;&#10;&#9;i.ad_unit_served_count as &quot;Pages Served&quot;,&#13;&#10;&#9;i.impression_count as &quot;Impressions&quot;,&#13;&#10;&#9;i.available_impression_count as &quot;Available Impressions&quot;,&#13;&#10;&#9;(case when i.gross_revenue_sum &gt;&gt; 0 then i.net_revenue_sum * (p.actual_cpc_sum / i.gross_revenue_sum) else cast(null as float) end) as &quot;Net Media Revenue&quot;,&#13;&#10;&#9;i.suppressed_by_route as &quot;Suppressed by Route&quot;,&#13;&#10;&#9;i.suppressed_by_unknown_hotel_city as &quot;Suppressed by Unknown Hotel City&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_segment as &quot;Suppressed by Cannibalization Segment&quot;,&#13;&#10;&#9;i.suppressed_by_click_blackout as &quot;Suppressed by Click Blackout&quot;,&#13;&#10;&#9;i.suppressed_by_no_valid_layout as &quot;Suppressed by No Valid Layout&quot;,&#13;&#10;&#9;i.suppressed_by_publisher_traffic_share as &quot;Suppressed by Publisher Traffic Share&quot;,&#13;&#10;&#9;i.suppressed_by_c13n_above_threshold as &quot;Suppressed by Cannibalization Threshold&quot;,&#13;&#10;&#9;i.not_pure_low_converting_intentmedia_traffic_share_ad_call_count as &quot;Not Pure Low Value Intent Media Traffic Page Views&quot;&#13;&#10;from&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      hcmpa.aggregation_level_date_in_et as date_in_et,&#13;&#10;      hcmpa.ad_unit_id,&#13;&#10;      sum(ad_call_count) as ad_call_count,&#13;&#10;      sum(not_pure_ad_call_count) as not_pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_count) as not_pure_low_converting_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_addressable_ad_call_count) as not_pure_low_converting_addressable_ad_call_count,&#13;&#10;      sum(pure_ad_call_count) as pure_ad_call_count,&#13;&#10;      sum(not_pure_low_converting_ad_call_with_ads_count) as not_pure_low_converting_ad_call_with_ads_count,&#13;&#10;      sum(served_ad_count) as ad_unit_served_count,&#13;&#10;      sum(impression_count) as impression_count,&#13;&#10;      sum(interaction_count) as interaction_count,&#13;&#10;      sum(click_count) as click_count,&#13;&#10;      sum(gross_revenue_sum) as gross_revenue_sum,&#13;&#10;      sum(available_impression_count) as available_impression_count,&#13;&#10;      sum(net_revenue_sum) as net_revenue_sum,&#13;&#10;      sum(pure_low_converting_ad_call_count) as pure_low_converting_ad_call_count,&#13;&#10;      sum(low_converting_ad_call_count) as low_converting_ad_call_count,&#13;&#10;      0 as suppressed_by_route,&#13;&#10;      sum(suppressed_by_unknown_hotel_destination) as suppressed_by_unknown_hotel_city,&#13;&#10;      0 as suppressed_by_c13n_segment,&#13;&#10;      sum(suppressed_by_click_blackout) as suppressed_by_click_blackout,&#13;&#10;      sum(suppressed_by_no_valid_layout) as suppressed_by_no_valid_layout,&#13;&#10;      sum(suppressed_by_publisher_traffic_share) as suppressed_by_publisher_traffic_share,&#13;&#10;      0 as suppressed_by_c13n_above_threshold,&#13;&#10;      sum(not_pure_low_converting_intentmedia_traffic_share_ad_call_count) as not_pure_low_converting_intentmedia_traffic_share_ad_call_count&#13;&#10;    from intent_media_production.hotel_ct_media_performance_aggregations hcmpa&#13;&#10;    left join intent_media_production.ad_units au on hcmpa.ad_unit_id = au.id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where aggregation_level_date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      hcmpa.aggregation_level_date_in_et,&#13;&#10;      hcmpa.ad_unit_id&#13;&#10;  ) i&#13;&#10;left join&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      hcptpa.date_in_et,&#13;&#10;      hcptpa.ad_unit_id,&#13;&#10;      sum(hcptpa.click_count) as click_count,&#13;&#10;      sum(hcptpa.click_conversion_count) as click_conversion_count,&#13;&#10;      sum(hcptpa.actual_cpc_sum) as actual_cpc_sum,&#13;&#10;      sum(hcptpa.click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;      sum(hcptpa.interaction_count) as interaction_count&#13;&#10;    from intent_media_production.hotel_ct_placement_type_performance_aggregations hcptpa&#13;&#10;    left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;    where date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;      and date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;      and (not (au.name like &apos;%Firefox%&apos; or au.name = &apos;Hotwire Media Fill In&apos; or au.name like &apos;%Trip.com%&apos; or hcptpa.placement_type = &apos;EXIT_UNIT&apos;))&#13;&#10;    group by&#13;&#10;      hcptpa.date_in_et,&#13;&#10;      hcptpa.ad_unit_id&#13;&#10;  ) p&#13;&#10;on i.date_in_et = p.date_in_et and i.ad_unit_id = p.ad_unit_id&#13;&#10;left join intent_media_production.ad_units au on p.ad_unit_id = au.id&#13;&#10;left join intent_media_production.sites s on au.site_id = s.id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[aft_placement_report (copy)].[usr:Addressable:qk]&quot;' value='% Addressable' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Calculation_3430322153857371:qk]&quot;' value='Qualified after Unknown Hotel City %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Not Pure Low Converting:qk]&quot;' value='% Not Pure Low Value' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules \%:qk]&quot;' value='Qualified after Business Rules %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Business Rules Other \%:qk]&quot;' value='Qualified after Business Rules Other %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Cannibalization Threshold \%:qk]&quot;' value='Qualified after Cannibalization Threshold %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by Click Blackout \%:qk]&quot;' value='Qualified after Click Blackout %' />
          <alias key='&quot;[aft_placement_report (copy)].[usr:Suppressed by No Valid Layout \%:qk]&quot;' value='Qualified after No Valid Layout %' />
        </aliases>
      </column>
      <column datatype='string' name='[Ad Unit + Placement]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Ad Unit] + &quot; &quot; + [Placement]' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Addressable]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Addressable Page Views])/sum([Page Views])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Page Views])*1000' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Clicks])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
      </column>
      <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_1050204152536579]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MONTH([Date])' scope-isolation='false' />
      </column>
      <column caption='% Intent Media Traffic Share' datatype='real' default-format='p0.0%' name='[Calculation_2491231162412519]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8460102172528083])/SUM([Not Pure Low Value Page Views])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Unknown Hotel City %' datatype='real' name='[Calculation_3430322153857371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by Unknown Hotel City])/Sum([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_3610204152601610]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4460204152633641]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([Date])' scope-isolation='false' />
      </column>
      <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Clicks per Interaction]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Interactions])' />
      </column>
      <column datatype='string' name='[Color]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Placement] = &quot;Total&quot; THEN &quot;Total&quot; END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Interactions])/sum([Pages Served])' />
      </column>
      <column caption='% Low Value' datatype='real' name='[Low Converting]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Not Pure Low Value Page Views])/Sum([Not Pure Page Views])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Max Date Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Parameters].[Parameter 3] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Net Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column caption='% Not Pure Low Value' datatype='real' name='[Not Pure Low Converting]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Not Pure Low Value Page Views])/Sum([Page Views])' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Not Pure]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Not Pure Page Views])/Sum([Page Views])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Page]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Ad Unit], &quot;Exit Unit&quot;) THEN &quot;Exit Unit&quot;&#13;&#10;ELSEIF CONTAINS([Ad Unit],&quot;Flight List Page&quot;) THEN &quot;List Page&quot;&#13;&#10;ELSE [Ad Unit]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Pages Served])*1000' />
      </column>
      <column caption='Qualified after All Business Rules %' datatype='real' name='[Suppressed by Business Rules %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Addressable Page Views])/SUM([Calculation_8460102172528083])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Other Business Rules %' datatype='real' name='[Suppressed by Business Rules Other %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Addressable Page Views]) + SUM([Suppressed by Click Blackout]))/SUM([Calculation_8460102172528083])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Suppressed by Business Rules Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8460102172528083]) - SUM([Addressable Page Views]) - SUM([Suppressed by Click Blackout])' scope-isolation='false' />
      </column>
      <column caption='Qualified after All Business Rules' datatype='integer' name='[Suppressed by Business Rules]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8460102172528083]) - SUM([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Cannibalization Threshold %' datatype='real' name='[Suppressed by Cannibalization Threshold %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by Cannibalization Threshold])/Sum([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column caption='Qualified after Click Blackout %' datatype='real' name='[Suppressed by Click Blackout %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by Click Blackout])/Sum([Calculation_8460102172528083])' scope-isolation='false' />
      </column>
      <column caption='Qualified after No Valid Layout %' datatype='real' name='[Suppressed by No Valid Layout %]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-Sum([Suppressed by No Valid Layout])/Sum([Addressable Page Views])' scope-isolation='false' />
      </column>
      <column-instance column='[Addressable]' derivation='User' name='[usr:Addressable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3430322153857371]' derivation='User' name='[usr:Calculation_3430322153857371:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Not Pure Low Converting]' derivation='User' name='[usr:Not Pure Low Converting:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Business Rules %]' derivation='User' name='[usr:Suppressed by Business Rules %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Business Rules Other %]' derivation='User' name='[usr:Suppressed by Business Rules Other %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Cannibalization Threshold %]' derivation='User' name='[usr:Suppressed by Cannibalization Threshold %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Click Blackout %]' derivation='User' name='[usr:Suppressed by Click Blackout %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by No Valid Layout %]' derivation='User' name='[usr:Suppressed by No Valid Layout %:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\external_aft_placement_report.tde' schema='Extract' tablename='Extract' update-time='11/24/2014 5:50:32 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_8460102172528083]' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='83906' timestamp-start='2014-11-24 05:50:32.403000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.308751' measure-ordering='alphabetic' measure-percentage='0.552606' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Max Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2022-06-05#'>
          <calculation class='tableau' formula='#2022-06-05#' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='aft_placement_report (copy)'>
      <datasources>
        <datasource caption='external_sca_placement_report' name='aft_placement_report (copy)' />
      </datasources>
      <datasource-dependencies datasource='aft_placement_report (copy)'>
        <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Site]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
        <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[aft_placement_report (copy)].[none:Publisher:nk]'>
        <groupfilter function='level-members' level='[none:Publisher:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[aft_placement_report (copy)].[none:Site:nk]'>
        <groupfilter function='level-members' level='[none:Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='CSV Download'>
      <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/workbooks/AfTPlacementReport/CSVDownload?rev=' id='CSVDownload' path='/workbooks/AfTPlacementReport' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='external_sca_placement_report' name='aft_placement_report (copy)' />
          </datasources>
          <datasource-dependencies datasource='aft_placement_report (copy)'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Addressable Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Available Impressions]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_1050204152536579]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MONTH([Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_3610204152601610]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4460204152633641]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Date])' scope-isolation='false' />
            </column>
            <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Fillable Pages]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Net Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Not Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Placement]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Suppressed by Business Rules Other]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_8460102172528083]) - SUM([Addressable Page Views]) - SUM([Suppressed by Click Blackout])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Suppressed by Cannibalization Threshold]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by Click Blackout]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by No Valid Layout]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by Route]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Suppressed by Unknown Hotel City]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1050204152536579]' derivation='None' name='[none:Calculation_1050204152536579:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3610204152601610]' derivation='None' name='[none:Calculation_3610204152601610:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4460204152633641]' derivation='None' name='[none:Calculation_4460204152633641:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Placement]' derivation='None' name='[none:Placement:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Addressable Page Views]' derivation='Sum' name='[sum:Addressable Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Available Impressions]' derivation='Sum' name='[sum:Available Impressions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8460102172528083]' derivation='Sum' name='[sum:Calculation_8460102172528083:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Conversion Value Sum]' derivation='Sum' name='[sum:Conversion Value Sum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Conversions]' derivation='Sum' name='[sum:Conversions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Fillable Pages]' derivation='Sum' name='[sum:Fillable Pages:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Low Value Page Views]' derivation='Sum' name='[sum:Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Net Media Revenue]' derivation='Sum' name='[sum:Net Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Low Value Page Views]' derivation='Sum' name='[sum:Not Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Page Views]' derivation='Sum' name='[sum:Not Pure Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pure Low Value Page Views]' derivation='Sum' name='[sum:Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pure Page Views]' derivation='Sum' name='[sum:Pure Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Cannibalization Threshold]' derivation='Sum' name='[sum:Suppressed by Cannibalization Threshold:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Click Blackout]' derivation='Sum' name='[sum:Suppressed by Click Blackout:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by No Valid Layout]' derivation='Sum' name='[sum:Suppressed by No Valid Layout:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Route]' derivation='Sum' name='[sum:Suppressed by Route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Unknown Hotel City]' derivation='Sum' name='[sum:Suppressed by Unknown Hotel City:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suppressed by Business Rules Other]' derivation='User' name='[usr:Suppressed by Business Rules Other:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='natural' column='[aft_placement_report (copy)].[none:Date:ok]' direction='DESC' />
          <slices>
            <column>[aft_placement_report (copy)].[none:Site:nk]</column>
            <column>[aft_placement_report (copy)].[none:Publisher:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='row-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_placement_report (copy)].[none:Date:ok] / ([aft_placement_report (copy)].[none:Calculation_1050204152536579:ok] / ([aft_placement_report (copy)].[none:Calculation_3610204152601610:ok] / ([aft_placement_report (copy)].[none:Calculation_4460204152633641:ok] / ([aft_placement_report (copy)].[none:Product Category Type:nk] / ([aft_placement_report (copy)].[none:Site:nk] / ([aft_placement_report (copy)].[none:Ad Unit:nk] / ([aft_placement_report (copy)].[none:Placement:nk] / ([aft_placement_report (copy)].[sum:Page Views:ok] / ([aft_placement_report (copy)].[sum:Available Impressions:ok] / ([aft_placement_report (copy)].[sum:Clicks:ok] / ([aft_placement_report (copy)].[sum:Conversions:ok] / ([aft_placement_report (copy)].[sum:Conversion Value Sum:ok] / ([aft_placement_report (copy)].[sum:Gross Media Revenue:ok] / ([aft_placement_report (copy)].[sum:Impressions:ok] / ([aft_placement_report (copy)].[sum:Interactions:ok] / ([aft_placement_report (copy)].[sum:Net Media Revenue:ok] / ([aft_placement_report (copy)].[sum:Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Calculation_8460102172528083:ok] / ([aft_placement_report (copy)].[sum:Addressable Page Views:ok] / ([aft_placement_report (copy)].[sum:Fillable Pages:ok] / ([aft_placement_report (copy)].[sum:Pages Served:ok] / ([aft_placement_report (copy)].[sum:Pure Page Views:ok] / ([aft_placement_report (copy)].[sum:Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Suppressed by Click Blackout:ok] / ([aft_placement_report (copy)].[sum:Suppressed by Route:ok] / ([aft_placement_report (copy)].[usr:Suppressed by Business Rules Other:ok] / ([aft_placement_report (copy)].[sum:Suppressed by Unknown Hotel City:ok] / ([aft_placement_report (copy)].[sum:Suppressed by No Valid Layout:ok] / [aft_placement_report (copy)].[sum:Suppressed by Cannibalization Threshold:ok])))))))))))))))))))))))))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='DataWithoutSuppressionReasons'>
      <table>
        <view>
          <datasources>
            <datasource caption='external_sca_placement_report' name='aft_placement_report (copy)' />
          </datasources>
          <datasource-dependencies datasource='aft_placement_report (copy)'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Addressable Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Page Views])*1000' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
            </column>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_1050204152536579]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MONTH([Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_3610204152601610]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4460204152633641]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Date])' scope-isolation='false' />
            </column>
            <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Clicks per Interaction]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Interactions])' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Interactions])/sum([Pages Served])' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Not Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Placement]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Pages Served])*1000' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1050204152536579]' derivation='None' name='[none:Calculation_1050204152536579:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3610204152601610]' derivation='None' name='[none:Calculation_3610204152601610:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4460204152633641]' derivation='None' name='[none:Calculation_4460204152633641:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Placement]' derivation='None' name='[none:Placement:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Addressable Page Views]' derivation='Sum' name='[sum:Addressable Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8460102172528083]' derivation='Sum' name='[sum:Calculation_8460102172528083:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Low Value Page Views]' derivation='Sum' name='[sum:Not Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Available eCPM]' derivation='User' name='[usr:Available eCPM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks per Interaction]' derivation='User' name='[usr:Clicks per Interaction:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served eCPM]' derivation='User' name='[usr:Served eCPM:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[aft_placement_report (copy)].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Placement:nk]'>
            <groupfilter function='level-members' level='[none:Placement:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_placement_report (copy)].[none:Placement:nk]</column>
            <column>[aft_placement_report (copy)].[none:Date:qk]</column>
            <column>[aft_placement_report (copy)].[none:Publisher:nk]</column>
            <column>[aft_placement_report (copy)].[none:Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[aft_placement_report (copy)].[none:Placement:nk]' value='72' />
            <format attr='width' field='[aft_placement_report (copy)].[none:Ad Unit:nk]' value='172' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[aft_placement_report (copy)].[none:Placement:nk]' value='normal' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.10667884349823' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_placement_report (copy)].[none:Date:ok] / ([aft_placement_report (copy)].[none:Calculation_1050204152536579:ok] / ([aft_placement_report (copy)].[none:Calculation_3610204152601610:ok] / ([aft_placement_report (copy)].[none:Calculation_4460204152633641:ok] / ([aft_placement_report (copy)].[none:Product Category Type:nk] / ([aft_placement_report (copy)].[none:Site:nk] / ([aft_placement_report (copy)].[none:Ad Unit:nk] / ([aft_placement_report (copy)].[none:Placement:nk] / ([aft_placement_report (copy)].[sum:Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Calculation_8460102172528083:ok] / ([aft_placement_report (copy)].[sum:Addressable Page Views:ok] / ([aft_placement_report (copy)].[sum:Pages Served:ok] / ([aft_placement_report (copy)].[usr:Interaction Rate:ok] / ([aft_placement_report (copy)].[sum:Interactions:ok] / ([aft_placement_report (copy)].[usr:Clicks per Interaction:ok] / ([aft_placement_report (copy)].[usr:CTR:ok] / ([aft_placement_report (copy)].[sum:Clicks:ok] / ([aft_placement_report (copy)].[sum:Gross Media Revenue:ok] / ([aft_placement_report (copy)].[usr:Available eCPM:ok] / [aft_placement_report (copy)].[usr:Served eCPM:ok]))))))))))))))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='DataWithoutSuppressionReasonsNoTotals'>
      <table>
        <view>
          <datasources>
            <datasource caption='external_sca_placement_report' name='aft_placement_report (copy)' />
          </datasources>
          <datasource-dependencies datasource='aft_placement_report (copy)'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Addressable Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Available eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Page Views])*1000' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Pages Served])' />
            </column>
            <column aggregation='Sum' caption='Month' datatype='integer' name='[Calculation_1050204152536579]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MONTH([Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Quarter' datatype='integer' name='[Calculation_3610204152601610]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,[Date])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_4460204152633641]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Date])' scope-isolation='false' />
            </column>
            <column caption='Not Pure, Low Value, Intent Media Traffic Page Views' datatype='integer' name='[Calculation_8460102172528083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt;= #December 3, 2013# THEN [Not Pure Low Value Intent Media Traffic Page Views] ELSE [Not Pure Low Value Page Views] END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Clicks per Interaction]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Interactions])' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Interactions])/sum([Pages Served])' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Net Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Not Pure Low Value Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Placement]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Served eCPM]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Gross Media Revenue])/sum([Pages Served])*1000' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1050204152536579]' derivation='None' name='[none:Calculation_1050204152536579:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3610204152601610]' derivation='None' name='[none:Calculation_3610204152601610:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4460204152633641]' derivation='None' name='[none:Calculation_4460204152633641:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Placement]' derivation='None' name='[none:Placement:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Addressable Page Views]' derivation='Sum' name='[sum:Addressable Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8460102172528083]' derivation='Sum' name='[sum:Calculation_8460102172528083:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Net Media Revenue]' derivation='Sum' name='[sum:Net Media Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Low Value Page Views]' derivation='Sum' name='[sum:Not Pure Low Value Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Available eCPM]' derivation='User' name='[usr:Available eCPM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks per Interaction]' derivation='User' name='[usr:Clicks per Interaction:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served eCPM]' derivation='User' name='[usr:Served eCPM:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[aft_placement_report (copy)].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[aft_placement_report (copy)].[none:Placement:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Placement:nk]' />
              <groupfilter function='member' level='[none:Placement:nk]' member='&quot;Total List Page&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[aft_placement_report (copy)].[none:Placement:nk]</column>
            <column>[aft_placement_report (copy)].[none:Date:qk]</column>
            <column>[aft_placement_report (copy)].[none:Publisher:nk]</column>
            <column>[aft_placement_report (copy)].[none:Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[aft_placement_report (copy)].[none:Placement:nk]' value='72' />
            <format attr='width' field='[aft_placement_report (copy)].[none:Ad Unit:nk]' value='172' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[aft_placement_report (copy)].[none:Placement:nk]' value='normal' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.10667884349823' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_placement_report (copy)].[none:Date:ok] / ([aft_placement_report (copy)].[none:Calculation_1050204152536579:ok] / ([aft_placement_report (copy)].[none:Calculation_3610204152601610:ok] / ([aft_placement_report (copy)].[none:Calculation_4460204152633641:ok] / ([aft_placement_report (copy)].[none:Product Category Type:nk] / ([aft_placement_report (copy)].[none:Site:nk] / ([aft_placement_report (copy)].[none:Ad Unit:nk] / ([aft_placement_report (copy)].[none:Placement:nk] / ([aft_placement_report (copy)].[sum:Page Views:ok] / ([aft_placement_report (copy)].[sum:Not Pure Low Value Page Views:ok] / ([aft_placement_report (copy)].[sum:Calculation_8460102172528083:ok] / ([aft_placement_report (copy)].[sum:Addressable Page Views:ok] / ([aft_placement_report (copy)].[sum:Pages Served:ok] / ([aft_placement_report (copy)].[usr:Interaction Rate:ok] / ([aft_placement_report (copy)].[sum:Interactions:ok] / ([aft_placement_report (copy)].[usr:Clicks per Interaction:ok] / ([aft_placement_report (copy)].[usr:CTR:ok] / ([aft_placement_report (copy)].[sum:Clicks:ok] / ([aft_placement_report (copy)].[sum:Gross Media Revenue:ok] / ([aft_placement_report (copy)].[sum:Net Media Revenue:ok] / ([aft_placement_report (copy)].[usr:Available eCPM:ok] / [aft_placement_report (copy)].[usr:Served eCPM:ok])))))))))))))))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='DataWithoutSuppressionReasons'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='filters' />
            <card type='marks' />
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card param='[aft_placement_report (copy)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[aft_placement_report (copy)].[none:Publisher:nk]' type='filter' />
            <card param='[aft_placement_report (copy)].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Publisher]</field>
          <field>[aft_placement_report (copy)].[none:Calculation_1050204152536579:ok]</field>
          <field>[aft_placement_report (copy)].[none:Calculation_3610204152601610:ok]</field>
          <field>[aft_placement_report (copy)].[none:Calculation_4460204152633641:ok]</field>
          <field>[aft_placement_report (copy)].[none:Date:ok]</field>
          <field>[aft_placement_report (copy)].[yr:Date:ok]</field>
          <field>[mysql.40997.681632395834].[:Measure Names]</field>
          <field>[mysql.40997.681632395834].[none:Ad Unit:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:qk]</field>
          <field>[mysql.40997.681632395834].[none:Placement:nk]</field>
          <field>[mysql.40997.681632395834].[none:Site:nk]</field>
          <field>[placement_data].[none:Calculation_1980322152539214:nk]</field>
          <field>[placement_data].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='DataWithoutSuppressionReasonsNoTotals'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='filters' />
            <card type='marks' />
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='186'>
            <card param='[aft_placement_report (copy)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[aft_placement_report (copy)].[none:Publisher:nk]' type='filter' />
            <card param='[aft_placement_report (copy)].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Publisher]</field>
          <field>[aft_placement_report (copy)].[none:Calculation_1050204152536579:ok]</field>
          <field>[aft_placement_report (copy)].[none:Calculation_3610204152601610:ok]</field>
          <field>[aft_placement_report (copy)].[none:Calculation_4460204152633641:ok]</field>
          <field>[aft_placement_report (copy)].[none:Date:ok]</field>
          <field>[aft_placement_report (copy)].[none:Publisher:nk]</field>
          <field>[aft_placement_report (copy)].[none:Site:nk]</field>
          <field>[aft_placement_report (copy)].[yr:Date:ok]</field>
          <field>[mysql.40997.681632395834].[:Measure Names]</field>
          <field>[mysql.40997.681632395834].[none:Ad Unit:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:nk]</field>
          <field>[mysql.40997.681632395834].[none:Date:qk]</field>
          <field>[mysql.40997.681632395834].[none:Placement:nk]</field>
          <field>[mysql.40997.681632395834].[none:Site:nk]</field>
          <field>[placement_data].[none:Calculation_1980322152539214:nk]</field>
          <field>[placement_data].[none:Product Category Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='CSV Download'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[aft_placement_report (copy)].[none:Publisher:nk]' type='filter' />
            <card param='[aft_placement_report (copy)].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='DataWithoutSuppressionReasons' width='191'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DataWithoutSuppressionReasonsNoTotals' width='191'>
      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
      t7/wPP+hiyLPQxh2b6WBe1vuXsQw7B73SuZ5GVe1I/MLypdm3nPgc302HPhcB3x5+MSyXl44
      9ZovUhro7eCo7Lkzp3eipbHr5xO5yuit6cHjI/M3Li4HM4sTl0QYv3n+rNbdYzNops6+loZ0
      2zMbFo9tY+7GzZXo8ECX1Cj/6jevC0wJ0VgUpvT2yXcxU5vDQp597SVIR06t7jQ5TJPXbm8l
      Yz2dnVRq87ULq3Q6prdZqFzozVPnm7qH9AQ6dea1DKLzT63amhwbC7durkSG+7tU+VzVn/34
      NYKvNnRmVBSuv/erHNrRpqqE7OipV8qEwTuxam2yr87dmliPDvV1qZqKVX724zcwrsIbzLAg
      XHrn76pkd4tVzVrzjZMvNwymtdE1m8e+NHtrZjM21Nv5ice5pHru9TO3S5mYiBGYwpdr/H1m
      GzCMeH1r/+O3fp8wOgd7OgRjLwLxX/2DJy9dGccg+PCxI6+fH201mAPx0mC3I54t9DaZmDqd
      8a3x6xshsf5blQYEupKeXKTnVxKtZiaVLPQzAgCgTou+tZnpiSXA/9HMwp1KAxLH5OPhRh4E
      kzGRyydzjV0HhGnQYe9aeXo8pfD7qzQgStX02FStFtwZJC3lTETuVXmSnGXq6c3l3Nh4UuIT
      vtX9VBrgS8mJ2Rqzs9OjtRSSYW1D5VZ5lmO8a4vx2xNpoREP+T6l6m4bS/M7vvWSQRvOpbIl
      /qtPPH7/6m42dxckiRq5eu7mcnd3O0ES6e2VTBXCtCDi82NGC8ILBIlnMiW3WY+YHaBB9fT3
      0wpGZ5POpmZ3aysGCRaTUSKMWlmwGzQcpHE6HAqKtza56Gqtv79VwfS5bLa5paOlxSSziFGP
      6x0dfI3W4ixusNutjr7+IR2B1Krl3v7+moJV89mm1lan2zPQvbcc+u8jcaJerxUsZiMjYS0u
      va1tuNmqJq1/rVru6+mpQdpyLtPc1uZyu/ea1v8DSbysJwnebNJzQNPs0Lk6RtyqkgDTlcpA
      T1cN1lXy2eaONrfL3dvZ+om/e+Lp4je+dmJlMaizWvuabZX6R2dgqTVYve7DN7der+l0d73t
      uUYD1miwe07P39sSANBo1DVa8t5KA/WaqNvPkcwD9s1BnOuLxOfNWWFZFhxUd/tC8KVZ77mP
      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
      SJVg0WRLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CSV Download' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9V5QjyXnvGZkJ7z0KKKBgytv2PW1mhm5ESZTo
      JFG60j1a87Dn7Nvus/Zor1Znr6SVlhJF8pJX9DPkcKbHdE/7rq7u8h7lDcrBo4ACkLAJJNJn
      7kMPh2pOzW1UFs/q6BK/l5lGV/474qtARvzDfAEJggCaNBEF/G9dgCb/jmm2nibiabaeJuJp
      tp4m4mm2nibiabaeJuJptp4m4mm2nibiabaeJuJptp4m4mm2nibiabaeJuJptp4m4pE8+w+G
      YTiO/9sWpcm/O6DmDo0mokH+6q/+6lc+Wp0d20/k9tfna6ww+viJwdWuV0rnRx9Can0khbaY
      DbvLq+FcxtXiqBfi40txPJ+1OltqaPLJ9Gqr2yWTwEQpc+fOA4ah5jdDxcPdaAb3uFpEFI6n
      ynfu3qNh1dbSohxQj2Y3err84vra6af3QplqObzFqXWP7tyzeTvVcokInZ31hemlbZOS2Q6X
      91cmahKj3agRoVNIh+/df2y02+fn14h8fCtR8rnFhahy9949QlAGlxdlEPtwerW3u11ciGZG
      7x+kKtX4DqPUPr5z1+Lp1LwoRMe0nls331boHQNe/eLi6l4s7WzvbzVrxkdH84X02INhisw+
      nU/TUPVsXz+ei9y4PUvUi1ub64HFmf1E6cKlCyoZsr44fnCY30OrDra0e4SGouGXr7wkpkKI
      zKQEkaNSfHs3WsVbubKsbUgnE6NktZr3D/aJRBzjyQoL13Gpz20WoWM0WxOhHbNeshiI01qQ
      2z0aONMtQkeh0tGFeF1iCK5tlxkCP0oPnh0SoQMQmVkDR1L5xPZuDMedbEnSdkYvF6NktVr2
      9vepVLLC4iVeWi9Dfo/lv/3Ic820mEGzGbTN4y3lM8FQSgLxTqetkk1XCUZnsnV7Wgz2lt1g
      2GDQ6VTSw3QBlspffvkyhpEUjnKwwmQ0wDAEAHC5PBCNt6gVh7T8TE+739cjpjYAsDj6+jvD
      Lnebs9U24DQHK5BZJU4JvPPGj1VmV6vHbXZ4c9GY22MTpzM7fAtlFDa7w2CxcJkjS0e7OJ3U
      /vLUdqa1xWox6qwyIGhf8Hv6JNh6/vW3HrrcnlaXfcBpCZaBRWyI3nvjx0pTq9PjMjt8+XDY
      5bO/8JEXj3vwWhmRaRUy5LlPBbpYpk2iXtpN/rvhw9bT9FxNRND0XE3Ec8yoeWVuLI3xGr68
      n6ksz0xqrW6NUro2PwmrtPFs0WrQRbaCiQLaYrWS5VRg+wgv5k02S714NLsUtDkcUgQWeHZu
      bo4nKoGtmM/rWpp8nKkCLBHGWerp8DCic1j0jXbOeyuTgt5zsBXQmOxHka2l7bhZSe0lajuB
      CVpmsBga7TpLmXAogW4EZhmpUSuhHj16am/zri0vGlXwVqjgsBsb1GHI6tJqMBsLRnL1Nodp
      6ukjRmrMRDelGuNKYMPd5mxQR+C5hblZGi/Orex6fd791blQqnCwvgg06tF7I1aPv3FLuL8y
      WWGRybEJq8tbz0QnloL14mGyQEY25qqQ1mbUNqhTyUb349nN5VlKotfLmEePngKBXtyKsOXD
      YKzgcbVAH3vkGHPndjlWlpbmxh9PPL65lcIqVRIAsLm1OTv99P3XfzQ6cvO9h0trwW0AAFnO
      3L07ElhaevfGjbfe/vnY1AJBcwAAmqgvzQeM9tbo9irFgVg8WS7lt5dWaiqr1WBobfhXBQC3
      Nz8VOzy8PzKOU5zZ3hrZXiulIwtb8VgqWanUGtYB+Wx4bzd3drAzFjsMbcyEU+j26uL40loN
      TQa2443r4LXCamCz98y5bCxMouH5YCQZDg6PPE6jlYWV9cZ1GLK+NB+wuDoRHCVZMD41XiiW
      WwzSwMxcvFTF63TDStz+wmQFMnvM0lyZGJ8arxQLG5HEXmB2bWMluH+CqhXy0Z3g0dnBrljs
      MLI5u3+IPphaFFLRybXNjeDOsV3UMZ5rdz8EA4YTBApSSOliKBzBKVahNvlsGkgmW1pcgSRS
      GcJncmUIlly5fPYwlUfTB4UqqZDLIQgAAORqncNqSsUOBARJHh61OGyJw7Tb3YoAgZJINLLG
      5yMQt8fN0RTMEcHdSCx6IMCw2d4ql0lbbYZEPN14aBytboTFfvTT2w67ikGMAo5mywRZzqlN
      DqVC2riOwWIzaBQ3fvR9jaO1gAtGFRyLJgFP05DCrFc3riNTaR028/L4nWRdUsxlbPaWVCIS
      OyoADmlRs0fZcsNKiNvTVjrcfrRwINQrZpsjn0uzRJ1XadRqDUSRjReppdUt4Wo/+uktp11N
      IwaIyMtgJFJljAqJjOePHd+8eNxTxYoSuV4p/1XPhRYIq0X/wjKhKGqxWj/+0jspRRTVW63I
      i3/wBbAMjtUgk1Gsr/0IgUPzFavVdOoS/fpClM/rzGYJdFoljsXLGDCbXvxl+LD14DhOkido
      p02agI9aD8uyPM//Wxemyb8zjum5NgPTiMnX197K1osj44ttbY7gzn7/QB9GwlfO9QJBOIzt
      yS1+q1aWje1QaidbLfj9/nw2mczUh850IwBQWG54bHFoqDuSqnz6+kVY/KuUH3t4x9V1JnwQ
      fvWzn1HJxHdcm4FJWm4jC/G2/mtuW6M25ONkY9trsarbAFMy67k+n2gdqpofHp0fGuoOHZY/
      +/KlU4RIGB++7ew4Gzk4ePkzn3nhytR/g62lKUJqZUqJ1t4rHruukUeOGcAurq2OP3kIAOAF
      xO/QVnijTq3d2FyLBddJAAQgLEzcPSyRAIDD3fk7jydXx2+9+3DyxptvPH66yAEAAMjFQulC
      dW0xEAiskKd5o9GlreBhOhKcnphLl4lTCIGt9S0Cyy0uLKxuxU6js7+xXSWphYXAytLqaXTy
      iXAKrawvBpYDK8QpQ7R9mI3tTE/MpYr10xRpa2ObqOYWFxZWN6MNPvJc6ynl8rlc3m23yjUG
      tFAmy+kbjwIOdRU2uXRSoUhylTwKQbDX62HJShknIUTa67PGiuR+YDpTqH6ko7S0KMnDYK6q
      ljI0Iz42giD1tFsXV5YNZkUVp0TrAAA8Hb6V5XmZwUjhpdPo2Hz+VGiT4FmGPVVrVppsavZo
      K4upZTRFnypE3g77QmBRb1bV8FONXD0dvtXlBaleTzccoud6rmdDH0HgARByuXKL3cSwHCKR
      QBAECTwnADSXczgcPM9z9XKZV5o1cgiCeJ4XeB6CYQAgGIEhAARBYFkOQWCeFxAJcoq3ssCy
      LIwgHMdLJAh0CjfBcSwAsCBwMCKBT6HD8xzPAwgSAIARRPzOTEEQWJZFEOTXFyJOIpH8/xyi
      D1sPRVE03fgMVZMmAHy0MxUAcJpm2+Q3k2M81976Aq919/qdPIOPTSx43LatnfCZMwNlAjrX
      5weCUMqnIbXNoJIWj2KsysZUS62u1nIhkylQXV0eGACmXhoZnT93YSCarlw9P3CKZinMjj60
      t585jMeuXrsqk4jvKfY2FmqQCdSO3H2XbXqFaJ1iOrx8gLa3KCmZrdfnEK3D1CtPxmbOnh+M
      pMrXLgyeJkRzY4+s/qF0PPrStWvyU4Rof3OxIhgk9ayz56LdoGzkkWP+Mb3dubE4AwCgcLzV
      okjV1Eq5bH5xbm9tkQJAAMLDWz+J5gkAQHRt9MaDsYWR9+6NLbz71k9v35tkAQAApPc2Yvn6
      ysz05MQseZolfLowu7BfSOwMP3iaKJ3KUMxNzwp0aWJ8bH4pdBqd9dnZOg9NTkzPTs2dRicb
      2oxka6sz05MTs6fzXMW5hd3S4d6jB09j6AkW/j7O/PQcYCrj42NzS/sNPvJc66mVsXK5Mvd0
      2NnRV8Fwgak9ntnttLOwrlUjhao0X8MqEAR3d3VyNI6TNCSRdTn1sQIWDMwljgof6WgcPgeU
      WkhUzGqePJWhkF280vNkbNTZaqxgpzIUZy5dmpsc0TicdSx3Gp22wXOZg2WcBzx7qu1Qarun
      VYrOxUpWDU+cJkRAdvFq/5Mnjx0ucwU7lQ0cunRxfmpEY28hsHyDjzzXc9EkyQNQrZSARFLH
      WadNnyuUDUajRCqFORqnhUo572nz0BTB1rEy0FiUECSR0xRJEXWJTA7BEo1GBQHAc0y+WDHo
      VNU6YzLqT2MoCnlUozdgFcxsMZ/GK9UqJUGqZImqSmeSS8XPOtIkXiU4hYTnYIVOLb4H/EWI
      1FidNp8uRMUCqtIZq5WKyWxGTjHtWMNKAqJgSVylMzYYouZKRRPxfOi5KIpqrpI2OSnHeC6e
      JYplxmLRCRy5tLzlsBvDscOurs4qBbq8TkHgt9eWWzsHjRoFVsjwSiOLYxartYYVixjjctlh
      AFiythBY7+nrTOdrA93+08wEbCzNmFxdaOZocHDwNJNqidB2DWgRsmD39xtUog71AAAAwPKp
      YLzosSopqdHrEHOm5xkshS8G1rp7O1NodbCn/TQh2lyeNTg7C9l0/+Cg9BQTmMlwEOPVUrpk
      9fYZ1Q2F6Jh/bG9x+MHkDgCArJQkPBZM0sU8Ojr+dHF6ggZA4AgJBD2ZWQIA7C/ef/Pe+NSD
      G09mV99/+4233nn8zHMdbs3PbsVXJkc/uP34dOtc+Zs3R3OxnZ+/8e4pPdeDW7dwLH/7/fem
      Fk/lueYf308W8ccPH4yMTJ5GJ70TmF6LrE6NfXB7+HSeq3Dr5pN8cu/NN96N5U81kH/wwS0c
      K9y5+d7UgijPRdUJok609/RIBZ4gKRgRNkLFi91qta1DLYNZHpAkAQC8GQxeGuqhGBaWyD0m
      eQwtbC0FwvHMRzq6tt7z1trIfslrRQjqNJ5L/qU/eu3OnQ+6e93507Wez/z+FxfH79i6e6to
      6jQ63Vc/Wz9cxyAFwlVf/NOfjM7VddFJD++gfpu0fopvmABkX/ra79z94L2uPk++eCrH/ukv
      fDEwec/S0V3NNxqi53ouvFJlAdCqpZUqkS9U3XbNbjjpbmuTK1UIg+frAlkrdnhcG9t7erUc
      NroschaSq3GsWq0UFWo1DCtsNhMEAEcTB7F0m8OUKRG+NudpDEU0tGdxtmXSR752v+QUhgJN
      x3mFgSznzE6v5iRbUX+FOlbIlGm9nGMk2hbzi7dWfhIcQ4aih26n5aiA+z2tpwpReM/i8GTS
      KV97+6lCdJTgZHq6kjM6vFplQyFqnshpIp5mBpYm4vmkd4+QOUyoTbZ8JuNw2GLxo46udgkM
      oUdJoDBYjVqBYyLRRKvbkUMxt6sFK2QoWMXhJa3F+axfwCplpVySzlcRtlYX5F2+NnHlI2tl
      INNk0odqpRQt1do7OsUt5fAshZMcXkGlCnUmk3W2+Y3ahpZyfhWBr2BVmKdqDIKXMgqD3WUX
      eQQdq5SVcmkKrUj5Os7JuvynCJFcm00lVUoZWsT8HV0KqagQcTROMPVKXqJQZzJZR5vPpH3B
      2YFP2MjI1H/+k+85e65Xj3aUFkcGl/5vXe0AcHm0uLA+9z/9+R8XosG33h3pdTvzLPXVP/rz
      J+++VeFVsFKp0ej+49e+QtVK3/zmd14aaj/EZZ+70jW7uCu29XDvfedv7Ve/vBrY+MoffGFh
      ZtbX0SVKB2zO3d1OItlM9KVXP4+GV+Rmt7jWk0/tvfH+rF1V07Sda1NVI0UgrvVQePnb3/z2
      xaGuwxr8uWu9MwtBsa2Hu/Xdv7Vc/erK4tpXvvK7C7Oz3k6RIQouPlwNswU0dunlzxeia1Kj
      y/SiHbzPNVLuFzBkzdLejReOLl46C2BTtwQL5QkgwGS9eOn6KxzHKUyOc13GrY20SiVjWJZV
      GeUKyKZGSFYAAMg1Rp/TXqhSUroQi6Of/vxr4uoDANLT1VmrYiYNyBcLLe3nlRKRo0J/dw9C
      U9oWW2Q/IjM421sa2rf7cSwuj1WtJBFlIRWpEMjLl/rE6cjVBn9rS6FKyJlSIpH/1GufFacD
      ANLd1YnXqkYtnCvmW/znVGKX2X093VKa0tis0YOIVGfvdL7YEzzXc5XRAgNANpcd6Ovd3Vw1
      t7VHd3Z7+jp3Q4cqJTLQ2700OyuoLBol1OX3jI3PvHT1ciiW8TjNBFYgpAa2mLK39xvVcgDA
      USpl0Cp24nlPq9lgEL/+guVSkNa6v73Z1+MjIJ1JLXLXN0vXimW2lA2bPb2AJS0m0eewuKNU
      DuHxiqA1qBCrRWS3BQDIpFIGnXI7mvO5rTqdSfRc6LMQHWxv9Pa0E5DGpBbpKDkGzxfpCho1
      unsglrSYXxyipudqIp6m52oink/0XDUMkypVRK2m0ajLlZrJbIQhiCJwFkjUSrnAc6VyRatV
      4wSj12kAz9EMxzEkLFMpZBIAAEWSEglcrVMwzzACYjaKnFhjaRIgsloVk0lgnKSNJrO4CTGB
      Z2lWYEgckcpqNVyjMyjlot7wgkBSFCRwDA/RBC5RqHUakYeaPwwRTsHCrylEUgQnqFOEiKNZ
      niHriFTaYIiOycACAABM/dv/+HeHeSowORxNZcaXDy6f70dg/t03fpCuQl1+VyG8+e0fva1U
      aT64devMpauR1Ucj0/tLM2OMXO9x2qha6R++/i1QL8xuRjRS4t7T5cvnB0TUBwDurX/8yyJs
      uHdvxGQ13L11e/DCZbmo8cHG9K3JQGRmalSQqAITjxSObptenOfa/eHPHqQOlhJFBkuuB7NC
      r7/RrCv/Ggovf/0fv8HXS7PrIZ2cvjOy+NKFQRE6AHA3/ukvCxLz3TvDRovh7q0PBi6+JC5E
      2/N3R2f352bGeFi1NDUstXXaDS/4Yhw/Pmco3ORtp2rlq1fOcYLWL8HiZQYADqfhdCwEAFCa
      ned6rKkc3+UxFauEr6dbRpGcQhfe2wYfei5bulCGCbRWZX/7S78vojIAAACQ7s7OUhFVyzmc
      FbqGXtaeIP/Gc/i7u+F6TWrQJ+IZa1tPf5vIUbPF5bGolGVayKdikNz8W6+eE6cjVxv8zpYU
      WpZQ+WqN+/wXTxWiSjGnVoAazXUNXdeJDZGvpxup4xKdLpHIWNxdg94XG4Ln3j3FDIrV6pFo
      1OFqE4h6/8VLR6nClSsDVV4hYbEWu9Osl9vaOvO5Q5vVvB/OXLnUjXMqh0Gp0hr0FmerUdox
      eOnZPIpOrz871EtLDH6/p9VigsV6Lrla7+sZBCx7pstjbvVoFCK3BcKIzOjwmuV8/4XLdrtZ
      pxGdcRHS6fXdXqe5rbu11WE26EQvLGl1+nNDfSSsa2/3OK0m0bZUrtF7uwYhjjrb7TO3ejQK
      kbYURmQme5tFBXrPXW5pLERNz9VEPE3P1UQ8zXdPE/F8kufC//Fv/6/IUW3swa1kFr07unzp
      woAEFt59/V+iBbbL78qHN/7un7/HI5L79257es4lN4aHp8PRzafbaaSvw0HVSv/P3/8TQhaf
      zG+TldjPbk28cuW8qOJxb/6/f1GSWN5/55ZEwv3ohz8589J1haiZ+PWp98cD0cmnD3GKu/vO
      G4i9x9lAbqyPkz/c+d7rd1L7gf00dhB4GIhRQ91i1qcovPwP//B1iKyMzG3SWOKN90dfuXpB
      hA4A3Ntf/4uC1PbeO+8jEu7HP/jx0JWXlaJCtDV3+8nswfTYI5zi7r/7U8Hc5bK8YOjzCZ6L
      JnROF+D5ay8NcrzSKRQPKwwATLFMHEbDAACN1TXYZeVY5cDAObNG6uvplnHImUvXiWoSACDX
      GL0OW+woy2AZuUT75T/5YxGVAQAAgHR3dOSzSQiQQG28eO23DGJHzf7ublApURLJUa7aMXj5
      QofIXPEWl8esVGYr1UwqabJ3fOnzV8XpyNUGn8MeTWe4akYm1X3pa18TpwMA0tXRUcgmAaAF
      hf7i9d8yig2Rr6cbYGVSgqSzVX//xcvdL7434xjPFY3FWpwuqoq1d3cfHZXPnO0iBIUEkA67
      U6eWmJzeSilr1Gl2QymrSVGokVqVSqfXKRTqXCbeNXDxWfJHmVx2pr+HRLTuNpfHYRVtKBCp
      rK3rDE+TQ+0uvdOvV4k0FBCEaCwuk5zvGjxntZmMepGrpAAAmUzZ5W01OP0tTrvdbBLtuaQy
      2ZmBXgJSt3ncbQ6b6G2BiFTm6joDaGKw0613eg0qketcEIRoTE6rCnQMnLNZTUb9CVdJn8Hz
      PAz/6jvpow8FQRAE4eM/0OQ3kKbnaiKepudqIp5jPNeNn/zL0lYstbtwkMrcvDnZPdinlkvS
      4Y2fP5z3GNkb92fPDfYUIlvf/eGbOF6dWwv6Ozojq4/HArGFkfdjBaS300XVSt/41ndlbG12
      I4ShkRt3Jq9dFjejz73zzb/G5LbHD0c4rv6zN34+cPGKOM+1MXN7diO1Mj+F48SDm28BS6dY
      z7X7+jvD+Xgwlq3sLQ4HYuRgl0jP9c1v/RcJW59b38fy0bdvj197SaQtfe9bf11Rtjx+MMxx
      xM9ef7P/0lVxnmt74f7UcmwtMF3DiUe33uYM7a0iPBfN0ZzA9w32FdI5Twu/tZsGALS42qUw
      cf/Ow3TqEACgtbvsJunc6HImFS3VaW93B1fCaIma5qoAALnG6DDodsKhdHRXo9D81pe/KqIy
      AAAAEH+bKxU/yGSTsM46dP66aM/l62wnM+lEAU3k6p6uM6fwXG0aAIVi4f2DsNHq+d3Pibq1
      DgC52uA06nfCoaPorkapfe2LXxGn8yxE6fjBUTYF1OahC9dFey5vVzuVzSTQXCxbc3cOXRLn
      uaQIb7S5Ctkjb2c3gTP2Fr1cqVfKEAFCvvDF3zfrNKVKSSOXBPfjr33hczyQtloMGq0Glqo1
      ct7d3mc36wEAgsAP9nYTkMre6mx3tYg2FALPt3ad4Yhav9+hdrSbNaIPEQsybYtZwfu6BkwW
      o8XU+F0ZHy8S1OFt1VrdFrvVZRef453n+cHenrqgaHE5/S6H6EPEgsA7O88I9Wq/33nKEEk1
      NosK8nYNmsx6awPbL1887uFYBoIlHy1zPkvXKJWKP1DX5L8bmp6riXianquJeD5p6pZ/8vYb
      9mtfSc/fUPteCkw8+Y//6/9u00j2Fx/t0J4vv9xbSuz97IORvp6OvWT+f/jzP8vuTm5nFIba
      pubs1877DQDwP/7u9+0+a7HE/+HX/lD0MRoAwNbErdU8XMuhX/jan3osYlzSM8qHuzfHVwFd
      7R589folkbfsAgBYsvqDn90yqRi50f/l3/2MaB0A+De+9wOTy1Iuc3/wx3+kOkWIdqY/CGTh
      Wi73hT/8E+8pLlHA0gfvPF2CmWrnwCuvXO5t5JFPGqlBNrMxF1m+82SWlmp6Bi9Z1RIAgMNu
      rZEUAEBjaTHqkK25mMMpKdZou7uFLNZtZgNJcQCA6NrU6OJahYTz6VD5FPlF2FrmvbuP45mK
      jC2EU0XROgCAGzfeDifTap1ub2fjNDpjD26u7IQRhToU2j2NTnxz5un8aoWEiplQEedE63B4
      7v27j2NHJTlfCh02mm/wWG7ceDuSSGl0uv2GQ3SM50ql0xazmWcZXdvA5y53aTV6ncVeRI/M
      ZjMEeFqQkVVUDnFrW/uXXr2QLwj+VpNWo6IZqcOulWptJq3M2OLt8rosRpVE5Tjb6xOd1wGW
      aa5dHESUOpqVvnr9nEIiPt/gxctXNBoVU62cufaaRdSO5me09551WA1KmGttH2pzirT9AACD
      3dPtazMbVbDScb7ff4oQqa9fGoIVWppGXrl+UXmKlIwXLl/RqpVMrTp09bPWF+1ofsYx4x6S
      JBWKX83n+NGHgiBQFPXxH2jyG0jTczURT9NzNRHPJ+wtBPz03XdxjWtn6v10Vbjz/rve/gtq
      GRxdG19IMB2tZiwdef1nN/B6dWRqqae/72h/YT6YK+yMFWVtdr0CAP6dn72ZLRwurux1dnee
      JqHV/sLwxGZ0ZnKmxdfVYEKrY6nlojeHJ1cDczR0okuZfxWOqf/8xu3o/kosg3f43KJ1ABBu
      /vytNJpcXN7t6O46TYjCS4/H1iKzEzM2T4fuFAk98Xz8/Yfj68uzJNC1tjR0YukTZ8eVCJKJ
      bt59PMEpjf7OgWeeS69RFDAcACDX6OVysD0bslg5FKO0Jk0lXVZLoBrOAgCSwcWR6eVsuZ6J
      bxVx8Z6Lq6N37g/vRtMCnt5NnMpQ3Hr/3b1IDJbJNtcWT6MzO3JvcfuAZIXt4NppdFJ7S8NT
      gaMSnkts5Wun8FxE4e794Z1oSiCyO7FTpcG/9f57+5EYJJVvrgUafOQYz5XJZk0mE0/VFfaO
      Ib9ZrdFpzPZaOW8yGhHAYoxUIMsywK1ubPee7c0V+A6XTa9X1nDgatFA2haLTq7SmQ1apc1m
      gmWWs4MdohPlQrC8w9PCy3U8K7l+7cJpbpb0+f0ARiQM0XfhU3az6MNcwOZsk0sgo0Zud3X7
      2sTfcqLUmU06ldVqgmSW80Od4kOEyDo8Dk6mE1jk+rWL6lPcLOn1twMIlnJUz/lXWswNzRsd
      M+7BcVyt/tV5uY8+FAShThBq1alvpG7y758PW0/TczURQdNzNRHPMd0khWUezGzK6aLa6IiE
      wq999U/dRkUVTYytJa3SKim3f+bquVou8d6dx5/6yn8Ijj997Y++vPzkPiG30GjE0nn10qCX
      Z8n3b93tbW8NhnNf+upXZoZv0lIjUz60+AdiwZWBV7405LM2Vjxh+t6buo7LW4HFV3/vD7Hw
      0mocc5sAgRigUpIxdPzepy82WM/k7kKkCGHZqNV/occGvXN3emCwPZmrdljlm4nK//gnX23w
      /p16JTMys2mWkWXB8PufPvfOjXes7q5k8nCgvyOwuPqn//P/omvM9PAsdeuDO91+13Yo86U/
      +Or8yK06rBewlNHXnwyu9lz/4tn2BieyhZn7b2o7rmwFFl7+na/UY6tLkZLLBGO0ksMS7oFP
      XRxo9Nrv1MHSQZaroTGz93y/U/L27YmeXl/6sGgywrzc/tufvvLxEB3jue7fvR/L5C6eHSqG
      FvWt3q3NOACAh6RoPra+slUsFAEAsETGAXZ3dnR6IVin2XiJyO3PlGXm0OYiAIBj+Uq+0D1w
      Tq+UChBIpWKffbIAACAASURBVJLZAjbQ5UIxyGp19ngabDoAAJ4u5iXm9k6XRQBCKnWIZo56
      +s8k40ctdvvQUH/DOgCWcEWUuzjUI/BCpZBBsxmLrxdLxlqcju6+M41f3STAoJjKnb90RSLw
      LFnNoPkap2lR0HJjq7uto8GmAwDgOA5D8539554doDlMHebylYFuD1oGFqujz9f4GgjPFvOw
      0d/ltgpASKVT+Wym//wlWGBqRH15/gQGE5HxhSx98UyfwPNYMYtmszZvn04lxTBsc3mRO66L
      OsZz2ezmfD67ubbdd+Hy3vZOe2+7VqPRquQZtOIwKXFWqlVLZBC/trnh6rqkQ1ij3cLkU4jJ
      B5cPWzovelotiESaz2YysZ0Cp1TLZHgVRaSKcqlosLYplcDjcjVcI5jC8qVadTUYs+oNHETS
      LCCwAiLXK9SKvk5f405FAjFopjC9uNLR2Vat4DWSBCxFM5BKp+zo7FE2nKJWJpfkjtD1wLTe
      7Qc0UazWFBBbxEinWa509DiMjZoJRCIt5LKZ+C5KyzRyOV7Lw1J5pVjQ2zwKBfC6G59Jgmks
      X6rXlrfCdoOBAxTFcjtra5a2ThUgWrvPtTkazawoQbhcOj+zuNzR5cEq1SpBoqkII9W5WvQK
      g6O3w/vx79iLxz1EvYrI1B/dCSoIQrVW02m1HMchyIstNIZhWp34NCW/dh2OJQhKohGbGvKX
      CBxWJXU68ZtGPuLXVbUqhqm12tPcgfcMniNwQqLVvDhETc/VRDxNz9VEPMesc00/vbt/WIqs
      z9dlFptRfRTZevA04O9omxif8Pv9Ak/e/NmbNYabGZ+QKiRPJwPe9vadwOROIhfbWKgCg92s
      FXjm0aNhBs9PL277OzoWxu6HDvPB5ZkqLUyPPRa0rbbGto8AAJbHb5cZyejIE6u7PbO/MhbY
      Lab2ItlKaHUmhNLtDc/2ZqMb25GjtcUpHOg0AvbOrUc0hQU2Q3guNh4IDvR0Nfi+p/DC2MxK
      Nrq5myy3t5ru3Hy3VCWmZxc5tv7w4Uh7/1l5Y/PhAs8MP3pE46XphQ1/Z+fixMP9BLq7OlOh
      +Znxx5zKYTc22ieujt8usdLRx0/MLj96sP50cTt/uLcXR/fWZkiJ0W5u9MQ+Gt/eCKU2AtM1
      XqOFau/cfIjj5cWlrUI2EklXvW7HxyN0zGjx4pXrtaNwUS7fmlwEAOSO4pm9pRs3H67vhXkB
      CAJfKtdUelurmnjr/VGCxhmOn11crGRjGUG9vTQFAKBJMhGOdvSdVwGKE0AoFEoc5rs9llQZ
      mA3mDnfjV+px+fCBoPd1OnR1io1FIvFotKu3P3QQa7XbOrs7G9YBJFlKH9avnO+vlCvl3GHk
      IGxo684e7Lk9LrenEzQ8VKBoInEQv3DlOomVOQqLRGMoLtcDTG5us9tbtQ17LoaikuGYv/es
      GqJZHoRDofhhtttrOywKZoO56wS2lCtEDjitt7vVgJNMLBKOR2ODl6/iJfQom5mdmG5YB5BM
      ORWvvXRhsFLBsHwqfBA2evpUgI4lkktzU9xxy5Uf91y1D97+qa37LBbba/G1I2qjXgHFUfL8
      mc7MYdJidxg08uXAMsvwJQwzWuxlrGyxtsBUrUDyUixn9Z31t9klUvlRIo4mdo5opVGrKqAJ
      AULwGqbU2GRyod3rabhGMFlMFfH6/Nq+227HyRJFMQSOsYIcUUjP9HY1Pj6UIsxhEh2dmusf
      7KoUi5U6ztIMRVASlayrZ0Dd8AqaXClNRg5X5kZN/l6YxjPlioQjKlXCooFljl6XudEXBiKV
      ZZJxNLmbJuQmrbqQTwoArlcxhcYulXEdXm/DNYPJYqpIkLPLOx6HHSdLFE2tLy62dAzoEMri
      7fe77Q0KyRD2MJadmJnrG+gqF4qVOp6J7dclho42C6wwDfR0nNBzMdUiqTBpfzn2LpaKJqOJ
      phmZrFHPUiqWDCbj6Q1FuVjSmYynz9zBsfVaHdHr5KcVErhiuWYSm2T5X/PrClGlVNIYDMjp
      PRdbx3DYoH/x9tGm52oinqbnaiKe4/cWEuWj1Z3I5vI8wUJzcwtuX7sMgdYXJiMo4XJYObJ6
      74PbFMvPB9a87R0cUVra3IvvrpYZ+YeH2Hl2dmaGqRXmV/e8Pu/a7Gg8W9lbm69z/OTYE1jn
      tOgb9Vy7S+MVBp4Ym7C3+fKx7enVEJYJJQu13aXpRInzuhrt1ItHoYNEbj0wQ0uNalC783BU
      YPGVnWglHZpdD/V2tjf4vmdIbHFlKxsNhrO4p8Xw+MFdnObn5pc4ujryZNzXM9iw5+LmZmdo
      vDS3suP1+9bnx6KZyv76fJ3hp8afQBpHg6caAAB7y+MVFpkcnbC4vMXEzuTKfvkoFE5j4c0F
      RmYyGxodipWzkb1YZnNplkIMGgi/c3+UpauB1b1qMRHL1l3OY07sHzOQEAR+fnJ896h4frBj
      8uF7NMkGYwUAhO3N4PzoOM0Dlq4fpjKI2kRm9/M4W8NLGyurm7uh0fEnzxRoor68uNzi7Ybw
      PMWBzc2N3b2YwyiNFIDVYHSdYGModxCYwaU2j1GSx6j97e3g9k6Ly72xue9tbXGcYDofFHPR
      /X30/FBXIpEqHsXWljcgoyO6udHe4TNbnY17LrxW3Fje7jt3IZeI8hS2tbUZSZNQLSOx+IwG
      U+MJCBiyvrK4bGvrktTzFAe2Nrd2dyNOkzyMcla90eVoPJU9FwrMVBGr1yLPV4iDYHBne6dj
      6PxRZG83tDf+ZLxhHVAqxPd2sueGuhPxVDmbWFvZgE1epJZf3tyamXjaoOeqV6oYmgrtxlKr
      S9uXL59dD0Z8nT67yUAT5Tqkdlg1SqlkfWO1WqLqFK7U27weR+Qg2uYwyHWO3k4fAEAikyfC
      B6X0XpJQtZj1qcQewwOWISFYD0vYno72hmsEE7l4kWKnFoOdXnexnCZIkqWpOiEIEujCUH/j
      A0SZhI5FsiPjk+cuDBbRbAnDWFYgMIyXSnr6z2gafGMAoFDJw7vRtdknlu4zUgZP5IsQVavj
      hF7BwbZeT8NHORGp/DByUD46iOFyp8WQSu7TPOBoEiAGCKF7OzsarRiAyVy8yAgTcxtdPk+h
      nCYIfGV+vrX3vEFK6hzdnb5Gr9GQS9nIwdHoxOTZC4MlNFuoVo6iu1XE1O9voYHqzEBPQ54L
      RVGr9bn5hmIhrzd+eEPbs7899szXseRR1GwVn6bkl2VAUb3VKn5r6i/gGLyCQ6aG+4VPRODQ
      fMVqFX1L3C/5dYWolM9rzWbJqT0Xx+LlKmRuYMX3w9ZTq9VIkjzlv9rkN40PWw/HcTwv/vBD
      k99MPhz3wDCM/ILw9nKuDjusRgSB99e39U7b3tY+Vc3spTFPqx2GhMknw4ihBU9FMIpc3Trw
      +zzhraVkicpFtliF2axXwzC0vb3FE+WVYNzna9tbX8hU6MjWCgtB05OTclOr1aBBGiMdWsd5
      ydzMQqvXX81El3aSZCGeqzHBpWmUgL2t9gZ1iEr2MFfeXl1ENDYNQj0Zn5MjzGY4XUkdrOwf
      9nb6G9QBPL27H8kn91MV1m03zE484RH58vI6z1Qnp+a93QNKWUM6MAwFt7c4srK8HfN5PaHN
      xVSJigVXWQCmpyZlBqfV2GiIjkLrOC+dm5lzeHx4Lra4Havn46kSfbi/JqitZr26QR2yiiYy
      xZ21RaC2aqXM07FZBFBrwRhbyx6WmNYWyzG1+HiDWtqLbs5OAQAASzy4M1KslR8+nlhYXFqb
      GK9yQODrG2t7ZTR15813SoI6vrNSpfilhcDazNhetjY/PgoAoOvVxw9HVCYnnY/VGRBYXFxZ
      3tQgxE6Wtxm0FlPjmba5hUe3c5TSrmKSeXxzZXkpsKrU6xeWNjo8Tr2p8cUgkAyvrKzGens8
      W5v7+cTB7OR8GVJtBxY7e7rUan3jngsrpsbHFtwd3dHgJk+VA4uLaztHWCYCm/1qlfoEnouo
      jjx8rDA42EIcZ0FgMbC6vK6RkMEjxm7QWsyNT2FzgeHbGVLp0AiJXHVrZWU5sGr1dYXWA5u7
      208fPm1YB6Ri68tLkd4e3/bmXukwNDM5jyFGJpeYCKzMjI4c67meaz2lLJrNogJeYqVKNF8C
      EpXHZVPpLDaTtt3vpqXKahEFAqxUgo2VICswu5tbFMcnU2kWhihIwNMRuc4GAJCr9Q6LcXPm
      UbIuxYp5ARYoopgp15hSEWMFwwkukEK8HncptTe8GEKoWk3gFBIyHE4Amtk7LPS0neA+YpfH
      C1HYT16/5XIbDnMFg1EW2d2HOG55a7e3v6fxcabR7tQrJLff/Ina7kofpqQGYyVzgNfpYnhF
      4exrXEem0jutpq25x/EaUi3keUSgyPJRqcpUKmWaMypPECKPx10+Ongwtytl61WOUUqId994
      XdvaaVYrDC0nuLew1eOB6OpPXn/f7TYmM3m9ST4/cidel3a3ORCV/tjDrs95rg//XxAEwOVy
      lZYWi8ALAIYEXoAgQRBALpez2+21Wk3zi6u/eEGAn/0dgAAQIAiCIAgAIPC8AIAgCGgOtdlt
      AEBA4CEYBgBAJzEFgsALAhAEoZBDTS12+MPSQhB0Up0P4dl6uQpMRjUMA0H4UOQkUoLAC4Ig
      CIBH0bLNZoIg+KNE+icr0q87REUUNdhsyLPaQhAEwEe/jsZ0fgFXL1aA2aSGoF8qHXs/34et
      hyRJhmEaL3GTJuCjEzknaqRNmjzjmNnCg80lyODpcFsBEA7DMZvfk44kZBCxkyE+d+28IPAL
      U2Nmh3t3O6gzW0tl7LOvvZYJrVEKO40eqB39Pb4WAEAiGm1pc6UTGYgu4hJLX3urqOIJM08f
      2P0Doa2gy2sNx3Kf/fxvaxueF36uUltLkN6NhlZtHeezsZ2Bi9d0ojJyFI+iB1nKCGMVwaAR
      SqqWLk+LmIwcdL0ys7Q92G5f3s0NdVnSGHyhv/Ep+F8iCNzi9KSvb2hlbvHi1QubweirL78k
      7lR8aHuZ17YWI+sW/zk0Huy7eF3/ohAd47kmFwNjw3cBAIAlfvqDt/NY/mdv35lemIOAwAtA
      4KrTEyuMRGPWyQcvXFJJYaVcorM6g4GnC/MbAhAAAGQV/Zfv//TwMHzz7ihA4ImJSTG1AQDQ
      hfnAARrbOchgbR1n5DAQnQgBAtz48P355YNCeH56LZIr1kSWiINXZiYnphdZojAyMZNMpkXq
      MNzhxtL9x9MkLAw/epRIxMXpAI7mmfKd9+7tpcrjjx+lkvE6K1IJhviJ4Qfzy3vl2MLEajSX
      x178yL/+Q7VUKZcqbquRl6orlRqQqDrbXSq9rdVuHBw8u7+6ki1XgIC0OLR7uyGMkiiorFzf
      SlSxhacPLd7Bcy8NLS4uAACKuSzPEYzMZNEqMQyHeFpcfQRBdu5S11Ys45BVdoPLwCg+1wSG
      UxxgLl1qX1rdl/LV5FFBnE6tVkFkfO+ZM2vLyyqNIhqOitNhyJpGjyhb2wt7qwSsPoxHxOkA
      nqUgFSTjXCo8kq3XS+kSITKfS6VG8hBz6WLH8uqeDNQS6RenvHmu56JJigeAY0hIKs3nKm1t
      DrJOyFRKsk4gEE8wACsX3G536jBhaXFCnCCVQiwPA56tVcsCopAAVq7WK2QSAABFklK5nCJI
      IDAskGnVovIcCkKpWFBpddVqzajXsEAiF3V/BwAAr5aBREHXa2qdEa+WtQaTuIRLDFWvkZwM
      5gVEAdg6ItcqRSU94Tm2WMZ0GmWNYDRyhOAgvUbc0ptQLhaUGn21WjXqNWWsbjIZxH3F6tUK
      j8hZEldqDfVqWas3SV70Zf2w9bAsy3HicxA1+c3kw+8NRVEURf3bFqXJvzuO8VwCz2XQgsNu
      AwAUjrI0X9vZS/i8bZkKefVcvyAI22uBFm93LBQZGOwM7sTOnB3IJw9wRE/lE6a2XrtRLXDU
      ymrwzIWzuWy2dBStcOprF4fElW9/a1Wm0UUi8d7+/mweO9t/glM4/5r4wWZV0PKVlLFtQCel
      JGqTuDRbFfRwO1pwGiVVTt3rNRcJYDOKSc/OUrX5+ZWObn84lr9y5Uw2k3W2vPhGo2NZD0wb
      nO2HodDQlSvVUt7ZIjKjWSK0VeHUoHqkd/UZ5AysMmpeFKJjhhE7S5Pvjjxb58L/6ze+L7W5
      qpXS+OjDWp0SBMBzlQ/ee7w89iAR3viL//u7y9vBOs09efDgyaMncp1m/OkoAGB3dXZ2biEU
      2vvWT97xed3ZXElcffhq4v0H02iVZevYyMhoeG0BFbuL5NGdO0Q1e+f+FMtRb/zwu/GiSKHF
      Jw/TGPHo7j2CYeYevjOyJnK0m95Zmt9OLjwePqrVY1tLb9x+LE4H0IU7d8azkc3J1QhRTP3D
      d98QqQPAozt3iSp65/4Ey9E/++F/iaDECx95rvWQdaJeJyKJRD53VCdIIFF3d3oAVVRa/J/5
      1GvJzdVCvQ4Baf+AF61CxVxaL5FyTDWFVjiFBgL4xvzS+StXAQACzWpkxKPZDYYor63tXH75
      irj6CIJgMBkPdtc5hcWhU9RpVnRq0Vd/5wvLS0tf+srLD995q1xnsoWyOJ2uK5+uJdYufObz
      K1PDyVwhl82K09G1dp21E6RzkIlvBHaixYLIhJUCkP3eV19b2Ylf9EhuDs9BXK2Ii3S4r/7O
      F1aWA1/68qvD771VrHPZwou/88/1XDhW5QDQajUVrJDPEx3t7kqxpNIqaQ4SCKxIArpeafe3
      72yuufxdaA5tc9kTqbzNYmCIKgVklfyRxux02c0Cx4Rjhz6/t4phEgRWqTTHrpI0Qioe0Vkd
      QAAqKZ/IYj63yNdyPpPk5XqilLO0emGOgKQqhaik/PVqMVehtRKWlemsOnmVEvSi7CTHkJF4
      utVuzJZJr9tRqVQMDdxgfQyCEI+GTPbW7FHG6/fVqphIHQAKmUNOpiXLqMnpkfAkaCBEzRM5
      TcTTvGmgiXiO2xWfTggKg14B8xKFUiZhKDyZKTktmmyZ8rTaBUFIxsLGljaErgO5LIeWPW5n
      KZvi5HqzWoJRgkGjBABUymWNXg8DHqvUORrjpFq8mLW0ejWKk60uRQ+CervXpFOVy2UZzBdw
      TikQOFB6nCfYGgYAyGcOIaXRrFeGd3dMjrZioWAzafNV+tjUEP8NiGoRrXJupyWbjHIyA0+U
      DNaWTDrja/efaPqRZ8hoMuvzteFlNFOizBqElaiJEmpu9ZwwREIiGra6/FKe2D9IenwOtESo
      EYaX6RvPnvGMQvZQUBgtemV4b9fY4i4X8jazLlehfG3OT6rYMacBE/Hw5NRMMjBVN/e4TKqF
      0Q8CCxtzm0G0iPf3dQpc5Rt/9113T/ft7/xzrIDvhIJtHYOHe4GRmT0YXZ1MImc7Wji6+nd/
      840Ln3q1GF65cX81sjG5GcradNzCRr6vu/G0cwAwha///fcHXroqYyv//O03ivlEaG9vdGLC
      7Op0tzSeiAMAAHZWp8YC8bN++d9/4x23XfH9779tbHMHp2fahs4qTjJ9nYqF3v9g+NJLF37w
      zX+0uVw33/xxrianCrGqxOpoOAUCAAAr5W785E3vxavjN15HYf3G5P2N/SObnptfz/V3n+Cc
      msDUJ0duJ6pGPr16LxAH+dDtp8sut21qYvbs2YETVAyA3fXZp/Phcx3qf/int9oc6u997219
      q2tvdsY9dO6TQvTcxxzLsixbr5QvXPl0V08nLHAsx3t8naVCrkqyXClbY1gISC9fHZp99KiA
      k6lUXqGQ0gyrt3ukzOFu9CiXywIADkO7NRJPoZjD69cpZLDOIAP4UY549dWTzfoIvPRrf/6V
      qclJudba1mLu8nuz+eLvfPmPggszJ9IBABid7QiXp3nlf/iTV27fGT4z5MsXKo7+s9oTDp0l
      Kp3DJq3Wmd//2h/Oj9xuPXOhXjqipKZe7wk2OgIAAIS8dM4VSpbPf+63scgapdDLQT2DEq+8
      cuZkOoLQde5a6Sho8ved0Vcm4vUuhwJF8xeuvnwyHQCMLT6pUGQ4xZ/92Wdv37o/dKa9kC/b
      +87qPjlEz/VcFbTIAD4e2gaalh6XmeNqCdzYaRF2otkOpz6KEghP9Pb0zE+NdZ69pqBrvEIW
      jWXbnGa8jDIKi8+qytZ4u1EDAMijKJrLd/R25LMVjkBJSHkUC7d2DPndJ+lxBH5jJWCw2RGZ
      CeZwtUxIVTiNUOVUdq/zZO+eZDjIK3U4RpMY2t7Xd7AXNiihdJG8cu0l2UnePdVCOoqSEp5S
      wIzc3FY+DGkMplAkcfbyFbP2BOaLo/DlzX2dUmE0q/NVYJDU60CRiYUd7YMdbSe6NI7fXAkY
      7S0UBRdKpT6/PXxU4bEcp7JeHOo+iQ44jOywcm0do6ka6u/tP9g7MKjgVJ64cv2K/BNC1PRc
      TcTT9FxNxHPMu6eGlYFEqZAAAZZKJTDH0pUqoZYjGMlaTQZBECqlglKjq1VrOp26ilNGg46q
      VzlIxlG4XK2XSxEAAEkQMoUCAgJFMjxHCYiMrtfUeqPshHeLFvM5hcaoUkhJgkBgAacEKWAY
      IDWcMNUtXq1AUqVKIS2gOZXWUK/XNUo5TnFGg/ZEnouh6jjF63XqWqUkIAqBIRRqbRWrGk0m
      5ESei2NLlarJaKBJvEqwKhnMwzKGqKl0RvnJpjGFcrGo1hsRgUULFaNRixOMDOZ4RKFVnWwa
      s16tCFKlWiEtoDml1kDWcbVKgZOs0fCJ2YCP8Vyby1Njs9v4wWJe6Wk1qTZm7n3vR+8cxCOB
      YPLqhSHAk3//n/5PUqp7evOnlMz4/nvvXHjp2t33fr6+vjE++jSSxc8NdNXLuW9958eDV17i
      ipHX353Zmb+7tI9Suf2Dkqyr7STjHgb7z3/1nzTufpdZ+c1v/qCU3r3zeGZ7ZSZWBmd7/ScK
      zfzTm09WUuc79X/1f/wNJEG+890fG+2W8cdjAxfPS0/SfCLBlZ+8ff/KlUs//sZ/zlSFW29+
      r0wpg8tzqtZOi/YE+cgq+dR3/vnbnZdeDtx782EgGlp6vLSXYfKhvTzS7T3BuEdg6u/+9Hso
      Z5eWd7/+nXcAjf78zqRJI4xNb54/09Ct2B+xMHb78WL8Qrfpr//ybyCJ5Lvf/ZHOap14PDpw
      8cInhei54VAZLaBoPri+6Wr3W2w2iK6iVcrm9Bj0hr6BIRVTTxcKgOdcPn85m29vb4sfFe0m
      XfzwCHA8Ild3eF0ajRoAgJULlRK6c5BU6I1qmRRWawGZ3zg48rtONtQVeHD105+KH2zjNGw1
      6r3+Do1KdebSFbJ44tUlqcYMswW0UH/5M5d3d7a72p2721syo/2kqxUCLNFrkXQ2f+bylXxy
      t6WrNxcLZqrcCZKvAAAA4DnO32baOUg5ugdUQo1TaCGquLGf8p8gJeizAvHWtvZCepdVmAY9
      mgOUdJslK8ubLt/Jvl0AAKnahPAlNI+//Jkre9ubnR2u/eCmxGCDP3lg/FzP9WyDGMPQAEJk
      EgSwlaOqwmmS0wwnQSCWB4U86nA4yqWiTm9gGEYmldIsJ5UggsALABY4FpHKnr3AOY5Ds1mr
      wyFwPBA4HkAcw0hkcumJei5BoCiKYeoMr9SqpTAEWF6AgSBAyMl0nlUKcCiKm00aqUxG0wwM
      A44TFArFic6S8BzLcEIhj1otZgiRcCwDwwjDMHKFAoFPYN4EgacoplIsGG1WgQcIJHwYIqlM
      Kj3R1hGBIimOJQhGqlZKZVKE4XjAcwKEKOQna9AsQwuAQ9Ga2aSVyGRMAyH6sPVQFMWyYrdT
      N/lN5cNmLghCc2dqk5NyjOfimFo2TzsdJgCETDylNik2gomrF4dSmby7tUUQ+KXZSVOLK7i9
      3dHVW6qRVy8MAYFNpjPlo4S986zdoAIApJJJm8slEZhUusTiGUZhLcT32s9eseqUJymeMDf2
      yNFzxdNiSCUP1TIugjJ6UCkB/aXBk20yDAdXIIPH7zBMjgx7By7EI5Eurz2cqV+9MHCinquc
      jYdy1IWBzuDqLKdqZUuJ1s7e4Obu1VeuK06yY58lq7PLwetXL+eT+8Ek7rNJKJm5nDzwDV22
      NZzUEQAgCPzS7FTnuetKrvJ0YuXylb5QsmKR1hmVs9d/gkPsAIDIzqqgdbe3GqeeDLf1XUhE
      w90+x366dv3i4CeF6JgK7weePJk7AAAAtv7D77w+Ofv0YHl+bHHlvUfjAACew8aeLlKwyqqR
      IVL5VmASo4VgYPzm4xmWroxPbQAAqFr+O9/5YZ0TjkLrtx7MjI+OjY9Out2mqcmNE9UH0IXp
      uV0YgQkM/ckb746MjgcDY7dGJuGTjDCewbHk2OgMXzucWYnnY8GH90aiGCgdbGEnfOHWKT4w
      OU7zwtTEHMSUx8ZGRye3dAgVjJ3siA9BULGVhTTOLEzOsBJ4fHR8cnTC5TJNTa6frEAsSRP5
      qfn96OZKqkotT06Nj00hRsfa3IkXc3iOHhud5vH0zHKsmNx9eO/JQZHDwtuVTw7Rc78GvFLF
      KlV/T49U4LAqDiTq7s42X0d3tlDp7OzSqyRYFYMEqbvNtLdzUKYkaohSqRTpbD6VQQu5I1qi
      ZogMACCfSXM8FY5nWrx+vUIG5FKeKj16vHD2wsleGIIgu3J9YGpyElKY2losvR3ebJl8+fq1
      5dnZk4aGYADgypU6fPWia2Rs1uUy7K0FcLVNdcJ2SBJ1mULIF7GXrl+cfjqsc7VV0ruBg5zf
      ebI9WSxNmCyyg2i2++KF6NoihUg4ujw8Mn/2fNfJCiRwgsJYLR6oHB59LbKWrVs1/Mzok9bu
      wZPpAIDTPBAqlTp07SXP4ydTrW7TwcYSprSoPzlEz/VcVJ3gAZDLJQRJoXnM63HWazWpXFIq
      160WA14n8/mcp80Tj4btrW2AE6QSPl+uG7QquUJRJ0gKxxQ6s0ouAQAQ9TqazTm9bhKnBbbO
      QhK8UtYYrQbtSU4tCQKayyASmIM0SpkgRUCNEmQCxUvVes2JekCAlfJAIikWCaUMGMzmUrEs
      l4IacsKxsQAAG8pJREFUwf1/7Z3Zdxv3led/2Pd9B0gCBHdSpEhJlizLdufISafHPZlMn+5+
      mKUf5y+ZzPTik845cdKOHe+rFkuiSIkSRUoiJe77CgIEse8oAAWgUAXUPg+KHTuhRkDR/dIH
      n0cc4Xfqd0FV/b517/1eu8PWUIchUa2UMApFSlqVXCBT4UhRLJXCxbLZZpeJG9BKDE1moAJV
      rerM+hoBJHyKAgK0VFRojbrGXoSyUCYtFAlqpBCwtEErL6I4i2OsUG41N+apiBTzjEAAFzCZ
      mKc1GOACLBHxKlXK7rA/L0RN57km3PnDf5dqtdp0vWzSKMdorkw8QIh0VSgsM7a3WnW1CnwQ
      THc4tOky093uYFn2cH/b7Oola4jJYMzlcyajybO9WhWotUJS39qlU0govLK+sa83qnMwdubM
      COf2YQBA0LunsbYkY8n+gb6GEkl/QjzoLRP8SjFrbOly1+0w/+cg+ZQvBksBQop0IwMNnlG+
      A42j65u7OoMmB6Nnzpw5SYg8WysihTaTyfYOnTU2Jmm/RyLkLeJ8rJjVOzo7WutqLjvmou+P
      375/d+LatfEaxQAAKgiS3Nv84vbYjYlJBgCGLl35fDSVTPzqnXfKUOy9T74CAFjNumgomgzv
      T8/uAgBiu0uP1/1GszkWiZ7kJ2cqsSuj03sH3idTk8nyiW6NY9evVgggZdACeqIH9ML9sUCm
      aLfqg2GOvTjPSHhWHi77DCZLLBLl3HACAABE/uqVuwK5DsmlmeN+zfoZ+/o6grNSUM1X6hWi
      38uSEjWcpOh9v48lyb/6T68tL+309HVXi+kAzAgJTM4Drr4+qYCHlPKZMk8pI1+68Fok4O3t
      6Qtub3VdfJXPF8SigdOn+oFIKip6opjEaHW7bFzsbZ7BVOGDaCGfTfS26msyR/3Tr/4cjcmw
      vLoiECkuXRg+ydxXsUYX2F1CSuTFn7wh5+zoAQArkoqRwxgm0Jrcbgd3y3CWZox249rqulxr
      He7n4gD0LVqjcWVlSSBSvHJhpM4Qfe/JVSmWKQAIDKbFGhxOa3WyTE1vEhaD8ZzTaUNqgKqV
      uzq7djZWnb2nqRpi0BsKhbxYKKIA0GrUscCh2uLSKiU0gXkD8U6XjRbIOTvuPCMS8GlM9lQi
      1d3TdZLbWCYeYqR6mQhwbnd6BlqCkjBh0ilPuA5NVL2BaKfLTvHlCk5+Vn+AZQOHHnNLB8PQ
      GtWJBjRnE2FKopM3EqJmbWET7jRrC5tw55h7TxmGaKGiVsqpDJZyPmu2twj5PJZlkApG1yo8
      qUarkrEMFY3EzRZDIp13uVwCQKIYWavAEo1JJRMDAJByWSziFxDcZtaXyohG3Vhv0bfQBIYS
      bAkuWs26VA5pdVi4Pb1YhkbQaq1SVBvtLInyxQrOMqdcLgMap4UKjVSAkmyjJXzfUkHKIhE/
      X8LtlhOGqIqRvHKxYLXbKgj3dViGQVCsVimpjVZAYjyRQiJ6QYiOqS38+sY1n8cvl9HTt65u
      BTKszNpmUSUDO59PzEY8+weB6MjpgXxg98Or45XM0UYcPzvQdbhx/9FyZO3haBpTDnS3MkTl
      n/7Pv+YqRe/ugVzC+3xi9tWzDTaafLOj2a/fXc3w1x7eK+TSt+7Nv/zaxYZaIL4luPXkyr3Z
      SPQokSDmp66o3WdN9Q8w/g5lKPLL965C2ZjfF6klthYzwqF2Ls4pDIm+9Y+/SsGFw32PXMr/
      7M7jV88Nc1gHAHb+1rsTG1HP9pZUrXn7/U9/+qOGe3GeEd6Z//Luo2jUH4sTyw+vSNvOWF40
      vfV7PwXDMAzD8ERSIQ+gCHXp4rBap6tWcZZlba2dGrm01WEoV2oMw0j1tjO9Bph12wWZGIy2
      9/aKqhVV+6laJQkAiPk9JawSzaIqqWB9Z6eQh7jth6pkDsK5DFQ4P+hc9KXPdWqKGMcykq3d
      /UImKdNooaOteK7C2UNjd2sHQUo1IAK1oicQeda/xoFE4ABGK5FsRS0Vrm9zDxGNQgfhXDwe
      U6uU6yurFMHdQ2Nzd7+QTUnVWji0E4UqDXtowNkcCQCJ5nCBMuLbNbf344W0zqxX6Z0GJT+R
      yVFlSKB1IIVUT0f71MMn58+fOQylO102rVYBQVgpG9K29Vt1CgAAlMlIJbxAEhnu70hm0nYL
      R2sjulpKI2Q0EBrsc+0GMi+fPcVRdzFUMlcsJkOO3hFerciXaV9obfQ8UukMqBVxialNL8li
      jJWT+xMAIJfNSsTgKFEeGeg8SYiYWjlTYZKR4OmRkSyU4bwOYOhkrlBKRWxdpwVECUi1qhfN
      hGhqribcaWquJtw59t7D1qoYXyjBq6hUrsRrVYVCwePx8CpGMEClkLMsW0EQmULJ0KRYLCHx
      GsnweCzJF0kl31R0EwQu4POqBK2US3GckEga6Fb5LgxNUgzAa7hcJkFrhEqp4Ki5WIYgKZrA
      xXIloEmeQMT53SOO4zyWYfhCiZBH0kDcWBH7HyEIQsDnVQnqhwgRj8BrCoWCILivw7IsQZI0
      iYulCsBQ9YToGM3FMvQXn7znO0yUCpH7dybmV3bN7j6DSvz5B28XWXVnmw3LR9966x1Tq+P3
      H33yo1cvHW4tfTX+mC6GFvfh0/0uAABDVf/pf7+VK+cXFzdNWskHt6ZePcdRc83fem8uSs6M
      3YRzqS9vPbr4+ivcNFdsf/HTsYeeneV0QbQw+bnMOcJNc6Fw6l9+82ky6vN4Y3R6ZybOctRc
      VO2X//etFAwtLW2adLL3b9znrLmWxt6/sxaZn5nR2ey/+rff/4Sr5kp4Vz6+NXWwu5LOi1am
      vxA4hhvTXN9cDyvRGvgMKxdrzp7usNvtFYwAAFx87Y3w7hbJApFce3bEnc6S7XY9AMDY0q6Q
      su0DZ+la+tkCUe9Wulj0pys2tejxwuJJNNfaQTRXRF8+3bYehE63q0tcNdf80ko+FdO2OlM7
      84exHGfNtb60AJdLNaGCj0GrOx4oy9FvMH64nSjAh0nEoRE/nl/M519szH4sNAqtH0RC4aDD
      Znn68BFaRThrrrnFlXwmpna0ZTwLB1GoYc1VSEMkABkoI6ZRvlLv3dvrHBiCUimNQdff05c4
      2oEZlYip9Hd3T9yduHD5TSQX16s15XI+jQAFDYtNHd1tfyh+SERjUgnwxcsXzw6Eo5H2Nie3
      LVFoPpyvRvyBoX73biD1F5fOc0xN0mQomS3E/G2DFwW1PF9h0sq5TDkBAIQjUbYK41Jzl1WR
      KNNtZo5p4GQ8JhEBb6z0yrlTJwkRgxXCMBUP+C68cimZjHFeBzBUKJGG44GW/gtissDKTboX
      haipuZpwp6m5mnCnee9pwp1jNNeXH/9ucy+UCG4vPp0dfzCjtPXa9PKtxZnro48sJvbK7blz
      wwO5wM5bb7+PoaWHi5u9/f1X3v0lzCi9Dz/NSHvbjHKWId/6xT/nS5nJRyttFuXvrt69xDXP
      tTz+4eOjyuTX1+Bs4uPrkxe45rnSh2sf3HywPv8gX9Us3v9U7BjiprlwJPfPv/4gFtjePkgK
      cntTIZKb5mIZ8lf/+C+ZQmby0ZLTpn7nq/FLXDXX+sTH46uR+7fHbe6Of/31b994naPmyh5t
      /v76/Y3FaQhTrU59DqyDnDSXUieiiVaHs9dl7BwYgrIwAKDV2TZ0fmhu6kkOygAAlOaWPrd+
      aXYXrxYKKD507uW9nfXOzk4eCwAA4b3lQCq7m0DatcKxySkox1GYUJXM7OoBjNEv9Vv3E/lO
      m6zCdfjU5PQjKB409vRHlh5s+qJprpprYWY6nYcxkZqPJB8vrnD2io95Vv2JzE6s1KkXj92f
      znINEY1Cs6se36G3o6N1cnQ0Vy5z1lyT04+gZEjf1RNfe7jujaRznDRXPh2oCVQx3377wFAy
      GHB2d5otrqONmRKtuvzG+ZDviGKZdrt59M7k+YsXD/yRkcH+XPKoJjJ1G3iYtMVukAEAQkdH
      EjF7EEcuv3LG5/f3dnGcTkIhGU8SiQeCfT0ubyj948uvv6hq4DnQhDcUz0d8zuHXxQQkUNkN
      DXqmfIvP72exQk1iPdWmDsF0l6NBv8tvCAcCYhHriRUvXzp3eIIQ0ZWsN4PH/N7XL1+ORoKc
      1wE06Q1FC9Gj1qFLMirHKuwvvD2/+NzDMMx3Z94+m7nMoRe4yX88mpqrCXeamqsJd47RXHMP
      xxd2Y6d63cXw6rtf3UtFIuP3nwyeHZEI6CsffHCQKA70uPOh/d999JXF3fPVv71/6tIFLOH7
      6PZMPrRxmAJd7Ra8Av/6N+8yxcz1ycUz50aE3Fsh6Ou/+UVZoPvw3Y+cQyM6OceTCgBgd2Fs
      eTfx6M5ViDR0ORubUvBd8gnfZ9cfhD0rq/uJ4cHGDJG/C4EW3/7tO3QJujYxP/LSSEPeid+H
      vvHbX5RExg9/90HLwLBewTFFCgDwLE/MbUZm713P1HTd9XknHnN86e/rQ4p5AIBEqVcI8NXN
      TbdeDWEUAAKdSRcJhgAAarPDpBU8uPLVfjBVQvGbo2PJVKZ3YLBYjAMAxAqtRaMsE5hMQODk
      Sbrv+C6HHS4XlSoxylVKPMPZ6a7lYUYqJ2ulk6yjt7fIWVAjqhR1ou5EkVxj0ahKOCYXEjhx
      ohC1O+zFMqxUS1D0RLNBnV1uPA8zEmn9IfrevaeQhsoVLBTwGmytWKVmNCjj6cqbb/4kValq
      xYzZZCpCKWffYKWcV4gE+77wT//+H870tEokgkuvXzZoFalY1Nk1aDVqeDweTdMOm4UQKPu6
      2k/QNMdjGVpnc9aq1aFTA7KTtIaxjECiEfFId8+gSafkfkE8QNPAoFNozG1OB/eOZh6Px9C0
      3WYlBPK+bvdJQsQwtNbqrGHY4OCAnGvBJAAAsCxfpBQLKFf3KbO+roLJ55x7WIagmO9WrhAE
      IRaLAQAsy1IUJRJxTDE2+Y9EU3M14U5TczXhzjGaCwAAGPyz338oEoE7k08qcHZ0YvbU8KBY
      AG5+8l64hO89nUrDyNL8k2yx8njmsbNrYHt+cnUnFPEtR/JCd5spGzu8ef2qyjmUOFj4avRh
      l1VxdXIm7t2Iw0J3I17xLFm5efXzMmsyKqgPProupYpz234BEnp6UO11NzRIBsxO3V7eC/W7
      9F98ebNSgm+OPUglgxubh90DfQ1Jwv2NhTtTM739gw/Hr6YL5ZnJsVAo/nhuxdzaoW1E70Bx
      /83r1xStA+HN2ZWDqH97Yf8o7l+f9ReF3c4GjlNMrTh6+3aySEoria8n17BccPzhmtuhvjk5
      N9TfmEHMk+nxxZ3AqS7zu29/IhExn3x2va2358svvnjp7JnnfeX4V8YszVpaDNOjX2aQysr6
      VptCmkYpAHgOuwNB8eHh/rWFBThfYJXWFrNZJhacHj6dLeaHTw9loCgAwORob7G3auXCNrvt
      7MVXr137MpzOd7vdZmtjZhE8kXJkqC+TjYqkKjGP2fJ5csmw0WDIIQ3rnYG+AZvFiiZ9IRhZ
      WltzmlUQAgrRg8KLx0Z/j86efrvZJuSz+4ce/86KvKsncRASEoVgtLHiQKPd1WZv1SnEO15P
      KhbK0UIChg3Wttde6m9oHb5UO9DZajaZhUoNWwrsRSFAlL744po/4G1oHfBNiBiCMTuUiyur
      fD59+6tPd/1HCP7c3OIxmiuZSum1qiP/YefIX7Bo8cy58wkEs6hEJoNub22dp1RlY6nBCxco
      rEJVSxiQ6FUKn2dbpTGkkjGHs9dhNUQPNvZjeSEr4ImAraX91Uuvihhk7yDS1u42NtL9xOLl
      J0sbFpNFJFMLAD3Q2V6o8Yb6OqusxGnTNhSaybu3lQYTEOl4aP7U6QtJqDjc5+Cp7Wf7XA35
      saw+mSoDGaBpo1KqdvSyqUj3yxcqOO/VS+dkjUwnifu2diOQgBU4W8xVRuzSSpQt3WqNvM3+
      3DGOx0Ki2YnpFaNBVUHQIsYO9LQzfNl/+5//oJML7fZGxjAC8GDitkJvrCFILl/s6BmgaPo/
      /93/6LDrXC2tvOfE6JhzT7Valcn+1ILq2A///3D4yrFQFM6yIhHH7Oh3YKkqzsoaHIx6LD/U
      1n6odWgKp1mR+AcIEV3FaZm03reyf/jraWquJhxoaq4m3Hneq0lm4c5NqWvAszLb//rP/WuP
      /ubv/rtYyN69+pnQcUpYPNS5RgJbS0qTEcZlf/vXb6zPTFTFGjQZMHZdfOVMV9K/fX9us6u3
      OxYrWFR0gVT8/X/5MafLYx5e/6DzL/+XILf7aGalraMzUcB0wgohsfzXn77e0ELjX38u0TuK
      iYC5rdt/FP7xmz9vt3Ex/1qdnQzAlE5I0GINAkXa+l65eIZLtisd2J14su52OqN51CSrUSLz
      zxrc0TOYGvzZ1TGXs9V7GDk33HcUg37285/JOb1wvnPjS5HWWk6FWnrOhryeS3/5107LC0L0
      3CelhAdoqdlsc8qKB09WNkpVEgCeWqnCaphYQPDUti6XVSxWoblYqUps7u0lw15UYY14NwEA
      FEXx0Tgia8XhWCSZ5tysBAAQkThKAoerx2E2HaYhHQ4FE9kc1PCCFMOuzk/yWtt8C+sMUdr3
      h7hdD0nTwYDHD9eKYT/LF+xsrXJbh6IpHpb8eHbfyhRzKL23v8ltHcDQDF907+5Vg1517e5M
      tZhGuWbNaIZZW5wGdsfq9U+DMJorlF/4lWM0Vyab1ev0NI4KtWY+W+3tG5ZLeIAvshi1++sb
      hETd1WLAyqWNg6jdbMJqNbPJpBSwlESrqEKO3gstVh1N1kIpzK7jYwTfYlSJFbq+rnZOO+KR
      aJGVqr3rT6NwddDpSJOiFr1YprJ0d7Q1tFAhHbe5h8lEuPP8RaxSO3/xZQ2njD1Whhmh1qkW
      SM1OKcDbBy44LFz6uWgSDyUrPz3fG8MEnXaVxuTqam9gDPu38AAbCx6NnL8cj6d+/PpLEFwZ
      GByUcqpqKGTjVtcglY71/ehNqph2dg+YtC8w9j9uLmmlolT+aR7x2YfP/vHz9Nu/EySBMUAq
      4VYN3+Tfk6bmasKdpuZqwp3n5LlY8vbVK3ypaOzGtFBEjt2d7R3sF/PZ6dvX/OnC3tJCplSc
      nXqgdfYu3p9s6+vJhbbXvUnv5lOYUDos2mzs8PbY3TJSWdw+7Ot2z0+Nh7PltdkZoVR46+Yd
      vbNbW9+Zg6nBt0bHoHxpcX7R7OyUC+lbEw90/NLaIbK/PFkR6G3Geh0e477VvVBu5cl9TGCS
      ktC1qzekOuPc041sZNeXKLvbHHU+jaulzP3Hy+nQvjdSdFpVk3dvhPPs3uISSRcez+1293XV
      WanDUPjo6CjASpPz27193Suzd+c2A0josCakx8enDfZ2jaLOYxm7eO8KKtCM3hi1d/SmdhcW
      vKmkbz1b5ed9mzBfZ9LU+zYyebSx7U+vzT2oAIOGX7p+Y5pCoJWjpFGEzm8lO47Lvj0nz0UR
      JGD8ex6CX9vf9SSTiQpOAwB4NEvxJRdeGihBaSibnHs0Pbe8XyVpvojORErDp7oDoSAAwNTS
      0WnTLvljGjRdxEEMweLb6yQfP9zZTmRzuUKlzv3wpbqXh3uP9hZTpQpaJdfnplf2/SKG8IYS
      hBB4N/brXAcAAPhE0h9JpjPJVFZvc1kdLVatKgulYBjeWl2q//bL8JhcPB2PRRPJuEim0ar1
      Z4Y6MtlCHs5DvpVI3XWLNEXDGSgWj0GpBE6znS3Wjr4htFhKZVNYrbS5eVj/FeFQOp5Kp5Op
      AlKrEDSciZQJMhoM0VUkVW4gjccTUkl/JJlOJ1NZHMOqNThYqCDxCEnR4dTxs+u+92bgWT9X
      Fa+22U1KhZQEIo1UKFWoHCYyFo1Z+pw4TsLpyLX15LmzwxaLw+7qFCJoPptx6Cx6bXXrIKjX
      tgIAop7VjTB81uWI5LFSOqoXsKSzQ1CFGJ7EYTPJ6ra6JSuZr+8+PX/+5b2dvUQk2t51qjuB
      qAwWmxUlEoHWgQaM9fVGm05P4axFzsfi0ZjK2q7VaKxmk13PZ9XO+lWAQq2zWkwMw6vyZZFo
      kpXp9Eqly2mz2axRJ95at9mtSCpvbXUo1VIDQscj0RJEnn3Z4c+3ALNFI0/1n6p/awKbqwNW
      yCw2YyERVyvlPIZVyeV5jG+xt7CyBtIyOr1Fr0cpvkUhqqUKPKlIqFHKMLis1pssxuPT0sec
      e0qlkubPvOaffcjQNODzG5rzUCqV1BrNyUVauVRS/RDr0BSG1YQqrq2Af4SlS+WqRsO9yPVb
      fqgQIeWyQqU6yRSOZzB0Fa0K6glRU3M14U5TczXhzvM0F3V/9AZWqz2ZWyQp+vHCWm93l4AP
      5h6M+9OF/ZUllCAezz5l8er85r7b7fasPj2I5XUCZDuGtZg0ucTRnXtTFEEs7x11dzjXnjyI
      FbDNp7N8qXhyYkrf2qGu73nM4KWx8TuVKrE4N29u65CJ2KmZp1ohuhtCfeuPq2K9WVvvgyMb
      3vPGCpsLDwmxSVjL3Lo1LjeY11d283HPURpzttQ7wIBAC7OLG9mo9yiBOIyyqXtj8RIIbG1T
      TOnJoqerx13nmY5lqOmpB7xa+eHyfle3e3V2Ynk/SqSjuJC9N/HQ1OJWvsgr+Vu2n95B+ar7
      d+7Z2jsh3/r8XjwX3ksiDBrzlXhqvareQQi5mMcThraWHlcFBhW/fGt0mq2Vln1Ri4Ja28+0
      Hdeu/xzNRdby5XKRkAx1mJeW5iXlcgQhAGCRQpEEwgvnBsKRYK1cXts5CPp3g7nK/PJyEYYW
      ZqY9UQgAoLe6OozS+xtecT4C14AfggPLc3msGPPte45C6bo1F0+sujjSt/b0XiyPYDjl2Vhc
      3D2kK7mNg1CZxLYXt+pcBwCAYbnw/tFRIBAMZ/S2dqPZpJEIjkKBcDi8PPek/vtvDUeD3pD/
      0B8IBEUyjV6j7u10+HzhUCQY234artuZg8RrQd9RwH8UDgRwmu11O2yt7mQoEgr5sgVoddVT
      987ozKEnHE8c+vw5pJbOFUvFdDJfyCZTxVQ8UmjgNIJVC8E9/9HRUSiSQuE8jBS98XQFyqDl
      kieYOvYr3/vrKaShTBqKxRMsT2DQq+IHy7dm9k71dobKKFXKAMCyLC8Z8n1ydbzF5lRLWI3J
      bjRaJGTF1eYswAWdyUzVUABAzLs6580O2zRxQoJACTlVk1razGo5lCvabSYeSdW5HwqFPrl2
      /9SZC2KyFAxEJGqtlEeqDVa9ToPmYXN7A6kuk8Uuk4rUJhOfzKcSMbGuzWgwGrQad0eHs6Or
      /nOmWm806tRylVwi4SWSGQzILTpta4vJ6epQ2LrsdRdOimVKh80sUsh0anEsmtgLlc4Ntre0
      OfQ2l0Gp6Oh21X1FAofTJeQDs1WXicbkBm2tVNRqtKVS2dbS0tBwNJPFLpeK1SaTgIJzKCPj
      kzKFAisVVQaLVnX8S6Njzj2FQkGv/9MC5Gcf0iQJBAJBIwYahUJBp9efXFAUCwW1Xn/yXBdN
      opWqQKPmONjmj7B0Aa7o9Sea8faMHzBEKp1OcHLNRWFllK/VvDhETc3VhDtNzdWEO/8PJiCl
      gXlMraAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
