<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location id='ExternalExceptionReportingDashboard' path='/t/UnderlyingData/workbooks' revision='2.4' site='UnderlyingData' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Min Average Ad Calls per Day' datatype='integer' name='[Average Pages per Day]' param-domain-type='any' role='measure' type='quantitative' value='1000'>
        <calculation class='tableau' formula='1000' />
      </column>
      <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
        <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Site&quot;' />
          <member value='&quot;Ad Unit&quot;' />
          <member value='&quot;Site and Browser Family&quot;' />
          <member value='&quot;Ad Unit and Browser Family&quot;' />
        </members>
      </column>
      <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Calls&quot;'>
        <calculation class='tableau' formula='&quot;Ad Calls&quot;' />
        <aliases>
          <alias key='&quot;Percent Served&quot;' value='% Served' />
        </aliases>
        <members>
          <member value='&quot;Gross Media Revenue&quot;' />
          <member value='&quot;Ad Calls&quot;' />
          <member value='&quot;Interaction Rate&quot;' />
          <member value='&quot;CPI&quot;' />
          <member alias='% Served' value='&quot;Percent Served&quot;' />
        </members>
      </column>
      <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Drop MinMax' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='% Served Cutoff' datatype='real' name='[Standard Deviations (copy)]' param-domain-type='any' role='measure' type='quantitative' value='99.0'>
        <calculation class='tableau' formula='99.0' />
      </column>
      <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
        <calculation class='tableau' formula='2.0' />
      </column>
    </datasource>
    <datasource caption='request_errors' inline='true' name='request_errors (copy)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;requested_at_date_in_et as &quot;Date&quot;,&#13;&#10;&#9;browser_family as &quot;Browser Family&quot;,&#13;&#10;&#9;browser as &quot;Browser&quot;,&#13;&#10;&#9;os_family as &quot;OS Family&quot;,&#13;&#10;&#9;os as &quot;OS&quot;,&#13;&#10;&#9;sum(case when uncaught_exception then 1 else 0 end) as &quot;Uncaught Exception&quot;,&#13;&#10;&#9;sum(case when parsing_error then 1 else 0 end) as &quot;Parsing Error&quot;,&#13;&#10;&#9;sum(case when inactive_entity then 1 else 0 end) as &quot;Inactive Entity&quot;,&#13;&#10;&#9;sum(case when derived_intent_mismatch then 1 else 0 end) as &quot;Derived Intent Mismatch&quot;,&#13;&#10;&#9;sum(case when unknown_entity then 1 else 0 end) as &quot;Unknown Entity&quot;,&#13;&#10;&#9;sum(case when unknown_hotel_property then 1 else 0 end) as &quot;Unknown Hotel Property&quot;,&#13;&#10;&#9;sum(case when unknown_product_category then 1 else 0 end) as &quot;Unknown Product Category&quot;,&#13;&#10;&#9;sum(case when unknown_ad_unit then 1 else 0 end) as &quot;Unknown Ad Unit&quot;,&#13;&#10;&#9;sum(case when unknown_market then 1 else 0 end) as &quot;Unknown Market&quot;,&#13;&#10;&#9;sum(case when unknown_airport_code then 1 else 0 end) as &quot;Unknown Airport Code&quot;,&#13;&#10;&#9;sum(case when publisher_show_ads_suppression then 1 else 0 end) as &quot;Suppressed by Publisher&quot;,&#13;&#10;&#9;sum(case when suspicious_hotel_conversion_value then 1 else 0 end) as &quot;Suspicious Hotel Conversion Value&quot;,&#13;&#10;&#9;count(1) as &quot;Request Errors&quot;&#13;&#10;from intent_media_log_data_production.request_errors&#13;&#10;where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;and ip_address_blacklisted = 0&#13;&#10;group by&#13;&#10;&#9;requested_at_date_in_et,&#13;&#10;&#9;os_family,&#13;&#10;&#9;os,&#13;&#10;&#9;browser_family,&#13;&#10;&#9;browser</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[request_errors (copy)].[usr:Metric Z-Score:ok]&quot;' value='Metric Z-Score' />
        </aliases>
      </column>
      <column caption='Metric Z-Score - 3 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1510311113219541]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-3) - WINDOW_AVG([Calculation_2590311154506235],-30,-3))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-30,-3),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors Average' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_2580116164200677]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric without Min/Max' datatype='integer' default-format='N' name='[Calculation_2590311154506235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN NULL ELSE [Metric] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 7 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_3570311113337993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-7) - WINDOW_AVG([Calculation_2590311154506235],-34,-7))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-34,-7),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 4 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_4100311113237449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-4) - WINDOW_AVG([Calculation_2590311154506235],-31,-4))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-31,-4),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 1 Day before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_4450311100654122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-1) - WINDOW_AVG([Calculation_2590311154506235],-28,-1))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-28,-1),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 2 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8380311113127777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-2) - WINDOW_AVG([Calculation_2590311154506235],-29,-2))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-29,-2),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_8760311113355964]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Calculation_4450311100654122] &gt; [Parameters].[Standard Deviations] OR [Calculation_4450311100654122] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_8380311113127777] &gt; [Parameters].[Standard Deviations] OR [Calculation_8380311113127777] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_1510311113219541] &gt; [Parameters].[Standard Deviations] OR [Calculation_1510311113219541] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_4100311113237449] &gt; [Parameters].[Standard Deviations] OR [Calculation_4100311113237449] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9660311113253455] &gt; [Parameters].[Standard Deviations] OR [Calculation_9660311113253455] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9420311113315981] &gt; [Parameters].[Standard Deviations] OR [Calculation_9420311113315981] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_3570311113337993] &gt; [Parameters].[Standard Deviations] OR [Calculation_3570311113337993] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_8930219124412291]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Metric Z-Score - 6 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9420311113315981]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-6) - WINDOW_AVG([Calculation_2590311154506235],-33,-6))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-33,-6),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 5 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9660311113253455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-5) - WINDOW_AVG([Calculation_2590311154506235],-32,-5))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-32,-5),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Derived Intent Mismatch]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Inactive Entity]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n0;-0' name='[Metric Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_2590311154506235],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n0.0;-0.0' name='[Metric Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_2590311154506235],-27,0))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-27,0),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n0;-0' name='[Metric]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Request Errors])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Parsing Error]' role='measure' type='quantitative'>
      </column>
      <column caption='Request Errors Positive Filter' datatype='boolean' name='[Request Errors Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Parameters].[Only Show Negative Changes] AND [Metric Z-Score] &gt; 0)&#13;&#10;OR (NOT [Parameters].[Only Show Negative Changes])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Request Errors]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Suppressed by Publisher]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Suspicious Hotel Conversion Value]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Uncaught Exception]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Ad Unit]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Airport Code]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Entity]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Hotel Property]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Market]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Product Category]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Derived Intent Mismatch]' derivation='Sum' name='[sum:Derived Intent Mismatch:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inactive Entity]' derivation='Sum' name='[sum:Inactive Entity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parsing Error]' derivation='Sum' name='[sum:Parsing Error:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Request Errors]' derivation='Sum' name='[sum:Request Errors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Publisher]' derivation='Sum' name='[sum:Suppressed by Publisher:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suspicious Hotel Conversion Value]' derivation='Sum' name='[sum:Suspicious Hotel Conversion Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Uncaught Exception]' derivation='Sum' name='[sum:Uncaught Exception:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Ad Unit]' derivation='Sum' name='[sum:Unknown Ad Unit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Airport Code]' derivation='Sum' name='[sum:Unknown Airport Code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Entity]' derivation='Sum' name='[sum:Unknown Entity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Hotel Property]' derivation='Sum' name='[sum:Unknown Hotel Property:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Market]' derivation='Sum' name='[sum:Unknown Market:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Product Category]' derivation='Sum' name='[sum:Unknown Product Category:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_2590311154506235]' derivation='User' name='[usr:Calculation_2590311154506235:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\request_errors.tde' schema='Extract' tablename='Extract' update-time='12/11/2014 5:41:19 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18262' timestamp-start='2014-12-11 17:41:19.591000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.328244' measure-ordering='alphabetic' measure-percentage='0.508906' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy)].[sum:Derived Intent Mismatch:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy)].[usr:Calculation_2580116164200677:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy)].[usr:Metric:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[request_errors (copy)].[sum:Request Errors:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Entity:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Ad Unit:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[request_errors (copy)].[sum:Suppressed by Publisher:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[request_errors (copy)].[sum:Inactive Entity:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Hotel Property:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Airport Code:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[request_errors (copy)].[sum:Suspicious Hotel Conversion Value:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Market:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[request_errors (copy)].[sum:Unknown Product Category:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy)].[usr:Calculation_2590311154506235:qk:2]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy)].[usr:Request Errors Z-Score:ok:1]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[request_errors (copy)].[sum:Uncaught Exception:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[request_errors (copy)].[sum:Parsing Error:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
          <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Site and Browser Family&quot;' />
            <member value='&quot;Ad Unit and Browser Family&quot;' />
          </members>
        </column>
        <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='funnel' inline='true' name='funnel (copy)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;  dimensions.requested_at_date_in_et as Date,&#13;&#10;  dimensions.ad_unit_id as &quot;Ad Unit ID&quot;,&#13;&#10;  dimensions.browser_family as &quot;Browser Family&quot;,&#13;&#10;  dimensions.browser as Browser,&#13;&#10;  sites.id as &quot;Site ID&quot;,&#13;&#10;  sites.display_name as &quot;Site&quot;,&#13;&#10;  ad_units.name as &quot;Ad Unit&quot;,&#13;&#10;  ad_units.ad_type as &quot;Ad Type&quot;,&#13;&#10;  ad_units.product_category_type as &quot;Product Category Type&quot;,&#13;&#10;  sum(numbers.ad_calls) as &quot;Ad Calls&quot;,&#13;&#10;  sum(numbers.blacklisted_ad_calls) as &quot;Blacklisted Ad Calls&quot;,&#13;&#10;  sum(numbers.served_ad_calls) as &quot;Served Ad Calls&quot;,&#13;&#10;  sum(numbers.interactions) as Interactions,&#13;&#10;  sum(numbers.clicks) as Clicks,&#13;&#10;  sum(numbers.fraudulent_clicks) as &quot;Fraudulent Clicks&quot;, &#13;&#10;  sum(numbers.sum_actual_cpc) as &quot;Gross Media Revenue&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select *&#13;&#10;  from&#13;&#10;    (select&#13;&#10;        distinct(requested_at_date_in_et) as requested_at_date_in_et&#13;&#10;    from intent_media_log_data_production.ad_calls&#13;&#10;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)) dates,&#13;&#10;    (select&#13;&#10;        distinct(ad_unit_id) as ad_unit_id&#13;&#10;    from intent_media_log_data_production.ad_calls&#13;&#10;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)) ad_units,&#13;&#10;    (select&#13;&#10;        ifnull(browser_family,&apos;NULL&apos;) as browser_family,&#13;&#10;        ifnull(browser,&apos;NULL&apos;) as browser&#13;&#10;    from intent_media_log_data_production.ad_calls&#13;&#10;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;        browser_family,&#13;&#10;        browser) browser&#13;&#10;) dimensions&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    requested_at_date_in_et,&#13;&#10;    site_id,&#13;&#10;    product_category_type,&#13;&#10;    ad_unit_id,&#13;&#10;    browser_family,&#13;&#10;    browser,&#13;&#10;    count(case when ip_address_blacklisted = 0 then request_id end) as ad_calls,&#13;&#10;    count(case when ip_address_blacklisted = 1 then request_id end) as blacklisted_ad_calls,&#13;&#10;    count(case when ip_address_blacklisted = 0 and outcome_type = &apos;SERVED&apos; then request_id end) as served_ad_calls,&#13;&#10;    sum(interactions) as interactions,&#13;&#10;    sum(clicks) as clicks,&#13;&#10;    sum(fraudulent_clicks) as fraudulent_clicks,&#13;&#10;    sum(sum_actual_cpc) as sum_actual_cpc&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select&#13;&#10;      min(ac.requested_at_date_in_et) as requested_at_date_in_et,&#13;&#10;      min(ac.site_id) as site_id,&#13;&#10;      min(ac.product_category_type) as product_category_type,&#13;&#10;      min(ac.ad_unit_id) as ad_unit_id,&#13;&#10;      min(ac.browser_family) as browser_family,&#13;&#10;      min(ac.browser) as browser,&#13;&#10;      min(ac.outcome_type) as outcome_type,&#13;&#10;      ac.ip_address_blacklisted,&#13;&#10;      ac.request_id,&#13;&#10;      case when count(case when c.fraudulent = 0 then c.request_id end) &gt;&gt; 0 then 1 else 0 end as interactions,&#13;&#10;      count(case when c.fraudulent = 0 then c.request_id end) as clicks,&#13;&#10;      count(case when c.fraudulent = 1 then c.request_id end) as fraudulent_clicks,&#13;&#10;      sum(case when c.fraudulent = 0 then c.actual_cpc end) as sum_actual_cpc&#13;&#10;    from intent_media_log_data_production.ad_calls ac&#13;&#10;    left join intent_media_log_data_production.clicks c&#13;&#10;    on ac.request_id = c.ad_call_request_id&#13;&#10;    and c.requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;    and c.requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    and c.ip_address_blacklisted = 0&#13;&#10;    where ac.requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;      and ac.requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      ac.ip_address_blacklisted,&#13;&#10;      ac.request_id&#13;&#10;  ) media&#13;&#10;  group by&#13;&#10;    requested_at_date_in_et,&#13;&#10;    site_id,&#13;&#10;    product_category_type,&#13;&#10;    ad_unit_id,&#13;&#10;    browser_family,&#13;&#10;    browser&#13;&#10;) numbers&#13;&#10;on dimensions.requested_at_date_in_et = numbers.requested_at_date_in_et&#13;&#10;and dimensions.ad_unit_id = numbers.ad_unit_id&#13;&#10;and dimensions.browser_family = numbers.browser_family&#13;&#10;and dimensions.browser = numbers.browser&#13;&#10;left join intent_media_production.ad_units on ad_units.id = dimensions.ad_unit_id&#13;&#10;left join intent_media_production.sites on sites.id = ad_units.site_id&#13;&#10;where ad_units.active = 1&#13;&#10;group by&#13;&#10;  dimensions.requested_at_date_in_et,&#13;&#10;  dimensions.ad_unit_id,&#13;&#10;  dimensions.browser_family,&#13;&#10;  dimensions.browser,&#13;&#10;  sites.id,&#13;&#10;  sites.display_name,&#13;&#10;  ad_units.name,&#13;&#10;  ad_units.ad_type,&#13;&#10;  ad_units.product_category_type</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[funnel (copy)].[usr:Calculation_1510314114443868:qk:1]&quot;' value='Metric without Min/Max' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_2760725111736309:qk:11]&quot;' value='Revenue Impact' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_4910407125613074:qk:3]&quot;' value='Max_Metric' />
          <alias key='&quot;[funnel (copy)].[usr:Calculation_9040407125642961:qk:3]&quot;' value='Min_Metric' />
          <alias key='&quot;[funnel (copy)].[usr:Metric Average:qk:5]&quot;' value='Metric Average' />
          <alias key='&quot;[funnel (copy)].[usr:Metric Z-Score:qk:1]&quot;' value='Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Metric Z-Score:qk]&quot;' value='Metric Z-Score' />
          <alias key='&quot;[funnel (copy)].[usr:Pages Available Average:qk:2]&quot;' value='Ad Calls Average' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Ad Type, Product, Site, Ad Unit, Browser Family' datatype='string' name='[Calculation_0120314135922361]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// ad type, product, site, ad unit, browser family&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot;&#13;&#10;    WHEN &quot;Site and Browser Family&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot; +  IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser Family&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Ad Calls without Min/Max' datatype='integer' name='[Calculation_0180317120202106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Ad Calls]),0) = WINDOW_MAX(ifnull(sum([Ad Calls]),0)) &#13;&#10;OR ifnull(sum([Ad Calls]),0) = WINDOW_MIN(ifnull(sum([Ad Calls]),0))&#13;&#10;THEN NULL ELSE ifnull(sum([Ad Calls]),0) END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric without Min/Max' datatype='real' name='[Calculation_1510314114443868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN 0 ELSE [Metric] END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Revenue Impact' datatype='real' default-format='c&quot;$&quot;0;(&quot;$&quot;0)' name='[Calculation_2760725111736309]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL([Metric],0) - [Metric Average])/[Metric Average]) * [Calculation_3370728184739033]' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_2830314120024265]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Calculation_9090314114330358] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Gross Media Revenue Average' datatype='real' name='[Calculation_3370728184739033]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_6870728184706503],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Dimension' datatype='string' name='[Calculation_4780407140049408]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser Family&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Max_Metric' datatype='real' default-format='n#,##0.000000;-#,##0.000000' name='[Calculation_4910407125613074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX([Metric])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Cutoff Filter' datatype='string' name='[Calculation_5660419223257846]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;Percent Served&quot; &#13;&#10;THEN (IF [Metric] &lt; ([Parameters].[Standard Deviations (copy)]/100) AND ([Metric Average] - [Metric]) &gt; 0.05 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) &#13;&#10;ELSE &quot;Keep&quot; &#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5720426190956776]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Gross Media Revenue without Min/Max' datatype='real' name='[Calculation_6870728184706503]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ifnull(sum([Gross Media Revenue]),0.0) = WINDOW_MAX(ifnull(sum([Gross Media Revenue]),0.0))&#13;&#10;or ifnull(sum([Gross Media Revenue]),0.0) = WINDOW_MIN(ifnull(sum([Gross Media Revenue]),0.0))&#13;&#10;then null else ifnull(sum([Gross Media Revenue]),0.0) end' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Min_Metric' datatype='real' default-format='n#,##0.000000;-#,##0.000000' name='[Calculation_9040407125642961]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MIN([Metric])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 7 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-7) - WINDOW_AVG([Calculation_1510314114443868],-34,-7))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-34,-7),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 6 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-6) - WINDOW_AVG([Calculation_1510314114443868],-33,-6))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-33,-6),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 5 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-5) - WINDOW_AVG([Calculation_1510314114443868],-32,-5))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-32,-5),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 4 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-4) - WINDOW_AVG([Calculation_1510314114443868],-31,-4))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-31,-4),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 3 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-3) - WINDOW_AVG([Calculation_1510314114443868],-30,-3))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-30,-3),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 2 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-2) - WINDOW_AVG([Calculation_1510314114443868],-29,-2))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-29,-2),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 1 Day before Yesterday' datatype='real' name='[Calculation_9090314114330358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-1) - WINDOW_AVG([Calculation_1510314114443868],-28,-1))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-28,-1),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column caption='% Served' datatype='real' default-format='p0.0000%' name='[Fill Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FLIGHTS&quot;' value='Flights' />
          <alias key='&quot;HOTELS&quot;' value='Hotels' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Site ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Site]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column-instance column='[Calculation_1510314114443868]' derivation='User' name='[usr:Calculation_1510314114443868:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1510314114443868]' derivation='User' name='[usr:Calculation_1510314114443868:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_2760725111736309]' derivation='User' name='[usr:Calculation_2760725111736309:qk:11]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Metric Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_3370728184739033]' ordering-type='Rows' />
        <table-calc field='[funnel (copy)].[Calculation_6870728184706503]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_4910407125613074]' derivation='User' name='[usr:Calculation_4910407125613074:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_9040407125642961]' derivation='User' name='[usr:Calculation_9040407125642961:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
      </column-instance>
      <group hidden='true' name='[Action (Ad Unit,Browser Family,OS,Product,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit]' />
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[OS]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family,Date,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Dimension)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Formatted Dimension]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (OS,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OS]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Product,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category Type]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\system_monitoring_funnel.tde' schema='Extract' tablename='Extract' update-time='12/11/2014 5:31:06 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_5720426190956776]' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='617652' timestamp-start='2014-12-11 17:31:06.533000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.220715' group-percentage='0.142722' measure-ordering='alphabetic' measure-percentage='0.607891' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Multiple Values]' max='6.0' min='-6.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[funnel (copy)].[usr:Metric:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[funnel (copy)].[usr:Pages Available \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[funnel (copy)].[usr:CPC \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[funnel (copy)].[usr:CTR \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[funnel (copy)].[usr:CPI \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[funnel (copy)].[usr:Gross Media Revenue \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[funnel (copy)].[usr:Calculation_1510314114443868:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[funnel (copy)].[usr:Pages Served \%D 2W:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Min Average Ad Calls per Day' datatype='integer' name='[Average Pages per Day]' param-domain-type='any' role='measure' type='quantitative' value='1000'>
          <calculation class='tableau' formula='1000' />
        </column>
        <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
          <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Site and Browser Family&quot;' />
            <member value='&quot;Ad Unit and Browser Family&quot;' />
          </members>
        </column>
        <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Calls&quot;'>
          <calculation class='tableau' formula='&quot;Ad Calls&quot;' />
          <aliases>
            <alias key='&quot;Percent Served&quot;' value='% Served' />
          </aliases>
          <members>
            <member value='&quot;Gross Media Revenue&quot;' />
            <member value='&quot;Ad Calls&quot;' />
            <member value='&quot;Interaction Rate&quot;' />
            <member value='&quot;CPI&quot;' />
            <member alias='% Served' value='&quot;Percent Served&quot;' />
          </members>
        </column>
        <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Drop MinMax' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='% Served Cutoff' datatype='real' name='[Standard Deviations (copy)]' param-domain-type='any' role='measure' type='quantitative' value='99.0'>
          <calculation class='tableau' formula='99.0' />
        </column>
        <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='All Metrics' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
              <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Site&quot;' />
                <member value='&quot;Ad Unit&quot;' />
                <member value='&quot;Site and Browser Family&quot;' />
                <member value='&quot;Ad Unit and Browser Family&quot;' />
              </members>
            </column>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Ad Calls&quot;' />
              <aliases>
                <alias key='&quot;Percent Served&quot;' value='% Served' />
              </aliases>
              <members>
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member alias='% Served' value='&quot;Percent Served&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy)'>
            <column caption='Ad Type, Product, Site, Ad Unit, Browser Family' datatype='string' name='[Calculation_0120314135922361]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// ad type, product, site, ad unit, browser family&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot;&#13;&#10;    WHEN &quot;Site and Browser Family&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot; +  IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser Family&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Revenue Impact' datatype='real' default-format='c&quot;$&quot;0;(&quot;$&quot;0)' name='[Calculation_2760725111736309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL([Metric],0) - [Metric Average])/[Metric Average]) * [Calculation_3370728184739033]' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Metric Cutoff Filter' datatype='string' name='[Calculation_5660419223257846]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;Percent Served&quot; &#13;&#10;THEN (IF [Metric] &lt; ([Parameters].[Standard Deviations (copy)]/100) AND ([Metric Average] - [Metric]) &gt; 0.05 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) &#13;&#10;ELSE &quot;Keep&quot; &#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Calculation_0120314135922361]' derivation='None' name='[none:Calculation_0120314135922361:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2760725111736309]' derivation='User' name='[usr:Calculation_2760725111736309:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3370728184739033]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_6870728184706503]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_5660419223257846]' derivation='User' name='[usr:Calculation_5660419223257846:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_9430314151108835]' derivation='User' name='[usr:Calculation_9430314151108835:nk:6]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[usr:Calculation_5660419223257846:nk:2]'>
            <groupfilter function='member' level='[usr:Calculation_5660419223257846:nk:2]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Calculation_9430314151108835:nk:6]'>
            <groupfilter function='member' level='[usr:Calculation_9430314151108835:nk:6]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:3]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:3]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:3]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[usr:Calculation_9430314151108835:nk:6]</column>
            <column>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:3]</column>
            <column>[funnel (copy)].[usr:Calculation_5660419223257846:nk:2]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='29' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='68' />
            <format attr='width' field='[funnel (copy)].[none:Calculation_0120314135922361:nk]' value='468' />
            <format attr='width' field='[funnel (copy)].[usr:Metric Z-Score:ok:1]' value='84' />
            <format attr='width' field='[Parameters].[Measure]' value='160' />
            <format attr='width' field='[Parameters].[Breakdown]' value='104' />
            <format attr='width' field='[funnel (copy)].[usr:Metric Average:ok:1]' value='88' />
            <format attr='width' field='[funnel (copy)].[usr:Calculation_2760725111736309:ok]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy)].[none:Date:ok]' value='true' />
            <format attr='text-orientation' field='[Parameters].[Measure]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([Parameters].[Measure] / ([Parameters].[Breakdown] / ([funnel (copy)].[none:Calculation_0120314135922361:nk] / ([funnel (copy)].[usr:Metric:ok] / ([funnel (copy)].[usr:Metric Average:ok:1] / ([funnel (copy)].[usr:Metric Z-Score:ok:1] / [funnel (copy)].[usr:Calculation_2760725111736309:ok])))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='All Metrics with Dimension' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column caption='Dimension' datatype='string' name='[Calculation_4780407140049408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser Family&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Calculation_4780407140049408]' derivation='None' name='[none:Calculation_4780407140049408:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9430314151108835]' derivation='User' name='[usr:Calculation_9430314151108835:nk:6]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Average:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Z-Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Calculation_9430314151108835:nk:6]'>
            <groupfilter function='member' level='[usr:Calculation_9430314151108835:nk:6]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:3]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk:3]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:3]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[usr:Calculation_9430314151108835:nk:6]</column>
            <column>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:3]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='97' />
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='93' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Calculation_4780407140049408:nk]' value='308' />
            <format attr='width' field='[funnel (copy)].[none:Date:ok]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Calculation_4780407140049408:nk] / [funnel (copy)].[none:Date:ok])</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='BOT'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[none:Browser:nk]'>
            <groupfilter function='member' level='[none:Browser:nk]' member='&quot;BOT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter from='&quot;AirFastTickets&quot;' function='range' level='[none:Site:nk]' to='&quot;Worldspan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[none:Browser:nk]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[funnel (copy)].[none:Browser:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[sum:Ad Calls:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy)].[none:Date:ok]</rows>
        <cols>([funnel (copy)].[none:Browser:nk] / ([funnel (copy)].[none:Product Category Type:nk] / [funnel (copy)].[none:Site:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Metric Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column caption='Metric without Min/Max' datatype='real' name='[Calculation_1510314114443868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN 0 ELSE [Metric] END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1510314114443868]' derivation='User' name='[usr:Calculation_1510314114443868:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='level-members' level='[none:Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[none:Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[funnel (copy)].[usr:Metric:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[funnel (copy)].[usr:Calculation_1510314114443868:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy)].[usr:Calculation_1510314114443868:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[funnel (copy)].[usr:Calculation_1510314114443868:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[funnel (copy)].[usr:Calculation_1510314114443868:qk]' fill-above='false' fill-below='false' formula='stdev' id='refline0' label-type='automatic' scope='per-pane' symmetric='false' type='sample' value-column='[funnel (copy)].[usr:Calculation_1510314114443868:qk]' z-order='1'>
              <reference-line-value factor='-3' />
              <reference-line-value factor='3' />
            </reference-line>
          </pane>
          <pane id='1' y-axis-name='[funnel (copy)].[usr:Calculation_1510314114443868:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[funnel (copy)].[usr:Metric:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy)].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Site:nk] * ([funnel (copy)].[usr:Calculation_1510314114443868:qk] + [funnel (copy)].[usr:Metric:qk]))</rows>
        <cols>[funnel (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Old All Metrics' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
              <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Site&quot;' />
                <member value='&quot;Ad Unit&quot;' />
                <member value='&quot;Site and Browser Family&quot;' />
                <member value='&quot;Ad Unit and Browser Family&quot;' />
              </members>
            </column>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Ad Calls&quot;' />
              <aliases>
                <alias key='&quot;Percent Served&quot;' value='% Served' />
              </aliases>
              <members>
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member alias='% Served' value='&quot;Percent Served&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column caption='Ad Type, Product, Site, Ad Unit, Browser Family' datatype='string' name='[Calculation_0120314135922361]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// ad type, product, site, ad unit, browser family&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot;&#13;&#10;    WHEN &quot;Site and Browser Family&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot; +  IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser Family&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_2830314120024265]' role='measure' type='nominal'>
              <calculation class='tableau' formula='([Calculation_9090314114330358] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Calculation_0120314135922361]' derivation='None' name='[none:Calculation_0120314135922361:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2830314120024265]' derivation='User' name='[usr:Calculation_2830314120024265:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358 1 1]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358 1]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358 1 1 1]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358 1 1 1 1]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358 1 1 1 1 1]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_9090314114330358 1 1 1 1 1 1]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_9430314151108835]' derivation='User' name='[usr:Calculation_9430314151108835:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[funnel (copy)].[Calculation_0180317120202106]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[usr:Calculation_2830314120024265:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_2830314120024265:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Calculation_9430314151108835:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_9430314151108835:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:3]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk]'>
            <groupfilter function='level-members' level='[usr:Volume Filter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk]</column>
            <column>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:3]</column>
            <column>[funnel (copy)].[usr:Calculation_9430314151108835:nk:1]</column>
            <column>[funnel (copy)].[usr:Calculation_2830314120024265:nk:4]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Calculation_0120314135922361:nk]' value='460' />
            <format attr='width' field='[funnel (copy)].[usr:Metric:ok]' value='56' />
            <format attr='width' field='[funnel (copy)].[usr:Metric Average:ok:1]' value='60' />
            <format attr='width' field='[funnel (copy)].[usr:Metric Z-Score:ok:1]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([Parameters].[Measure] / ([Parameters].[Breakdown] / ([funnel (copy)].[none:Calculation_0120314135922361:nk] / ([funnel (copy)].[usr:Metric:ok] / ([funnel (copy)].[usr:Metric Average:ok:1] / ([funnel (copy)].[usr:Metric Z-Score:ok:1] / ([funnel (copy)].[sum:Ad Calls:ok] / [funnel (copy)].[usr:Pages Available Average:ok]))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Overall'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Media Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Interactions])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.0000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPI:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='level-members' level='[none:Ad Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Unit:nk]'>
            <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Webjet - Flights List Page&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser:nk]'>
            <groupfilter function='member' level='[none:Browser:nk]' member='&quot;SAFARI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Category Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Ad Unit:nk]</column>
            <column>[funnel (copy)].[none:Browser:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='130' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy)].[none:Ad Unit:nk]' value='276' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([funnel (copy)].[none:Site:nk] / ([funnel (copy)].[none:Ad Type:nk] / ([funnel (copy)].[none:Product Category Type:nk] / ([funnel (copy)].[none:Ad Unit:nk] / [funnel (copy)].[none:Browser:nk])))))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Request Error Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='request_errors' name='request_errors (copy)' />
          </datasources>
          <datasource-dependencies datasource='request_errors (copy)'>
            <column caption='Metric without Min/Max' datatype='integer' default-format='N' name='[Calculation_2590311154506235]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN NULL ELSE [Metric] END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' default-format='n0;-0' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Request Errors])' scope-isolation='false' />
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2590311154506235]' derivation='User' name='[usr:Calculation_2590311154506235:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[request_errors (copy)].[usr:Metric:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[request_errors (copy)].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[request_errors (copy)].[usr:Calculation_2590311154506235:qk:2]' fill-above='false' fill-below='false' formula='stdev' id='refline0' label-type='automatic' scope='per-table' symmetric='false' type='sample' value-column='[request_errors (copy)].[usr:Calculation_2590311154506235:qk:2]' z-order='1'>
              <reference-line-value factor='-3' />
              <reference-line-value factor='3' />
            </reference-line>
          </pane>
          <pane id='1' y-axis-name='[request_errors (copy)].[usr:Calculation_2590311154506235:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[request_errors (copy)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[request_errors (copy)].[usr:Metric:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[request_errors (copy)].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([request_errors (copy)].[usr:Calculation_2590311154506235:qk:2] + [request_errors (copy)].[usr:Metric:qk])</rows>
        <cols>[request_errors (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Request Errors' tab-color='#d6f2f8'>
      <table>
        <view>
          <datasources>
            <datasource caption='request_errors' name='request_errors (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
              <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Site&quot;' />
                <member value='&quot;Ad Unit&quot;' />
                <member value='&quot;Site and Browser Family&quot;' />
                <member value='&quot;Ad Unit and Browser Family&quot;' />
              </members>
            </column>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Ad Calls&quot;' />
              <aliases>
                <alias key='&quot;Percent Served&quot;' value='% Served' />
              </aliases>
              <members>
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member alias='% Served' value='&quot;Percent Served&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='request_errors (copy)'>
            <column caption='Request Errors Average' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_2580116164200677]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_8760311113355964]' role='measure' type='nominal'>
              <calculation class='tableau' formula='([Calculation_4450311100654122] &gt; [Parameters].[Standard Deviations] OR [Calculation_4450311100654122] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_8380311113127777] &gt; [Parameters].[Standard Deviations] OR [Calculation_8380311113127777] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_1510311113219541] &gt; [Parameters].[Standard Deviations] OR [Calculation_1510311113219541] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_4100311113237449] &gt; [Parameters].[Standard Deviations] OR [Calculation_4100311113237449] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9660311113253455] &gt; [Parameters].[Standard Deviations] OR [Calculation_9660311113253455] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9420311113315981] &gt; [Parameters].[Standard Deviations] OR [Calculation_9420311113315981] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_3570311113337993] &gt; [Parameters].[Standard Deviations] OR [Calculation_3570311113337993] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_8930219124412291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0;-0' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_2590311154506235],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.0;-0.0' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_2590311154506235],-27,0))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-27,0),2)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' default-format='n0;-0' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Request Errors])' scope-isolation='false' />
            </column>
            <column caption='Request Errors Positive Filter' datatype='boolean' name='[Request Errors Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Only Show Negative Changes] AND [Metric Z-Score] &gt; 0)&#13;&#10;OR (NOT [Parameters].[Only Show Negative Changes])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8930219124412291]' derivation='None' name='[none:Calculation_8930219124412291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_8760311113355964]' derivation='User' name='[usr:Calculation_8760311113355964:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_4450311100654122]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_4100311113237449]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_9660311113253455]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_1510311113219541]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_3570311113337993]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_8380311113127777]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_9420311113315981]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Metric Z-Score]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Request Errors Negative Filter]' derivation='User' name='[usr:Request Errors Negative Filter:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Metric Z-Score]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[request_errors (copy)].[usr:Calculation_2580116164200677:qk:1]' included-values='in-range'>
            <min>1000.0</min>
          </filter>
          <filter class='categorical' column='[request_errors (copy)].[usr:Calculation_8760311113355964:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[usr:Calculation_8760311113355964:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[usr:Calculation_8760311113355964:nk]' member='%null%' />
                <groupfilter function='member' level='[usr:Calculation_8760311113355964:nk]' member='true' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[request_errors (copy)].[usr:Last:qk:3]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[request_errors (copy)].[usr:Metric outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[request_errors (copy)].[usr:Request Errors Negative Filter:nk:4]'>
            <groupfilter function='member' level='[usr:Request Errors Negative Filter:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[request_errors (copy)].[usr:Metric outside of Standard Deviations:nk]</column>
            <column>[request_errors (copy)].[usr:Calculation_2580116164200677:qk:1]</column>
            <column>[request_errors (copy)].[usr:Calculation_8760311113355964:nk]</column>
            <column>[request_errors (copy)].[usr:Last:qk:3]</column>
            <column>[request_errors (copy)].[usr:Request Errors Negative Filter:nk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([request_errors (copy)].[none:Date:ok] / ([Parameters].[Measure] / ([Parameters].[Breakdown] / ([request_errors (copy)].[none:Calculation_8930219124412291:nk] / ([request_errors (copy)].[usr:Metric:ok] / ([request_errors (copy)].[usr:Metric Z-Score:ok] / [request_errors (copy)].[usr:Metric Average:ok:2]))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
            </column>
            <column caption='Revenue Impact' datatype='real' default-format='c&quot;$&quot;0;(&quot;$&quot;0)' name='[Calculation_2760725111736309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL([Metric],0) - [Metric Average])/[Metric Average]) * [Calculation_3370728184739033]' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit ID]' derivation='None' name='[none:Ad Unit ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Browser Family]' derivation='None' name='[none:Browser Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2760725111736309]' derivation='User' name='[usr:Calculation_2760725111736309:qk:11]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Metric Average]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_3370728184739033]' ordering-type='Rows' />
              <table-calc field='[funnel (copy)].[Calculation_6870728184706503]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Average:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Z-Score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Calculation_2760725111736309:qk:11]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Metric:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Metric Average:qk:5]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Metric Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Unit ID:ok]'>
            <groupfilter function='member' level='[none:Ad Unit ID:ok]' member='157' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Browser Family:nk]'>
            <groupfilter function='member' level='[none:Browser Family:nk]' member='&quot;FIREFOX&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Date:ok]'>
            <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;HOTELS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Expedia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Ad Unit ID:ok]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
            <column>[funnel (copy)].[none:Browser Family:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([funnel (copy)].[none:Site:nk] / [funnel (copy)].[none:Browser Family:nk]))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Testing'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser Family&quot;'>
              <calculation class='tableau' formula='&quot;Ad Unit and Browser Family&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Site&quot;' />
                <member value='&quot;Ad Unit&quot;' />
                <member value='&quot;Site and Browser Family&quot;' />
                <member value='&quot;Ad Unit and Browser Family&quot;' />
              </members>
            </column>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Ad Calls&quot;' />
              <aliases>
                <alias key='&quot;Percent Served&quot;' value='% Served' />
              </aliases>
              <members>
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member alias='% Served' value='&quot;Percent Served&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Average:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Z-Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter from='&quot;CT&quot;' function='range' level='[none:Ad Type:nk]' to='&quot;SSR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2014-04-13#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy)].[none:Date:ok]' direction='DESC' />
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;FLIGHTS&quot;' />
              <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;HOTELS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;AirFastTickets&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='47' />
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='92' />
            <format attr='width' field='[Parameters].[Breakdown]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date: </run>
                <run fontcolor='#787878'>&#10;Ad Type, Product, Site, Ad Unit, Browser:&#9;</run>
                <run bold='true'>&lt;[funnel (copy)].[none:Calculation_0120314135922361:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Date:ok] / ([funnel (copy)].[none:Site:nk] / ([funnel (copy)].[none:Ad Unit:nk] / ([funnel (copy)].[none:Browser:nk] / ([funnel (copy)].[sum:Ad Calls:ok] / ([funnel (copy)].[sum:Served Ad Calls:ok] / [funnel (copy)].[sum:Clicks:ok]))))))</rows>
        <cols>([funnel (copy)].[:Measure Names] / ([Parameters].[Measure] / [Parameters].[Breakdown]))</cols>
      </table>
    </worksheet>
    <worksheet name='Testing2'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.0000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[sum:Interactions:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Gross Media Revenue:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy)].[sum:Interactions:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Unit:nk]'>
            <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Package List Page - Orbitz Global&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2014-04-23#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Date:ok]</column>
            <column>[funnel (copy)].[none:Ad Unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Product Category Type:nk] / ([funnel (copy)].[none:Ad Type:nk] / ([funnel (copy)].[none:Site:nk] / ([funnel (copy)].[none:Ad Unit:nk] / [funnel (copy)].[none:Browser:nk]))))</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Testing3'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Dimension' datatype='string' name='[Calculation_4780407140049408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser Family&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN WINDOW_AVG([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN WINDOW_AVG([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE WINDOW_AVG([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00;-0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Measure] = &quot;CPI&quot; THEN (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = TRUE THEN (IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/WINDOW_STDEV([Calculation_1510314114443868],-27,0)&#13;&#10;ELSE (IFNULL([Metric],0) - WINDOW_AVG([Metric],-27,0))/WINDOW_STDEV([Metric],-27,0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n0.00000;-0.00000' name='[Metric]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Ad Calls&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Percent Served&quot; THEN IFNULL([Fill Rate],0)&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN IFNULL([Interaction Rate],0)&#13;&#10;    WHEN &quot;CPI&quot; THEN IFNULL([CPI],0)&#13;&#10;    WHEN &quot;CTR&quot; THEN IFNULL([CTR],0)&#13;&#10;    WHEN &quot;CPC&quot; THEN IFNULL([CPC],0)&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4780407140049408]' derivation='None' name='[none:Calculation_4780407140049408:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9430314151108835]' derivation='User' name='[usr:Calculation_9430314151108835:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-type='Columns' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Metric Average]' derivation='User' name='[usr:Metric Average:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-field='[funnel (copy)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[funnel (copy)].[Metric Z-Score]' ordering-type='Columns' />
              <table-calc field='[funnel (copy)].[Calculation_1510314114443868]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Metric]' derivation='User' name='[usr:Metric:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Average:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy)].[usr:Metric Z-Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Product Category Type:nk]'>
            <groupfilter function='member' level='[none:Product Category Type:nk]' member='&quot;FLIGHTS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[none:Site:nk]'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Travelocity&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Calculation_9430314151108835:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_9430314151108835:nk:3]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy)].[usr:Last:qk:2]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:2]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk:2]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy)].[usr:Last:qk:2]</column>
            <column>[funnel (copy)].[:Measure Names]</column>
            <column>[funnel (copy)].[none:Ad Type:nk]</column>
            <column>[funnel (copy)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy)].[none:Site:nk]</column>
            <column>[funnel (copy)].[usr:Calculation_9430314151108835:nk:3]</column>
            <column>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:2]</column>
            <column>[funnel (copy)].[usr:Volume Filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy)].[:Measure Names]' value='105' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy)].[none:Calculation_4780407140049408:nk] / [funnel (copy)].[none:Date:ok])</rows>
        <cols>[funnel (copy)].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='43' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Overall'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit ID:ok]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Request Errors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card size='717' type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[request_errors (copy)].[none:Calculation_8930219124412291:nk]</field>
          <field>[request_errors (copy)].[usr:Calculation_8760311113355964:nk:2]</field>
          <field>[request_errors (copy)].[usr:Metric outside of Standard Deviations:nk:2]</field>
          <field>[request_errors (copy)].[usr:Request Errors Negative Filter:nk:2]</field>
          <field>[request_errors (copy)].[usr:Request Errors Negative Filter:nk:5]</field>
          <field>[request_errors (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Request Error Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[request_errors (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[request_errors (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Old All Metrics'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card size='814' type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Breakdown Dimension:nk]</field>
          <field>[funnel (copy)].[none:Calculation_0120314135922361:nk]</field>
          <field>[funnel (copy)].[usr:Calculation_2830314120024265:nk:1]</field>
          <field>[funnel (copy)].[usr:Calculation_9430314151108835:nk:1]</field>
          <field>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
          <field>[request_errors (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='All Metrics with Dimension'>
      <cards>
        <edge name='left'>
          <strip size='294'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Calculation_0120314135922361:nk]</field>
          <field>[funnel (copy)].[none:Calculation_4780407140049408:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[usr:Calculation_9430314151108835:nk:1]</field>
          <field>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:7]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='All Metrics'>
      <cards>
        <edge name='left'>
          <strip size='285'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Calculation_0120314135922361:nk]</field>
          <field>[funnel (copy)].[none:Calculation_4780407140049408:nk]</field>
          <field>[funnel (copy)].[none:Calculation_5720426190956776:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[usr:Calculation_5660419223257846:nk:1]</field>
          <field>[funnel (copy)].[usr:Calculation_5660419223257846:nk:2]</field>
          <field>[funnel (copy)].[usr:Calculation_9430314151108835:nk:1]</field>
          <field>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:7]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Metric Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[funnel (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
            <card param='[funnel (copy)].[none:Site:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Date:qk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Testing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Calculation_0120314135922361:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[usr:Calculation_9430314151108835:nk:4]</field>
          <field>[funnel (copy)].[usr:Calculation_9430314151108835:nk:6]</field>
          <field>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:2]</field>
          <field>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:5]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk:2]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Testing2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Testing3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Calculation_4780407140049408:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[usr:Calculation_9430314151108835:nk:3]</field>
          <field>[funnel (copy)].[usr:Metric outside of Standard Deviations:nk:2]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='BOT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[:Measure Names]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Measure]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy)].[none:Ad Type:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit ID:ok]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Browser Family:nk]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy)].[none:Site:nk]</field>
          <field>[funnel (copy)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Overall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Request Error Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='All Metrics' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Metric Graph' width='192'>
      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
      BMbgudJxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Testing' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Testing2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='BOT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      5oAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
