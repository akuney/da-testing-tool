<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location derived-from='http://production-tableau-server-1.internal.intentmedia.net/t/PreQA/workbooks/SSNAdvertiserActivity?rev=1.0' id='SSNAdvertiserActivity' path='/workbooks' revision='1.9' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Quarter&quot;' />
        </members>
      </column>
      <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
        <calculation class='tableau' formula='&quot;All Markets&quot;' />
        <members>
          <member value='&quot;All Markets&quot;' />
          <member value='&quot;Global Top 10&quot;' />
          <member value='&quot;Global 11 - 50&quot;' />
          <member value='&quot;Global Top 50&quot;' />
          <member value='&quot;Rest of Asia Pacific&quot;' />
          <member value='&quot;Rest of Europe&quot;' />
          <member value='&quot;Rest of Latin America&quot;' />
          <member value='&quot;Rest of Middle East&quot;' />
          <member value='&quot;Rest of North America&quot;' />
          <member value='&quot;Other&quot;' />
        </members>
      </column>
      <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;OTA&quot;' />
          <member value='&quot;GDS&quot;' />
          <member value='&quot;Distinct Hotels&quot;' />
        </members>
      </column>
      <column caption='Graph Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Time&quot;'>
        <calculation class='tableau' formula='&quot;All Time&quot;' />
        <members>
          <member value='&quot;All Time&quot;' />
          <member value='&quot;Year over Year&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='advertisements' inline='true' name='mysql.41534.565411180556' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;a.id as &quot;Advertisement ID&quot;,&#13;&#10;&#9;c.advertiser_id as &quot;Advertiser ID&quot;&#13;&#10;from advertisements a&#13;&#10;left join ad_groups ag on ag.id = a.ad_group_id&#13;&#10;left join campaigns c on c.id = ag.campaign_id&#13;&#10;left join entities e on e.id = c.advertiser_id&#13;&#10;where e.ssn_channel_type = &apos;OTA&apos;&#13;&#10;and a.deleted = 0&#13;&#10;and a.paused = 0</relation>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__advertisements.tde' schema='Extract' tablename='Extract' update-time='10/7/2014 9:51:39 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='29593' timestamp-start='2014-10-07 21:51:39.666000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='budget_changes' inline='true' name='mysql.41534.586332928244' version='8.2'>
      <connection class='mysql' dbname='intent_media_production' odbc-native-protocol='yes' port='3306' server='production-slave-db-server-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;count(1) as &quot;Budget Changes&quot;&#13;&#10;from hotel_ssr_advertiser_changes&#13;&#10;where change_type = &apos;Budget Changed&apos; &#13;&#10;and convert_tz(created_at,&apos;UTC&apos;,&apos;America/New_York&apos;) &lt;&lt; convert_tz(CURRENT_DATE(),&apos;UTC&apos;,&apos;America/New_York&apos;)&#13;&#10;group by advertiser_id</relation>
      </connection>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__budget_changes.tde' schema='Extract' tablename='Extract' update-time='10/7/2014 9:51:45 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4914' timestamp-start='2014-10-07 21:51:45.120000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='advertiser_performance' inline='true' name='vertica.41422.531214282404' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;users.&quot;User Name&quot;,&#13;&#10;&#9;users.&quot;User Email&quot;,&#13;&#10;&#9;users.&quot;Is Primary User&quot;,&#13;&#10;&#9;users.&quot;Distinct Hotels&quot;,&#13;&#10;&#9;users.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;users.&quot;Known Rotator Type&quot;,&#13;&#10;&#9;users.&quot;Phone Number&quot;,&#13;&#10;&#9;users.&quot;First Auction Participation&quot;,&#13;&#10;&#9;performance.*&#13;&#10;from&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;entities_to_users.*,&#13;&#10;&#9;&#9;(case when entities_to_users.&quot;User ID&quot; = primary_users.primary_user then 1 else 0 end) as &quot;Is Primary User&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Distinct Hotels&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Known Rotator Type&quot;&#13;&#10;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;e.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;e.telephone as &quot;Phone Number&quot;,&#13;&#10;&#9;&#9;&#9;(u.first_name || &apos; &apos; || u.last_name) as &quot;User Name&quot;,&#13;&#10;&#9;&#9;&#9;u.email as &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;u.id as &quot;User ID&quot;,&#13;&#10;&#9;&#9;&#9;e.first_auction_participation as &quot;First Auction Participation&quot;&#13;&#10;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;right join intent_media_production.memberships m on m.entity_id = e.id&#13;&#10;&#9;&#9;right join intent_media_production.users u on u.id = m.user_id &#13;&#10;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;and m.active = 1) entities_to_users&#13;&#10;&#9;left join &#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;m2.entity_id as entity_id, &#13;&#10;&#9;&#9;&#9;min(user_id) as primary_user &#13;&#10;&#9;&#9;from intent_media_production.memberships m2&#13;&#10;&#9;&#9;where m2.active = 1&#13;&#10;&#9;&#9;group by m2.entity_id) primary_users &#13;&#10;&#9;&#9;on entities_to_users.&quot;Advertiser ID&quot; = primary_users.entity_id&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;u.email &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;count(e.name) as &quot;Distinct Hotels&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;onlinemarketing@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pahler@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;diego@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michael.anthony@orbitz.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Michael.Anthony@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matta@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbarnes@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbayles@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rentalmarketing@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@courtyardsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@hardrockhotelsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@jollyrogerhotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@portofinoinnanaheim.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@ramadaplazasd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sagarb@tarsadia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;santiago.casillas@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brad.chamberlin@rrpartners.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;danushka.chandrasekaram@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mchapur@allinclusivecollection.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;keoni@columbiasussex.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sclough@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;amyd@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tfarber@hvmg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;todd@hiresortlbv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;krista.hallecy@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matthew.harrison@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;carol.helbling@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyndhamvo.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jhope@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;george.hunter@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lhynie@troplv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@hrhaic.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@meridiencancun.com.mx&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seank@investorshm.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seankane@q.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;price.karr@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robyn.kinard@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;fkreitman@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tlabie@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;CLaRosa@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rachel.lerner@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gordon@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Orbitz@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Travelocity@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;angela.lundquist@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;benensonrofar.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;chatham.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smaines@ih-corp.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@caesars.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@lasvegas.harrahs.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susanm@myhospitality.org&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lisa.moore@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eric.ettlin@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;wmitchell@imagehotels.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;liana@antlersvail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jusmoore@hotwire.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dphillips@montereyplazahotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;info@beaconlightguesthouse.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sphillips@himonroeville.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;darren@mhgrp.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;willpowell@myrtlewoodvillas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Paul.Powell@whotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lee@cpfcc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;reservations@rentavilladisney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lirodriguez@bernhotelspanama.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;emily@kayak.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm.dtw@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gm@castlehillresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jertl@wigwamresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sarah.smith@acepllc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nicole.smith2@ihg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brandons@arizonabiltmore.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ssmith2@destinationhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;hiexcapecoral@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jsmith@fhginc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jil@hollywoodbeachgolf.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jason.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pam.smith@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;NSmith@montelucia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;francess@naplesgolfresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Daniel.smith@regenthotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michelle.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tsmith@zimmerman.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;starla.smith@hyattfrenchquarter.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ksmith@highwiremarketing.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ahdream.smith@digitas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ashsmith@hotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;k_smith9@hotmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;generalmanager@baymontew.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lee.Smith@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kristin.spitz@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charlottedyoung@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nyoung@loewshotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Strategic Accounts&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ann@bgsolutions.me&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charles.bido@melia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jalleruzzo@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;laine.mizuno@astonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lmarino@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;madisonwest.wi@americinn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smetovic@rpmadv.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1 else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Known Rotators&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Known Rotator Type&quot;&#13;&#10;&#9;&#9;from intent_media_production.users u&#13;&#10;&#9;&#9;left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;&#9;&#9;left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;and m.active = 1&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;u.first_name || &apos; &apos; || u.last_name,&#13;&#10;&#9;&#9;&#9;u.email) hotel_count&#13;&#10;&#9;on entities_to_users.&quot;User Email&quot; = hotel_count.&quot;User Email&quot;) users&#13;&#10;left join &#13;&#10;&#9;(select &#13;&#10;&#9;&#9;isra.aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;e.last_auction_participation as &quot;Last Auction Participation&quot;,&#13;&#10;&#9;&#9;e.name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;&#9;isra.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;imhpm.intent_media_market_id as &quot;Market ID&quot;, &#9;&#13;&#10;&#9;&#9;ifnull(imm.name , &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;&#9;&#9;ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment Name&quot;,&#13;&#10;&#9;&#9;z.can_serve_ads as &quot;Can Serve Ads&quot;,&#13;&#10;&#9;&#9;(case isra.advance_purchase_range_type&#13;&#10;&#9;&#9;&#9;when &apos;WEEKDAY_TRAVEL_LESS_THAN_OR_EQUAL_TO_21_DAYS&apos; then &apos;Weekdays within 21 Days&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKEND_TRAVEL_LESS_THAN_OR_EQUAL_TO_21_DAYS&apos; then &apos;Weekends within 21 Days&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKDAY_TRAVEL_GREATER_THAN_21_DAYS&apos; then &apos;Weekdays 22+ Days Away&apos;&#13;&#10;&#9;&#9;&#9;when &apos;WEEKEND_TRAVEL_GREATER_THAN_21_DAYS&apos; then &apos;Weekends 22+ Days Away&apos;&#13;&#10;&#9;&#9;&#9;when &apos;DATELESS&apos; then &apos;Dateless&apos;&#13;&#10;&#9;&#9;&#9;else isra.advance_purchase_range_type&#13;&#10;&#9;&#9;end) as &quot;Travel Window&quot;,&#13;&#10;&#9;&#9;atwra.click_count as &quot;Clicks&quot;,&#13;&#10;&#9;&#9;atwra.click_conversion_count as &quot;Click Conversions&quot;,&#13;&#10;&#9;&#9;atwra.actual_cpc_sum as Spend,&#13;&#10;&#9;&#9;atwra.click_conversion_value_sum as &quot;Click Conversion Value Sum&quot;,&#13;&#10;&#9;&#9;atwra.exposed_conversion_count as &quot;Exposed Conversion Count&quot;,&#13;&#10;&#9;&#9;atwra.exposed_conversion_value_sum as &quot;Exposed Conversion Value Sum&quot;,&#13;&#10;&#9;&#9;atwra.click_room_nights_sum as &quot;Click Room Nights Sum&quot;,&#13;&#10;&#9;&#9;atwra.exposed_room_nights_sum as &quot;Exposed Room Nights Sum&quot;,&#13;&#10;&#9;&#9;sum(isra.impression_count) as &quot;Impressions&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_count) as &quot;Filtered Ads&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_budget_count) as &quot;Filtered Ads (Budget)&quot;, &#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_bid_count) as &quot;Filtered Ads (Bid)&quot;,&#13;&#10;&#9;&#9;sum(isra.filtered_ad_for_hotel_unavailable_count) as &quot;Filtered Ads (Hotel Unavailable)&quot;&#13;&#10;&#9;from intent_media_production.impression_share_report_aggregations isra&#13;&#10;&#9;left join intent_media_production.entities e on e.id = isra.advertiser_id&#13;&#10;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;left join intent_media_production.intent_media_hotel_properties_markets imhpm on imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;&#9;left join intent_media_production.intent_media_markets imm on imm.id = imhpm.intent_media_market_id&#13;&#10;&#9;left join intent_media_production.z_hotel_ssr_advertiser_status z on isra.advertiser_id = z.advertiser_id&#13;&#10;&#9;left join &#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;advance_purchase_range_type,&#13;&#10;&#9;&#9;&#9;sum(impression_count) as impression_count,&#13;&#10;&#9;&#9;&#9;sum(click_count) as click_count,&#13;&#10;&#9;&#9;&#9;sum(click_conversion_count) as click_conversion_count,&#13;&#10;&#9;&#9;&#9;sum(actual_cpc_sum) as actual_cpc_sum,&#13;&#10;&#9;&#9;&#9;sum(click_conversion_value_sum) as click_conversion_value_sum,&#13;&#10;&#9;&#9;&#9;sum(exposed_conversion_count) as exposed_conversion_count,&#13;&#10;&#9;&#9;&#9;sum(exposed_conversion_value_sum) as exposed_conversion_value_sum,&#13;&#10;&#9;&#9;&#9;sum(click_room_nights_sum) as click_room_nights_sum,&#13;&#10;&#9;&#9;&#9;sum(exposed_room_nights_sum) as exposed_room_nights_sum&#13;&#10;&#9;&#9;from intent_media_production.advertiser_travel_window_report_aggregations&#13;&#10;&#9;&#9;where date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) &lt;&lt;  date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;group by date(aggregation_level at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id, advance_purchase_range_type) atwra&#13;&#10;&#9;&#9;on atwra.advertiser_id = isra.advertiser_id &#13;&#10;&#9;&#9;&#9;and atwra.advance_purchase_range_type = isra.advance_purchase_range_type&#13;&#10;&#9;&#9;&#9;and  atwra.date_in_et = isra.aggregation_level_date_in_et&#13;&#10;&#9;where isra.aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;group by isra.aggregation_level_date_in_et, &#13;&#10;&#9;&#9;e.name, &#13;&#10;&#9;&#9;e.ssn_channel_type,&#13;&#10;&#9;&#9;e.last_auction_participation,&#13;&#10;&#9;&#9;isra.advertiser_id,&#13;&#10;&#9;&#9;hpa.hotel_property_id,&#13;&#10;&#9;&#9;imhpm.intent_media_market_id,&#13;&#10;&#9;&#9;ifnull(imm.report_segment, &apos;Other&apos;),&#13;&#10;&#9;&#9;ifnull(imm.name , &apos;Other&apos;),&#13;&#10;&#9;&#9;z.can_serve_ads,&#13;&#10;&#9;&#9;isra.advance_purchase_range_type,&#13;&#10;&#9;&#9;atwra.impression_count,&#13;&#10;&#9;&#9;atwra.click_count,&#13;&#10;&#9;&#9;atwra.click_conversion_count,&#13;&#10;&#9;&#9;atwra.actual_cpc_sum,&#13;&#10;&#9;&#9;atwra.click_conversion_value_sum,&#13;&#10;&#9;&#9;atwra.exposed_conversion_count,&#13;&#10;&#9;&#9;atwra.exposed_conversion_value_sum,&#13;&#10;&#9;&#9;atwra.click_room_nights_sum,&#13;&#10;&#9;&#9;atwra.exposed_room_nights_sum) performance&#13;&#10;on users.&quot;Advertiser ID&quot; = performance.&quot;Advertiser ID&quot;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.0%' name='[% Coverage Loss]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Availability]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Hotel Unavailable)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Bid]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Bid)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[% Filtered for Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Filtered Ads (Budget)])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column datatype='date' name='[1 Day Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -1, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[30 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -30, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[31 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -31, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[60 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -60, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='date' name='[7 Days Ago]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;day&apos;, -7, TODAY()))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;' value='Number of Active OTA Ads' />
          <alias key='&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;' value='Number of Budget Changes' />
          <alias key='&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;' value='Number of Days Active' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;' value='Clicked Revenue' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;' value='Click Room Nights' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;' value='Exposed Conversions' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;' value='Exposed Revenue' />
          <alias key='&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;' value='Exposed Room Nights' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Ad Coverage]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - First of Month])/sum([Clicks - First of Month])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Days Active' datatype='integer' name='[Calculation_0020917140720157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[First Auction Participation], TODAY()-1)' scope-isolation='false' />
      </column>
      <column caption='ID' datatype='integer' name='[Calculation_1151030171422328]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='real' datatype-customized='true' name='[Can Serve Ads]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Click Conversion Value Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Click ROI Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Click ROI] &lt; 2 THEN &quot;1:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 3 THEN &quot;2:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 4 THEN &quot;3:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 5 THEN &quot;4:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 6 THEN &quot;5:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 7 THEN &quot;6:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 8 THEN &quot;7:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 9 THEN &quot;8:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 10 THEN &quot;9:1&quot;&#13;&#10;    ELSE &quot;10+:1&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Click Room Nights Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Clicks - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [First of Month] = [Date] THEN [Clicks] END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Distinct Hotels]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Eligible Ad Count]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Filtered Ads]+[Impressions]' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss Total from Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Bid Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Est. Revenue Loss Total from Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Est. Revenue Loss from Bid Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Budget)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Exposed Conversion Count]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Exposed Conversion Value Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Exposed Room Nights Sum]' role='measure' type='quantitative'>
      </column>
      <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Filtered Ads]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' datatype-customized='true' name='[First Auction Participation]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' name='[First of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Impression Share Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Impression Share] &lt; 0.5 THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF ISNULL([Impression Share]) THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF [Impression Share] &lt; 0.7 THEN &quot;50% to &lt;70%&quot;&#13;&#10;ELSE &quot;Greater than 70%&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Impression Share]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' />
      </column>
      <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' datatype-customized='true' name='[Last Auction Participation]' role='dimension' type='ordinal'>
      </column>
      <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Market ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Past 30 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversions] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 30 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Clicks] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 30 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversion Value Sum] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 30 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 30 Days Conversion Value Sum])/sum([Past 30 Days Spend])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 30 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Spend] ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 31 - 60 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 31 - 60 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 31 - 60 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 31 - 60 Days Conversion Value Sum])/sum([Past 31 - 60 Days Spend])' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 7 Days Click Conversions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Past 7 Days Clicks]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Past 7 Days Conversion Value Sum]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Past 7 Days ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Past 7 Days Conversion Value Sum])/sum([Past 7 Days Spend])' scope-isolation='false' />
      </column>
      <column caption='Past 7 Days Spend' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 7 Days Spend]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &gt; [7 Days Ago] AND [Date] &lt; [1 Day Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Percent of Budget Spent Bins]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Percent of Budget Spent]) THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.1 THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.2 THEN &quot;10-20%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.3 THEN &quot;20-30%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.4 THEN &quot;30-40%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.5 THEN &quot;40-50%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.6 THEN &quot;50-60%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.7 THEN &quot;60-70%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.8 THEN &quot;70-80%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.9 THEN &quot;80-90%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 1.0 THEN &quot;90-100%&quot;&#13;&#10;ELSE &quot;100%+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Potential Media Revenue Gain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Filtered Ads (Bid)])+sum([Filtered Ads (Budget)]))*sum([Spend])/sum([Impressions])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[ROI % Difference]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Past 30 Days ROI]-[Past 31 - 60 Days ROI])/[Past 31 - 60 Days ROI]' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Spend - First of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [First of Month] = [Date] THEN [Spend] END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_0020917140720157]' derivation='Max' name='[max:Calculation_0020917140720157:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Click Conversion Value Sum]' derivation='Sum' name='[sum:Click Conversion Value Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Click Room Nights Sum]' derivation='Sum' name='[sum:Click Room Nights Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversion Count]' derivation='Sum' name='[sum:Exposed Conversion Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Conversion Value Sum]' derivation='Sum' name='[sum:Exposed Conversion Value Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exposed Room Nights Sum]' derivation='Sum' name='[sum:Exposed Room Nights Sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filtered Ads]' derivation='Sum' name='[sum:Filtered Ads:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impression Share Bins]' derivation='User' name='[usr:Impression Share Bins:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report__advertiser_performance.tde' schema='Extract' tablename='Extract' update-time='10/7/2014 9:51:52 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Eligible Ad Count]' formula='[Filtered Ads]+[Impressions]' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Properties in MPM]' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10745743' timestamp-start='2014-10-07 21:51:52.794000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.446174' measure-ordering='alphabetic' measure-percentage='0.407263' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[tmn:Date:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>#2012-04-01 00:00:00#</bucket>
            </map>
            <map to='#17becf'>
              <bucket>#2012-08-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2012-10-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2013-04-01 00:00:00#</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>#2013-07-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2011-03-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2013-02-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2011-12-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2011-08-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2011-06-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2011-04-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2013-03-01 00:00:00#</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>#2012-05-01 00:00:00#</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>#2012-09-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2012-11-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2013-05-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2012-02-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2012-06-01 00:00:00#</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>#2011-09-01 00:00:00#</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>#2011-07-01 00:00:00#</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2013-08-01 00:00:00#</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>#2012-03-01 00:00:00#</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>#2012-07-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-10-01 00:00:00#</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>#2011-11-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2012-12-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2013-06-01 00:00:00#</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>#2011-05-01 00:00:00#</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>#2011-02-01 00:00:00#</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </map>
            <map to='#404040'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Budget:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Impression Share Bins:nk]' type='palette'>
            <map to='#309343'>
              <bucket>&quot;Less than 50\%&quot;</bucket>
            </map>
            <map to='#d82526'>
              <bucket>&quot;Greater than 70\%&quot;</bucket>
            </map>
            <map to='#ffc156'>
              <bucket>&quot;50\% to &lt;70\%&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
            <member value='&quot;Distinct Hotels&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='mysql.41534.565411180556'>
        <column datatype='integer' name='[Advertisement ID]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Advertisement ID]' derivation='Count' name='[cnt:Advertisement ID:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='mysql.41534.586332928244'>
        <column datatype='integer' name='[Budget Changes]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Budget Changes]' derivation='Max' name='[max:Budget Changes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41534.409827615738'>
        <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='C1033%' name='[Aggregated Budget]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IFNULL(SUM([Calculation_5810917111000078]),0)+IFNULL(SUM([Calculation_0211011162411911]),0)+IFNULL(MAX([Calculation_2131011162824636]),0)' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='hotel_status_changes' inline='true' name='vertica.41534.409827615738' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;users.&quot;Advertiser ID&quot;,&#13;&#10;&#9;users.&quot;Phone Number&quot;,&#13;&#10;&#9;users.&quot;User Name&quot;,&#13;&#10;&#9;users.&quot;User Email&quot;,&#13;&#10;&#9;users.&quot;User ID&quot;,&#13;&#10;&#9;users.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;users.&quot;Channel Status&quot;,&#13;&#10;&#9;users.&quot;Is Primary User&quot;,&#13;&#10;&#9;users.&quot;Distinct Hotel Properties&quot;,&#13;&#10;&#9;users.&quot;Distinct Entities&quot;,&#13;&#10;&#9;users.&quot;User First Auction Participation&quot;,&#13;&#10;&#9;users.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;users.&quot;Known Rotator Type&quot;,&#13;&#10;&#9;(case when users.&quot;User First Auction Participation&quot; = status_changes.&quot;First Auction Participation&quot; then 1 else 0 end) as &quot;First Advertiser for User&quot;,&#13;&#10;&#9;(case when users.&quot;User First Auction Participation&quot; = hotel_property_status_changes.&quot;First Auction Participation&quot; then 1 else 0 end) as &quot;First Hotel Property for User&quot;,&#13;&#10;&#9;ifnull(imm.name, &apos;Other&apos;) as &quot;Market Name&quot;,&#13;&#10;&#9;ifnull(imm.report_segment, &apos;Other&apos;) as &quot;Segment Name&quot;,&#13;&#10;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;z.can_serve_ads as &quot;Can Serve Ads&quot;,&#13;&#10;&#9;status_changes.Date,&#13;&#10;&#9;status_changes.&quot;Advertiser Name&quot;,&#13;&#10;&#9;status_changes.&quot;Sold Date&quot;,&#13;&#10;&#9;status_changes.&quot;Is New&quot;,&#13;&#10;&#9;status_changes.&quot;Advertising Status&quot;,&#13;&#10;&#9;status_changes.&quot;Budget Type&quot;,&#13;&#10;&#9;status_changes.&quot;Budget&quot;,&#13;&#10;&#9;status_changes.&quot;Previous Advertising Status&quot;,&#13;&#10;&#9;status_changes.&quot;Previous Budget Type&quot;,&#13;&#10;&#9;status_changes.&quot;Previous Budget&quot;,&#13;&#10;&#9;(case&#13;&#10;&#9;&#9;when &quot;Is New&quot; then&#13;&#10;&#9;&#9;&#9;case&#13;&#10;&#9;&#9;&#9;&#9;when users.&quot;Channel Status&quot; = &apos;Latter Channel&apos; then &apos;New Channel&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Brand New Hotel&apos;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; like &apos;%Active%&apos; and &quot;Previous Advertising Status&quot; like &apos;%Paused%&apos; then&#13;&#10;&#9;&#9;&#9;case&#13;&#10;&#9;&#9;&#9;&#9;when &quot;Change Yesterday or Today&quot; then &apos;Manually Reactivated&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Reactivated No Traffic&apos;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; = &apos;Paused with Zeroed Out Non-Recurring Budget&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Paused for Budget&apos;&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; = &apos;Manually Paused&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Manually Paused&apos;&#13;&#10;&#9;&#9;when &quot;Advertising Status&quot; = &apos;Paused No Traffic&apos; and &quot;Previous Advertising Status&quot; like &apos;%Active%&apos; then &apos;Paused No Traffic&apos;&#13;&#10;&#9;&#9;else &apos;No Change&apos;&#13;&#10;&#9;end) as &quot;Advertising Status Change&quot;,&#13;&#10;&#9;(case &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Value&quot; &gt;&gt; 0 then &apos;Active&apos; &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Value&quot; = 0 then &apos;Paused&apos;&#13;&#10;&#9;end) as &quot;Hotel Property Advertising Status&quot;,&#13;&#10;&#9;(case &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Previous Hotel Property Advertising Status Value&quot; &gt;&gt; 0 then &apos;Active&apos; &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Previous Hotel Property Advertising Status Value&quot; = 0 then &apos;Paused&apos; &#13;&#10;&#9;end) as &quot;Previous Hotel Property Advertising Status&quot;,&#13;&#10;&#9;(case &#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Is New Value&quot; &gt;&gt; 0 then &apos;New&apos;&#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Change Value&quot; &lt;&lt; 0 then &apos;Paused&apos;&#13;&#10;&#9;&#9;when hotel_property_status_changes.&quot;Hotel Property Advertising Status Change Value&quot; &gt;&gt; 0 then &apos;Reactivated&apos;&#13;&#10;&#9;&#9;else &apos;No Change&apos;&#13;&#10;&#9;end) as &quot;Hotel Property Advertising Status Change&quot;&#13;&#10;from&#13;&#10;&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- BEGIN users&#13;&#10;&#9;-- gets all users for each advertiser_id, along with user attributes&#13;&#10;&#9;-------------------------&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;entities_to_users.&quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;Phone Number&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;User Name&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;User Email&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;User ID&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;entities_to_users.&quot;Channel Status&quot;,&#13;&#10;&#9;&#9;(case when entities_to_users.&quot;User ID&quot; = primary_users.primary_user then 1 else 0 end) as &quot;Is Primary User&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Distinct Hotel Properties&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Distinct Entities&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;User First Auction Participation&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;hotel_count.&quot;Known Rotator Type&quot;&#13;&#10;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;        -- BEGIN users/entities_to_users&#13;&#10;        -- get all users associated with each advertiser_id&#13;&#10;        -------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;e.id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;e.telephone as &quot;Phone Number&quot;,&#13;&#10;&#9;&#9;&#9;(u.first_name || &apos; &apos; || u.last_name) as &quot;User Name&quot;,&#13;&#10;&#9;&#9;&#9;u.email as &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;u.id as &quot;User ID&quot;,&#13;&#10;&#9;&#9;&#9;e.ssn_channel_type as &quot;SSN Channel Type&quot;,&#13;&#10;&#9;&#9;&#9;channel_types.&quot;Channel Status&quot;&#13;&#10;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;left join&#13;&#10;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;e.id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;&#9;&#9;when multi_channel_hotel_properties.hotel_property_id is null then &apos;Only Channel&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;when multi_channel_hotel_properties.min_first_auction_participation = e.first_auction_participation then &apos;First Channel&apos; &#13;&#10;&#9;&#9;&#9;&#9;&#9;else &apos;Latter Channel&apos; &#13;&#10;&#9;&#9;&#9;&#9;end) as &quot;Channel Status&quot;&#13;&#10;&#9;&#9;&#9;from intent_media_production.entities e&#13;&#10;&#9;&#9;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;&#9;&#9;left join (select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;hpa.hotel_property_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;min(first_auction_participation) as min_first_auction_participation&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;from intent_media_production.hotel_property_advertisers hpa &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;left join intent_media_production.entities e on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;where e.active = 1 and e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;group by hpa.hotel_property_id&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;having count(e.id) &gt;&gt; 1) as multi_channel_hotel_properties&#13;&#10;&#9;&#9;&#9;on multi_channel_hotel_properties.hotel_property_id = hpa.hotel_property_id&#13;&#10;&#9;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;and e.active = 1) channel_types&#13;&#10;&#9;&#9;on channel_types.advertiser_id = e.id&#13;&#10;&#9;&#9;right join intent_media_production.memberships m on m.entity_id = e.id&#13;&#10;&#9;&#9;right join intent_media_production.users u on u.id = m.user_id &#13;&#10;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and e.first_auction_participation is not null&#13;&#10;&#9;&#9;and m.active = 1) entities_to_users&#13;&#10;&#9;&#9;-------------------------&#13;&#10;        -- END users/entities_to_users&#13;&#10;        -------------------------&#13;&#10;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN users/primary_users&#13;&#10;&#9;&#9;-- gets the primary user for each advertiser&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;m.entity_id as entity_id, &#13;&#10;&#9;&#9;&#9;min(user_id) as primary_user &#13;&#10;&#9;&#9;from intent_media_production.memberships m&#13;&#10;&#9;&#9;where m.active = 1&#13;&#10;&#9;&#9;group by m.entity_id) primary_users &#13;&#10;&#9;&#9;on entities_to_users.&quot;Advertiser ID&quot; = primary_users.entity_id&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END users/primary_users&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;left join&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN users/hotel_count&#13;&#10;&#9;&#9;-- gets the number of hotel properties associated with an account and the account types&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;u.email &quot;User Email&quot;,&#13;&#10;&#9;&#9;&#9;count(distinct(hpa.hotel_property_id)) as &quot;Distinct Hotel Properties&quot;,&#13;&#10;&#9;&#9;&#9;count(distinct(e.id)) as &quot;Distinct Entities&quot;,&#13;&#10;&#9;&#9;&#9;min(e.first_auction_participation at timezone &apos;America/New_York&apos;) as &quot;User First Auction Participation&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;onlinemarketing@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pahler@aquaresorts.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;diego@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michael.anthony@orbitz.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Michael.Anthony@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matta@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbarnes@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lbayles@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rentalmarketing@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@courtyardsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@hardrockhotelsd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@jollyrogerhotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@portofinoinnanaheim.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;editor@ramadaplazasd.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sagarb@tarsadia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robertb@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;santiago.casillas@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brad.chamberlin@rrpartners.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;danushka.chandrasekaram@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mchapur@allinclusivecollection.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;keoni@columbiasussex.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sclough@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;amyd@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tfarber@hvmg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;todd@hiresortlbv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lakota.forosisky@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;krista.hallecy@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;matthew.harrison@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;carol.helbling@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;clive.heron@wyndhamvo.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jhope@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;george.hunter@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lhynie@troplv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@hrhaic.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eizquierdo@meridiencancun.com.mx&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seank@investorshm.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;seankane@q.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;price.karr@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;robyn.kinard@wynnlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;fkreitman@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tlabie@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;CLaRosa@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rachel.lerner@starwoodhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gordon@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Orbitz@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Travelocity@revenueperformance.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;angela.lundquist@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hcdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;meredithm@hzdg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;benensonrofar.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;chatham.orbitz@buildrevpar.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smaines@ih-corp.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@caesars.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dmalbrough@lasvegas.harrahs.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susanm@myhospitality.org&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;susan_mandarino@myhhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jmandarino@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nmason@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lisa.moore@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;eric.ettlin@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;wmitchell@imagehotels.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ross.moore@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;liana@antlersvail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jusmoore@hotwire.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;alejandro.moxey@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Erin.Naeve@cosmopolitanlasvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;knichols@jhmhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@sheraton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;umercado@jeweldunnsriverresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rory.peska@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rorypeska@remingtonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dphillips@montereyplazahotel.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;rob.phillips@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;info@beaconlightguesthouse.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sphillips@himonroeville.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;darren@mhgrp.net&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lpisan@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lalcuri@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;willpowell@myrtlewoodvillas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Paul.Powell@whotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;mpowell@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lee@cpfcc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;reservations@rentavilladisney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lirodriguez@bernhotelspanama.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jarodrig@holidayinnclub.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;giselda.schreurs@posadas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jscott@colwenhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;emily@kayak.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;baymontinngm.dtw@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;leigh.silkunas@kimptonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;gm@castlehillresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jertl@wigwamresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;sarah.smith@acepllc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nicole.smith2@ihg.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brandons@arizonabiltmore.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ssmith2@destinationhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;hiexcapecoral@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jsmith@fhginc.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jil@hollywoodbeachgolf.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jason.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;pam.smith@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;NSmith@montelucia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;francess@naplesgolfresort.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Kristina.smith@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Daniel.smith@regenthotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;michelle.smith2@hilton.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;tsmith@zimmerman.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;starla.smith@hyattfrenchquarter.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ksmith@highwiremarketing.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ahdream.smith@digitas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ashsmith@hotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;k_smith9@hotmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;generalmanager@baymontew.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;Lee.Smith@marriott.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kristin.spitz@hyatt.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;kspitz@hrhvegas.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;dtimmons-pixler@thelvh.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lori.warwick@pyramidhotelgroup.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nic@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;roger@planbhospitality.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charlottedyoung@gmail.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;stephanie.young@standingdog.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;nyoung@loewshotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;david.zschernig@disney.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Strategic Accounts&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Strategic Account Type&quot;,&#13;&#10;&#9;&#9;&#9;(case when &#13;&#10;&#9;&#9;&#9;&#9;sum(case when &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;ann@bgsolutions.me&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;brian@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;cfoster@mckibbonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;charles.bido@melia.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;elli@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;jalleruzzo@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;joanna@q9ads.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;laine.mizuno@astonhotels.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;lmarino@rpmadv.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;madisonwest.wi@americinn.com&apos; or&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9; u.email = &apos;smetovic@rpmadv.com&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;then 1 else 0&#13;&#10;&#9;&#9;&#9;&#9;end) &gt;&gt; 0 then &apos;Known Rotators&apos;&#13;&#10;&#9;&#9;&#9;&#9;else &apos;Other Accounts&apos;&#13;&#10;&#9;&#9;&#9;end) as &quot;Known Rotator Type&quot;&#13;&#10;&#9;&#9;from intent_media_production.users u&#13;&#10;&#9;&#9;left join intent_media_production.memberships m on m.user_id = u.id&#13;&#10;&#9;&#9;left join intent_media_production.entities e on e.id = m.entity_id&#13;&#10;&#9;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;&#9;&#9;where e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;and e.active = 1&#13;&#10;&#9;&#9;and m.active = 1&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;u.first_name || &apos; &apos; || u.last_name,&#13;&#10;&#9;&#9;&#9;u.email) hotel_count&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END users/hotel_count&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;on entities_to_users.&quot;User Email&quot; = hotel_count.&quot;User Email&quot;) users&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- END users&#13;&#10;&#9;-------------------------&#13;&#10;&#9;&#13;&#10;left join&#13;&#10;&#9;&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- BEGIN status_changes&#13;&#10;&#9;-- gets current and previous advertiser status&#13;&#10;&#9;-------------------------&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;sold.date_in_et as Date,&#13;&#10;&#9;&#9;sold.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;sold.advertiser_name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;sold.first_auction_participation_in_et as &quot;First Auction Participation&quot;,&#13;&#10;&#9;&#9;sold.sold_date_in_et as &quot;Sold Date&quot;,&#13;&#10;&#9;&#9;(case when sold.date_in_et = sold.sold_date_in_et then 1 else 0 end) as &quot;Is New&quot;,&#13;&#10;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is not null then &apos;Active&apos;&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type = &apos;MONTHLY&apos;) then &apos;Active with Zeroed Out Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then &apos;Paused with Zeroed Out Non-Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when pas.advertiser_id is null and budgets.effective_budget &gt;&gt;= 0.25 then &#13;&#10;&#9;&#9;&#9;&#9;(case &#13;&#10;&#9;&#9;&#9;&#9;&#9;when sold.max_change_date &gt;&gt;= sold.max_participation_date then &apos;Manually Paused&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;else &apos;Paused No Traffic&apos;&#13;&#10;&#9;&#9;&#9;&#9;end)&#13;&#10;&#9;&#9;end) as &quot;Advertising Status&quot;,&#13;&#10;&#9;&#9;budgets.budget_type as &quot;Budget Type&quot;,&#13;&#10;&#9;&#9;budgets.effective_budget as &quot;Budget&quot;,&#13;&#10;&#9;&#9;(sold.max_change_date = sold.date_in_et or sold.previous_max_change_date = (sold.date_in_et - interval &apos;1 day&apos;)) as &quot;Change Yesterday or Today&quot;,&#13;&#10;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is not null then &apos;Active&apos;&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type = &apos;MONTHLY&apos;) then &apos;Active with Zeroed Out Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then &apos;Paused with Zeroed Out Non-Recurring Budget&apos;&#13;&#10;&#9;&#9;&#9;when previous_pas.advertiser_id is null and previous_budgets.effective_budget &gt;&gt;= 0.25 then &#13;&#10;&#9;&#9;&#9;&#9;(case &#13;&#10;&#9;&#9;&#9;&#9;&#9;when sold.previous_max_change_date &gt;&gt;= sold.previous_max_participation_date then &apos;Manually Paused&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;else &apos;Paused No Traffic&apos;&#13;&#10;&#9;&#9;&#9;&#9;end)&#13;&#10;&#9;&#9;end) as &quot;Previous Advertising Status&quot;,&#13;&#10;&#9;&#9;previous_budgets.budget_type as &quot;Previous Budget Type&quot;,&#13;&#10;&#9;&#9;previous_budgets.effective_budget as &quot;Previous Budget&quot;&#13;&#10;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/sold&#13;&#10;&#9;&#9;-- gets max change dates, max participation dates, and sold dates for each advertiser&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.max_change_date,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.previous_max_change_date,&#13;&#10;&#9;&#9;&#9;max(case when pa.date_in_et &lt;&lt;= dates_sold_hotels_changes.date_in_et then pa.date_in_et end) as max_participation_date,&#13;&#10;&#9;&#9;&#9;max(case when pa.date_in_et &lt;&lt; dates_sold_hotels_changes.date_in_et then pa.date_in_et end) as previous_max_participation_date&#13;&#10;&#9;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN status_changes/sold/dates_sold_hotels_changes&#13;&#10;&#9;&#9;&#9;-- gets cross join of all dates and sold hotels with their max changes&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;((select&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;max(case when hsac.date_in_et &lt;&lt;= dates_sold_hotels.date_in_et then hsac.date_in_et end) as max_change_date,&#13;&#10;&#9;&#9;&#9;&#9;max(case when hsac.date_in_et &lt;&lt; dates_sold_hotels.date_in_et then hsac.date_in_et end) as previous_max_change_date&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;dates.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sold_hotels.sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- dates&#13;&#10;&#9;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;&#9;distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.participating_advertisers) dates,&#13;&#10;&#9;&#9;&#9;&#9;-- sold_hotels&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;name as advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;(first_auction_participation at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;date(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities&#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and active = 1 &#13;&#10;&#9;&#9;&#9;&#9;&#9;and first_auction_participation is not null) sold_hotels&#13;&#10;&#9;&#9;&#9;where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et) dates_sold_hotels,&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- changes&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.hotel_ssr_advertiser_changes &#13;&#10;&#9;&#9;&#9;where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Campaign Status&apos;&#13;&#10;&#9;&#9;&#9;group by date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id) hsac&#13;&#10;&#9;&#9;where hsac.advertiser_id = dates_sold_hotels.advertiser_id&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et)&#13;&#10;&#13;&#10;&#9;&#9;union&#13;&#10;&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;cast(null as Date) as max_change_date,&#13;&#10;&#9;&#9;&#9;cast(null as Date) as previous_max_change_date&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;dates.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.sold_date_in_et&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;-- dates&#13;&#10;&#9;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;&#9;distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.participating_advertisers) dates,&#13;&#10;&#9;&#9;&#9;&#9;-- sold_hotels&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;name as advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;(first_auction_participation at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;date(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities&#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and active = 1 &#13;&#10;&#9;&#9;&#9;&#9;&#9;and first_auction_participation is not null) sold_hotels&#13;&#10;&#9;&#9;&#9;where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et) dates_sold_hotels,&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- changes&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.hotel_ssr_advertiser_changes &#13;&#10;&#9;&#9;&#9;where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Campaign Status&apos;&#13;&#10;&#9;&#9;&#9;group by date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id) hsac&#13;&#10;&#9;&#9;where dates_sold_hotels.advertiser_id not in &#13;&#10;&#9;&#9;&#9;(select distinct advertiser_id &#13;&#10;&#9;&#9;&#9;from (select&#13;&#10;&#9;&#9;&#9;&#9;date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;) as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.hotel_ssr_advertiser_changes &#13;&#10;&#9;&#9;&#9;where change_type = &apos;Budget Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Bid Changed&apos;&#13;&#10;&#9;&#9;&#9;&#9;or change_type = &apos;Campaign Status&apos;&#13;&#10;&#9;&#9;&#9;group by date(created_at at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;), advertiser_id) null_advertiser_id)&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;dates_sold_hotels.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels.sold_date_in_et)) dates_sold_hotels_changes,&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END status_changes/sold/dates_sold_hotels_changes&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN status_changes/sold/pa&#13;&#10;&#9;&#9;&#9;-- gets participating_advertisers&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;aggregation_level_date_in_et as date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.participating_advertisers&#13;&#10;&#9;&#9;&#9;group by aggregation_level_date_in_et, advertiser_id) pa&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END status_changes/sold/pa&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;where pa.advertiser_id = dates_sold_hotels_changes.advertiser_id&#13;&#10;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_id,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.advertiser_name,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.sold_date_in_et,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.max_change_date,&#13;&#10;&#9;&#9;&#9;dates_sold_hotels_changes.previous_max_change_date) sold&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/sold&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = sold.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/pas&#13;&#10;&#9;&#9;-- gets participating advertisers for that day&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id) pas&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/pas&#13;&#10;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = pas.aggregation_level_date_in_et&#13;&#10;&#9;&#9;and sold.advertiser_id = pas.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/previous_pas&#13;&#10;&#9;&#9;-- gets participating advertisers for the previous day&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;pa.advertiser_id) previous_pas&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/previous_pas&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = date(previous_pas.aggregation_level_date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;and sold.advertiser_id = previous_pas.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/budgets&#13;&#10;&#9;&#9;-- gets budgets for that day&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;and latest.latest_id = hb.id) budgets&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/budgets&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = budgets.date_in_et&#13;&#10;&#9;&#9;and budgets.advertiser_id = sold.advertiser_id&#13;&#10;&#9;left join&#13;&#10;&#9;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN status_changes/previous_budgets&#13;&#10;&#9;&#9;-- gets budgets for the previous day&#13;&#10;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;from&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;and latest.latest_id = hb.id) previous_budgets&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END status_changes/previous_budgets&#13;&#10;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;on sold.date_in_et = date(previous_budgets.date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;and previous_budgets.advertiser_id = sold.advertiser_id) status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- END status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#13;&#10;on users.&quot;Advertiser ID&quot; = status_changes.&quot;Advertiser ID&quot;&#13;&#10;&#13;&#10;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = users.&quot;Advertiser ID&quot;&#13;&#10;left join intent_media_production.intent_media_hotel_properties_markets imhpm on imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;left join intent_media_production.intent_media_markets imm on imm.id = imhpm.intent_media_market_id&#13;&#10;left join intent_media_production.z_hotel_ssr_advertiser_status z on z.advertiser_id = users.&quot;Advertiser ID&quot;&#13;&#10;left join&#13;&#10;&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- BEGIN hotel_property_status_changes&#13;&#10;&#9;-- gets current and previous hotel property status&#13;&#10;&#9;-------------------------&#13;&#10;&#9;(select&#13;&#10;&#9;&#9;Date,&#13;&#10;&#9;&#9;&quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;min(&quot;First Auction Participation&quot;) as &quot;First Auction Participation&quot;,&#13;&#10;&#9;&#9;min(&quot;Is New Value&quot;) as &quot;Hotel Property Is New Value&quot;,&#13;&#10;&#9;&#9;max(&quot;Advertising Status Value&quot;) as &quot;Hotel Property Advertising Status Value&quot;,&#13;&#10;&#9;&#9;max(&quot;Previous Advertising Status Value&quot;) as &quot;Previous Hotel Property Advertising Status Value&quot;,&#13;&#10;&#9;&#9;sum(&quot;Advertising Status Value&quot; - &quot;Previous Advertising Status Value&quot;) as &quot;Hotel Property Advertising Status Change Value&quot;&#13;&#10;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property&#13;&#10;&#9;&#9;-- gets current and previous advertiser status with hotel property&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;sold.date_in_et as Date,&#13;&#10;&#9;&#9;&#9;hpa.hotel_property_id as &quot;Hotel Property ID&quot;,&#13;&#10;&#9;&#9;&#9;sold.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;&#9;sold.first_auction_participation_in_et as &quot;First Auction Participation&quot;,&#13;&#10;&#9;&#9;&#9;(case when sold.date_in_et = sold.sold_date_in_et then 1 else 0 end) as &quot;Is New Value&quot;,&#13;&#10;&#9;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is not null then 1&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type = &apos;MONTHLY&apos;) then 1&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is null and (budgets.effective_budget &lt;&lt; 0.25 and budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then 0&#13;&#10;&#9;&#9;&#9;&#9;when pas.advertiser_id is null and budgets.effective_budget &gt;&gt;= 0.25 then 0&#13;&#10;&#9;&#9;&#9;end) as &quot;Advertising Status Value&quot;,&#13;&#10;&#9;&#9;&#9;(case&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is not null then 1&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type = &apos;MONTHLY&apos;) then 1&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is null and (previous_budgets.effective_budget &lt;&lt; 0.25 and previous_budgets.budget_type &lt;&lt;&gt;&gt; &apos;MONTHLY&apos;) then 0&#13;&#10;&#9;&#9;&#9;&#9;when previous_pas.advertiser_id is null and previous_budgets.effective_budget &gt;&gt;= 0.25 then 0&#13;&#10;&#9;&#9;&#9;end) as &quot;Previous Advertising Status Value&quot;&#13;&#10;&#9;&#9;from&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/sold&#13;&#10;&#9;&#9;&#9;-- gets cross join of all dates and sold hotels with their max changes&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;dates.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;sold_hotels.sold_date_in_et&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;-- dates&#13;&#10;&#9;&#9;&#9;&#9;(select &#13;&#10;&#9;&#9;&#9;&#9;&#9;distinct(aggregation_level_date_in_et) as date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.participating_advertisers) dates,&#13;&#10;&#9;&#9;&#9;&#9;-- sold_hotels&#13;&#10;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;id as advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;name as advertiser_name,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;(first_auction_participation at timezone &apos;America/New_York&apos;) as first_auction_participation_in_et,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;date(first_auction_participation at timezone &apos;America/New_York&apos;) as sold_date_in_et&#13;&#10;&#9;&#9;&#9;&#9;from intent_media_production.entities&#13;&#10;&#9;&#9;&#9;&#9;where entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;&#9;&#9;&#9;&#9;&#9;and active = 1 &#13;&#10;&#9;&#9;&#9;&#9;&#9;and first_auction_participation is not null) sold_hotels&#13;&#10;&#9;&#9;&#9;where sold_hotels.sold_date_in_et &lt;&lt;= dates.date_in_et) sold&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/sold&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;left join intent_media_production.hotel_property_advertisers hpa on hpa.hotel_ssr_advertiser_id = sold.advertiser_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/pas&#13;&#10;&#9;&#9;&#9;-- gets participating advertisers for that day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id) pas&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/pas&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = pas.aggregation_level_date_in_et&#13;&#10;&#9;&#9;&#9;and sold.advertiser_id = pas.advertiser_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/previous_pas&#13;&#10;&#9;&#9;&#9;-- gets participating advertisers for the previous day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.participating_advertisers pa&#13;&#10;&#9;&#9;&#9;group by &#13;&#10;&#9;&#9;&#9;&#9;pa.aggregation_level_date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;pa.advertiser_id) previous_pas&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/previous_pas&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = date(previous_pas.aggregation_level_date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;&#9;and sold.advertiser_id = previous_pas.advertiser_id&#9;&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/budgets&#13;&#10;&#9;&#9;&#9;-- gets budgets for that day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;&#9;and latest.latest_id = hb.id) budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = budgets.date_in_et&#13;&#10;&#9;&#9;&#9;and budgets.advertiser_id = sold.advertiser_id&#13;&#10;&#9;&#9;left join&#13;&#10;&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- BEGIN hotel_property_status_changes/hotel_status_changes_with_property/previous_budgets&#13;&#10;&#9;&#9;&#9;-- gets budgets for the previous day&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#9;&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;latest.date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;latest.advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;effective_budget,&#13;&#10;&#9;&#9;&#9;&#9;budget_type&#13;&#10;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;date_in_et,&#13;&#10;&#9;&#9;&#9;&#9;advertiser_id,&#13;&#10;&#9;&#9;&#9;&#9;max(id) as latest_id&#13;&#10;&#9;&#9;&#9;from intent_media_production.historical_budgets&#13;&#10;&#9;&#9;&#9;group by date_in_et, advertiser_id) latest&#13;&#10;&#9;&#9;&#9;left join intent_media_production.historical_budgets hb &#13;&#10;&#9;&#9;&#9;&#9;on latest.date_in_et = hb.date_in_et &#13;&#10;&#9;&#9;&#9;&#9;and latest.advertiser_id = hb.advertiser_id&#13;&#10;&#9;&#9;&#9;&#9;and latest.latest_id = hb.id) previous_budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property/previous_budgets&#13;&#10;&#9;&#9;&#9;-------------------------&#9;&#13;&#10;&#13;&#10;&#9;&#9;on sold.date_in_et = date(previous_budgets.date_in_et + interval &apos;1 day&apos;)&#13;&#10;&#9;&#9;&#9;and previous_budgets.advertiser_id = sold.advertiser_id) hotel_status_changes_with_property&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#9;&#9;-- END hotel_property_status_changes/hotel_status_changes_with_property&#13;&#10;&#9;&#9;-------------------------&#13;&#10;&#13;&#10;&#9;group by Date, &quot;Hotel Property ID&quot;) hotel_property_status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#9;-- END hotel_property_status_changes&#13;&#10;&#9;-------------------------&#13;&#10;&#13;&#10;on status_changes.Date = hotel_property_status_changes.Date&#13;&#10;&#9;and status_changes.&quot;Hotel Property ID&quot; = hotel_property_status_changes.&quot;Hotel Property ID&quot;&#13;&#10;&#9;and (users.&quot;Channel Status&quot; = &apos;Only Channel&apos; or users.&quot;Channel Status&quot; = &apos;First Channel&apos;)&#13;&#10;&#13;&#10;where status_changes.Date &lt;&lt; date(current_timestamp at timezone &apos;UTC&apos; at timezone &apos;America/New_York&apos;)</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;' value='Avg. CPC' />
          <alias key='&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;' value='Number of Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;' value='Net Hotels' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;' value='Paused Advertisers' />
          <alias key='&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;' value='Active Advertisers' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
      </column>
      <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[Aggregated Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Calculation_5810917111000078]),0)+IFNULL(SUM([Calculation_0211011162411911]),0)+IFNULL(MAX([Calculation_2131011162824636]),0)' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
      </column>
      <column caption='Aggregated Monthly Budget' datatype='real' name='[Calculation_0211011162411911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = [Date] AND LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' caption='Advertiser ID Dimension' datatype='integer' name='[Calculation_0681002145521444]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Advertiser ID]' scope-isolation='false' />
      </column>
      <column caption='Current Month' datatype='string' name='[Calculation_1990917143850584]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(TODAY()-1)&#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;February&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Aggregated ASAP Budget' datatype='real' name='[Calculation_2131011162824636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;asap&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='Advertising Status Value' datatype='integer' name='[Calculation_2381030155234572]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status],&apos;Active&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Paused Advertising Status Count' datatype='integer' name='[Calculation_2491002135715177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status], &apos;Paused&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Paused&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
      </column>
      <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Aggregated Daily Budget' datatype='real' name='[Calculation_5810917111000078]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;daily&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='Aggregated Monthly/ASAP Budget' datatype='real' name='[Calculation_6870917111031156]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Budget Type]) = &apos;asap&apos; OR LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' scope-isolation='false' />
      </column>
      <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
      </column>
      <column caption='Sold Advertiser Count' datatype='integer' name='[Calculation_7421002135957628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD([Hotel Property ID])&#13;&#10;    ELSE COUNTD([Advertiser ID])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Current Advertising Status' datatype='string' name='[Current Advertiser Status]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Advertising Status] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Current Budget Type]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget Type] END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;DAILY&quot;' value='Daily' />
          <alias key='&quot;MONTHLY&quot;' value='Monthly' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[Current Budget]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget] END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[DD]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date without Year]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &quot;Month&quot; THEN [Month Name]&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week &quot; + STR(DATEPART(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &quot;Day&quot; THEN [MM] + &quot;-&quot; + [DD]&#13;&#10;    WHEN &quot;Quarter&quot; THEN &quot;Q&quot; + STR(DATEPART(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter Status Change Not Null]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[First Hotel Property for User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='date' name='[First of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is New]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[MM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
      </column>
      <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Month Name]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Months Active]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Sold Date],TODAY())' scope-isolation='false' />
      </column>
      <column caption='Net Hotels' datatype='integer' name='[Net Hotels]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Advertiser Value])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Show Spend With Budget]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[User ID]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hotel Property ID]' derivation='CountD' name='[ctd:Hotel Property ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
      <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2491002135715177]' derivation='User' name='[usr:Calculation_2491002135715177:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7421002135957628]' derivation='User' name='[usr:Calculation_7421002135957628:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Hotels]' derivation='User' name='[usr:Net Hotels:qk]' pivot='key' type='quantitative' />
      <group name='[Inclusions (Change in Advertising Status,Segment Name,SSN Channel Type)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
          <groupfilter function='level-members' level='[none:Segment Name:nk]' />
          <groupfilter function='level-members' level='[none:SSN Channel Type:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ssn_activity_report_hotel_status_changes.tde' schema='Extract' tablename='Extract' update-time='10/7/2014 10:12:27 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Adjusted Budget]' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' />
            <calculation column='[Calculation_0211011162411911]' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = [Date] AND LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' />
            <calculation column='[Calculation_0681002145521444]' formula='[Advertiser ID]' />
            <calculation column='[Calculation_2131011162824636]' formula='IF LOWER([Budget Type]) = &apos;asap&apos; THEN [Budget] END' />
            <calculation column='[Calculation_5810917111000078]' formula='IF LOWER([Budget Type]) = &apos;daily&apos; THEN [Budget] END' />
            <calculation column='[Calculation_6870917111031156]' formula='IF LOWER([Budget Type]) = &apos;asap&apos; OR LOWER([Budget Type]) = &apos;monthly&apos; THEN [Budget] END' />
            <calculation column='[DD]' formula='IF DAY([Date])&gt;9 THEN STR(DAY([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(DAY([Date]))&#13;&#10;END' />
            <calculation column='[Filter Status Change Not Null]' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
            <calculation column='[MM]' formula='IF MONTH([Date])&gt;9 THEN STR(MONTH([Date]))&#13;&#10;ELSE &quot;0&quot; + STR(MONTH([Date]))&#13;&#10;END' />
            <calculation column='[Month Name]' formula='CASE MONTH(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;WHEN 1 THEN &apos;January&apos;&#13;&#10;WHEN 2 THEN &apos;February&apos;&#13;&#10;WHEN 3 THEN &apos;March&apos;&#13;&#10;WHEN 4 THEN &apos;April&apos;&#13;&#10;WHEN 5 THEN &apos;May&apos;&#13;&#10;WHEN 6 THEN &apos;June&apos;&#13;&#10;WHEN 7 THEN &apos;July&apos;&#13;&#10;WHEN 8 THEN &apos;August&apos;&#13;&#10;WHEN 9 THEN &apos;September&apos;&#13;&#10;WHEN 10 THEN &apos;October&apos;&#13;&#10;WHEN 11 THEN &apos;November&apos;&#13;&#10;WHEN 12 THEN &apos;December&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Properties in MPM]' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
            <calculation column='[Show Spend With Budget]' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5706983' timestamp-start='2014-10-07 22:12:27.288000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.477885' group-percentage='0.0682692' measure-ordering='alphabetic' measure-percentage='0.334615' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SSN Channel Type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GDS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5631031142200138:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Reactivated&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Reactivated No Traffic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Manually Reactivated&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Paused for Budget&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;No Change&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Manually Paused&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New Channel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4991009173550856:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;2010 OTA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;OTA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2012 OTA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2014 GDS&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2013 GDS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2013 OTA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2014 OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2011 OTA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;GDS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Net Hotels:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;</bucket>
            </map>
            <map to='#a5acaf'>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41534.409827615738].[ctd:Hotel Property ID:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Advertising Status Change:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Paused for Budget&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Account Paused&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Reactivated&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Manually Paused&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Paused&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Aggregated By' datatype='string' name='[Aggregated By]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
            <member value='&quot;Quarter&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Market]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='Only Show One User per Hotel' datatype='boolean' name='[Only Show One User per Hotel]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;OTA&quot;' />
            <member value='&quot;GDS&quot;' />
            <member value='&quot;Distinct Hotels&quot;' />
          </members>
        </column>
        <column caption='Graph Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Time&quot;'>
          <calculation class='tableau' formula='&quot;All Time&quot;' />
          <members>
            <member value='&quot;All Time&quot;' />
            <member value='&quot;Year over Year&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41422.531214282404'>
        <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
        </column>
        <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
        </column>
        <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
        </column>
        <column-instance column='[Calculation_9480917143657464]' derivation='User' name='[usr:Calculation_9480917143657464:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.41422.531214282404'>
      <datasources>
        <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
      </datasources>
      <datasource-dependencies datasource='vertica.41422.531214282404'>
        <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Filter for Channel Type:nk]'>
        <groupfilter function='member' level='[none:Filter for Channel Type:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Known Rotator Type:nk]'>
        <groupfilter function='level-members' level='[none:Known Rotator Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Properties in MPM:nk]'>
        <groupfilter function='level-members' level='[none:Properties in MPM:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41422.531214282404].[none:User Name:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:User Name:nk]' />
          <groupfilter function='empty-level' member='[none:User Name:nk]' />
        </groupfilter>
      </filter>
    </shared-view>
    <shared-view name='vertica.41534.409827615738'>
      <datasources>
        <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
      </datasources>
      <datasource-dependencies datasource='vertica.41534.409827615738'>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Known Rotator Type:nk]'>
        <groupfilter function='level-members' level='[none:Known Rotator Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Properties in MPM:nk]'>
        <groupfilter from='&quot;1&quot;' function='range' level='[none:Properties in MPM:nk]' to='&quot;7-10&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41534.409827615738].[none:User Name:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:User Name:nk]' />
          <groupfilter function='empty-level' member='[none:User Name:nk]' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Active Advertisers Last Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold, Active, and Paused Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' first-period='-7' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' direction='DESC' />
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:SSN Channel Type:nk] * [vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk])</rows>
        <cols>[vertica.41534.409827615738].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Active Hotels'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold, Active, and Paused Hotels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Paused Advertising Status Count' datatype='integer' name='[Calculation_2491002135715177]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status], &apos;Paused&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Paused&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Active Advertising Status Count' datatype='integer' name='[Calculation_2891002131923663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD(IF CONTAINS([Hotel Property Advertising Status],&apos;Active&apos;) THEN [Hotel Property ID] END)&#13;&#10;    ELSE COUNTD(IF CONTAINS([Advertising Status], &apos;Active&apos;) THEN [Advertiser ID] END)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Sold Advertiser Count' datatype='integer' name='[Calculation_7421002135957628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN COUNTD([Hotel Property ID])&#13;&#10;    ELSE COUNTD([Advertiser ID])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2491002135715177]' derivation='User' name='[usr:Calculation_2491002135715177:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2891002131923663]' derivation='User' name='[usr:Calculation_2891002131923663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7421002135957628]' derivation='User' name='[usr:Calculation_7421002135957628:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2891002131923663:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_2491002135715177:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Calculation_7421002135957628:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[none:Hotel Property ID:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[tdy:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='Number of Hotels' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41534.409827615738].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[Multiple Values]</rows>
        <cols>[vertica.41534.409827615738].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Activity Report by Hotel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekly Activity Report by Hotel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Past 30 Days Click Conversions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversions] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 30 Days Clicks]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Clicks] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 30 Days Conversion Value Sum]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Click Conversion Value Sum] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 30 Days ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Past 30 Days Conversion Value Sum])/sum([Past 30 Days Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 30 Days Spend]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [30 Days Ago] AND [Date] &lt;= [1 Day Ago] THEN [Spend] ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 31 - 60 Days Click Conversions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversions],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Past 31 - 60 Days Clicks]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Clicks],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Conversion Value Sum]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Click Conversion Value Sum],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Past 31 - 60 Days ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Past 31 - 60 Days Conversion Value Sum])/sum([Past 31 - 60 Days Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Past 31 - 60 Days Spend]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] &gt; [60 Days Ago] AND [Date] &lt; [31 Days Ago] THEN IFNULL([Spend],0) ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[ROI % Difference]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Past 30 Days ROI]-[Past 31 - 60 Days ROI])/[Past 31 - 60 Days ROI]' scope-isolation='false' />
            </column>
            <column-instance column='[Past 30 Days Click Conversions]' derivation='Sum' name='[sum:Past 30 Days Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Clicks]' derivation='Sum' name='[sum:Past 30 Days Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Conversion Value Sum]' derivation='Sum' name='[sum:Past 30 Days Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days Spend]' derivation='Sum' name='[sum:Past 30 Days Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Click Conversions]' derivation='Sum' name='[sum:Past 31 - 60 Days Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Clicks]' derivation='Sum' name='[sum:Past 31 - 60 Days Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Conversion Value Sum]' derivation='Sum' name='[sum:Past 31 - 60 Days Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days Spend]' derivation='Sum' name='[sum:Past 31 - 60 Days Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 30 Days ROI]' derivation='User' name='[usr:Past 30 Days ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Past 31 - 60 Days ROI]' derivation='User' name='[usr:Past 31 - 60 Days ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ROI % Difference]' derivation='User' name='[usr:ROI % Difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Filter Status Change Not Null]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Advertising Status Change]) THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[First Hotel Property for User]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter Status Change Not Null]' derivation='None' name='[none:Filter Status Change Not Null:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Primary User]' derivation='None' name='[none:Filter for Primary User:nk]' pivot='key' type='nominal' />
            <column-instance column='[First Hotel Property for User]' derivation='None' name='[none:First Hotel Property for User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 30 Days Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Past 30 Days ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Past 31 - 60 Days ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:ROI \% Difference:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 30 Days Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Past 30 Days ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Past 31 - 60 Days Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Past 31 - 60 Days ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:ROI \% Difference:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter from='&quot;Brand New Hotel&quot;' function='range' level='[none:Advertising Status Change:nk]' to='&quot;Reactivated No Traffic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41534.409827615738].[none:Date:ok]' direction='DESC' />
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' first-period='-7' include-future='true' include-null='false' last-period='0' period-type='day' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Filter Status Change Not Null:nk]'>
            <groupfilter function='member' level='[none:Filter Status Change Not Null:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Filter for Primary User:nk]'>
            <groupfilter function='member' level='[none:Filter for Primary User:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Filter Status Change Not Null:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Filter for Primary User:nk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41534.409827615738].[:Measure Names]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41534.409827615738].[none:User Email:nk]' value='168' />
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='58' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Advertiser Name:nk]' value='376' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Hotel Property ID:ok]' value='96' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41534.409827615738].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[none:Date:ok] / ([vertica.41534.409827615738].[none:Advertising Status Change:nk] / ([vertica.41534.409827615738].[none:Advertiser Name:nk] / ([vertica.41534.409827615738].[none:Hotel Property ID:ok] / ([vertica.41534.409827615738].[none:SSN Channel Type:nk] / ([vertica.41534.409827615738].[none:Market Name:nk] / ([vertica.41534.409827615738].[none:Segment Name:nk] / ([vertica.41534.409827615738].[none:User Name:nk] / ([vertica.41534.409827615738].[none:User Email:nk] / [vertica.41534.409827615738].[none:First Hotel Property for User:ok])))))))))</rows>
        <cols>[vertica.41534.409827615738].[:Measure Names]</cols>
        <join-lod-exclude-overrides>
          <column>[vertica.41422.531214282404].[Date]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Average Budget by Market Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Average Budget by Market - </run>
            <run>&lt;</run>
            <run>[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - First of Month]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend - First of Month])/sum([Clicks - First of Month])' scope-isolation='false' />
            </column>
            <column caption='Average CPC for Current Month' datatype='real' default-format='C1033%' name='[Calculation_9480917143657464]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Spend] END)/SUM(IF MONTH(TODAY()-1) = MONTH([Date]) THEN [Clicks] END)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[CPC - First of Month]' derivation='User' name='[usr:CPC - First of Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9480917143657464]' derivation='User' name='[usr:Calculation_9480917143657464:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='integer' name='[Advertiser ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Advertising Status]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Budget Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
            </column>
            <column caption='Current Month' datatype='string' name='[Calculation_1990917143850584]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(TODAY()-1)&#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;February&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Budget]' derivation='Avg' name='[avg:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser ID]' derivation='CountD' name='[ctd:Advertiser ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status]' derivation='None' name='[none:Advertising Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Budget Type]' derivation='None' name='[none:Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1990917143850584]' derivation='None' name='[none:Calculation_1990917143850584:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[avg:Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CPC - First of Month:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[avg:Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CPC - First of Month:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Calculation_9480917143657464:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[ctd:Advertiser ID:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status:nk]'>
            <groupfilter function='member' level='[none:Advertising Status:nk]' member='&quot;Active&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Budget Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Budget Type:nk]' />
              <groupfilter function='member' level='[none:Budget Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2013-12-04#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[vertica.41534.409827615738].[none:Market Name:nk]' direction='ASC' />
          <sort class='manual' column='[vertica.41534.409827615738].[none:Segment Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41534.409827615738].[none:Advertising Status:nk]</column>
            <column>[vertica.41534.409827615738].[none:Budget Type:nk]</column>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:ok]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='width' field='[vertica.41534.409827615738].[:Measure Names]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='28' />
            <format attr='width' field='[vertica.41534.409827615738].[none:Market Name:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[vertica.41534.409827615738].[:Measure Names]' value='bold' />
            <format attr='text-decoration' field='[vertica.41534.409827615738].[none:Budget Type:nk]' value='underline' />
            <format attr='font-weight' field='[vertica.41534.409827615738].[none:Budget Type:nk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[Multiple Values]' />
              <lod column='[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([vertica.41534.409827615738].[none:Segment Name:nk] / [vertica.41534.409827615738].[none:Market Name:nk])</rows>
        <cols>([vertica.41534.409827615738].[none:Budget Type:nk] / [vertica.41534.409827615738].[:Measure Names])</cols>
        <join-lod-include-overrides>
          <column>[vertica.41422.531214282404].[Advertiser Name]</column>
          <column>[vertica.41422.531214282404].[Known Rotator Type]</column>
          <column>[vertica.41422.531214282404].[Strategic Account Type]</column>
          <column>[vertica.41422.531214282404].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Budget and Ad Coverage by Hotel Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Budget and Ad Coverage by Hotel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource caption='budget_changes' name='mysql.41534.586332928244' />
            <datasource name='Parameters' />
            <datasource caption='advertisements' name='mysql.41534.565411180556' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='mysql.41534.565411180556'>
            <column datatype='integer' name='[Advertisement ID]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertisement ID]' derivation='Count' name='[cnt:Advertisement ID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='mysql.41534.586332928244'>
            <column datatype='integer' name='[Budget Changes]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Budget Changes]' derivation='Max' name='[max:Budget Changes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='p0.0%' name='[% Coverage Loss]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Availability]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Hotel Unavailable)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Bid]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Bid)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[% Filtered for Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Filtered Ads (Budget)])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Ad Coverage]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Days Active' datatype='integer' name='[Calculation_0020917140720157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[First Auction Participation], TODAY()-1)' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='real' datatype-customized='true' name='[Can Serve Ads]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Click Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Click Room Nights Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Distinct Hotels]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Eligible Ad Count]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Filtered Ads]+[Impressions]' scope-isolation='false' />
            </column>
            <column caption='Est. Revenue Loss Total from Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Budget)])+sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Est. Revenue Loss from Bid Filtering' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Bid)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Est. Revenue Loss from Budget Filtering]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Budget)]))*sum([Click Conversion Value Sum])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Exposed Conversion Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Exposed Conversion Value Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Exposed Room Nights Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Filter for Primary User]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show One User per Hotel] THEN (IF [Is Primary User] = 1 THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END) ELSE &quot;Keep&quot; END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Hotel Property ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' datatype-customized='true' name='[Last Auction Participation]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Phone Number]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Potential Media Revenue Gain]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Filtered Ads (Bid)])+sum([Filtered Ads (Budget)]))*sum([Spend])/sum([Impressions])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0020917140720157]' derivation='Max' name='[max:Calculation_0020917140720157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Can Serve Ads]' derivation='None' name='[none:Can Serve Ads:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distinct Hotels]' derivation='None' name='[none:Distinct Hotels:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter for Primary User]' derivation='None' name='[none:Filter for Primary User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hotel Property ID]' derivation='None' name='[none:Hotel Property ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Auction Participation]' derivation='None' name='[none:Last Auction Participation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Phone Number]' derivation='None' name='[none:Phone Number:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversion Value Sum]' derivation='Sum' name='[sum:Click Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Room Nights Sum]' derivation='Sum' name='[sum:Click Room Nights Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Count]' derivation='Sum' name='[sum:Eligible Ad Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Conversion Count]' derivation='Sum' name='[sum:Exposed Conversion Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Conversion Value Sum]' derivation='Sum' name='[sum:Exposed Conversion Value Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Room Nights Sum]' derivation='Sum' name='[sum:Exposed Room Nights Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads]' derivation='Sum' name='[sum:Filtered Ads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Coverage Loss]' derivation='User' name='[usr:% Coverage Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Availability]' derivation='User' name='[usr:% Filtered for Availability:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Bid]' derivation='User' name='[usr:% Filtered for Bid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Filtered for Budget]' derivation='User' name='[usr:% Filtered for Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Coverage]' derivation='User' name='[usr:Ad Coverage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering (copy 2)]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering (copy)]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Est. Revenue Loss from Budget Filtering]' derivation='User' name='[usr:Est. Revenue Loss from Budget Filtering:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Budget Spent]' derivation='User' name='[usr:Percent of Budget Spent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Potential Media Revenue Gain]' derivation='User' name='[usr:Potential Media Revenue Gain:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Current Advertising Status' datatype='string' name='[Current Advertiser Status]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Advertising Status] END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Current Budget Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget Type] END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;DAILY&quot;' value='Daily' />
                <alias key='&quot;MONTHLY&quot;' value='Monthly' />
              </aliases>
            </column>
            <column datatype='real' default-format='C1033%' name='[Current Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Date] = TODAY()-1 THEN [Budget] END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Current Advertiser Status]' derivation='None' name='[none:Current Advertiser Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Budget Type]' derivation='None' name='[none:Current Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Budget]' derivation='Sum' name='[sum:Current Budget:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41422.531214282404].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41534.409827615738].[sum:Current Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Eligible Ad Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Availability:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Bid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Filtered for Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:\% Coverage Loss:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Potential Media Revenue Gain:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Ad Coverage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41422.531214282404].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41534.565411180556].[cnt:Advertisement ID:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41534.586332928244].[max:Budget Changes:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[max:Calculation_0020917140720157:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Current Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Eligible Ad Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Availability:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Bid:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Filtered for Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Filtered Ads:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:\% Coverage Loss:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Est. Revenue Loss from Budget Filtering (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Potential Media Revenue Gain:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Ad Coverage:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Click Room Nights Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Conversion Value Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Exposed Room Nights Sum:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Advertiser Name:nk]'>
            <groupfilter function='level-members' level='[none:Advertiser Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Filter for Primary User:nk]'>
            <groupfilter function='member' level='[none:Filter for Primary User:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Name:nk]'>
            <groupfilter function='level-members' level='[none:Market Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[:Measure Names]</column>
            <column>[vertica.41422.531214282404].[none:Advertiser Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Primary User:nk]</column>
            <column>[vertica.41422.531214282404].[none:Market Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41422.531214282404].[:Measure Names]' value='46' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Advertiser Name:nk]' value='336' />
            <format attr='width' field='[vertica.41422.531214282404].[none:User Email:nk]' value='196' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Distinct Hotels:ok]' value='56' />
            <format attr='width' field='[vertica.41422.531214282404].[none:Can Serve Ads:ok]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41422.531214282404].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[vertica.41422.531214282404].[none:Market Name:nk]' value='Market'>
              <formatted-text>
                <run>Market</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41422.531214282404].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41422.531214282404].[none:Advertiser Name:nk] / ([vertica.41422.531214282404].[none:Advertiser ID:ok] / ([vertica.41422.531214282404].[none:Phone Number:nk] / ([vertica.41422.531214282404].[none:Hotel Property ID:ok] / ([vertica.41422.531214282404].[none:Strategic Account Type:nk] / ([vertica.41422.531214282404].[none:User Name:nk] / ([vertica.41422.531214282404].[none:User Email:nk] / ([vertica.41422.531214282404].[none:Distinct Hotels:ok] / ([vertica.41422.531214282404].[none:Can Serve Ads:ok] / ([vertica.41422.531214282404].[none:Last Auction Participation:ok] / ([vertica.41422.531214282404].[none:SSN Channel Type:nk] / ([vertica.41534.409827615738].[none:Current Advertiser Status:nk] / ([vertica.41422.531214282404].[none:Segment Name:nk] / ([vertica.41422.531214282404].[none:Market Name:nk] / [vertica.41534.409827615738].[none:Current Budget Type:nk]))))))))))))))</rows>
        <cols>[vertica.41422.531214282404].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Budget and Impression Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Impression Share Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Impression Share] &lt; 0.5 THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF ISNULL([Impression Share]) THEN &quot;Less than 50%&quot;&#13;&#10;ELSEIF [Impression Share] &lt; 0.7 THEN &quot;50% to &lt;70%&quot;&#13;&#10;ELSE &quot;Greater than 70%&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Impression Share]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Count])' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Percent of Budget Spent Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Percent of Budget Spent]) THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.1 THEN &quot;&lt; 10%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.2 THEN &quot;10-20%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.3 THEN &quot;20-30%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.4 THEN &quot;30-40%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.5 THEN &quot;40-50%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.6 THEN &quot;50-60%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.7 THEN &quot;60-70%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.8 THEN &quot;70-80%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 0.9 THEN &quot;80-90%&quot;&#13;&#10;ELSEIF [Percent of Budget Spent] &lt; 1.0 THEN &quot;90-100%&quot;&#13;&#10;ELSE &quot;100%+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Percent of Budget Spent]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/[vertica.41534.409827615738].[Aggregated Budget]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='CountD' name='[ctd:Advertiser Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impression Share Bins]' derivation='User' name='[usr:Impression Share Bins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impression Share]' derivation='User' name='[usr:Impression Share:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent of Budget Spent Bins]' derivation='User' name='[usr:Percent of Budget Spent Bins:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent of Budget Spent]' derivation='User' name='[usr:Percent of Budget Spent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[vertica.41422.531214282404].[none:Advertiser Name:nk]' direction='DESC' using='[vertica.41422.531214282404].[usr:Impression Share:qk]'>
          </sort>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Greater than 70\%&quot;</bucket>
              <bucket>&quot;50\% to &lt;70\%&quot;</bucket>
              <bucket>&quot;Less than 50\%&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt; 10\%&quot;</bucket>
              <bucket>&quot;10-20\%&quot;</bucket>
              <bucket>&quot;20-30\%&quot;</bucket>
              <bucket>&quot;30-40\%&quot;</bucket>
              <bucket>&quot;40-50\%&quot;</bucket>
              <bucket>&quot;60-70\%&quot;</bucket>
              <bucket>&quot;80-90\%&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[usr:Percent of Budget Spent:qk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='Number of Hotels' />
            <format attr='subtitle' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41422.531214282404].[ctd:Advertiser Name:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' />
              <lod column='[vertica.41422.531214282404].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41422.531214282404].[ctd:Advertiser Name:qk]</rows>
        <cols>[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Advertiser Name]</column>
          <column>[vertica.41534.409827615738].[Date]</column>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
          <column>[vertica.41534.409827615738].[Strategic Account Type]</column>
          <column>[vertica.41534.409827615738].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Hotel Status Changes'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='true' />
            <encoding attr='space' class='1' field='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41534.409827615738].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='color' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='Change in Advertising&#10;Status'>
              <formatted-text>
                <run>Change in Advertising&#10;Status</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' y-axis-name='[vertica.41534.409827615738].[sum:Advertiser Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0340936183929443' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date Axis:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Date Axis:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Advertising Status Change Value:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change in Advertising Status:&#9;</run>
                <run bold='true'>&lt;[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]&gt;&#10;</run>
                <run fontcolor='#ffffff'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[sum:Advertiser Value:qk] + [vertica.41534.409827615738].[sum:Advertiser Value:qk])</rows>
        <cols>[vertica.41534.409827615738].[none:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hotel Status Changes Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Segment Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment Name]' derivation='None' name='[none:Segment Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Advertising Status Change:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_5631031142200138:nk]' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brand New Hotel&quot;</bucket>
              <bucket>&quot;New Channel&quot;</bucket>
              <bucket>&quot;Manually Reactivated&quot;</bucket>
              <bucket>&quot;Reactivated No Traffic&quot;</bucket>
              <bucket>&quot;Manually Paused&quot;</bucket>
              <bucket>&quot;Paused for Budget&quot;</bucket>
              <bucket>&quot;Paused No Traffic&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[none:Segment Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 10&quot;</bucket>
              <bucket>&quot;11 to 40&quot;</bucket>
              <bucket>&quot;Rest of US&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41534.409827615738].[none:Segment Name:nk]' value='92' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='-90' />
            <format attr='font-size' field='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' value='9' />
            <format attr='text-orientation' field='[vertica.41534.409827615738].[none:SSN Channel Type:nk]' value='0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#f7f7f7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='2' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41534.409827615738].[sum:Advertiser Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[vertica.41534.409827615738].[none:Segment Name:nk]</rows>
        <cols total='true'>([vertica.41534.409827615738].[none:SSN Channel Type:nk] / [vertica.41534.409827615738].[none:Calculation_5631031142200138:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Impressions by Travel Window'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Filtered Ads (Bid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Budget)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Filtered Ads (Hotel Unavailable)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Travel Window]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Travel Window]' derivation='None' name='[none:Travel Window:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filtered Ads (Bid)]' derivation='Sum' name='[sum:Filtered Ads (Bid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Budget)]' derivation='Sum' name='[sum:Filtered Ads (Budget):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filtered Ads (Hotel Unavailable)]' derivation='Sum' name='[sum:Filtered Ads (Hotel Unavailable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41422.531214282404].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Bid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Budget):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Filtered Ads (Hotel Unavailable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[sum:Impressions:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[:Measure Names]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='Ad Calls' />
            <format attr='subtitle' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41422.531214282404].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41422.531214282404].[usr:Click ROI:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[vertica.41422.531214282404].[Multiple Values]' value='54' />
            <format attr='width' field='[vertica.41422.531214282404].[usr:Click ROI:qk]' value='54' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[vertica.41422.531214282404].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[vertica.41422.531214282404].[usr:Click ROI:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41422.531214282404].[Multiple Values] + [vertica.41422.531214282404].[usr:Click ROI:qk])</rows>
        <cols>[vertica.41422.531214282404].[none:Travel Window:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manually Paused'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;OTA&quot;' />
                <member value='&quot;GDS&quot;' />
                <member value='&quot;Distinct Hotels&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Manually Paused&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manually Reactivated'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Manually Reactivated&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Net Hotels and ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Click ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversion Value Sum])/sum([Spend])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Exposed Conversion Value Sum])/SUM([Spend])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Click ROI]' derivation='User' name='[usr:Click ROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI]' derivation='User' name='[usr:Exposed ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget]' role='measure' type='quantitative'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Aggregated By]&#13;&#10;    WHEN &apos;Day&apos; THEN DATE([Date])&#13;&#10;    WHEN &apos;Week&apos; THEN DATE(DATETRUNC(&apos;week&apos;,[Date]))&#13;&#10;    WHEN &apos;Month&apos; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;    WHEN &apos;Quarter&apos; THEN DATE(DATETRUNC(&apos;quarter&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Net Hotels' datatype='integer' name='[Net Hotels]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Hotels]' derivation='User' name='[usr:Net Hotels:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41534.409827615738].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Advertiser Count:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Advertiser Value:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[usr:Net Hotels:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Exposed ROI:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[usr:Click ROI:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='3' first-period='-1' include-future='true' include-null='false' last-period='0' period-type='year' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[:Measure Names]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[none:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='ROI' />
            <format attr='subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41534.409827615738].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41534.409827615738].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41534.409827615738].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
            <format attr='break-on-special' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
            <format attr='show-null-value-warning' field='[vertica.41534.409827615738].[usr:Net Hotels:qk]' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[vertica.41534.409827615738].[usr:Net Hotels:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[vertica.41534.409827615738].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#acacac' />
                <format attr='size' value='1.0108187198638916' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[usr:Net Hotels:qk] + [vertica.41534.409827615738].[Multiple Values])</rows>
        <cols>[vertica.41534.409827615738].[none:Date Axis:qk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41422.531214282404].[Known Rotator Type]</column>
          <column>[vertica.41422.531214282404].[Market Name]</column>
          <column>[vertica.41422.531214282404].[Strategic Account Type]</column>
          <column>[vertica.41422.531214282404].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New (New Channel or Brand New Hotel)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Brand New Hotel&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;New Channel&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused Hotels by Months Active'>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Months Active]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Sold Date],TODAY())' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[ID]' derivation='CountD' name='[ctd:ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Months Active]' derivation='None' name='[none:Months Active:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused for Budget&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused No Traffic&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='3' first-period='-1' include-future='true' include-null='false' last-period='0' period-type='year' />
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[ctd:ID:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Months Active:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused Hotels by ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column caption='ID' datatype='integer' name='[Calculation_1151030171422328]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Click ROI Bins]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  [Click ROI] &lt; 2 THEN &quot;1:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 3 THEN &quot;2:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 4 THEN &quot;3:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 5 THEN &quot;4:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 6 THEN &quot;5:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 7 THEN &quot;6:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 8 THEN &quot;7:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 9 THEN &quot;8:1&quot;&#13;&#10;    ELSEIF [Click ROI] &lt; 10 THEN &quot;9:1&quot;&#13;&#10;    ELSE &quot;10+:1&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1151030171422328]' derivation='CountD' name='[ctd:Calculation_1151030171422328:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1151030171422328]' derivation='None' name='[none:Calculation_1151030171422328:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click ROI Bins]' derivation='User' name='[usr:Click ROI Bins:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='string' name='[Advertising Status Change]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property ID]&#13;&#10;    ELSE [Advertiser ID]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Advertising Status Change]' derivation='None' name='[none:Advertising Status Change:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[vertica.41422.531214282404].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Advertising Status Change:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Manually Paused&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused for Budget&quot;' />
              <groupfilter function='member' level='[none:Advertising Status Change:nk]' member='&quot;Paused No Traffic&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.41422.531214282404].[none:Market Filter:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[vertica.41422.531214282404].[none:Calculation_1151030171422328:ok]' />
              <lod column='[vertica.41534.409827615738].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#acacac' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41422.531214282404].[ctd:Calculation_1151030171422328:qk]</rows>
        <cols>[vertica.41422.531214282404].[usr:Click ROI Bins:nk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Date]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Paused No Traffic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Channel Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
              <calculation class='tableau' formula='&quot;Total&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;OTA&quot;' />
                <member value='&quot;GDS&quot;' />
                <member value='&quot;Distinct Hotels&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Paused No Traffic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Paused for Budget'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ABS Advertising Status Change Value' datatype='integer' name='[Calculation_7400917102513871]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Advertiser Value])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7400917102513871]' derivation='Sum' name='[sum:Calculation_7400917102513871:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Paused for Budget&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Calculation_7400917102513871:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Reactivated No Traffic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column caption='Advertising Status Change Value' datatype='integer' name='[Advertiser Value]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos; THEN&#13;&#10;    IF CONTAINS([Hotel Property Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Hotel Property Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Hotel Property Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    IF CONTAINS([Advertising Status Change],&apos;Reactivated&apos;) OR CONTAINS([Advertising Status Change],&apos;New&apos;) THEN 1&#13;&#10;    ELSEIF CONTAINS([Advertising Status Change],&apos;Paused&apos;) THEN -1&#13;&#10;    ELSE 0&#13;&#10;    END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Color' datatype='string' name='[Calculation_4991009173550856]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN STR(YEAR([Date])) + &quot; &quot; + [SSN Channel Type]&#13;&#10;    ELSE [SSN Channel Type]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Date with YoY' datatype='string' name='[Calculation_5001009172938764]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Year over Year&quot; THEN [Date without Year]&#13;&#10;    ELSE STR([Date Axis])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Filter for Channel Type' datatype='boolean' name='[Calculation_5570917102843327]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column caption='Change in Advertising Status' datatype='string' name='[Calculation_5631031142200138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Distinct Hotels&quot; THEN [Hotel Property Advertising Status Change]&#13;&#10;    ELSE [Advertising Status Change]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Is Primary User]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Market Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Market] OR &#13;&#10;[Segment Name] = [Parameters].[Market] OR &#13;&#10;[Parameters].[Market] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Market] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4991009173550856]' derivation='None' name='[none:Calculation_4991009173550856:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5001009172938764]' derivation='None' name='[none:Calculation_5001009172938764:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5570917102843327]' derivation='None' name='[none:Calculation_5570917102843327:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5631031142200138]' derivation='None' name='[none:Calculation_5631031142200138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Filter]' derivation='None' name='[none:Market Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Value]' derivation='Sum' name='[sum:Advertiser Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_5570917102843327:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated&quot;' />
              <groupfilter function='member' level='[none:Calculation_5631031142200138:nk]' member='&quot;Reactivated No Traffic&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[vertica.41534.409827615738].[none:Date:qk]' filter-group='5' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Market Filter:nk]'>
            <groupfilter function='member' level='[none:Market Filter:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Properties in MPM:nk]</column>
            <column>[vertica.41534.409827615738].[none:Is Primary User:ok]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</column>
            <column>[vertica.41534.409827615738].[none:Market Filter:nk]</column>
            <column>[vertica.41534.409827615738].[none:Date:qk]</column>
            <column>[vertica.41534.409827615738].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41534.409827615738].[none:User Name:nk]</column>
            <column>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.41534.409827615738].[sum:Advertiser Value:qk]</rows>
        <cols>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Spend vs. Budget'>
      <table>
        <view>
          <datasources>
            <datasource caption='advertiser_performance' name='vertica.41422.531214282404' />
            <datasource name='Parameters' />
            <datasource caption='hotel_status_changes' name='vertica.41534.409827615738' />
          </datasources>
          <datasource-dependencies datasource='vertica.41422.531214282404'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter for Channel Type]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [SSN Channel Type] OR [Parameters].[Parameter 1] = &apos;Total&apos; OR [Parameters].[Parameter 1] = &apos;Distinct Hotels&apos;' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotels]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter for Channel Type]' derivation='None' name='[none:Filter for Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41534.409827615738'>
            <column datatype='real' default-format='C1033%' name='[Adjusted Budget]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Budget Type]&#13;&#10;    WHEN &quot;DAILY&quot; THEN [Budget]&#13;&#10;    ELSE ROUND([Budget]/30,2)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Show Spend With Budget]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL ([Budget])THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END' />
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Show Spend With Budget]' derivation='None' name='[none:Show Spend With Budget:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted Budget]' derivation='Sum' name='[sum:Adjusted Budget:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[vertica.41422.531214282404].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41534.409827615738].[sum:Adjusted Budget:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41422.531214282404].[sum:Spend:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='relative-date' column='[vertica.41422.531214282404].[none:Date:qk]' filter-group='4' first-period='0' include-future='true' include-null='false' last-period='0' period-type='month' />
          <filter class='categorical' column='[vertica.41422.531214282404].[none:Is Primary User:ok]'>
            <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41534.409827615738].[none:Show Spend With Budget:nk]'>
            <groupfilter function='member' level='[none:Show Spend With Budget:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41534.409827615738].[none:Show Spend With Budget:nk]</column>
            <column>[vertica.41422.531214282404].[none:Is Primary User:ok]</column>
            <column>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Properties in MPM:nk]</column>
            <column>[vertica.41422.531214282404].[none:Date:qk]</column>
            <column>[vertica.41422.531214282404].[none:Filter for Channel Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41422.531214282404].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.41422.531214282404].[sum:Spend:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[vertica.41422.531214282404].[sum:Spend:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[vertica.41422.531214282404].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[vertica.41422.531214282404].[sum:Spend:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[vertica.41422.531214282404].[:Measure Names]' />
              <lod column='[vertica.41422.531214282404].[sum:Spend:qk]' />
              <lod column='[vertica.41534.409827615738].[sum:Adjusted Budget:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41534.409827615738].[sum:Adjusted Budget:qk] + [vertica.41422.531214282404].[sum:Spend:qk])</rows>
        <cols>[vertica.41422.531214282404].[twk:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41534.409827615738].[Known Rotator Type]</column>
          <column>[vertica.41534.409827615738].[SSN Channel Type]</column>
          <column>[vertica.41534.409827615738].[Strategic Account Type]</column>
          <column>[vertica.41534.409827615738].[User Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Advertiser Data' tab-color='#d7e9ff'>
      <repository-location id='AdvertiserData' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='4000' minheight='1200' minwidth='4000' />
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' type='layout-basic' w='99900' x='0' y='0'>
              <zone h='100000' id='7' name='Budget and Ad Coverage by Hotel Data' show-title='true' w='90975' x='8925' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='5125' x='0' y='0'>
                <zone h='4582' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='5125' x='0' y='0'>
                </zone>
                <zone h='4249' id='13' param='[Parameters].[Market]' type='paramctrl' w='5125' x='0' y='4582'>
                  <formatted-text>
                    <run>Market Segment</run>
                  </formatted-text>
                </zone>
                <zone h='4333' id='21' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Market Name:nk]' type='filter' w='5125' x='0' y='8831'>
                </zone>
                <zone h='4249' id='14' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Date:qk]' type='filter' w='5125' x='0' y='13164'>
                </zone>
                <zone h='4249' id='20' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' w='5125' x='0' y='17413'>
                </zone>
                <zone h='6916' id='12' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' w='5125' x='0' y='21662'>
                </zone>
                <zone h='6916' id='18' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Known Rotator Type:nk]' type='filter' w='5125' x='0' y='28578'>
                </zone>
                <zone h='11416' id='16' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Properties in MPM:nk]' type='filter' w='5125' x='0' y='35494'>
                </zone>
                <zone h='3999' id='15' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' w='5125' x='0' y='46910'>
                </zone>
              </zone>
              <zone h='100000' id='19' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:User Name:nk]' type='filter' w='3800' x='5125' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Budget, Spend, and Coverage' tab-color='#d7e9ff'>
      <repository-location id='BudgetSpendandCoverage' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='25' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='24' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='72335' x='0' y='5000'>
                <zone h='47500' id='10' name='Impressions by Travel Window' show-title='true' w='36167' x='36168' y='52500'>
                </zone>
                <zone h='43500' id='19' name='Spend vs. Budget' show-title='true' w='36168' x='0' y='52500'>
                </zone>
                <zone h='4000' id='21' name='Spend vs. Budget' param='[vertica.41422.531214282404].[:Measure Names]' type='color' w='36168' x='0' y='96000'>
                </zone>
                <zone h='47500' id='33' name='Budget and Impression Share' show-title='true' w='72335' x='0' y='5000'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='14' is-fixed='true' type='layout-basic' w='13333' x='72335' y='5000'>
                <zone h='95000' id='4' param='vert' type='layout-flow' w='13333' x='72335' y='5000'>
                  <zone h='6375' id='28' param='[Parameters].[Parameter 1]' type='paramctrl' w='13333' x='72335' y='5000'>
                  </zone>
                  <zone h='6375' id='17' param='[Parameters].[Market]' type='paramctrl' w='13333' x='72335' y='11375'>
                  </zone>
                  <zone h='6375' id='12' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Date:qk]' type='filter' w='13333' x='72335' y='17750'>
                  </zone>
                  <zone h='10375' id='23' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' w='13333' x='72335' y='24125'>
                  </zone>
                  <zone h='10375' id='35' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Known Rotator Type:nk]' type='filter' w='13333' x='72335' y='34500'>
                  </zone>
                  <zone h='17125' id='27' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Properties in MPM:nk]' type='filter' w='13333' x='72335' y='44875'>
                  </zone>
                  <zone h='15375' id='11' name='Impressions by Travel Window' param='[vertica.41422.531214282404].[:Measure Names]' type='color' w='13333' x='72335' y='62000'>
                  </zone>
                </zone>
              </zone>
              <zone h='95000' id='34' name='Spend vs. Budget' param='[vertica.41422.531214282404].[none:User Name:nk]' type='filter' w='13999' x='85668' y='5000'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Market Data' tab-color='#d7e9ff'>
      <repository-location id='MarketData' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1000' maxwidth='1400' minheight='1000' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='85455' x='0' y='0'>
            <zone h='100000' id='7' param='horz' type='layout-flow' w='74026' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='74026' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='74026' x='0' y='0'>
                  <zone h='100000' id='1' name='Average Budget by Market Data' show-title='true' w='74026' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='8' is-fixed='true' param='vert' type='layout-flow' w='11429' x='74026' y='0'>
              <zone h='1200' id='10' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[Number of Properties]' type='filter' w='11429' x='74026' y='0'>
              </zone>
              <zone h='5100' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='11429' x='74026' y='1200'>
              </zone>
              <zone h='13700' id='11' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='11429' x='74026' y='6300'>
              </zone>
              <zone h='8300' id='13' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='11429' x='74026' y='20000'>
              </zone>
              <zone h='8300' id='14' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='11429' x='74026' y='28300'>
              </zone>
            </zone>
          </zone>
          <zone h='100000' id='16' type='layout-flow' w='14545' x='85455' y='0'>
            <zone h='100000' id='15' name='Average Budget by Market Data' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='14545' x='85455' y='0'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='ROI and Churn' tab-color='#d7e9ff'>
      <repository-location id='ROIandChurn' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='20' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='70918' x='0' y='5000'>
                <zone h='47500' id='1' name='Net Hotels and ROI' show-title='true' w='70918' x='0' y='5000'>
                </zone>
                <zone h='43500' id='10' name='Paused Hotels by Months Active' show-title='true' w='36051' x='0' y='52500'>
                </zone>
                <zone h='4000' id='15' type='text' w='36051' x='0' y='96000'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='8'>Months Active</run>
                  </formatted-text>
                </zone>
                <zone h='47500' id='28' type='empty' w='34867' x='36051' y='52500'>
                </zone>
              </zone>
              <zone fixed-size='160' h='95000' id='17' is-fixed='true' type='layout-basic' w='13333' x='70918' y='5000'>
                <zone h='95000' id='4' param='vert' type='layout-flow' w='13333' x='70918' y='5000'>
                  <zone h='6375' id='27' param='[Parameters].[Parameter 1]' type='paramctrl' w='13333' x='70918' y='5000'>
                  </zone>
                  <zone h='6375' id='8' param='[Parameters].[Market]' type='paramctrl' w='13333' x='70918' y='11375'>
                  </zone>
                  <zone h='6375' id='19' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='13333' x='70918' y='17750'>
                  </zone>
                  <zone h='6375' id='9' param='[Parameters].[Aggregated By]' type='paramctrl' w='13333' x='70918' y='24125'>
                  </zone>
                  <zone h='10375' id='7' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='13333' x='70918' y='30500'>
                  </zone>
                  <zone h='17125' id='22' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='13333' x='70918' y='40875'>
                  </zone>
                  <zone h='10375' id='31' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='13333' x='70918' y='58000'>
                  </zone>
                  <zone h='10375' id='32' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='13333' x='70918' y='68375'>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='177' h='95000' id='33' is-fixed='true' name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='15416' x='84251' y='5000'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Status Changes by Channel' tab-color='#d7e9ff'>
      <repository-location id='StatusChangesbyChannel' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1200' maxwidth='1300' minheight='1200' minwidth='1300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3332' id='15' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='96668' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3332'>
              <zone h='96668' id='3' type='layout-basic' w='74460' x='0' y='3332'>
                <zone h='32222' id='1' name='New' show-title='true' w='37232' x='0' y='3332'>
                </zone>
                <zone h='32222' id='12' name='Manually Reactivated' show-title='true' w='37228' x='37232' y='3332'>
                </zone>
                <zone h='32224' id='13' name='Paused for Budget' show-title='true' w='37228' x='37232' y='35554'>
                </zone>
                <zone h='32222' id='14' name='Manually Paused' show-title='true' w='37232' x='0' y='67778'>
                </zone>
                <zone h='32224' id='20' name='Reactivated No Traffic' show-title='true' w='37232' x='0' y='35554'>
                </zone>
                <zone h='32222' id='23' name='Paused No Traffic' show-title='true' w='37228' x='37232' y='67778'>
                </zone>
              </zone>
              <zone fixed-size='160' h='96668' id='4' is-fixed='true' param='vert' type='layout-flow' w='12308' x='74460' y='3332'>
                <zone h='4249' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='12308' x='74460' y='3332'>
                </zone>
                <zone h='4249' id='11' param='[Parameters].[Market]' type='paramctrl' w='12308' x='74460' y='7581'>
                </zone>
                <zone h='4249' id='18' param='[Parameters].[Aggregated By]' type='paramctrl' w='12308' x='74460' y='11830'>
                </zone>
                <zone h='5333' id='19' param='[Parameters].[Parameter 2]' type='paramctrl' w='12308' x='74460' y='16079'>
                </zone>
                <zone h='5499' id='8' name='New' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='12308' x='74460' y='21412'>
                </zone>
                <zone h='6916' id='24' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='12308' x='74460' y='26911'>
                </zone>
                <zone h='6916' id='25' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='12308' x='74460' y='33827'>
                </zone>
                <zone h='11416' id='6' name='New' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='12308' x='74460' y='40743'>
                </zone>
                <zone h='5249' id='10' name='New' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' w='12308' x='74460' y='52159'>
                </zone>
              </zone>
              <zone h='96668' id='26' name='Manually Reactivated' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='12924' x='86768' y='3332'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Status Changes by Hotel' tab-color='#d7e9ff'>
      <repository-location id='StatusChangesbyHotel' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='1500' maxwidth='2300' minheight='1500' minwidth='2300' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='187' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8130' x='0' y='0'>
              <zone h='3668' id='15' param='[Parameters].[Parameter 1]' type='paramctrl' w='8130' x='0' y='0'>
              </zone>
              <zone h='3401' id='7' param='[Parameters].[Market]' type='paramctrl' w='8130' x='0' y='3668'>
              </zone>
              <zone h='3401' id='16' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='8130' x='0' y='7069'>
              </zone>
              <zone h='534' id='12' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Status Change:nk]' type='filter' w='8130' x='0' y='10470'>
              </zone>
              <zone h='4334' id='13' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' w='8130' x='0' y='11004'>
                <formatted-text>
                  <run>Only Show One &#10;User per Hotel</run>
                </formatted-text>
              </zone>
              <zone h='9134' id='14' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='8130' x='0' y='15338'>
              </zone>
              <zone h='5534' id='10' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='8130' x='0' y='24472'>
              </zone>
              <zone h='5534' id='18' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='8130' x='0' y='30006'>
              </zone>
              <zone h='12734' id='17' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' w='8130' x='0' y='35540'>
              </zone>
            </zone>
            <zone h='100000' id='19' name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='7305' x='8130' y='0'>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='84391' x='15435' y='0'>
              <zone h='100000' id='9' name='Activity Report by Hotel' show-title='true' w='84391' x='15435' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Summary' tab-color='#d7e9ff'>
      <repository-location id='Summary' path='/t/PreQA/workbooks/SSNAdvertiserActivity' revision='' site='PreQA' />
      <style>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4443' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95557' id='7' param='horz' type='layout-flow' w='100000' x='0' y='4443'>
              <zone h='95557' id='5' type='layout-basic' w='78812' x='0' y='4443'>
                <zone h='47778' id='1' name='Active Hotels' show-title='true' w='28062' x='50750' y='52222'>
                </zone>
                <zone h='47778' id='3' name='Hotel Status Changes Table' show-title='true' w='50750' x='0' y='52222'>
                </zone>
                <zone h='47779' id='4' name='Hotel Status Changes' show-title='true' w='68689' x='0' y='4443'>
                </zone>
                <zone h='20557' id='9' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='color' w='10123' x='68689' y='4443'>
                </zone>
                <zone h='27222' id='8' name='Hotel Status Changes' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='10123' x='68689' y='25000'>
                </zone>
              </zone>
              <zone fixed-size='167' h='95557' id='6' is-fixed='true' param='vert' type='layout-flow' w='10438' x='78812' y='4443'>
                <zone h='5666' id='17' param='[Parameters].[Parameter 1]' type='paramctrl' w='10438' x='78812' y='4443'>
                </zone>
                <zone h='5666' id='13' param='[Parameters].[Market]' type='paramctrl' w='10438' x='78812' y='10109'>
                </zone>
                <zone h='5666' id='14' param='[Parameters].[Aggregated By]' type='paramctrl' w='10438' x='78812' y='15775'>
                </zone>
                <zone h='7332' id='16' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Date:qk]' type='filter' w='10438' x='78812' y='21441'>
                </zone>
                <zone h='21221' id='20' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' w='10438' x='78812' y='28773'>
                </zone>
                <zone h='9221' id='21' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' w='10438' x='78812' y='49994'>
                </zone>
                <zone h='9221' id='22' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' w='10438' x='78812' y='59215'>
                </zone>
                <zone h='15221' id='15' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' w='10438' x='78812' y='68436'>
                </zone>
              </zone>
              <zone h='95557' id='19' name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:User Name:nk]' type='filter' w='10500' x='89250' y='4443'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='8333' id='18' name='Active Hotels' param='[vertica.41534.409827615738].[:Measure Names]' type='color' w='8750' x='54938' y='56444'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='83' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotel Status Changes'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card size='37' type='pages' />
            <card size='156' type='filters' />
            <card size='245' type='marks' />
            <card pane-specification-id='1' param='[vertica.41534.409827615738].[:Measure Names]' size='13' type='color' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' size='88' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5570917102843327:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:User Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotel Status Changes Table'>
      <cards>
        <edge name='left'>
          <strip size='226'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
          <field>[vertica.41534.409827615738].[none:Current Advertiser Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:Segment Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Active Hotels'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Properties in MPM:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Summary'>
      <active id='3' />
      <zones>
        <zone name='Active Hotels'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes Table'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Hotel Status Changes' pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='color' />
        <zone name='Hotel Status Changes' pane-specification-id='1' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone name='Hotel Status Changes' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Active Hotels' pane-specification-id='2' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='New'>
      <cards>
        <edge name='left'>
          <strip size='191'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Manually Reactivated'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Reactivated No Traffic'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused for Budget'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Manually Paused'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused No Traffic'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Properties in MPM:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Is Primary User:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5001009172938764:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_5631031142200138:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Status Changes by Channel'>
      <active id='11' />
      <zones>
        <zone name='New'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Manually Reactivated'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused for Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Reactivated No Traffic'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused No Traffic'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone name='New' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='New' pane-specification-id='2' param='[vertica.41534.409827615738].[none:Calculation_4991009173550856:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Activity Report by Hotel'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card size='34' type='pages' />
            <card size='239' type='filters' />
            <card size='182' type='marks' />
            <card size='109' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41534.409827615738].[none:Strategic Account Type:nk]' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Known Rotator Type:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Only Show One User per Hotel]' type='parameter' />
            <card param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Filter Status Change Not Null:nk]</field>
          <field>[vertica.41417.709767245367].[none:Filter for Primary User:nk]</field>
          <field>[vertica.41417.709767245367].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Segment Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Email:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertiser Name:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_0681002145521444:ok]</field>
          <field>[vertica.41534.409827615738].[none:Date:qk]</field>
          <field>[vertica.41534.409827615738].[none:First Hotel Property for User:ok]</field>
          <field>[vertica.41534.409827615738].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Status Changes by Hotel'>
      <active id='4' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' />
        <zone name='Activity Report by Hotel' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Budget and Impression Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41422.531214282404].[usr:Impression Share Bins:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41422.531214282404].[none:Advertiser Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Impression Share Bins:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Percent of Budget Spent Bins:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Spend vs. Budget'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Show Spend With Budget:nk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Known Rotator Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Properties in MPM:nk]</field>
          <field>[vertica.41422.531214282404].[yr:Date Axis:ok]</field>
          <field>[vertica.41422.531214282404].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impressions by Travel Window'>
      <cards>
        <edge name='left'>
          <strip size='282'>
            <card size='37' type='pages' />
            <card size='192' type='filters' />
            <card size='245' type='marks' />
            <card size='4' type='measures' />
            <card pane-specification-id='2' param='[vertica.41422.531214282404].[:Measure Names]' size='97' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41422.531214282404].[none:Strategic Account Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41422.531214282404].[:Measure Names]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Travel Window:nk]</field>
          <field>[vertica.41422.531214282404].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Budget, Spend, and Coverage'>
      <active id='33' />
      <zones>
        <zone name='Impressions by Travel Window'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend vs. Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend vs. Budget' pane-specification-id='1' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
        <zone name='Budget and Impression Share'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Impressions by Travel Window' param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Impressions by Travel Window' pane-specification-id='2' param='[vertica.41422.531214282404].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Average Budget by Market Data'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:ok]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Segment Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Calculation_1990917143850584:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Market Data'>
      <zones>
        <zone name='Average Budget by Market Data'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Budget and Ad Coverage by Hotel Data'>
      <cards>
        <edge name='left'>
          <strip size='265'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='typeinlist' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41534.565411180556].[none:Advertisement ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Current Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Current Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[:Measure Names]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Can Serve Ads:ok]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Distinct Hotels:ok]</field>
          <field>[vertica.41422.531214282404].[none:Filter for Primary User:nk]</field>
          <field>[vertica.41422.531214282404].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Last Auction Participation:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[none:Market Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Phone Number:nk]</field>
          <field>[vertica.41422.531214282404].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:Segment Name:nk]</field>
          <field>[vertica.41422.531214282404].[none:Strategic Account Type:nk]</field>
          <field>[vertica.41422.531214282404].[none:User Email:nk]</field>
          <field>[vertica.41422.531214282404].[none:User Name:nk]</field>
          <field>[vertica.41422.531214282404].[yr:First Auction Participation:ok]</field>
          <field>[vertica.41422.531214282404].[yr:Last Auction Participation:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Advertiser Data'>
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone mode='checkdropdown' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Market Name:nk]' type='filter' />
        <zone name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Only Show One User per Hotel]' type='paramctrl' />
        <zone mode='typeinlist' name='Budget and Ad Coverage by Hotel Data' param='[vertica.41422.531214282404].[none:Advertiser Name:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Net Hotels and ROI'>
      <cards>
        <edge name='left'>
          <strip size='203'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Market]' type='parameter' />
            <card mode='compact' param='[Parameters].[Aggregated By]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[:Measure Names]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Budget Type:nk]</field>
          <field>[vertica.41417.709767245367].[none:Can Serve Ads:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is New:ok]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Previous Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41417.709767245367].[tdy:Date:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Date:ok]</field>
          <field>[vertica.41417.709767245367].[yr:Sold Date:ok]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused Hotels by Months Active'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[vertica.41534.409827615738].[none:Advertising Status Change:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Label - Months Active:nk]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Paused Hotels by ROI'>
      <cards>
        <edge name='left'>
          <strip size='181'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[vertica.41422.531214282404].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Status Change:nk]</field>
          <field>[vertica.41422.531214282404].[Number of Properties]</field>
          <field>[vertica.41422.531214282404].[none:Advertiser ID:ok]</field>
          <field>[vertica.41422.531214282404].[none:Calculation_1151030171422328:ok]</field>
          <field>[vertica.41422.531214282404].[none:Date:qk]</field>
          <field>[vertica.41422.531214282404].[none:Is Primary User:ok]</field>
          <field>[vertica.41422.531214282404].[none:Market Filter:nk]</field>
          <field>[vertica.41422.531214282404].[usr:Click ROI Bins:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertiser Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status:nk]</field>
          <field>[vertica.41534.409827615738].[none:ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:Status Change:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='ROI and Churn'>
      <zones>
        <zone name='Net Hotels and ROI'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paused Hotels by Months Active'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone forceUpdate='true' name='' type='text' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Market]' type='paramctrl' />
        <zone name='Net Hotels and ROI' param='[vertica.41534.409827615738].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Aggregated By]' type='paramctrl' />
        <zone name='Net Hotels and ROI' pane-specification-id='4' param='[vertica.41534.409827615738].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Active Advertisers Last Week'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41417.709767245367].[none:Advertiser ID:ok]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Name:nk]</field>
          <field>[vertica.41417.709767245367].[none:Advertiser Status:nk]</field>
          <field>[vertica.41417.709767245367].[none:Date:qk]</field>
          <field>[vertica.41417.709767245367].[none:Is Primary User:ok]</field>
          <field>[vertica.41417.709767245367].[none:Market Filter:nk]</field>
          <field>[vertica.41417.709767245367].[none:Properties in MPM:nk]</field>
          <field>[vertica.41417.709767245367].[none:User Name:nk]</field>
          <field>[vertica.41417.709767245367].[yr:Date Axis:ok]</field>
          <field>[vertica.41534.409827615738].[:Measure Names]</field>
          <field>[vertica.41534.409827615738].[none:Advertising Status Change:nk]</field>
          <field>[vertica.41534.409827615738].[none:Date:qk]</field>
          <field>[vertica.41534.409827615738].[none:Hotel Property ID:ok]</field>
          <field>[vertica.41534.409827615738].[none:SSN Channel Type:nk]</field>
          <field>[vertica.41534.409827615738].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hotel Status Changes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO19d2Bc1ZX+98q86VW9S5YsuWPjbtOMCaYECJC+
      ZEk2WUjZ/W0SEpKQJZvsbrIl2YRkU5cESCCkAaEaAy4YG/cmS7Ikq5fRSJre59X7+2NGGpWR
      m2zPCL/vH828W869T9+ce+45t1CEEKhQcaGgs90AFXMbbPJPNBo9Qyae57VabfKzoig0fR60
      u9T5L08RVcRMoDIMYYqwd/9xh5kzmQ2nen03b1qfiMUMBkMyUZIklmXPvQWXOv/lKaKKmAmZ
      0miOZYhWxzUefJfYF0QFQUwkOI5LJsqyfF4tuNT5L08RVcRMyKSBgFAoJPMxaE2RYLCioiym
      aiBVxAzInGaxWAALALvFdF7yVFxpUGdhKmYFlUAqZgWVQCpmBZVAKmYFlUAqZgWVQCpmhfPz
      Cqi4nPAHgoIoAigqyM92W2ZEJgIpwtY3dq++qv7YscM+wfzBe7Zc9lapAICjjU2jHg+Aj9/7
      gWy3ZUZkDmU47OZAMMzHo2DMoiAk1FBGNkSMBwkkSbpEImZfJPMQtm7dOgDzFy5JfdfpJvqz
      z9cdfqnzX54il18ERVFnrSfrvVCNaBWzgkogFbOCSiAVs4JKIBWzgkogFbOCSiAVs4JKIBWz
      QuYpfjgUloQorbOEAv6K8rLL3CYVcwiZQxnv7N2/btXiA9ueE811tqJCdVF9tjzRJ7xUnYXM
      NU80zdVUl8ei8aLK2tEoZdRoEqonOkue6KMe2qJRctkTnTlt0aJFACpq6s5XmIqLjJzfd64a
      0SpmBZVAKmYFlUA5jZwfwVQCqZgdVAKpmBVUAqmYFVQC5TRIzptBGf1A5PTpTh1LREL7QonV
      K5ZkyqPickAhUHKbQRlDGZLTNbpmxcLGg3uCVElQEGQ1lJGlUEaSQHMulKGZX1s1OOisWLBC
      4wlZOS6mhjKyFMpIEmjuhTLKy8uBcgAVFecrTsXFhAJKyXYbzgzViM5p5L4NpBIop6ESSMWs
      oBJIxaygEKg2kIoLhwLk+FUUKoFyGgqBQqhst+JMUAmU08h9Gyjzovq9+48vqLQ5/aLLG755
      0/rL3ioVKeS+DTTjVQf5VuOR5iaBtqpXHWRLxJwNZSQX1Ru0G667IejzmdVQRpZEUBSlYG6G
      MiwWCwALC4tR3VWYTeS+DaQa0TkNmaixMBUXCgJQUDWQiguFQsBQRCWQiguEQsDSqgZScaFQ
      AJbOdT+QSqDchULAUqoGUnGhmBND2IxXHRQ69GGfezhuUK86yBaSGojkdjB1xqsOABkUAKhX
      HWRLhKwQlibK3L3qIA01lJENEQRU0gbK5VCGagPlLlKzsNy2gVQC5S7UWZiKWWFOzMJUAuUu
      FEKpjkQVFw6FgFVjYSouGKoRrWJWmNtGtN8zHIzEBgadl7M1KiYiZURnuxlnxow+otZTraOD
      HXTeEvWqg2yJkBWS1EBzzxMNoKKywmQyDAUV9aqDbIkgoGjqLPVkvRczE6i6rqK6btn5SlNx
      8aAANAUgp4OpqhGdu1BIkkA5bUWrBMpdjBEop6ESKHchqwRSMRsoZA78e3K/hVcuFICmctoA
      gkqgXIZqA6mYFeYEgWb0Aw30dEqgPIG4etVBtqAQag4TyDXs8gx2UfZF6lUH2RIhE8IAmIuL
      6gEUFxcXFJd6AnH1qoNsiZjboYzKmvkAas5XmoqLhzlhA6lGdO5CJZCKWUElkIpZQSG5HYgH
      oBIol6EATM4zSCVQ7iI5hFGAksPXHagEyl0kCURTkHN4Yb1KoNyFQkBThMptAs3oB3L2dfQP
      DAVFTr3qIFtILmmlAWkuEoiIUkmh1d0TU686yJYIWQHNgKYgCKLEXBIRsy8yI4HsJZVGg57R
      u9SrDrIlIhnKoCmAZmaqKuu9mDHNaDQCqKhQrzrIGlQjWsWskCIQICu5uz1VJVDuYlwD5bIR
      rRIod6EANNQhTMWFYkwDEZVAKi4EE2wglUAqzh9zwgY6b6/AZYMgiIOeQIhXFpU5OE6T7eZk
      AcmNhTluA81IoAO735QINeBTsnXVgT8Y/N22fX1h6j8/vr6ooCArbcguUqGMOUogSqOLelyA
      LVtXHciyLCkQFMiyMtO2hAsTMZtWXU4RsqxQFGhAEKWMbyAXejEjgdZuuC79JRuhDIZhJAWi
      Aoahz1rDezKUkQRNgVAzvoGs9yKnjWiJQFByfk3eJQMhBDlvA+U0gUSFEs5b6b53kFyImOPr
      gXKaQMkh7IoFURSoGmg2kAiEK5hASQ00Z4Kpzt7Ot7a9PBjgs9iaKZAUiKoNREGaE4vq9RzV
      3uk0aHJIJ13hGmiOGdGcwbr+6kU5ZbRKCnKqPZcZSsoGmiPB1LamY3sOHR93HPncrhGPL7tX
      HUgK5Nx9dZccJG0D5e5bSPuIiivqNwAUnaJUf38/iQcGouZsXXUgy7JIKJa+cj3RipIawgRR
      ngOe6Hg8rLBGPZsyWvPy8kZHRI6jsnXVQdITzdGgZl5SfsEiLrhVl1PEuA1EKCpnPdHpNFmW
      LY5iqyH1JHnVwfkKu7iQFBhYcsXa0XPMiK6pqSGSIOaS0SoRGNgr145WiIKct4HSBPJ6PKdP
      nfBGhSy2ZgokBQb2ynVGzzENJCTiBQV5zS2tWWzNFBCAo6/gIWzMiM7lFYlpAtltpua2voa6
      6uw1JgM45gp1RiuEEMypYGowHF+9bnWexZTF1kwHRyMhXYkqSFZI8ny7ORMLA0X3tzf5Ymfy
      uFx+aGjEr0grWlZI8n8zZ2wgq9lEaQ36XIqFAeBoErsiCSQpJHm+3ZyxgU6fPl1aUTNOIEWM
      dnV1Hj7enKWGpcAxiOeUa+FyQVYINUagXNZAaUciY7RV2DTemGTSsQAOHzjc29VsKV+TrasO
      kh80NCIJ8QoMZfCCyIzZQC91vvK56ys4hru4Ii5KkTSBrAauxx1bVqlNfl177Q0VVeVObyJb
      Vx0wDAOAo8FLypUYyqAlekwDuSKjMSVm0BousoiLUSSdVl1Tww772QlHW5dW1pVWnq+4iwaZ
      gKGgoa/cIWycQAAdFsL5+vwstykT0jaQa6C/veWoK2dWJEoKWBocc6Ua0XJqFkZRCggdFsJZ
      btAMmDALszvMep2SMy4HSQFLgbuSp/EUACiQkhoo2y3KjDSBOtpbegZcGjbTaY7ZgEjA0tDQ
      uDI10DiBJPBaWj8HCGS15stCRMiZJYCiAg0NLYMIn1u+zcsDUVGSBArBb9SYA3wg2y3KjDSB
      QtHI4qtWmblcCTxJCjQ0ubKHMAIgQgIspZ0DGogzGvwuZ0LKFQ0kKRRLgaYgntEJ9F6FNDaE
      hUmQo3URMZLtFmVGmkCMKNYtW5n0IuYCRIWwNABI5+/+eg9gPBYWQcDAmnJWA6XpUlpR0drZ
      R2n01tJCAF2njnX3DXri2mydDyTIJLk+W5KuSALJKQ0UI2HTnCBQJBSSE9FBT7CytBAAp7dA
      5gFtts4HivFiSgNJmU/HuWARs2nVZRMhSNLYLEzQMcYQH5r+EnKhF2kCEUJonXnx/Ork14qa
      uoqasUX12QhlJB2JAGRZvgJDGQQ0TYEQAkrmaC2v8Blry3ovJixp5WPdnadzx+nCS4qGIgBk
      WSY5vDn8EkFWFJpCDFEjbZwbyzkYljPrudxZwc5LclIDaVk6kTvNulyQFEIDYSVkpc25vJwj
      TSA+FvaH4xyTKwvKeFFJEkjPMXHxipvJJz3RYRKy0JZcJlB6ePOG4ksXL8gZ/oCXlOQszMAx
      MUF2GLPdoIuN7bv3AphXVTGvump6atIPFCFhC2UeJURDawRZmL4kKOtI86VuXk0wymvZXGHQ
      +BCm55ikM3rE7fmPF49uPdiS5ZZdJIx6PKMeTyQWy5gqK4ShEFZCJtoCwMyZI0Iu+hLTdIkE
      A/1dp9yxHDKikwQyaNikaT/q9uxtH3ruYFeWW3aRICp4Y3DGn+v4EGamUgQKi7noCkp3IK+4
      tKi4wq7LHQ2UGsL0HDO+piwqojucK9G6WSIiotE749uWFEKDhEjAQlmRJNBF9SW6oq4/t/95
      9vWkO9DefDyYkMZvuveNuvyhSBbPB+JFWUMTTBjCktAzGA0lZirlCfPPHR28HO2bNcIiFRAo
      Xs78e0hqIJnILMUCMGsuMoFaPC1be7ZOf/56k8sVjJ97PRNDGfN4pTcsELMeADid9sCOl2KG
      mmydD5QQUzaQjqUjCUGSJEFWWBoNNmVH68iHVpZNLyJK0qHTQ88fHrq53mbQ6y5Fqy5ikYgI
      jiauKEm6mKd7ogklMxQDgBBiYA3BRHCKM3o2vWj3tXf4O0RRpKhJDH6lcUhRlC2Li85RxIRQ
      RjzOK7RFm9JJHW1tNUtWdAwGs3U+0HgsjCHSaCCsKEUhkbZyaLCS3ac9H1tbNb2I1x94+2jT
      oJvuHRhYtmjhpWjVRSwSEVFjJqOJ9OlHkz3RVIj4rZQdAEVRNp0tKkWnVxgSQ72h3quLrj7f
      JnUFu5YVLHPGnNXW6okZBvzxbm/s0Oihqwuv1rG6s/YiPYQVFhZZLRaM+XxXrNlQO3/RLZvW
      Z8smGp+FxQKj757s8AcDAYGyccTKweWPOEfcGUv5eSoiXiYjacTt2ds+HIlmnkadFWGRqrOQ
      3kDm41BkhYSIz047kl9NnCmjEf3Yscd+3/r7C5DuiXuuLbu21Tf1LI1gXOwcjfzg8A8a3Y3n
      Uk+aHra8wpUrV5n0uXKxEi+mjOhiPRmOUQCCAmXjCAAHCf76tX0TM7e6QskPfp66FCuauuI8
      P221+La39/6/Z4909/VdWJ0RETVmpXMkBCDKS33eSUSUFBIkPtsYgTLaQM2e5qgYdccz/5YA
      tLpCSqYoUEJK6BjdwryFp7ynJj4PxIT6IlOXx+eKulq85+QuyZU513QIY9N4kwZRCQD8PLFp
      AaDBRtqDaTXzuxde/dDP3jl5qhVAQECxnsxkmZ5dqKI0Drqeff7FZ59/ccSd/sf8oM99OBid
      kjkowM9DIRcoKyxSNi28gRAh5OkDff+7q3NiqqyQMAI2aoxA0/xAClF+dOxHD616SMtoeSnD
      XprDPb57fr6v2RmcntQV6Kq11S6wL2j3tY8/9CV87aPe6jwjTdEfrP/QSffJAd/ZlWvuEkiS
      5fE9ahwNQaFcwYSVIwDKjWQwQo3/tAYjVESi4hIFQFJg05KweCESR9ye77z61sMt3dOTRgXR
      xU+tNChQBJTvQvdBxWXoGRgoccAX29Y8POCfNLWUFRImfjttT36dPo1v87XV2GpKTaXzrPO6
      glN9Y52j4f94vfWf37/wUI9vuujT/tPz7fP1Gn1CTiQD1UE++Jk3PvO9vY9X5hlKbNrriu7y
      Jrwfe/xAOHGWV5m7BJp4pkmhnozEMBSI2zgAoCnk6dDtTv0i+6NUmUEZjlOEgKJg0iA8zQzi
      FeVcQvr9rLaH4qbnc/JCb3wqU0IC8nXEk7hADZRsbZmZ/uFbp29eVGTTa/wTjoeTFMJQlI7S
      Axj1eA4eaJxCoJPuk6uKVwGot9d3+DvGnwuyoBDlZ7u6/vWuJbcsLj7Q7Z0u+pSno95eD6DM
      VOaMOBNS4iu7v/L1NV8PRjWVDsNg4nAkai7WrBj0x6cMrNORwwSaMIEs1pNOTywYjY8HWhbY
      lJ1to8nPAxFqdYEyHKOCIqwczBpEpv1svtnh3ONPEe4MTOoPQNjr2edmJoYvZUIoQvriU63d
      oEDNMyueGX1SZ5JFSOrshIYi8xstIx9fW7m80nZ8IJBMIoTIimKnbeP5TRpjVJw0hja6G5fm
      LQUw3z4/SSCFKC93vfz+v75/e992pz+ecPcdP3q4f9Q/JRbb64k++Zap1lYLYGHewqdPPf2Z
      Nz/z0QUfXVOyZoX95o7IvlG5qdMd0QVXF5sjh9rOYuHlMoHSGqjYQNpc4Vgs7eCabyHvdLgB
      EEISMqrNpNef8CVg54iJJVM0ECFkuyd0Opb6V3/sZPf08QgAAZx+Ze0C9gDRb3em38wwLy43
      6oemD2Eiai1kMHimUyW//nzTsX7/9OdRXk46TBaVWv7f5vk2A3dVmeV4v7+7t/9Lr33l0de/
      HYpLdjYdQKZAKZhkxQ+GB0uNpQDqbHWdgU4Ajzc93uZr+89r//OQ6xCAQDA06vHkMYmWoUlm
      0IFurxwv5QUGwNritQzN/HTzTzdXbgYwGhR/d/qx2xuu7hyNtI4S2rpvMHDG38dlI1B3b/8P
      n9/9X395xx841/1NipLWQIV67O/y6On0Ex0Lv9/31sGmbnc0X4d8HTpHwkOBhE1LzBqE+Env
      ujkSr9RzHdEEAEJwMhzbHcgQmBxmNNqgcJ0u4ajRd4XSNpaTFyr03PTpTJCnasyk1zPVuE53
      gZCd7aM97gwZ3JGESQMARRbt526oBXBVubVxINAT6e4N9B7zHtvf2+vQzbiIxZfw2XV2ChQA
      g8YQk2KCLLwz8M5DKx9aXrj80GBnqS3lR51nwf4u75/e3HvN91/befJdAPu7vQXFp3efdgNo
      cDQ8vPphmzal6kSZfGLxxz+29H0nBwPBYJDo+r0J8DL/66Zf3//6/Zk6qMxIoKh/eMDpuljn
      A0VjMSruP9wXFMRztW8naiANDW8wbJ1snNxQyP/2ROBYv7/SpNAU/MFQvy8m6TVv2ezu8CR7
      5S1v6MHygu44D2BEEGsNup2+DARq9sQXcKKdyGGaqTCR7mBKnDMhlms1BoaOTl7en5BhZBEI
      zRgkb3YGHQauJxPD3GHBrJnUHaOWjYvyHwafvUl76/Xc+zr8PXbGPJ5KgNaWGz75+qfu23of
      L/Mn3SeXFSwbT7Vr7c+2PrulegtDMzRFV+hW1xWmjipcXmZ689TI/xwcdovN/33yuXed7x53
      9j/5kU+OGwDj4CWZY+kHlj3Q4JgvK6TeTMq1xn2utk++/km71m7RWjxxz5Qiu/p3zehkpMXI
      yeNttK7wopwPpChKoQ7uxHncWyArkwRV2TSFBgVIM6PUiENu/6/eUW4rIADMjLSvy8PlawcM
      +oqBxEQpe3zhvy9x/GpAkSSpJRS9wWZ8xx+JCQJH0wB4hTzU4fzB/NKjHZ4GqwKgWBaLCtlX
      m4bX1DgA9McS9TpNpVbTFY0vMqYjJITCH0z5ohAIx3g9N3VL+PMj/lcPDt5YyTb2jkhSbfLh
      K0e6tnVEvnpN/kiQSWogoqRDGbUFxtGRMocpXxFgNLSXcKUY49j+nqDfV/S1q37UEtr+RNMT
      vMSvK1k3/q5qrbVPtTz14h0vJquq1W+0mwQSI2/yr97tuFfL6BeVtolU1BVc+cjOx1aVP9KQ
      7xjwdfCCyEw4jKXXHdUj0XSqDUAhJ823Khv1H/wtY3hk3r8YNPpoYfSg8+CW6klbdPY6985I
      IL21cOkK48io96KcD0TTNEVBy0DEOd1bQAhR5EnDUJmJdminuvJuq6Z/3BgurASACguztc8/
      r8qaB9mXkMaleATRxDJmLefgNCGC9riw2GzkZeVQJHGDwwLgkD/SEYp8oaW3u9PzqRICYL6U
      8Nr0zS3DhFqiYWiXKG12mMuDwndeOmWSoNPQP/+blaKseFiuT2PQm/mBAL+o1DKlbbuDsQOd
      7pvmxV53p7r8zy82t3f1JCTsa4sr1nKdRnhX2LuEbkjwQk9fv6IoCt3lkNYAvDNKfWXjR8rE
      wVFP6kf/7jD1hU11J52hD62659PbHuzsWHPTh2oZJlWzUVp7jbXMZkiNRKNBOqzZE1W4dulU
      r7Li2Qe+8Klnn7yavep1d/F9Nf9t0bMsy66ssp8cCq+udgB4t9Ozv8u7sMTMiZGmVj+A24pT
      vZAE/kRLW3FB3rvDhWVVh26vu31iHzsDnTPbQFpLZVnJ6hVLzvzPPi+UG0lv8JxWN4syYZlJ
      hvBaW3SefupEmoP00LLU9peGYrORJUGGXcNHhgUJQLMz+MU/nviHP5xYDw7AfIO2I5pojcYX
      mnQ35Zm3e1PO63cD4QccBqa7n45FdQwALBOipzh9qY36+98d+eIfT+ze1fdfL5z63ctNq5cU
      /vITKx1G7SlXaDiYSOg1d8R9rIHp8US7RiN/PjIwsW2nvJFSiMkTAwkhCiFtrtDd1fKKfKU9
      QLvDfJDuPyoeBBCNxZpa21raT7fGnmtyKwCGYtSSsjQjaQrlBbbblhUf6w/QFH13+Ve1tO4H
      23r+fWubPyacGAi8fkzuGkhHl/u8sfbw3jcCW+/VfbxTagcwKrsK6eI6o/DTXZ3r5+UBuHFB
      0ZstI8n8T+/vE2Khbz53rMAwlQ92LfELaHGF3jghHxnsBTASHflT+58AuGPufH3+ZZ2FVZpI
      42AGx+h08JI8ZW0kRYHK5HAZ18H1RWZJrylUxDop4RElRSHPHR3crZOWLczvbvcCqDfqOmKJ
      gbhQoeOWmQzvHHcl7eJDwehqq9F5On5baWrUY4AtsYCvXLdWO/TpNQXmBssG3dBH5kt+I6PX
      MNfOzz/Q5XUFE7yerRMTHzSTV9tHvvJc4zMH+sYn7VFJ7u4L+opMACwcRkKJrtFI0i5xFpha
      fIo7zPvobgZMkKRmFTElWl2cV1FSGBTgilELSyaptI3FqC0wdbkjAI73it+9fcuTn1yzYZ7j
      008d+fpfjn/nliotpH5vFAAhiPGCmTbVCPWlTHlfoD8mxiiKZihmQ6XepGXL7AYAa2scR/p8
      CVEOxsUwL93RYP7yUqnOOPUn6tDCl6BOuuWPr61s7zePxkZ/dPRHvz/1+7YR92N731hdvPqy
      EqjCSI5nmtNOBy8p2vM8aKbIov30PUvrxESeIpkYxRsVdvV4Xrx56SNrano90YQozzfoTkUS
      NEXRFPXf29rpgei21pG4rBCCnacjlSZSYUpbtQ1SgmfosIErNHMCEa0c8hSpLyEAWDcv70CP
      dzgYN3DIV6RVJdatJ4b+7ub5K6vsR/tSvWuOxJmReGV9UZSi83Wk2xM91h9YUWmPUvQRg/lU
      InFyKBiiB1Zp1jnllN7qV3rqjQtWF7MnvbSowMClB/qPzJOLtbzb42WJHIqLjQOBVVUFFIUb
      FxT++cF1P763ofHY4TLK+1LjEABvlJeiwdWxa1ewqwAUyMV/aPtDMV0KoNSqe+HzG5J10jT1
      geVlLxxzvt7kunVJMQCWBj3tJ+rQES+PgZjmG7cuMAirf9n4S5qi719y//3PvPzCodjlJpCe
      xaDbn/yZ+gLBN1tco77MComXlAtYnd0mCnVSggKqaPEHR3tXllirDFoANy4s3Nk2WmfQvtkx
      KvSGv/VSs0zwxKdWP7Gv90goaoorLx3pub5k6th6SyywU2cNSwot8AA4kISs+ANBMRZyB2OD
      /nglK1FAhUP/1GfX/SEavmt52YsnhpJlm7yRa+ym64ssgwyXryM9nujxfv/VlbZWjX5DIrzF
      EGsbCXIMVcXM64mnohB9Uo/YT2mDfYfctF07qSUmDQLB0I539hpF/wvHnNX5xnHjl2Vom4ED
      0GAlbzY5CSGdo5ECPTFQRoqiATRwC59sfrKMqUjmzzelq/7gyvLnjw2+1uS6fWnJTK/UoUVf
      hC7Nt5p1mi31y15pPfGllV8yi+s0XKzAzLFyyeV2JJaY2af29f75yMB9Txz+wctHfvZW5pBv
      JCFpz//E6naf367IAEo0yrOHB25amFoVdedVpS+fGGruD7hbfIsdxo21+d+8tWGew2jRsb9q
      djYecH77/fXTf3zFiihQVJOg2JWxoY2i9p9o3PHOXqMUfKt1pIpNPd9U4Wgw6ga0aBkKirIC
      oKXDe8eSokpFHGS5PC3p8UQ73ZHaQlOrRr9IjK8q1VN0oN+w2KWbd8qTWlAxqgwX0sUcgwoT
      KTVk9l9XmfHTXR03LiicnsTSyNcqT+3rffG4s1CfLr4s7yqZyGV0ikDHQ+nQhFHLrqq2cwxt
      N8642cOhJc1+aoGNALhreVk9/vFAh/iznT23rZRhPvzyCdflJtByU/j4yaZ3Dx+/oyTyt/Pl
      d3tDU3w2AFyjni//9u1y9vxWcBLgSyWp0GOhWasNCNfOT51K6Xf1d/QPPfzsvvnXlOkC3d72
      A+/sPwDg0xtr9rzR/a0b5pfbMxyACuDaROixkeA4gTY5zNuiEoBaC04OBivZtKfgy9XFvxgY
      XT0vb0frCICTnb6bFxeXy8Igo83X4eRgMBzw/f6Fl/w0m6dIZTbdLWtGPygVNHHm5ojAS4mQ
      EjRQRpqiAdxYKi91ZJ5qLCk1eyPCdfMLpjyPUrSXZldaQsdPNlVamdUVaQcSSzM/ufEnJtoM
      YGcw9oEjbbva02H/B66d9/AtC87wVg0sNDQabATA2hrHHUtqA3HxwXWFRUOFdxqXvtXsvNyH
      uRQbUGxIv50t5eTbL7d8flP6ZjtZlp456Kw1kyTrzx0UsN5m2gEAKDBp51nkV157DcDm6zYC
      uKlMsXJk0YKyQGI0Nhb33liT91/3LIt1H9nRk7nOeinxSjgyTqC/ryi4dTB/2Uhkebnpme54
      BVJO0RG3Z8c7exdwxqGiqpYDfbva3VIivHXbNgIEzcV6Ft3uyFUWpZfV1oytu+C55mr+ttqo
      +yUUfvv0/iC/dblmVTIpf8JaXC/NGoiiJ6k3ZtGxv7jvarOObY/GRQWyLDEMuzMY/72piIVS
      o+U3a4O3XVXYdMo/OiEGurp4dQecIrBDb/t0eOTJhHXTWJJWx57q7nr5QA8AMJmXgq2ro/0a
      ujkcB7BkYQEBifn9gT6DnjUU6UmWTwMq0/G9w4Pf/dMgAINeX1FW2t7ZVaDDuqLz3svc3Nre
      3Jpa3bK41FpeUii40otdqswEwA0Oy3aGmRhf/ujV5c/2HJmpTgp4pCIv2huCAABamr6bEp83
      OMCwH9pUogu1T8y8Uog+Hg48sMKw9eRQaTkHCBSgJ4qL0RTZ9FYjf4wzXi2kvNIfqPtA5IQC
      YIO14YnBnxuM79uIxX6S7vVjf331kNbcZco3KEqCok1ELpOEJRS3qtT40cbuAo61a5hoNDbo
      Gi6QxX/gw1Mi/zIAABCOSURBVDRwnDP+wlIshngLKD+VmoIwoJ0JwU8x+3TmdYlwncQ3jww/
      MWiJyUoyumxLyH6tGWdAMfYQtnc4HdU/6o/Y9PZ8ReypsZ2JQHxoZNfR7ps3rT9T7ecMQoBM
      rNhQkHpamK/bdM2CP8U7AJDZ7U4rMGoX5+ftGgQAWSSyRJIVSoJMZEJk+H2h7bv22qyW5UsW
      n1nWBpOxhdWMjhVfkIgdE6XrDJpPrKv/04vtABQJsqgkK3nQwL4cQ7DIvDERIhIArI5Hd3C2
      sipLL6tRFKFa4AkBkXFbxe1/OvoKgBV5V9+vk2L+hh1aE0HaEKNAFgvx2yOpaV2EZpwM1yfo
      PK7Ad2tKq/UcgKGRkT2n08t9VsSjSxKxvqBtm8QldKmVaDqR29Xu7Nc5TIq8Oh4hwOfzLS8M
      +4zO/o8auaU11RGabenPsGZoIgq1eZuq0ob2qNH72FC/h9E8sbScOsPaBn9f05628KZNq8RI
      RKfTAYjH4xqNhmXZeDyu1+uTT878QZZlQRAUQgbavc5jZ98vQgihMjp8zrmIIIgenx9AvsPO
      cWm17PX5eUEEUFpcmCwyNDwKQMtp8hz2jDWHI9FwJAqgpKjA5w/wgjg9c7ISs8mo5biJcsdb
      NVHuTEXMJqPJaDhrx5MFJ8JsMppN6aD9eIPHZSWlJ5s9sdfTG5xR4sQiU+Qmi5+JQCDKwKCr
      oqIsFosZDCkzU5Kk8wplXOr804skLRIAm6/bWFSQtje3796bjAx8/N4PJIs8+/yLAArz8266
      /tqMNTedamtqbQPw4bveH45EBFHkNBq7zTYxT7KSJQsbFtTV+YMBAPb2P3F6k3TVfclWTZQ7
      scjiuqrOx7+ViMejmjytTq8L96N8JahJ3i8hHjNZLYuUA7VFDMsyIx4vAH9Q2t9v443FImMw
      GgxGgx4jLTDmgdYovp4YbY5x+YX5ecka/MGQKIoajUZHKcVlBUujWwdLrh0yL1sf3lYEr0yx
      nlHfu/1W0VpLEQXhYUg8WC0KGkCzAMBH4O+RhQQAmdbEWRuhaDM/LNjrBYloFlx1xn8VRVdU
      lJ0pwxxH0r7mNOe0j2AKb6ZUYjQYOE5TVFAARcaxJ7Dg9oyZAYAQR6xnXmBPuctddevmXeFK
      SuNYsrBhSXQf7TqBO36S9rj37ceufw+X3Xgq+uCfjx4sqqkdtLFg2WDPnvnX113te+nt6i8v
      XLxsWeIw+sO466egqJ5jOzRv/xsnOwvzUzPQhCDIsswwjI4mrvrrW7vL+/a+1GB4O3HnP8XW
      3L3vz89ENf4bHv1kXlkFAMgC+g+iczv6D4BmQGSFM9Mla1G8DMVLn9110kRRNVUVy9le7tRz
      3uX/dPh/H8qVIzWzgon66aJV0v4aajfBn57XzauqKCxI6QPIAp6+ty5Id9uv4Ve9v6aqqrav
      D0BRQb5Sfz8dGcGvN0OjBwCJR14d7nncbCldC6y564Oujrb2J38tekft19zsN5pbaf7mrn/V
      jBbAUYoP/zZJu4iurKnqi5ig7SZuryyQpJLr2d+b8luH+tvebtHtbt744fuqlq1I52A41FyL
      mrQ+ViTJ9bWvlf3PBwCAagJgNBj0i+6F6Dft+Ipm/V1XNIEuHP0HcOy3+MAvMiQd/g3ueRx/
      GVt+dfS386Q4Vn8mNSIc+IX7sHRo0wOgqGLAZDSMb4CUJAmbHsGmRzIKpCiqtH6hbVX6Xztk
      WTFkWbFkYcNZt1BOrYpm9OU1S953y7kUlNzu0NbXS7//fYqe5DLkHZsGDbTH6MjdJa3ZxEgL
      3vkBxBlM/te/hiNPIuqGd9o5Ic5jsJTDlDRgCQC0vYpECE/ehs4dCA+j/XVBv2iRzbJkYUNR
      QebbdyJ798abs3zP3zjiR44AkP1TI5jxxpPR/QeQy2uis4nO7fB146nbMdw0NYkQDJ3APb/C
      so/h9BtTUw/8HOs/DwDGAkQ9AMCHcf3D+OizaH8Nj2/C5m8Z162vDviXLVpYYLEEXvjrdOG+
      J5+MHz9+8Tt1QUgcPmJYtUryTF2LKHR3ycMuqAQCgOAgdv83dn0Xp15KPXE1YtMj2PhF9Oye
      mtnfA0cNANRtRtf2SUkhJ+IBFC0GAHs1fD2I+6GzAYAxH7f/EJ/di6oNhrVrowcPAYju2eN9
      /PEp1UtuD9/dI57xUBSNhrVZp65fO3cU5ucV5ueZDJmjN1PAd3QY16+X3FMJxHd1c4KA9ySB
      OI0m+Y7OaXr1zvfx1wdRtAQ112P/z1IPg05YymCv1MRGpuYfOoGSqwBAb4Migw9DjKP5BSgK
      Dj2ONQ+kstlr4O/ByCkULUqXNeQB4MrLxYEBEBJ89TUASmLStofQ61sd998vOs9EILvVuvKq
      ZWfIcGbcdP21N11/bcZz9aZAHBlhCvLZwgLJO5VAcihkKigozHO8h4xoQjB0DGUr7TbrTH6d
      qfD1YPAo7n8FVPIwPQeiHrActGZQFKwVRnHarjxXI+pvSX2uvRGd29HyV3AmHHocioTN30ol
      OWrQ8y6kKAoXT62BorjqqnhLi+z3G6+5hu/q0i9O5wlv31H+i5+Ht791vr2/FIgdOqRbuYrJ
      zxc6J1l7Cs9TWo6zWG9YvHBGAnl6T57s8Y/4E9m66uD8QfDmP+Pe38BSmjH5puuvmfqo+Tms
      uC/FHgDVG9H3Lgx5KFkGAHqHAdPs6OEmXPfV1Of5W/Cb9+HGb2LtZxEeRng4XZW9hj7+LGJu
      rH1weksMa9aOfPd7lttvo3U6/vTpcQLxHZ1sfj5jNOL84sjnBL67m6k8vxtMYwcPWe77G1qS
      YgcOYoJrINHerq2upnR60eXKTCDXQK/D6iAIAMjWVQcXUITa9Cje+Gdy9/+dYxH69BvK2i9g
      bP8GVbmROv4McdSgaCmRJABGvX6yCMLwEZnRpYo46pi7fibX3wZJgj4f+vzxqmAspkNOBVBs
      NZi2C0W3amX80UdLfvyY6HSGX99mukMiouh96qn4nj1Fjz4qSRJtNvF+P2M2S243k5c3ZQpN
      SLrL45s6khi/cHLqUVTBYPedd1Xv3QOT6awvZxyJzg5HdTXxesXR0YkVxk93sDU1UEhicDAz
      gUoqqgFs3lQ+1uMsHDB1IUWqN+D4b+E8hKoNACCLUGRoMh9VxrpbULiQnngVculVeOMbECNY
      dCdYFgBrsn38zi3Q6FPRkkA/7JWTmrfozhnayiYDwjSXQTpbWVnyb/+mLSzUmEy+n/2MZdnA
      K6+QQLD66aep5F3V5RVkeJi124ce+WbBQw/pl0waBykqdaU1AIqmWJYlkiS6XAAoWZr4QuRI
      hDGZAIS37+AqKhKHDulvvvksr3IMosulKSllWJYpLJT9/om9lnp7DatWKbGo0N//njOib/oO
      3nwU4WEoMp77O7wx5pdTJEyJ+jX9BUs/POkJzcCQB9dJ2MZUvbUcwQknLroaUxb0uUBjSNcz
      DbZ77gZAGwxKPA4g9Po2+999ihqjhaasTHQ6CSGJtlYlOuPO13GE33xr6KsPD3314eArr4w/
      VHi+5+57wrt2AQi/8Ubxt/8ltvudc208ED140Lh2DQBKo4E0aTso39XF1c7TlJSKQ5d9ReIl
      h7kYt/8P/vIpvPYQKtdjtBWJIAD8+W/R/EIqDx+h3v4ehptQtXFq8eprYCpKR6Os5QhO2Kwz
      PgU7FzhqUlP6M4J1OBLtpymaYvPyxh9qysuEQafY1yeHI7I3w/EaU8B3dRZ88Z/sn7iPTDjS
      3/fEE/YPf9j7q/8T+vspg96wZo3Q2Xnut47EDh4yrFkz9m3SMgHJ7WYLCjSlJaJr6D1HIACl
      y3HdQzAVYf3nsfJvcfS36NwOhsPRJ0AIFAnP3IP8enzir6Cndb9uMxbekf5qrUhrIEVGz26U
      LD/HVigV61C54azZtPX17h8/Zrn11okPubIy0emMNzYaV6+WzolA3VxtLa3TkTGngDg0FN23
      3/Hpv7PedefAZz9nvf12iqJ0CxbwrVPPtMsMQoSeHq6mJvmN0rBESCkhIssUw1AUxVitSiD4
      HprGT0TdTai7CQCW3IsnbkXbK/jYH7Hz3zFwEEMnsPBOsuSD6RnTRBQ0oKAh/dVWjp49qc/H
      n0b9LdCdqwdPWXQ3fQ7GnLa+3vubJ0q///2JmkFTViY6B4kkmjZvljwZTrCzW62br9soy4rF
      bEJSJeTnUzrduFfJ97un8x54gKJp24c/HN1/wLRpEwD9tddGdu/WLVo0vcIpEJxOTVnZ+Pok
      Ji9f8no0JSUAwm+8qW1oAJDU0+9FDTQRDIfFd2P538CQh7Wfw9v/gZbnM06tM8NakRzCqEQA
      x5/Bhn+86A3U1tdb3/9+xjjpKhDGYpGDIb6j07h+3fgQNvSNR8bNuOTSkcL8PJPROK4SaJ0O
      fGrNtRwIcPNqAFAMU/6TH9M6HQDD2jXRgwfPpVWxgwcNa8fHL7D5+cloRryx0f/HPxZ+6UvJ
      55Re/14nEIAN/4CVnwSAgnpoDLjhkZlWj2eApRShIQDM3h/imi+D1Z61xPlCW1NT8u//NvUp
      RUFRaC3HFhSMD2HhnTuZeIb4rjgwoKkoB0DpdPTY4SdKPJ4kzUTQej2Z4f5Qye8f/u73YkeP
      Jr9G9+03rl07npokkByJDH/nX8t+9EPakPJuaEpK3qND2Ez42B/OLz/DQRaRCMqDR5gt3700
      bZpBssOhraujzWYlHAagxGJKMLjQbEL9/ClhLL6rS1tbC4DW6agxApFEgh5zYk0ERdNJjZUq
      29Hp/smPiSTLgYDl1lsCf3nOsHKlkkiIw8NcVTrWwRbkSx5P+K23rPfcPcnYL52ZQL5RF6Uz
      R0LBivL38qLEs4OicORJsvwTmbfmXzJw5WX6Fcspikp6pcWhIUqjqdKw1mmLePiubm19PZIa
      aGy+rSQS1DQNBIAtKJA8Hk1RastleMd285YtxmuuYcxmimF6/+Y+JZGI7NxpvnHTpFL5+fET
      jbETJ0r/43uTnhcXz0igrF91kCNFaEM+1fgH+VPbpzuUL26rpuS3f/7zlF4vSRIhRJKkxOCg
      dtkyvq93okc4WYTv7DTe/D5JkhSWpSfMlWRFweSzrWVZZgoLeaeTGtMi0cNHij/yEZhMMiGQ
      JMN114V27Ahv3Zr/9W9MuoDBbo+3tRIQWK0TG2DcsmXGUEb/4FB2rzrIlSK2ShQtZjj95b7X
      12pN/qVNRprnlZFR07p14qBzSp0sy0quIV1lJUXTlMk0roEoisoonSstUdzuZBIRBAiC1p7e
      ZGK/846hhx+mNJy+onz8IcuyKCqK7NhZ+r3vTq1zph6WVFQnoxm188+59+9VrH0wtaYnS2Dz
      8iSvV3QNGdeu8/zql1NSCSFEIclgGa3V0mc7QZAtLhaHUidAxE+e1C2btCxEU1ICAvOWqeFz
      xmYDRZluuilDhefVmSsR1nIA5zt+XUSkCDTk4ioryLS7Y6XhYU1x6jgxij37gSaa4uL4sWPJ
      z9GDh4wT5upJFH3rUa5sqtVL0XTVM09P8TUkcQVM4+c4mLw82euVRkfYoiJaq1V4HkAydApA
      6OlJ+nuSYJmzHKqkKS4Wh1Or5OJHj+pXrpySQVdfT2ciimF5Zhe8SqBcR1IDEUmmWFZTXi4O
      DPLd3QOf/0IyVejt5aqrxzOnovQzB7yYvDzZ6wGg8DyRpYxK5bzw/wHdCUKOPR0FJwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hotel Status Changes Table' width='192'>
      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
      /gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Manually Reactivated' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Paused No Traffic' width='192'>
      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
      pgllnogAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Status Changes by Channel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Activity Report by Hotel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Status Changes by Hotel' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9V5AcR5rn6R5aZ0bKSJ2ldaGAAkBQNUF2T5PT
      cnu6Z65H9sza3tit2Z7Z3T6d2Ym3ez6zM9sz2xN2tmtzvWPTPa1JdpNDDY2CKpTWqbUKmZmh
      7qEKIEiATQEQKDT5wwOyMiMyvoz80v0f7v/4HLquC77kSz4ryKMO4Esebw4SSJdbu9lis9n8
      qO2azWZPk5eXlyv19ucZj9Nstu8Oo12vaZqiGP3P89Bf8lnA9v9778KlE8fm3333TV8g7iG6
      bdWptVpSKFRpyMlk1OiZXaX99a9/fWdnm3J6G5u23VddSNCIyYjR2anRBxePubBwA4Ce0+0k
      Bkd3sxWaIadnjqxdfLvQUELDR5uVQlggFKPnFz1yW5584nQiwD2oY/fkWrbj4JbO4o7DxcJe
      6vZLb7399vOnT589e+bpp5+5/WRpb4uPDnIEAgBQOy2SF7c2VifGJwAA62tr8XgEJXkKP/iJ
      ri9eXt4pf+3FlwQav+fRNbmFMSKJgbNnzj79zNN3hrW41xSA7EvPCiQArt1qq6LoAQAYjdxq
      1T42kX5QZ+AzcJBAFAZ3swWSFrpap7SXhQ6kxVAmk+W9wvZuHqCYj0H3t0wkw7/72fmkD/Yh
      VazvDRwJPth4+kYToT220bl69UZbsyLxaNjvXcM9PCNvLC/ZiOthJIIgm6Xdzbw8dvzZB3hs
      kvMsvvbL9ZX14YnxqfHO26+uz84fv3ntajA5vLe1/DogOvXS2Xfeioa9Fj8wEvNevvQeHVGC
      WGc517Fqm8Hx471ut1ptIcAqVqsbC28Y3rGw6HFM7fnTp9cXV2kfffnK9UZhJ5gcrm5d7SHe
      I2PRG6s7sxNjlxfXgVYOz371O88d27i5sLuXDYdDowNhFQtP+Xo/+clPBCA//x1s9fpCIhF5
      452F73zzq9tb2zPj6VpPeIBn4DNwkEDPvfD1T7L1t7/9HbVd++OvPev01aGhoc8hHvRb3/0e
      AACAF+589rmvf6Lw7heEwIz6i9/5xvlru9i1i0vbVYGjzl66cpL0ye1mvdFEHWck6fsP/3jm
      f/4fjmr1vZXdFlK6GPPgY7PH64gSTo9tXTsD8K5BxhAAQuFwNzCgbJ9xhIMT1eh0B9j2/hv2
      ehZqVy8uGWMSt7qxPTr3FFK8iIdCAACc4ljE8Pq9//ePX/uf/sd/D7T82OzJBMhtrawmhlON
      ciscjCwtnN2tqOlEyIEPrAH+bMD9q7BWrfju2ctzR+f0ZrFLSV7ONjr45HTq4Qf05ptvejwe
      AIBt2ydPngQANJtNn88HAFA6MusRbst+1zSUvtvVeySJegSuVa/R3jCF3dfRVUVheE5TVJpA
      N7d3U8Pjtfw2KQSh3Udcx4FIu5bbrdkvPf+E2m4AUugrDYymy5VmIuKrtHSGREWesTFWbtVF
      nsmWW1feeeX09/8uxOH1SsUbFGs1ua81SSH421/901df+p7kY3fy1VTE33VwBrUKdWUgGS3n
      M4aLQ72+nOt882vPAqtXaRsk6FGCL7u7kx4eLWU2fcFILpsdHB7uKHo4IN7fKb8v4O3L+Atn
      z/ftXmn5Ajl6uqdspoLHTz098fADunLlyvz8/O0HtlH/6SsLCYlpd+RyNu8bmeoXlixSOv21
      56Mi/duf/9IRRaQHelZz8/yNb/63/8tEhPrYQ3zJA+T9H+zk9KTZVScmplRVhXjCx3sfYVi3
      yeYqAxEyL6PjqXSvVUMRKMXTfZsN+L0AAC4cFSms0TUxJzg5M0lhX45pPWzgYRtIXFtb0zQN
      ACBJUiwWe9ThfMnHcOgGEmVZ/tCDLznM3J/m/BxAUfS2BgIAvPXyP4+cOJ3LZDFoo7ZuYTxO
      UAO8/r/959898bVvzSSYytraqu6dicHwwFzEzz7q8L9wHLoEuhOn12pbxLlXfrXR6T85PaQ3
      8xsV5NT8KODx0enJrWtXjQbtN7FiKUupKuod/jKBHj6HTgMtLCxACAEALMuOj48/6nC+5GM4
      dBqIZQ9aEY57xENkX/JJOOjCzrz99sBAVHX5sXQEALC3vR0fGsIAAFa32NCiYf9DC0jX9dsa
      KB6PX3rvrYljJ/PFKoUBxLUZQdC7dtSLnbm2aXWU2Oyk4PRsgoOWpSsdjOWG049g8POLzEEC
      rV17d3kvySHkL37WHhkMgm737OI6aO0yjOD4R7//Rw8vgT6A0yuVioVX36z39HTIi5ntdxdb
      p5+d4XqkPzmRee+Vrd3dEFBee3vp5HOnClfP8DPPfJlAD5kDDXTuzBvtlqIpPZdio4kw5zoq
      QLC+JkUi2UbvKydnH1pAb731liAIAADXdY/NTmoO0WuV65oV9nvlVp32+EgM83j4rbUVXpRw
      ClNbrWxmVxocYYGN896A1/PQQv0ScAhFdLvd1nUdAOD1ehmGedThfMnHcOsy3u3/009fjsV9
      KOAKW9dTU1PZopyIhWBzd1UNnhwRarmNBpYYT0ljw59vH3Hjxo2RkZH9B08++eTG6trQxDh6
      12a7u7sDAwMAAACsfK4aT0QBAAA428vrsamJL+fDHhoHCZRdW+Y5bD3fmoxz0tDw+tq21Wmd
      K2Rnw0yxkL1QbQoc04GFdcf8vBOI47hoNAoAKJVKADhLl/8lW6xfW11NhXkKGBsFc3Rs4GvP
      nNrZ3Vs6/+pOh49KrFyqCImYqzRcyle4dm3m618Jhobmxr4UQw+DQ9eFvfXWW/tOo0Kh8MSx
      ybKCtvaW6jaeCPo7taxJBSUfH+SIxUydMBv1mrxTl5+ZHlEh5aExDANytaECJJ0eTkYfrNPt
      S+7NoUsgRVG63S4AgOd5ivqyLzrsHLqpjMuXL99pKLvtJrsTq6vcWNmanJ6lCURVNY7jOh3Z
      47lfc6dt2/u5+yWfnEOXQB6P587J1JUr7wYGjl69fi3oYXDXqKloMByci2HruXKt1lb1hlyp
      qZA9Oj367NOn7vPQKIqyLJvd2TBR1lFqHZekLVnwS9WWwpFIQ+6PxT09KtQu7U1MTkF4j3fY
      21pvGfbc9B1GvL5c0jC5mvV4vJIk3X4a3rX//r6E02V8ktGqIATd6bTHp+d0pS13OrbR6aOs
      h6NlrY/1OwjNdTTTx5JqVydwKiL5IR0obS0iDM/TLHBtgcRqek9Vu7NTo2vLN3l/NCYFSuUC
      BLgkhQAAaqexsr41OXOMe9/k3y/kO7F48M4Ic/kchmKSJNXyBSEeIwEAAOxurvURamwoXS6X
      D10C3YnTaxmIb+fGJRfn/f6AUs9BnAp4eYzCjj8xZpWWdxuAdWwiOiLyD6yza7XbO3tXh0eP
      7WyuTUa5Kzd35qcib772Ju0bxpxKQ927en1leHySQO+RQYV8Xu3Dl/MZ2mpuVNHRQdFutgNH
      XlDyu8ubEKglGw9JUc7LR2Znxu65r2Oqk4GIbdsYwRKE7mGpnRuLpZ5gF9d8kye8AOqGnmAI
      wFNrubbbaarQ7PRQrbTun/tGIZ8XI9FOQ0Fg32VJjfTqhu6qJQ0N8nLmZ+cXXFy1GyrmjRFk
      LxRKEgRx+ewb9VqNori2g//V95977We/FCeHqG49lDwqiXgwnnr3d78hpMEkd/P64nZwYjyI
      mqw/odUL8ZGJ3/z4/9TFqUOngR65oSy7u6mpBkaRnS7stwv+yIDRLnsDoVJNPjoWbVlsT66l
      UumPbIF0OyAKSqusmmQi6muW8r70tK03DcNwTIOiOL3Xk1KjIvPhn+7+voTbJQVRb7f80RTi
      9CORSHZvTxDIZkOXu10SQyyApvwCoIiVjayHIhOD0tpmOR0gEW9Sb5bjCenKxQUxEGwrht9L
      y4Y9PT68tnSTEYRyVfYHOMdQ210kEvRiGAYAsG3LUDsIircMZ35m8PrFFV9KQuwehjKRSAgA
      sH7zarOP+Rmk0+mGUjGzU2f9CburxuLRm1cuumz40CXQpUuXUBQFADAMMzHxCEzZ90M+l+NJ
      DBMlypJrBhYWyXK5uf9N/B4O21fwqTj4Hbz71usuQk9NjZqmvbGdGU5KwVjqnq30580nMZQd
      nZkoZnfeePfCqaePVTM1lMRpju3JshBJcgSMx+MPP+x9MtsbpqbrrBdtZbabIJmUYoHIxyaQ
      4ziPr3g/sHN0TdeH6e8sLJ25sNBr7bz2+ls31zOPNjJwh6HsjXOX5E67kN157/xNXe0AAKLJ
      weHh1MrVc2+cW+zqmlrfff2t98qlvYZiP8KAU8Njx06cGIpHRmZOnDw6MzyQjkgfPxy1L95r
      pXymUGEY2rEdhmF2NrYIhgG9joUystzpyS2XYG5Tye/0XMztqStrGyjJkKhbqbdvvwp68vLK
      ah/gDAHWt/K2bTN3YWvN5ZX1Yr1dzOfbSrvZ7DA0Vqo0949+m47cYRiGZVlba1ooYzs2wzBy
      LddQLdtxGIY56MKWrl8xEZpGTc1CSdSxdVUaORIWH4HB734MZfndnVBqkDh0HqdPxNm335AG
      xrcv/66MpAOkXNou+IYkRNMtIeln8QSLXik1Pb16XuF++DffPvOLn8fnnknwyNrWTrvnUp3d
      VUXwI3WKD9o4/9Qwf3mriSCYrpazef3YCL9ZtryS5EM62zlFCrCkGJvwu0sFzSU9QaxR6XN+
      mo4I4HKmHTJLe22Kl0QvbuW3c8Dn/dNvfbtcqmFqDiSeOP/T/+hII6KeybSR+Migq/RuayB3
      c3M7LkmWa+MkUSg1QiKbLzVCIo1yAWB1vTzdVkwMdTiOBwC06+U+wuK22lAtCvb90UQ1m6V8
      Qa3dHEhFZd11bcPr/Sw3vK2uru5PpobD4UfYGT188vl8LBZfvnHBQv1+kVZqNUxgHUN3CB5B
      kBCL1/ou1W13gZAejW/fXCSFkJ+Be+U6SZJOVzUxDwU1gJAAIxM+amWnRDMMAq2e4QgcarkU
      xjJmq9RFuLCAazYWYuB6rjaQiPdRzNI6CELiOEKjoFCtdGrNviBFaVPvIoKfkSJpCoNyNb9V
      UnFHZYIxRK2ZkHQpzqgUDhLIlgv/6b/8kk4djRhZ3RNGUcJHOLbpdgCgrF6xqc2NinUl2Kmt
      iP4AH4g1CluKafs4nwutZJC6uVwePHEid+5XVSd28kgg06TyOyv/+m/+/DOcxw/dWHhPQ1kq
      HllbXZUreeiPC7hTrtT9fjGSGPJ7HktP9B+CiEYZ3+DAMB/zB1xKxtlifo8W/LutdjhA00Ka
      FxWcsBHEjsfjqtEFAAwNDuZ2dyiebWum2rVtitYyK4mZU5214mAy1TBafg/dtcB93mj8UYay
      VDxCuXadJvIbO7yRWTOl74YDBEne99l4NDiO0+v1HnUUn5FDdxn/yQxlgmt127oLnV67UUFx
      ttmqRJOjQZF/1OF/dva21nSHGB9Oq6rGcezy9cXxo0f6zZLFRvRmiQQOEYyyGHRdF0K4u77k
      jY8S/fbqbnHmyBxmaZlyeyAZhRC6ALRLZVoKUxACAJaXlyI+rkcGJR8LXLerqjjPO1pzvSDP
      jCaWlzYx6ISTSQ/HQghcF6iqxvP89vZWKBzmWBYAsP+ewO2XyzLqGsWmOjc1DiAEAJT21g9d
      An1hDWW3RPRrZSR1S0RHEE21hNQHRTT/w7/51plf/Dx25JmkgKxtbbd7LtXZW1U8fqS2L6Kn
      g8RCSUvQ3cj08zsXfoOwfMPAUbNhKX0DemPDop5Z31Lpf/u3P/j5P/0aA/3YQGzpykZkNAa1
      Zr0X+NGfvfDLH/+DFRrhbc222oqOiyGPpTQoYWRqxL+dr9ldeXdtL31ytru9dOgS6J133tk3
      lGUymQ8ZyrY3lmODU0uXzzD+6OTo4J17FXP5UCJ+qOdlPo5bIvqihfn8Xlqt1VAP6+iGQ3D7
      IrreB2S31YVCeiS+fXOR9IT8NNwr1ymSdLpqH/NQUAcIATAyxKJbVa2vNJ5++ulKOa82Wx0T
      YUhAIrgJKYyw3F6vpZkzs1OFjVXNpbysWyi0A4kIh5iVpjU54NNQb2ZzOeDzX79ydnzqeNex
      vCxjmZBAzbra53DbNEG774Qo59Al0AdF9NGf/ef/Q4jNXVtdTQW5Wmbpm3//vy68+g98MLS9
      cB5LzsQZ88ZuZ36YW9zU/t2//6+/NH88fA7dj1aW5Ww2CwDo9/tOTzn1jb9t7S3hJ44lgv52
      IuilQDqdpkUfA5+ipcEArnOhvod2TvmcQ/dJvhgcuhboS0PZ48WhG7W9fPlyNpvNZrOLi4sA
      gGazqXRkB4BO56BYR1/raH1L7igAgFx2V9Ue11mkPwwOXcN/t6Gs0oaoz9er7NB8eGA4FQSt
      c3nLyG+rKCVqZXb2pW8+ikpqX7LPoUugO9k3lFnGHoH4PYIQifKVhhlLCPPz6TW9OZgYEuyo
      Sj723dxhUxGfigMN9Nbrr2IQIIKE42i7VhoaGgYAGRqS/uP//v/MTA9WLe+pmWS+2vHxtKqp
      HMP15VrbRvuq4kJ0cHAgX2k9cXz2gXSHv8dQprQbGCvS+KHrdu8T27Yf35Hogy/DMN1EyLO4
      uFGqlQGAG9febpkksJF0QlzbKcJu/bVzK716YXn16muvvFpWQLMlj4yOtks7nXbr5d+8treb
      0R+QjeL3VCjjvf4/vOwBAKAoyjBMo9EwlY4sN1e28xRFURRFUhRN04XMTq5UJUly/8l2u337
      sdpoQIqkKIokKZqmG406TdMURZEkSdN0p1pyMOr2xiR5x74kcvP64uraJkFRFEXJrRZ+a5uD
      Q1AUTRMrizfqbeVgf4qiKFivyTRNMwzDEG6jbeid5kELpCutclP38bQFAALA6uKNE195nkDc
      3a1Nr89vuy5N0fWW7OcJvWcLYoBEna3N7UQyrmoGhhOttjyQejAz5x+aTH3r5X/u4R7GF6xu
      34wPz8bCPruyt2Exu4tXp0dHKEHoGQbalzUyFOKxarHmCftKKzelo89gasXlIkfH0w8kqofA
      2bffMDW9T7jLO8r8RKywsYHEhv7sxZMLCzsOsDu5GzuaMBQRbL2eqZtSJOQX/SJ0NuUG2irX
      QeQv/+ylKxcvsATW6LS3Nwp/8W9+tPD2K32jm2mg8STfrebrPTbpc/ZqdirK2xbShSjlAgC0
      ntbTEU88ytY211XP4IAH1ApFJBD/9otPv/yzl01D0Sn/aIhY3i6feHJm7b2rc9/5IW7U0hH2
      4nIHsVsHGqhUbaIAcL7Y/t9Pn34eAAAAHBh+fxkDlmW3t7dRAHyhEAQIw/MUzUJTq3XBg8qe
      D7FvKMveuOKZmib7plLZXdH7Ywxa3lmXYv7t7e0uGxkJka29lbZIOoW9nYrDK61uR5dXFvXi
      +sRXf/R5RPU5kR4e40msrsiBkMUzqCiIbDAEIOfz4n3Ac8RkAHpCXkI14oGo4QuHGBxDHZt2
      Y0CJWmQQAYDCIMUJUU4Q+AAG7fHpJ7pKOekIhfwyFh6ICqLko7111S+yatfxezgKB7W2iiOg
      2tSkEO/nBNwbwbqtsBRRTQQFaDwR4wVeNREet58UIzZAn3juWYbGguE0sHTEzEpS6KAFeu21
      10gA2mqN9Ejbi1c9/lB67rmIlbm0We+ZZs+BftJ66Tt/9sYrP9d0KxgLdLuO0mzZ/SaJk8lj
      L52aemAJ9HsMZUqzZEBvSKTvuaNjGpcWluZPncAfgRH3vnisRfRBCxT2exqqOZ06sleqT03P
      eTxsKBnt7mRwmosnvLzHa+oyR+PR5AAOgIMBvQd9HAuQiMjSgH2QPgqWZfcnU++uUMb7Ir9n
      th3B6VNPnniAkTw0/mDtHIbSBqRAP1yL6N2GMsITZAQhv7ESTY8Oj6YuvvOuT6A2G+jTs3G5
      WSmZXokD0O5Vm20pmrb1JsV6rt9YmZqZSCUeJ0NjKbeVKauRUCCRiAIAjFa53CX0ZmlychJC
      CIALAAQAuC7YuHktOX2sUcxjGBoOh8vlsiRJrXKFi0YoCAFwNze3hodHlm9cQSg2FktxLAlc
      d79dhxA6jrO5uSnQeKnRiacGA15+/yXXdfc3cV23UqmEw2EEQXK5g6Pc3kaT60oXk0LezM4W
      pNiDFmjvyps/uZD77otP712/Rg+NCdDpA+zE3PSjOpsHOL1SqZi7uBiYOSKC3uu//m36v/9r
      E/AC2Wtk1s6ioLt9LoukjiQEol967Urrq89Zbn31XIF6Zjqez+cfrwSKJELlWv/6u799A/FG
      o9H5JLWRVTsddWPhPX7wiCPLriDo+Y0+G2G1UmD82M3rCxjLLF86v9XsRwXY09GX/uq75Wwt
      KiJnzl6WUkPFQsEX4P/5zEIoFcJ7dt/pesIDQdrJ1zsIgukk6ENkZeHtnYLMiZ5IKLB946Zv
      eIhSSzIQeRbJvFz9/p//1cqNq4BkiBsXWipCILoBGJJ0gUXXVCUEVdUjHbRAe1feBEMvbLz3
      T8s3tuOzE5VMDgjhf/ejP3v45/FuQ5lcyfcgKvKsrhqRRKyc3cEZwbHtfr+PIBAgFElhaqeB
      AARitG0qCMoxFIqSlHjfd8s/XHrlsmzrrYbh0AwT8xK7ZY33kq1cDvfHfXivrVskQcldk3b0
      2Phsq1LEUKReyqOMiADT6rnDMxMkhPVq1evnGi3L6ioxSVxa3cMZ2uzUUdZDs4JIgXxD83lY
      aNuBaLSe21S60ASQIZBqqVptt1M+Ylfljo2FK+X65JGjzUoJxdBWtYAyXqudX6sj89MJudru
      ooQHNS3ac+gmU7+AhrLD9hV8Kg7dVMbdFcoYjpNumcXuKEx2wPb6UlsHR49O31ZqcqcjeDwA
      ANBtZxUsGTzs5YIfaxF96BLo7gpldZ0nwgHGMjAlu2H4Jgc31d2rVSIt8SAYTQG97o0M/ew/
      /YeWG/D5Kb+jXa2TRwP9GwVlOMyIk187/Am0PxJdLJXkdlvweiJSZGtri6EZgMBwKAQh1Jol
      h43wJERRBACwubZk2Pj0xAgAwO128jIE3U4imdhvySCExWIxFotDCFzX3NrK0wyCADIkBaHr
      1iplUYpgEFq6XJe1arlKMXTP6HpFb0vWU3FJFH33vO3/ozh0CXS3oaywdrlP+yOi0Kr4g1BM
      xXwVDk3R4YTkAS40db6t9oZmTzgOsVso8QH2yURcZMDAFOj2usyDW1H180Zut5TybqYVC7Dw
      zNnLYjAQ5Jyfv9IYj3tr+Z3A6ElVVV44NWujbKFQ7ENSb2xs5uyTk8E3lxoDPnfh7Ds65Rvw
      gfW9TigalgJiqaVhavnyasVPd9EeeF21goyWyZpHjo8oBpqUPKqiJSXhjYWdH3xl7O31Fofa
      pUpZFMX9y71PyKHTQF9YQ5kh1xWb6KkqTWJeP3f92rbfi5Rbdjzi7ys11aZIkhwbGYAAbG+s
      GjaGmh0H4zHQ77m0x0O7eqvZwznMtG1Xs5H52SkIQbVa5XC4XWvjPUOHREgk2xUFYQiSYhlo
      QoqpVqoohlmm5fUKstancDg8PPKpWqBDl0AfWvJyv0LZ+7IGAACA1mls7JVnZ6ceRfWHe3PY
      TuND49B1YXcbykxSKlVL00nv8laDEdmAL+izOxuF+mauIPEktHqNLsbgut5q25QXIbnvvXT6
      4Yf9WAvh++H98i49QE4OxXGKsyEGuh2U9ZlqixM81XKh0ujEUkPQsUUW70HKR1qbxTaO4UMD
      iTd+9V/8ifF8pQJtxEs7Oy0g9Cqnf/AjL/EAgts3lKm1vCD4ak0FMe1IMsFCwDjQZ4A+xrFk
      XzNd4AJvIBZi4LbCjA0mH8CBPz37Qnj95mIsGc01uiPJCAAuhBBC6DpOuVJxgRuNRCFEPqqD
      aFaL2VJjYmoSgwAACIDT11odmwkKFISwkM9Ho1EAoesCFEWXr18enDkul7OlpnZkelxVlLai
      RCUJgdCFsJ7PZGqtmdk5EgXtevn22zaLJTYqURBxXBe4LoKiCIQbKzdRRkzFJQgBgEglt1tu
      ypF4OijyCHKwJYqiq6srHq9XCocBgMVi0bbtZDKJIMhBArWaLc4fvX5zFcdwAIFpmojZKjdM
      lkJmjj/RajWuLFwPxlJBL9Z16a/Pxc+/+w4nCHQgYdjua6+9Mz0ZaiqUl0C3NndEW3/6Pppz
      lmX32x5JkhBS/KOvfuWem6XuMUh+dO6zH/bBoCr1t840cLdx6RIaZPRsDT85N9Ipre6qnhAu
      76Qmn50/8lH7bu8V5mbGz5w9YzWzOpoElIa2yxmdPzGVpilO19qrS9dLubJ3aPTbz86vb2aF
      6CABgKFrFy5e2llbESXPmy83pXSK4PxhtNvW1IsLF/1eqavU52bGr1w6n99ZM0BYDFqGivGi
      4Kj5yMAzR2dSrmur7fL/+5vfRsbjPj5IAXN8MvGPv3mbUGt0KMnzEMpqbO65eim7upUJCfj6
      xp4nHGRQrNLoPDF/5CCBpufmh4aGtre3SRTIPbB64+LUsSejzQrBe8ORWF9Vh4ZG20o3LFJ9
      QKCM9+jRowzH8AQYnZwfGDFp3AVkIBUkSW8EQUjm7srynxhZlvcrlMmy/NitmRofnPJqqqV7
      w5AOimS6rpk4IaXHRZf10L2WzvwefTo6lFzdyg6kEiAZLxWa0sAQ3hsIyUBw5cDgSK9diceT
      UakiRKMQxYdHhxHXdYHLCx4Ktagj8x4fnww3aa8fxUgOtXq1Vl9XB0fSVodZ3coGQmGPwGGk
      z0UMxIa6g/j5ZLPRdV0XAEQQPLPzc/54hMMxYBobO40Xnn1Cq5eMfj9TU8dTqVjY48FnY10D
      2j3BH/eLTN/GsF6j1XUPRHQ+n69UKuAQFJa721AWm5hfuHrtqSMjpZpmuZbXF8RauayFoSYa
      ilJvvnrjX337CciEN66f0+Reem6GAk65oftoE+dCpu3MTo5+7EEfFLubq41Od2ZuFkegbdsI
      gjSKJZfngoLgOE5XrnUxn8jillZvu0LYc3CN6bru46vBD1qgSqUyPz//5ptv7n+SxbO/Cx15
      UXrUYyj7hrLl3/zGF41dW7i4sdGa+/qTWKfmBQBAsLmyWOn4AADXFi5y8SMAAJdA83s7ZiMP
      paNaq2Bb5fZr6UEAACAASURBVEYPPswEKhaKqtZ/7dVd0Rdevb42MDvULdUwyWc2DTHI7ywv
      unw87CNMWRl88hu3E+ixFuDvX4X94z/+I8/z+5fQAoV3rUcTkOu6+xqIZVmEFL/33W/fc7MJ
      AMCzz33wueMf/PPk5xLf7yU9Ms4SaLHRZikcR0hvQLA8ftzrIxKma/cCXm8fkDRDdpvVkPC+
      iWpfgH9QRAPXdU2t2bGZgIdGIMzn89FoBEAEuC6KYsvXLg/OHojo2alxTZHbihKNRCCEAMB6
      IZOptaZn56hbInp8cgKDoFkqsxGJRhDHcQFwEBRDINxYWUQZMZ2IumD/H0ARxHEcBEFs267W
      auFQCEVRCMH6yk2SD1pdZXB4ZP9aYG3pxkECua67PwO1b2WXRo+Ce/v+Pnd+j6Hs8LMv2rxB
      CQCQSn/0dh+cztvnY0X02tKNUrbkHRn99jPz61tZITZIQKDr2sVLt0T0qy0pldwX0R1NvbRw
      0e+NdJXa3Mz4lcsXDkR0yDYUlBcFV8tL6X0R7Va3ry4t7kDGALV8E40dGeKzeS0cF3evXhJG
      Zmu/eeWFP/lh0ufKOj4SJc6ev2CSAS/siJG0694qrqDrervdBgAwDOP1ej+Xs/vJuNtQNn7s
      xOXLV8fSUZfg7Z6CUR67kd3TgOTzEbhtOwSFm42Gynn9iNsFlo1gztJa/cWXnsUOzTDjJ6HT
      qGSKdYGngeuWik0pHcX7Skl2eUcOjs73OhXXhe1qWYhG437vzaV1nxTDLLWm9GnEUnTL4+O0
      Rov2+lCM5FErW2/1NXXm5FNWp5op1hmaMLsaRvpdREccaNiIT0Cbjf709OjG6k2SZvePCJSG
      RfqblcyRo7OVSrtRyrPheL9ZYQLSYCK2vbGMYpgQGrD0djgcAsBdXVo8SKDz58+nUqnd3V3T
      NE+fPr107aJHGiEcuaZY0+PDD/M8fiCBjk7/8qc/3SpqE1ODPqL3zpvLI8/OhxjSD3p5IgJb
      xe3Fi3hqNiGY1y9tRKdnQ6y7vLj5zW88efXC0uwf/+WE9HjMhDzWIvogga5cuVIqlQqFwvHj
      x+fn52vFvZ18bXh05OL5hW/88dceZkB3G8pMuVqV+wwGIERYrweFAHMdnBe1Tgu4ZqPdpXGX
      oqm2avo8jNPvKj2LI0laDLKPSb1W27b7/f6jjuIzcqCB+v3+wMDA5ORkJpMBAOzuZdNjRyy1
      FUs97IHdo0eP3jaUIQTDAwCoqO9epboJUQQAiLeW8vEHbj14GGE+SFAUpWm6WS1mi42JqQkM
      OXAf77syXNfZ36xUKsfj8c3NDZFhOhCmQiEEga7VLTUMKShiGLK6tIizvsFU3DV1zcZYEnNc
      F0MQxzaWbuyMzc9s3Fz0UpCPT2J6Ka8gE4MxCMDW2rLSdaZnJtVqCfVHqH7n2mZpfmYMRUG9
      XClUqgJLVdt6JOCr1puheDIpBe5cKeYggY4ePaooCgDg+PHjAICTT+2P/3rCD/VMAvARS16W
      ctl44v1Utgz5yo3l+OBELOTN5vLJRBwAkMvlE4+VCfpDbO8V5mbGzpw7e0tEG7guX130R33I
      zeurvsERCsHiseDK5XMm7vMk/Jdf+QUSGQsTSken65ryd999WnW43s7169eWg3xvvQYn/OZW
      Sed9AS9lLd8oxGYnt9eWOcp1Smpj+zo/8mTCR/Zcst5SEl785XcuIcU1mBz3dHavVoDaaR0f
      Cm5kOvGxwfy197wTL+S2LpIMb7ZKeUZMeN6/eD/owvZXqOj3+4ZhvPDCC05fV0yMQXqFhpaO
      Sx/9qR88d1coa4Iww2Ah0ri+VPUPSpIvKNFkcGzk3O9e73FeTKnRDLNXUxPB0Pe/f+9r/seC
      TqOSKTY8POUCUCo0pHQU6WqFuiL5WEXWg7FItd6ZTAV1zFPevIkIXq1aIf1xP2PXy20Dxedn
      JrbWVgDF4W4XOIhsYWHWVrrAhiiBg061OTBzRKvutpWeg5KgJ5O++HAiDAHY21qXey5HQlXR
      CY7DXKuu2gPRoF/AM7WuIdcZimgoRjjgb7U6NEnEh0eZOy5P3tdAOI6/9tprp0+fPn78+OK7
      v1KCJ0HlpkV4n3vqod5sdfeSl83McsNEfaTb6fSloQQJQcTvvXJzjaPITh+ivSZOCroLgx52
      bPThjRk+QP5ARDRFUZIk7e3tzc/Pry28vdMhQx5MMeznn73fhdw+FV9AQ9ljLaIPEqhQKJTL
      ZfCZVqh4sHxCQ9nadm569gh5qy19IEtePlp2NlabsjE9N4tD6DiOrmvtjhKLSgAgrutAACCC
      uC7odcoa5vexmOM4OI7n8rloJIZAqNQLLYfp1AoT4+MIgjiOqxs6yzDlUh5AMh71be5WaLIP
      gTcseYHrlisVSYpABCkWchgEYjiKI9B13f0DOY4LgQsRxHEciCAQwL2tlWpDmTpylCExCBHX
      dVzXxTDsIIFur1Cx/7U9wvP4oYHEM6//4p6Gsj2tR7FSq5mFTUXnQwO8UdWJQr0zP+xPTD0d
      8z9+ax6cffsNVeubjsFQ9E7VCAJZ80Q4o26a0PZJEtGTVRPjA/NJ6pVrlQGfldtrPPOv/mLp
      zG/MvhseGkkQzmqt3lFts7SFRMY40CehIvc9ANc9XHQoSFzJtgW8bat009L5XidrcSdGI7JF
      clDtArbXzGqKrnLxGNVtVKs9JhREO7g3Wa1kaYRkw6GYlOqpjX5XKWcyIDhgF1et0NCfPj97
      IKd1XZ+amvrxj388OzsLALj01q+x2LHREPH2xQU9uzv3nR+Nhh/BV/LRhjJ0JC6u31wlKTIY
      ZavQ47iGLxgWIxG1Ubrf9RUeEQOjEyyBFOttCse8kuVn3FLbDPGJvgkpUbTkahBQOEWzHuLE
      XNDPWMmkLVBIKplkWFqxeE+QjBPCFIdXch7SH/fSENi9Uk3z+TkEoDRNf12KFzptRzVjOOKn
      8aRmkRgMMTyBAhqH5YYH2n1MCDOI3TfarS4qEP2+TUiSxFKIpelSOq41SbOrxJIpQ+3Z8RAl
      CIDwv6+BcrncyMhIt9udn5+/evVqKhYClHjj6nuN7Z0j3354CfTIl7z8bDzWQvh+OEig21+b
      67r7Q0GPisd0ycvHWgjfDwfNPcdx+wnEso9YPdy95OXdhrIwbvz64ubJuYnM4lWYnJ4K4aWa
      5hKUF9G6qIegqOmxoYcfNk3Tm6vLguCl/WEaBQgCAQBKs7pbqDE8P5RKOraNoNB1gesCFIFa
      s+QIcS91cB3QrBSypeb41AR2UCLDudPOUSjkI1IEIAhwXQzDl65eGjpyQi5nSk19dmpMleWW
      osQkCUEQF8JGPpOptaaPzJEI6NTL2VJzfHIchaBRLHPRW3YO10ExHEHg+vIiynjTiZgLHLAf
      G3rLzmHZ1XotHAxiOA4hWF++SQgBy1CGRkb37RyrN69/pKFMGHoiu71+9MgU/+hsFR9lKEsM
      pPzY4tW1bZ+LWJZ+bWFtY6M19/VT1ULRMnccTnr4CbRPo9nYW11tQIR3rS4VHoj7nG736JGJ
      V954r1bY3VrZ9AwM0kqxZIg+vwVV9dhLf+29NVKxnSnOTY+dOXfOamZ0NAloHW2VsrpwYjpF
      kbyutdaXF4uZkjgy+q1njm3s5ITYIAmgrmkXL13eWVsRI963f9v8oJ3jkl+MdOXa3PTYlSsX
      89trXRAWQ7amIB6f11HzUvrpozMpAJzq9rXlm7uQ7cJqroHGjwxxuYIWioq71y4LIzO1l199
      4Xs/TPpd2cBHosS585csKuCFshhJA+C+r4E2Nzd5npckaX5+fr9Yx+7VtxS5cezJ5+Phhze/
      dD9LXj5yisUiNLuK6dAMZao6KYY8uLWTq/BeL4OauVxVkOK02e4BHmI92+hGBqd48qAFkpuV
      TLEh8BRwQanYlNIRvKeWFJd35MDosV67ClzQrlX4SDTu995cXvNLcdRS63KfQi1VtwSR1Ztt
      2isi+3aOWtvU1ZkTT1pyNVNsMDRudnWM9LnQQFxEt6GP37dzjGyuLhEMWy42w+kIVJoW6W+W
      92aPHqlU281bdg7aHx5MxHY2VlAc40NpW2+HQiEA3LXlW3aO21+bLMvPP/98V2kBWjSUlih+
      lmUr74cv4JKXj7UAP3R3pn6UoWwwFYU2MFyUcI1wcnTh3deFUFIKCwgkl9aXh9MjHoFSZc1B
      MZHn7hx1PPw81gL8cI+ZOL1Sqfje//XjianBra11vdqpAjQVAJU6tFH8xqWLjbGBwpV30chR
      zd7m7Nq5C8XvfPepRp0+Nvc4JdC+AN/ZWDEcwsNToWAIgcBxAYIgLgCObVcqlUQilM22MdQO
      BAMoAm0XGJrKcgJwnf0RahzHAACry0uCR/SHQ+j+LYyuazkOBHaxUEumEwiE3U45JyNmbctA
      PYLAm7oiiF5TU71edjNb5Qic8fjFQMA2lFa90nUJS2vivB/2FJITvL6w765VaQ9dC/RRhrKw
      X7B7Rl01w34ORWjbMYFj9/u6CzCIEUbXQNy+45KuVhcHZ7zU42Elu5Ozb78hRgcKK+dyKiMF
      aKDWcioxFOeruXqPC/3oB0//8ifveX3Y9npeGo/DHrD1qs36+X53r+OMDMaOTY/0XHL95uVK
      VYGI4VoYFZJ4U96o6XE/ldur/PW/+dtSLu/D1DfWVKR8xTP6FQ8FrWamiUewzpbj4DrKso5R
      tYX/6lvPra+vqqri2AC4Lo5jDInaOI845uTkhwdWDl0CfQErlO2T292UdZvjsEarFwqJuG1U
      ZJNjMMQGqoVMjMUqJQWxO7li2xeL0AjQ5aaFMY7WRvmAlyXD4TAAoFgsmt2u5Zg0Rat6F8eI
      pmZE/JzelsND4zyJ9pR6p49UchkLIaIhEaH4vlwj2JDe2BUiQ9XMZiCWcgAuN8oE6sp9AHsK
      IQQsrcV6xL4Fh9IfVqWHLoHuueRlKZeNJ+JyRxM87xf67SqtcwvXZ+aOP9Zr7YLHXEQfOg10
      d4Wydy/fZBgMu/CegOA3S52kp0ezgzvV2n/33/yIpOidpSuXK3v5Zs+CjIViAat87Jv/ejz2
      OGkgx3G+FNEPjLsrlO0byhIhr95o0HEsGWI7FdWXiAAAEvE45nRZgR/AaYykK03Zi6ZEBn/U
      H+LTsS+iM5mMh8SgN8SgwHFdBELXdRAUg8B1HBdAxHVsFIHFUtnPEUtbhYmZGcrtbmarI4MJ
      CBHHdfVG1RWCAokCAPL5PIphuKUVNWx6JA4g4joujoMbV66HEkMBHw9dp1IqdwGgUBgKRXAC
      315bBqSQjIURCB3XRREUosjGyiLBsAjGxyOB7PZ6SzODXpwKDIkURHG8kNk+dF3YF9BQts/+
      Yis6J2KNnaLGB+Nce3uPiaU9tlxzhBhvNVqGgXMRkTs+Oby8sVVVnYBTulJEo5yBk4KJsSeS
      7Nl1OR1DPOEjxa0FuQd8dmNdE8ejxNraTmJ04sWvPHH92o1sds+mxCAhX19tx0cT/fI2EFNP
      zIxX643RgdCF9xbyBjISJlsqfOkbT9+8kU+H3Z/8/PxTLz5T3tn1enyN4pLGjyP1lalT3+Ax
      49C1QJcvX/4IQxn/IQ0EAMjubDC+aMDLddp1RbPjsQ/cBKCoKgDgEU7FfCoGRyc4AqsqGoj4
      B1Ge5HDV76c4j+niEzToWoCv13lRtAHqQkgywkSQNrvCszGaxi2A4DbAPF5iyJJtvTWc8gvE
      LIphptLwmRSNGmIg4QuIwHVRnJg5ctSwEdzWTodcjBGogajqkKl0Gjpmy0Di6fSwGBIY3DC6
      JM77BLeL8E+emp8YHQ3zvBSJZjbpPhEASc7v93Tl7qFrgT7KUBb0UI6m7skgLVqmw1d1869e
      nDu/pbqtXQthAIUsLZZTPkN2+ICPpxFzab3kCXvddlW22L//t//6MF/X/yGI6HJ+r9w2gj5P
      LBrdf6ZYKEZjB4/3m4H9xyvXLiem5vmPuGfP6WuVjknD3uLK+tz8E8L9rcNyp6HM7+dqem92
      eoiEndJOe2ZyDOdDwMgTgqe2tScODsWjoaDoMj00HAvbrezo1CzHod0KcDyDh3yVusdaRB+0
      QDfPv7nadK1WFccdnyiWWzowmo1GW0oMGLpsc4kh0Q0mRiZHU7/+yT8I0kizXosEBAUKaK+h
      9QCJARfItd0G6/fhoZFvfWXuV7/+tcAwfdft1Ms0Rexs7z31rb88PvbxBrHH1FB2/9wW0WS/
      U+9iIZGqVduGUrcwVqsVxuePX7+44PUFxibHMAgBcNfXN0ZHx5auX0ZwKpoaYincdRwUQQCC
      IBBYlr2xuclTWKOtxVJpD8diGOICaFsWiiL7lpJ6rRoIBgmCyGSzGIYFAwEURVzXtR1gKHWl
      i4WC3uz2FsoyqVgcQVAEgXZXvrq4nh6d9LCka1vlSuWgBRLCcbFXYfg4SlNuTwvhHOVy4eig
      j0cXFttS2uflbdd19HqBDI7ali7yLMsLhuoIXpEwIewrFiKOzURtFzg0BQAI+P0DfuJ6nQCg
      HJBiFONLR3y/9wQe8FhXKLsf8rtbu5qucyLe2ttswHQqHPFH1FY5PjJZ73befOU1wDAeiEC7
      v1tqhqjuhcvL8aHRUrHk95D/fG0tGmIQi+xbciA2wqPdeluDOKHCPooQS5feyNaAx0/6Bc/m
      0nZsMmmVdk0mzZJKtqj/4M//YvnGVYxlUFVr2ThhtU1cZFnQ17GGrvJdFUuENq8vPvnSN1ql
      QjwsAuC8+/pvuUDYqqzlzMDHVOew+/pWtjI6PPAZCl3UykUhGNE6rdvd3yfhoyqUjaQlWzdR
      wecoJZvwYQRBOYo0OHfxnVe6LjE/M1AoqghqUyiQTapRXB9IDToEjWJYgHLx4EhEPOwXdKVi
      cV9EY9BpK12aZbwcb1umFImUykVN1VgKa8n60NgkhcF6rSZ66KaOWHo7EuBX9yoohvU6TYoX
      aNbD4Xal0/PytGNbkhQpZzd1i3QRG4NurdppyvUQDeswPJ32lMutqSNH6pUyiiGNUoESfFpt
      N6vzR8dC7Wqni+IcsBCBqxXKp06dghCYhryyscexrIvh/XbFQj33rs6xt7VWVy3Jg5poYCAZ
      vPUZndXVzYmJsbs/fD6XiycSD+Q83plAR6cHf/nbM4VMxheNhUV6b2nZ8CYmk8T1c8X50zM3
      z739/Pf/fmfxvYm5U4vnfrlaok8/NVlbOdfEB/ySoG1doJInGh01xoAXvvsnh1xEO47zqKP4
      jNy7OseZd99jIVzO3mgWDDoSDxBdU5x+fhD98btbM0lW000pFc/fWMz2uJOj6JVLu31vPOwW
      5x/EEPB9GsrUWs6gI0Hu/eGJ7Z2docHB+4zqc+WxLnH3fgskCML+eOjzzz+f2V6vqZaA9RwH
      012Mgl3KP0i6mp9Fb2yXCWCbKIlodZTzA7dHo0TbxBjQDg/MhcX7nf78AhrK9sns7XkofF9E
      1wwsLFK1altX6m3NnD0yhUDEsR0IXIwg9v3IOxvrseHR4vZas9NNDg0IDI0gEELEdhyCwPu9
      fmZnM5mIX765KYriSDqOYrjt2BC4ACD7rV61WguHQyhG5LNZFsPocIgA0HEcABxN7ypyOxwK
      1xoVtWWkx0cIBO5r04WL54RANBWPIBAUdtcPEqjb7e5X56Aoiucf5dzkPQ1lxWKNhD1vMNJs
      KdDU4oOjr7388kiU07h01Es12xrLEk5XFUORttI15CrJeArZ3LNfeeYRfpBPy+2R6A+K6JJi
      2IJIK5VKC1CoXJo7/T3G0SLp1Duv/tSXPtltbCMo02lksk2QTkmO3lYB+51nJn/9L5e6hPDD
      r4z+5N0NxNIEwmzUNcQbSgr21fXK2NiQ223nq6qXNIfnTrcLm4bcQyWPXauUu2SEd7I1LR0W
      atkMPz6dX1ife3aGZSN+1hEj6ddf/pmPIyoKgVKANqoHTf3i4uKd1TmqxayJ0h6W4zgaAKCo
      6v54blfpIKyHQABw+s1Oz3evafDbGz8ADgxl/9/E1BDm6Ks/+UVgYtZj5Lu0hGm165v1Ql85
      JjZ2aw4SHIiQ6o2fvXz05PH18+8ln36Os+0HE8PDYnBskiPQqqLhqWhIMRiO8bC8HfZROKh3
      NCkY6ToQtxIhHy/yQdcyZk/9MbB0SxyXpEilIAXrilegLDNiIjjKBgbS6UA0Cij6mVMnMEe3
      LLOvaoqD0bA3qNjhWKyw2Xzi1CnSNYSQL8BP0Rja7mm2PyxZbnF35dQTp3jCDviCTEgaFPwt
      pTN4JLlflGP+5FNhv3BjZTcc9tla+97VOc6/+2a/L19ZrL/w4smdrYxc25N77Mz0gFKpsNHE
      YGoI0WtZ2UHUUh9yPh7dzTXFWAStbu/1vLhb6cvgT//mr6jPVG78bkNZO7f67mL2Gy88CWyz
      qZqIpUcHRnpqu6cbFoBg33qHUzcvnzl+6umWbBBOn/Z6rV4vFLpXXarDx2Mtot8XmyiK/t3f
      /d3e3h4AQBAEuYuG+F6/b5CsJ44EHWEIh0q7JbMx4AK3req9ThfHIHD3B6Vcy9A0oxeWghRG
      tZyCYYHPlkB3VyjjR2b+cmRm/1XxVhky0iMCzwcM/+EXvwkA8HoeZYXQz4bruqZpPuooPiOf
      ojrH3taaLzooMA9iGZWP5m5DGUNRgYH01s1ricEpD0uAWwtf5rbXc+Xa1PyTHqDsNMFg9PFL
      nTu5JaLDLOqYtlPe20S9sV6rqJhwemwYQRHb7pXLclgKQNfBcCKfy7EYRoWDuONWSiV/JIJD
      ACECIMQxDFjq2Ys3kwPDQb8Huk6pXI5GI/sSmySIRq1SLJR4L1cqNiPRYKNWF4PReDJGfvr1
      sw5aoFgs9rHDvunhh3GX1j2WvFQ9VGxRbGffvrCUiPhWr6wkphM7+Qrd79QU+cqls7m1a+W2
      G0wNsq6CQZBrWRFWSU3+8an5R3N74Wcjv7e9q+kwGML03nqpEkVUZpSFrbLmoBea+UZdRhis
      mZX9w2nKbPgjU3oz15V7bNK3d+2qw0TZYCaIWzvruy/82Q/Ndj0dYcvVVjn3Nh4I4e1MscuN
      JX35zQ00PvqDr0zubG0TwXSjuoHQiXopB3EaBdrOTm1i5FN3+oduNv7uCmWFtRtiKkF1O/mO
      I1BuqdSRBpM8gUPLFEVmaSNPIiZGsBbOBzmkVsxqCBsL0Djqj78/BPoYUCqVOAJd3twZGhrI
      VVoBBgLKD7pNuQdptA8xxgYu6BoGJANeCkNp2+7TKFrXZFNVCdar9S0BNbsmNjAxTEIIbGPh
      6koo6G8bFgv1rsPQpGP2HcorJsPizm7R6qkUy9aqrUg0XK83RI6iQ+kg/6m7l0OXQF9AQ9kf
      iIg+JNxtKMNRjPUIH5qK6OudHsLyFAYe//Jkj7WIPnQJdPeSlxoWxUHb6LTUHo7gsJ7Pffuv
      /76V23X6ytpKzvWFo2gza3h/+Cd/dOg+zCcDQRCKojJ7ex4Scz0B0jZMhGVJaFkOBK4LXN0w
      Wq1OKplALXWnbsWDvOPYJEXvD0lvrK0NjY3tbay0VCs9lOQoGkEgRFDHdkgC7/Z6e9ubsUhg
      aavg9YUGYkEMxy3bga4NEdR1XddxavV6KBTEcDKXzZAY5g0FMYjYjgMcW+/25E4nHArV6+WW
      3BsfH0EAwDAMALB04wrnjx7qc75vKGtX8wOj6ZDIrG12xkaieYoVaLwgt7umEYsGO5QfKM1w
      KPi49gG3qFTKgCEuX18RjIruHaWa2xWbC4t0r5lzfYNmdXu3cvSrU6HfvPre7GhYL2YTT31H
      cOVUKra1tGDRgVapjJLCpbdermhsOuHtyrJJeJ6blt64nMEFKupBGmqvWlvPrJ+t1QAXComg
      tllDhwZ8ZrtV0UjGrUw+8Y3q3oamW5zIGvV6C7B+Qik2QSLEXfiXV/iBke31om3USXHIQ/SD
      sRRwwda1C4dOA31hDWWdRiVTavn9HmB0HJIjcbJYbYb8gtasAi4IjbrSJ46Ox65tlmNBzjYM
      1COFvIxldGSbto2OZf3/7Z35cxvnmeffvrvR3QAa900AvCmKIkVJlCXLlp3EzsTOxEllnNrM
      kZpUtnZ+2K3Z/S+2an/cqq3ZrZ2a2tqpTDKZZHbsxOMjtuzItmwdlHifAEjcN/oA0Hf3/kDZ
      ViRmfEi2SEmfn8AGingbePC+T/f7fb6PEQqFK8Vsra1wDKKbsIXgQ3Hf4tpOOOz3UIgEGEsW
      DFOWBU1BUMQQt3Pl4ZH09vL68PQsUDre8KDaF3AUkXqibcJ9w85v3khPnHSgervRdnh9ak+W
      RGH29GkchgCw1peXKYY9cAF0SB3K7oZHSfS95E6HMjwwQqFKXxApLkQQSL/VGj9x+s2X/xFQ
      nqEot13q+Jw4gGkHDqM4sG3cRKBes+0JeknGM5iI3O8T+nQehCT6ypXLPUEcO3rEslEKMSwY
      3/tN9GUZw6lIyP/Gq79Gac/0WMoA8NpWfiDkBqbag90kYrlZyrJRU22+/+HW6XOnCcTkmx1/
      LNGs1ZKpgbvp2bXnUJZ/973R6REW6r7+0muDI6GtrXx4/DgAAIbhd99+A/IMOW37zQ8LZ88f
      RxQxU6iePj5ZbHV7Wo9wdA9FAO0l0aVSie90nJzby3lqtXokEgIQXCzkY7E4gCAEhk3TsG2I
      QPXdioICxevzVWuVcDDUaLZisRgEAduQN3K1seHYh+99SDvdqeEhHEUM3UBggGCEbeqG2t0u
      iagh9nQ4GQvRDAtDNoygmm7AwIJQDFhWo171+kPkLe+CwMCGYGDb1d0NR2iUBeJ2XaGAnkgm
      UAS5uYT9w9/9DXDHWczGUBSCYWCpm8vrPQtEBkcDNP7sN7/587//W4sMeJ0EAJqtmWKrCTnc
      qg4PpjzzG81//xffw2Dp5ZeuM3TPRpC+hNQzV2Bf+hvPfzf6OTvIH2qHsrthfW2tW99pwVxn
      87rpG6GUkqSiTo/T72IL2V1fOtna3KbTQ8+fGf/VK9dJo6phQYD3pVLblRh59vGpTs9UGjvX
      C/wLUdznzAAAIABJREFUz559+Vev0Aho2oBDDDQwLuzOD08/qQjlXiNPpM6qlVXC6cvOX3KO
      HDXqO75QcrvciHnwfLE5MDjU3FmBvOkXn5n51SvXWbjTtRwwavOCHItFhJ3rrqEzvfJKCwoG
      QMvm0n/0+NTNAMpkMpAud22CxiBgqoB09YQWsCGaoYFtDw4NZTIZudcjCAQmnXKnLoiSLxDW
      TLPfV11u59jwIADqxkallr02cPLxiy+/+diTZ2rV6sypOepz9g18aAVlitTuWrjW7TSrVYwN
      YKCnW7iTxVVVw1FE1kwY4KSTjHjYaluFNKHS6no8dK/NU55gMhaGINBoNCnUhllOaLRZHKoK
      Io5hrU7XSQKXP2H226quk+6wKQuhcHhjcZENhRS+iaJUW9bqu+sYxgaSAyykSSZ+ZDBSbauI
      IZXrvMtJZjZzocFBFihdA8MgQ0doByQ3Jf3kzNGD3vb78sUL3vgwiRq9vubxcIoBqVInOTR8
      /cOLGIkVK/qZuVFRkkmStG3L6Dbnd+RTEyEbY7p8m6VQGKf6fZlhGMbtJb/MFpiHOhG+G/Z3
      aZ3/4CJMuVCMTIQ5XpIJxoUa3Rqvjo+kX/31P7P+RMTrKpfKsYFIq1hi40MMBsmKYsP40B3+
      MXeFpVYq5ctLxYGhAG20f3q1fuqYP5vnn/2TCO2gd4vb3Zp04SpqN270FNLwJFN2ttWBX+bF
      pJlZb2HRgbDYrLt8AaXV+f6f//BeDuwODnUifDfs3/Y7s7E+kIzfyFSv+dIxtLRb0mmH0tPD
      kZE032mbkCnu6Ksi9jiQrry/HpiFXPyKgA2aQL/7ABJFce/6y7ZtyzCf/uMfiM0qRdMIZE4c
      0wwEHxlvp4J0y/Iy3hCFIqphmPCgxtd7vW6rP/6ts4MWgtPYiYFa00VjEHa8p2p8s4N9yQ14
      9xLhzZUl1ummvAEaR1WptbVTRgjH6GDKNDUEQQEEW4aGoBiAYBy7/fq3LzZL1XajKczOnRCr
      ORtjtvK1E5NDNgTbtl0t5JyBOEMR7XKJC7lrAgi6kGpVDAa9rWYzFo8BYO/uFiBTprgIS2GW
      LssWzuB2V7YcDgJS2vNru6nRSY7GbVNHMVzmq22THQi6bm0/+AXY36WV73RsU9VMCEFg3cZw
      WLU104RJb9AjdTq2bfPtFsu6JLlPE4hhwQACDgfd7EjDqbst7jnUDmUfvH9RqtZ0b5ijCAK2
      jh47+tq/vuX2OZtbqyI7EKe6LVHXcFckGDh/5vZ2AKravHJxWeo2J558obT0jt4TbtTAmSHX
      /PXNyOSEQyjsKtz501NyNd9D9JVcP+m3d9eqWDg8NhAeiAQIl39j5TrSb72f6Y8NcJZYzvVc
      ExG40yVky/jmbOKdlXKn3vZFQqC5LVCpCa9+Pat+/8++zdyTADo4bb/vFJQFIxH2k81UI5cr
      YyiIxRP5YiERuzfFaPeKaqUCGWrPAjhO+534ZrbAuDiGhOulEsQGfZT+6qtvnjj/DE0SA9E7
      +0BqlWKj0RGPTI61Wy1g9PP1HkdBvZ7uiQYtsdUzcYJyOFGI8TI7+TqCwkDu9QEe8roDAT8A
      oF0rANRRbAhQt1pqdePpsQBrN9sKQLHBiGtpM895ONOGDakBU27IkFGCi6YixD0JoINZWLjX
      8rJpRTmn1q/XW8D1n/7qxZ//3c+5oGd3cd53ZCa7vDF5+kyIJU+cmL0n735fONQJ+M2VGMfx
      +fn5vcJCAECx3KAh6O2V2wsLX7+0XSllvtTCwjsdykqZFS4QsPqdqggQgJ49/xQGK06CZKPJ
      mNOFIFoofYijBxzyBPzAFRY+hIKyPaql3VqT73bVuTMndbmPYrhumJAhlZtmOhlU5D6M4ggM
      NM1AEWDZEAwjwDYhBMNQRFMVAKPlUgEGgGJYmqZhCNozmI5EIwDApmVRJLq7W0FR4PX4qtVq
      OByqNxrxeByCoEJmDaedOur0MSiMYDAE+GYNQhATY1wU1qnsor60l0b2TbcPXGHhnS0vbxWU
      CaLgct6c5ARRVBWFIEmX0wnuePYPHTmw9BqFYqO1nWvMPvX15Yu/1jRL1FAvKWSr2E9+/P23
      /+X/1pBEDGts1exgmIPaeZ0bh9VyMD4xNzMx/8E7osXgesfAXKC5uSPRviiLSJ2tYn96MlnP
      rfe54T99/sxLv3rFQRpdDesBBykXNCL44nNPVTq9Rj6rq82FXSXOga5CRdPxx46NXvjdZdaB
      dpu7Fd5moiPffvL4vgF0cwkjSfKA/Nz3FZShdsfodvtk0KgttW3vmTGfI36SLy4ub1QSHCwA
      zu9GpI5Y6anDAUaGXB5MXNntRgIu2bC+/c1n7vc5fSY02DE0FlaNjQAFLMsaHpvULOBh4IRk
      GhaIDR8dZX0oecRZqfsCHtQYzNekgG8aMoyOYnv8Yb/DhUERAoE6ATaGsARtL16a/8bXZ3DE
      DgX8COMDAJ07exaB9EqlxXCcJUcsjEUIRzxMk5CFYQl3WCFIErH6CM5BCHH0yJhlyH2fbwBC
      IeIPVooeODnHbe4cb7671G42UyNJqytUBI2yBFdsvF8vP/Hss9vX3sfcoXa7Wq4rfg4RO6KM
      UH6aQDFU6pTLHTAzFudV+8kzc/f7nD4F27bNw1ZH+zEHLoA+i6Cs0Wj4/Yep4uLf5lBb3B04
      2xxRFG97cCcPUvSAj+5i863aRmY3m80SBLGb2dzNbVWaomlZ5XLFsiyCIAgCNwwTAhaMoAQO
      53aKELARBLEBZFkWDAEAwd1mQbaJSqXabDRt26pUyrZtS826jhDF3Uy+VLMtq15vNupVywbA
      tsrlcl+WLcve+7fl7Hpf7a9tFfaeNU2rWq0CGLEsC4JsDCdIkiRJIpfNNRrFUqGBwPAhEJRN
      nv/O0uWLx1POVzctvLU19fjjnVpZE/vRoUGxWSsVm9HxIUTqQ4yjvLzkn5olADQ2NHC/z+Nz
      w+KwRGGvv3ExkR6BIMDXCsVMvS+LjNq4YLpf/OGfkGrrpz97LZnyO13+OIssbtXrxbVSS58a
      CV2a3/IEw15EbEnG3DeHNpYXAOGg7N7ybjfmxYFun3kh3hZ6w8Pc+799raKzqLQFewdDlFGX
      bC8q8aYHoeyA10/C6vrb73c61dXtaIC21XataLjHAwubBZ4LBr/99SfzDd5PyFdvrCeHPe2t
      8spm4MAF0K3sCcp++y+/JN0cAIAl7Ey+2P7gWsrDZBZvVASxW83ibLoxv4iguBvuZbaKPgjG
      EeYwBpAG0+kU9+L3vkMTCIpiofQELfYtNOHEbV7SpXadclKzM8cCUR+BoDAEfeeJWK7aiqcQ
      3bbnTtAuX8CBWJVy2U2C6ZNzCILwjUp0mLFNA7ZhBgWRoJfvgmg6nXYHETUmmThh9QIQzTJo
      o9UNBDgUQSEAOG8EtkZ4Bfa7GaB3o4LKOVku2HH5AjhJpeJUq9n80+8/s5GvMEMO1uc9cDnQ
      QygoO9RJ9IGbgWia3ttMZQ6Jw/zdY9u2YRj3exRfkAMXQP1+/+McKBaLXb54YfKxp9aXro+E
      6QtLpXggQDuQWkMIBoOa3D8yOXG/x3sP2EuiLU3czAvJqNeGEBSBdU0lKLpSLrXbbUvpRsdn
      EK1PUFRpe8URHvWxuGVDQrXiDrtq/CfSjmarmYjHAbCLxWK7zWuSMHh81ur3KAe9vXQ1Mn6K
      wWwbQBR5Vwbwt3IzgFYvv7PWgWbS/isL6ydnpixdabRFt9vF13YaPSicSFMYLHfrZt8IDQ5V
      djLxkWkv0v7bX/4uHeaSY2O6qmc3NienJ2FgtavV9LG58sZ11cb6naKExaaH/c1O31Z5hzvY
      a5VJl7/T6szOnfp0MxFLrVTKxdfedjpsg7O6iiUI/Np2qZfNrETGx5N3bmgfYrbWNrbqPb60
      nK/0Q4OpXvZ68tyLZn2n2LD11vZ2R/eb7byM+IxmYWF30AtbnvEIaBeaOyu5fjJg765WsUhk
      dCBEooDmwvWd1YbNdTOZim4hnYqMuoz6xnJJ8iFdMnHiiel75jp6Mwf61S/+oacAr5+zDQNR
      GoAKVNoiBBHnZiIrmYaBkLphclTPkjFJ4kkX50/PzCTpf/qHn8l4cDDpLhQaIR9nAcMy1E6l
      duxr3+3kFo+dOr38wVvNPgkonK/XAz4XrDQ1xFUtFjHW87VvvRDj9vkd3OlQpgm1nolFPJQM
      KEjp1EWDxkyxbwR8nkNdEn8bzWYTh0Cp2XS7nKaFdFsl38AE6LVIhqnV2zjNIIrUViwGUVWI
      ImCLdIdwrct4mN1CA96Tdth40OcK+P0AgEqpxDB4q6XiLKGJHcXGEbWD0F7IVBhf3O+i7tWw
      9wLIbrXaOGwrhtXXLI7CKDdX3Nl1uV1OhiqUqk6ns6+aNAkBC7Is7fV/fe3st/4k4cG3MvlQ
      0MPzXRNCKQSYwMQIWhZbwfggARub2zvBgNewIGAZkmy4GBIA4+Ibrw3NPkXBRiqd3Hf+OdSC
      soeQmzPQx7UQe1uY93FA+7a8zOdykK44vR4LpZS+JjbyogYnfQ7CFyzstpywmG30Am5XPBnp
      q5DQao6NDd/HU3iouJkD9fv9I0eO/PSnP52amgIA/O1//2/OcHJgeMIQRZKGcRS/dn3zBz/6
      wf/5X39z9MgIsAlfNAr322x88sJLP0Od3qSX2cw3jh0dKm+WTn7vubtRNN7pUFbuwZZUkjsF
      V+KkUNr4+vPfWbh8EXN6l2pZlNjazEoJt+w8+kd8cyPzVm5mOPjWjdLo2PCXrIF+xE0+uQp7
      9dVX5+bm9rQ4Hn8YNUW+I7z36ltT3zhj56/1bB8AIBn1ba2v5mvy5GhKUKAfjB/3hxOkwy5s
      ZWoSfundtxHbc/LuBrRPy8vCmhHw+UePAksxgycIBBo/OpNOJ0qlqm1IyRGnUMm2G5nR0akB
      XYIh5C+ejQmKdRg7fx9Gbi5hH29h2ra9J0q8Xzy0grJDys0ZiGGYvQCiafq+jmc/hzIIpjj3
      zYEayrWF1ZGJSZa6WTHd6XQ4liq1+9HA5+gJdKB4EO5E31ZY+OuXf53wYpZ3zOuAhZ4aCXkR
      YBdLNb2TNQIzI0E6v73eFIRwcpREAEm79H6bdnIdUcb0umiGjox88Ts0+wjKDF9owLG+kElN
      Tp6KU/MbhctXbjz2+FyjvG3LdkFUxiLMuyvV//Iff/IH2igedB6EAAK/X1hodKqrggXxDqh8
      rQdHyKgvpHfWttrRFCy01+B+SOF5mHK26uX1D94C4ZNxr7Z4fWNgbNipi+TAPasK2nMoK2ZW
      TTKZSEc7tRZIDc2emOOM2nKpGfX5moV6IJxws/1YNHrA9vQ+BzAMEwRhqeJGQUhGPAiKGqZt
      dusFCUsGWQhBbRvYpk44mPxuLpVM9vsKAkO1WtXjD2KQjRIUisAAgGwum4jFFFXZzuwMDg6S
      BGaZlmnp26tLvuRRD0uQxL33+N6/sFDgW0pfUXQTRWEUJQ1DQTBcaLU5j6taKicmZiBZYDmu
      UcoDjGg2BTeLkbRL6CqYLTs9URf7xXOXOwVltXo9GAgoEq+jNEsdsp7wn52NhStb9Z4LUwnS
      XazsEBbUwUIJrLJUsifHB8zGlufYc3JtM+GirxQ6LlzPbGYi6WG1XRw89oSXAv7owLUrH0Q8
      7JXVTSeC5QVlMkRWZJQgIGF3u++IJBPRp8/N3fOL0wNXWPgQOpTt0Wy1cMiuNOowTNgwbPV5
      mA1Cals1iaDf3WmUPOFhsbELELyn2SwOJL61uNM6M5V2BhJeFw0AWLpxFXewEIo5gFnvmYYs
      DqcTra4Oq7xiEw6GTcbC93zY+xcWXrs272cRKnLk1s5tAICd9Xk8NBFxk5+0GfioI4bcqVT7
      RCrqAQAAUy7WerGIDwClmJc+l+H37xUWHp++dun9QkdgNFkNDFHla+lv/OTyv/7d9OwTQk82
      hEKupZ+bnSwUK4SDHDsyTRNfqD3H/eZByIFuKyxcn79ScaPSWlWvrte6VGpqKIJov7u4NHnM
      U13jp+MuTWg2JPGlX/0j4/F3Vi9BA7MxqLEte9K4qDL+dnmz1jRd4VCElbnA3Bd3jDf7b7/2
      Gzg8HqUg3NPXRREAoOvGpXff5HXH5ACc3WgOcOhbH6wMTR6bPX4oowcc8gDav7CwkFlrtEQN
      JknQR3BOh3Tc0mt1KRxhK+Xm6OwTtlDhOMfKVpl10UJpF3GFCLvfh5ycAyJgS9J0VZQNknYA
      0ekbSX2eAHoIBWV7WKq4kReSUQ+MoIZpWoZRq9ej0QiKkTtbq7xsHR0fsgGCoFAhs8kGEjSJ
      ojAMIMgCkNIqAS4k1QSvn61Ua6FgsNNpRSPhnqLDtoFiRKFYHkxFF2+seMNRt5OGgY1i+G4+
      H4+EP87BL19610Hhzui4D5Frio2aBgCWJIlj4xNbq0td1UIRi2K9KGSlU6nibqYlafEAe+AK
      Cx9ah7KPkmiNIF3FVhFu9RooNxF3YrRbF5uSBhgKzSxvDpyatoubm11mJATpklXVkFgkMMLZ
      2z2ksLoTSvp75c22wQ2PDY6FXa99sBJg5ELZHkhHzk3FVzs0LWysVHQcV8VylYok/CREOANR
      L73XijDqZUDoOGhv8goUoREmOTj/21fHzj3f3l2PudCLW42TU5ONWumx06cvX/5wbGh4aW35
      ZgDtpa4fdyxsNps4hjldn9R0dvlmQ9LdDMVxt6fYoiDc+sq75E6HMpzk/CNhvS5bBJ72wL94
      6yoEHGdnUhDG4hQmNCq1Ys2ZiIf9YY69ZyqFr55Wq4XtJdEIYcM2A6OCalG45XAFdKnJy6aT
      gCyAdGTdR9o9E63Ua34HTnEBBMW9DggwXKdY7lqARnS+qwdDfgq2803R5yZ6HUWFkfHh5Pb6
      Gst56i0x4HUbstDoWV4KcnijPjcDAKjWan4neWN9NxgKkxiE2QChEAt1at2O3OUlBVCoqViY
      pfDBxDCid2u87PO4buZACIJgGHbhwoXz588DAN546Z/Y8IhUXsVCk8MhjGAT1dL2kSNHXn/l
      l8nBqZ1yzY1JrT4ZCgdqW9dlR+zH/+6FL+VDtdRKpVzIrw4ao6u/XRyYPpI+N8pLmsjX/Kx1
      472rqccfI1Vh4/L28Hm9WeefOH38SxnGV4LX6wUAOD2+j498YjDrcX5cIPdxtcDo8O3NrJh0
      cu9B4qMjk94AAAAEb/45PH4EABAK7V2LBW+b3kPBIABgdmbq9pGRPuDz3X4QsJwfgFvbfpMk
      GQqFdnZ2Zmdnb8zPN5p1DLJot09stSef+EZt7apkoCRm1jK5nsM7GCHXVhrT08ONSh5QvvOP
      3zMFyJ2CMrFWptwMUAxeNdIRz7XF1XA8CSkCybprTSHodWq9bl83nZ7A3tXsI75KPkfHwq+G
      R4Kyw8XN3aPPUg/61bCwsHDrg8219WJuRwEAAJDdyd76yhvX5qV2eS1X/r2nTLlYbn51w33o
      2V9Q9vf/+39GR6Y8DiuUns6ufAgIdym7PHX8bIPncVPCCE5Q9QANuULpSID7N///52a/lpfO
      2FR+4+Il/2Ays7527cPVx56ZYdhBsZF9pVCpbS5cSU0h/Movup6jw1FNqS8uNM8+M7uVbfzV
      j168t2N7xJ3sLyiLpZK72WzfZWpoEABg6rrLH9+c/+2HBfP88fTW5bed0cRWdXv6Ke6eB9A+
      DmXrC1wi7H78jCscZaw+jDCypM7NpeouLCC2hkMeQHNuaqBUNwajbLuf4JydWCLsZA5N/fyD
      cCPxcwnKekJrLVc9MX3kyxjQQygosyzr8Frc3cyBPi4D/SyCMtrl/ZKiBwBw5cqVfD6fz+cX
      FxcBAO12WxJEC1jVar1erd5pRSkI9zlpu3v25BwYUDP5umnoANi6aaqKagMItnrlKm/aQNd0
      HMdLxVK9Vjd0vVDIm6bRLFUsHNc1xbIsw7QUvtrqW5trS4urG5ah28A2LFvXNdu2sjt5HMcJ
      gshnN5eXVzXT1DQDQFAhX9Q1zbZM0waKouA4vnTj6k6hrGkaZFumZWuanstmYAQl/gD7C8ou
      vPYbhPUHXLQ3HCUQq1JruxwoyXKXr10/Pzf5xu8WxsZHYVuPuOBX3luODIyNDfiF0npZdwe9
      TluRSqXKY08+8cWKXu8UlNX6zHPfefz//fPLGNCPzM11MsuyO+5D5WpeSp6YINTejfXCj374
      /Xv1dd4vNtc3svVeq6ThpKvUKjoUuKSg02lsaUt+bDq0lqmffPq5zdUlQDgo0FvOdRMBQhat
      b6YGrr710qbETEQJqd1Lzj1br9c0QL22vQATLoRAMFkryEjES6digU7PbPPdlJ96/8qi3NxB
      XHFGq6wtIx2LHA4Q2+u5b/3Fj2u1Ot8ovfuuMT4+VNxY8I6eNfnNngrPTu9/bb6/oIzvdFKh
      0NV3XtdDMymislawHazWrQvhI0dwGq2sZlQMZm0rfDQiytr2hbfkY2G5ys+3kLkRNLdW15zB
      c0/eg890T1BmKE0YwENxfxdQitRRdCjg91ntjG6oxWI9jIiqjZkAHNat1I/wx9KROKg06wiC
      ewLs1mLh6bOjpqmf8yEwjg4NsgEWmTl1GkEQvlmNDTEQMCwDJgGIjUyFYNbvZdrVst9N+o6d
      QIDNixEMowwA6V1+1B1AIJNwOMM0ZCvBRs+YTLmVmE/oqkFvnO8ITq+fQgwHw5EwSKdTtMsb
      7AguFxMKfK3b1wLJUyjyB3OJP+hU73Y7M5ubBM0CFO8JgtOBUk5PpdYaH0nwLbEl9jxu1kVj
      15c3BxIxsW9gZrfT6RR4YzzuY51udyDwxboLfMaWl9vrK5H0mAM/7GFz6HkkKHvEXXFzCVtY
      WLhVUDb/4Xsw45s+crspfaFYiMf8iwu7Hs4RS8QBMN67cDE4ODqUiAAAFq+9qyLek9N39a3f
      6VCmkqHR4VCjUOlC5NNnTgAA3nzzgpfFCZdfNRQ+X5l68msex4GzGXlI2F9QtpvLeeP2//iv
      P2Mnzg+ywjuX80EPgFGn5aB//IOvXb14KRyj3nhT/sb3/owkKam4/vrO9uZ61qFV29RQLXv9
      1Ne/F3Degyvwmy0vF5e0fimzsBQ8+S0AQGVnu93jlz5YCY1NOSgN55VcvetJ3s9Z82Fmf0HZ
      TjabHIhcfPsi5Q2jQJUkw+VEUBivisrTZ6d2ss2u1Gh3uqfOnWuXixDQewZotaUAbTZ1Bldq
      oeHZoPsLKiseWkHZIeWRoOz+Y1nW4b0TfXMJW1xcvFVQlt1ctUn3rS2Pu1LXtM29tgHdrsQw
      LLjZSIBtNnkcQ5wuFwDW8vXrJBfcaztXKOR6fXVs9PPNInc6lOGuoN/HGDqkmuZIOvLrf34l
      lBigHEyvtEIOzHIMqfUEmsJUA7i8QTdzKG9eH/puPbcJyhbm5yHac/mNX6WnzxUKeRcGFwU5
      SEPBwQmltPphRhwKkqZN1jXzP/zw+V/89B+PHIl2JPvcs88jst7D6jfWpI2VdaO90yDTrfLO
      4LFzIc8XUursCcqWisdPpObffI2Z/PpIOsTzQiQsvf7u6jgtSIYf41dNmy0YjuMJ1srlz58/
      d+8+nK+IjwoLhfW8kAxzMIpZABiajiGQLLX6qFcVa36PFyMIywb9dp30+evlZjDgMQyTogjL
      hnRdJ3HMMAwEwwxVQTAcgpAeX1VsHIFQhwNHUMw0dBSBc4XS+MgIBIH15QWhZ6SGkxSKl0uF
      WCJl2QYMo5ZpYChsAVSsZYngGEd9ys2YTy5eEAT5y7/8y52dHQBAamTCApZAAr0rYCQBW0Y0
      Gg057bYo97tS0B/g/DSJIGpHBgA+/dhsvV4ENmwD4HA6LaCqqgJT7LHpY6stFECybX2OotF9
      W14C24z/8Cc46wYAf+6FF5w0RrkjPo5SNAvCR1WJf8rrNZUuxh6aDdQ72VzbzDZ67bImKWjE
      aV7b5oMhDuYLkZN/3K8Xt669v6Mwk0Phx2ZGX/7N64mh1OLCe0bXhAMDw041W7cdPgZuF3Rn
      vJtflRH3d7/7/PZ2TtGklS1hJB0kEKUj6B2TCLqJgZCvZyKNekOSTUsp82YANvj5936HRYeC
      pMILRtskko5us2vPPTvGfVoq+0hQdlBotVo4DCqNBoZTEGRLkuzze2C9b1NeyOxBmtZUQMBN
      +3y+nZ0dhsI6Uo/CCB3AMGSLUt/F4DDugG1bFls26R4ciLbbHWDJ9bbabZf90WRf4FmfH7aM
      SCQCQVC9VicxICi60BK8fq8stHHOT8JmvdJgfX4KsaqVSnJ8hsE/ZQY6cD7RdzqUORgmFI99
      NFXa16984Aol0/FbiiwV/tJa5bGZ8UZpd7NQnj3xGPnortBXxYH7pPcRlFnR0eTSjUtXQezo
      X//5H1umufDeO9e5gJRdUOiYB++iirFjefni8srKrmdw+Ozp+30ODxMHLoD2bXlJ0cTc2bN0
      ZBjYpmnB0ydneEkmE8/xshp0O/hKPuwIsUD0R494/Q+Ob+uh4MAtYQ+hoOxQc+BmoNscygAA
      gijQOKzCNL2fgdQhamr5QHLgAuj3BGW2+fLP/95yB6xW0TN6RiqutETzxKnjhXJjKMRulfig
      Q7mSER8b861stZzhwHNPP3G/h/9FeBDuRB9QzH63p3IhRiedfKNGE1g07MnlqzRNAgA6PI/o
      hpMiG20JNkx/8LB6JAIADloi8dk5cDnQZxSUSZ1Gs2emYg9OuwxLFdZ2hWTEWal2gkGvrauy
      hTkIRJMaJhvv5Fch0h3yuTEc0zQdQTHbMmAEM3QNQ2EUdxTzO24Ss5w+TOWbMhL0ONotMZGI
      AqBfubyEQubgxHi71nD5/a3dbW5gxIGj1L1wvDtwM5AoinuCMlEU/40AYjk/e48Liu4zm2ub
      uUavWepl1sq+kTSr1LdE5tRoYGvlxswf/QhBkHY9++7beYc34GfR0ta2e2iEURq5lhUJeQPR
      lNIs5Hv9PuslOrmNJpROBYNcCLF1fyyc2d6GgSmo8s7SontkGq5uKdlCJBR7/NTM3Q/7wM0w
      0VzrAAADHUlEQVRAt7lzXPjNLxmW9U89I+evAZjsmnAc73S443RvJ9/sDUSDQi1/Y7tCwyLn
      n/AEXUJxJzQ40e2XN6/Xpk8Ni9Xcz96Y/+u//s8J//2UGHwW2u02BtmVVsvWgCvogRWJ13AW
      1XuyHIiP8NUswOlep017/DSBdOoNJuBHTa1a7zhZB8l6gKHSGNLq9REApJ6MU5SLZrxeDgCz
      lNuRAYHDqqpaBozSQLcJEsXpaNB798M+cDPQrewJykpLS3U7VFh6i3THJ45OAQDWlhbt9oYN
      oT3NKF5+rcOMjQXgq5c+DI8mInD/9bffRfG+UlZzu4TFV5JHTx786AEAeDweAADLffyl+gK3
      POtMDQMAQPSmPsLr9X30osgtrwI0d2dMINHU7T4e95ADNwN9dkGZ1K7IkDvwqdt9j/gyOXAz
      0Gdvecl6wodgYnnQOXABtK+gLBBwKoJoE04csSVZ9zJYNl+MRqI91RxPh3938UOn1xMLBG4s
      raVHkqZmkQikAIBaBoZhGsDTicinvu8jvhgHLoB+j48EZV4frNeKzoknpY13dMeEJ0H11q/0
      9Wez+a3R8BMG5iwX1revXmkQoU7ulw1kIBZ1kbBc3tiNT50eHf0SM4BHHLgcaB+HsmYVQ+zc
      do6LJ2kMQlHaNPuWZTGMs9rkx4aSpd0MRHEKX8EdXorBW00+4OVsAPGtOoBhEyb3JLaP+DI4
      cAH00ArKDikHbglbWFjYE5QtLCzsCcq8LgLxpLIL7zH+OANZDo7uyJDYKHMeZ34rG0wmKpli
      MJW29N742DgARi5XVpQ+SRKdVjvkobarXZphGETXEXpybOh+n9+DxoELoDsFZTbCzT6X2s3l
      jvpCm2tZmYENBYiVbUco4SactcpGbqtuEGRx4T3IFY0y2ubiB8uZ5vDkqFbMVDz0csl45sk5
      27J6qny/T+4B5MAtYRcuXBgcHAQAlEqlueMTVQlp524IlhMHEu3yNuud9GACAraq6b2+INTb
      odQAalGysOsfPqkINbXbanfhmWPJD65uJUN0q8kLGqAJEkU0jPZODKfu9/k9aPx/r690xSTA
      MuAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Budget and Impression Share' width='191'>
      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
      /vA/jiMPqaqerG0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impressions by Travel Window' width='191'>
      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
      5n08jHmpUswAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Budget, Spend, and Coverage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAMeklEQVR4nO3YWXBb133H8QOAIAGCALEQACEuoEiKlLhItkzK
      UmVriRrbtTtK7Nh16zZNZ9LpQx+aaTJ+jqfjLlnsuOMtldx07ImcWlKs1RQlWSIkkiIpCqQI
      7lhI7AABkACI9RLL7YNUm63lVJM/U7nT3+cFM+eec3Bx8SXuXAp4nmcAvy3hgz4B+L8NAQEJ
      AtoYN/p6T5w4Obfo++IhU88Jf2zti+Nu21Q0nV8/kssmL5w7fWVg9D7f9MyHv0rf38ybph6b
      P3b3fe3TJ0+evD3juM93+c1Er7zyyoZs9P/csSNHH9q354P3j+/Z3mxxBJTinHnWrZGJei/0
      Dg70t+78vVvXL5nHJnT1zfaJoWHztKFW//Mf/5Mrxj+0vfWzP+KBnuOebPnmGj3LrFy9Nmh1
      uGqNDcmI98LFT/lSeX41OHRzbGrObmxoTC37L1y83H9teN8zT5b953IuFT1/vieWZVoZf8U0
      OGGZrDLUiYvZi70XBgYHjO27DWpZ2DX99vtn9u3bW6XRCPPJngsX08XSmN9WlGgSwQV/LBdx
      zV4fNlcZaufHb5gnpvIiydTN63OLwYbNDVOj/SO3xlZSvIRPXrx8VViurFLK8Qu0UbLnTp1X
      a/XRsHfUMp+OBobHpz848o5UW1teKhrt+8QVK9gtI7ap0WNnr634rEePnVNUljc2N63/Ajq7
      90YWLMFoMuCady1nRKnAry9cfeOnr2fWuHffeN22MG9xBLMh2+Wh2+++/ZahvlEsFKw/AyHj
      eQH78Oi/hKPhSwNmnYw/9nHPyQ+O5KVaRXnpnTmzk7cPPvPcjs6OWoP2Fz9/V1Pb8Mmv3svk
      C59cvv7J2bPFVPDIsbOpFd87R4+ND5vSgoqaap1AwN+6dm5kZOj9U9eKibBnKfj6a/+cXePe
      /OkbWdzCNk7Fyz/8oSLr9MeLHMclVhOMsWgi09Herq6UNbW0WEauKxoeLudTKm31I7v3Hn7i
      a5WVFbW1hnwu5/UH72xRXqn93g9etlw+HsowvaG+uaE2nY6nOda6tf3Pv/NtiZDVN7Z0bGvJ
      ZtMprtje3i4vF7Pi58uH+npt7rCIpRJppjXU7dq5nctysWhia0e7Tl15Z05VlXZmeqpQKITC
      kRSX7+hoV5aLlJsfTi4OrcmNMj4jU2l3PLL7+cNPMMYe2bUnG5y7ODAhEpWkWXllITzlju7q
      3JzNiba2dXznL14SI6CNUt+o+9nfvareur9rZ3tJbOHjK6O1Bt23njv83puvRTiJtEyir1Iu
      zJhLdNsMksyZ85fEEln3nsdP/OLtaHz1yL/98s4mAefsj/7xHww7DmqlbPDyqTP9M4effOrF
      F566cPa0P55VKat0aoVModKp1c8+87Wf/eRHTK7jM58vr2lo5uKhTZtbikVWX6MXiCX1Nfo/
      /NZzv37vTUeEk0vEjLG2XQfrpalXX/37EYvthee/8c5rP9a07d+skT5x6NDXn3yibltXu0Fy
      6sx5gVhiqG2QiAUypVYtE4orNGJRUaer5hLLppv2F7554PzpU5FUTsSYAP8H+l8Qck6/+a8f
      8Uz4V3/zg3qtfP2h+JLTsVzc2da4fnDs2ll7VvdHT+7+H3e+5/LfBb7AvfXaT0Kr2T1f/+bT
      +7s+G0dAQIJbGJAgICC5G9DowJVzvVfz6+5mJlPf+nm5bCqR5u65hanPxBibt1juffgLCpnY
      vDPw3wa5VOzMqY/t89Njs8772wa+EkruvExaJlYSBYOmrKqh1TVli4YWLc6lTDzsT7BOo9rh
      XVbLmGNV+td/dthtm+wbmd1Sr3Is+rr27r89POhbSR84eGDeMulbDbutLnFpSXN7p+XmmNJQ
      K81F5IbmeMDFy7TibKiuqe2WeaxrR1tsTTg+eKXS0MiFHbGM8MVv/2k04Awn1grZxKWrfeFQ
      d1VJypsQilK+z5Z/46mDD/ZKwT3d/QUqkcha6tVWm+u22ez1On3RNZW83O2w5lnJUL/J7nTJ
      5UqdTscYG7s5ZB7qdywuHTz02Pit4ZRAViER39lkJRB86KG2prbtbrsjL5SEAp54lt/bWffp
      tcFFj1+jVMw6vZJ8MpFKuxetWZEi4FlM5YStBvFyiilU1Q1q0cjE/MN7DsbDrn5T342RW+uX
      P7ArBL/R3acwn3shUxQ31mhtTo+yUsOvJeLZ4tTQRbN99eXv/6U/sLJtS7190dfSvDkWWVqO
      J8vKpFqtKpHJp6NLeaGk0VgbWVriBUwqlRaZMLsaPNU7+uyzT/O5rF6vD/pcHCsrKaQlcvXy
      UrDOWJfiilw8LFVV5zIJqVhQptCJCmm702esrc4UhHkunUsnOVYqk5R8ttxYU/2grxXcAx7j
      gQRPYUCCgIAEAQEJAgISBAQkCAhIEBCQICAgQUBAgoCABAEBCQICEgQEJAgISBAQkCAgIEFA
      QIKAgAQBAQkCAhIEBCQICEgQEJAgICBBQECCgIAEAQEJAgISBAQkCAhIEBCQICAgQUBAgoCA
      BAEBCQICEgQEJAgISBAQkCAgIEFAQIKAgAQBAQkCAhIEBCQICEgQEJAgICBBQECCgIAEAQEJ
      AgISBAQkCAhIEBCQICAgQUBAgoCABAEBCQICEgQEJAgISBAQkCAgIEFAQIKAgAQBAQkCAhIE
      BCQICEgQEJAgICBBQECCgIAEAQEJAgISBAQkCAhIEBCQICAgQUBAgoCABAEBCQICEgQEJAgI
      SBAQkCAgIEFAQIKAgORuQNNjQ303xr5sknV8wB9bu+eh8WHT2Z7LueLnI30m0/oJ+bXMajJL
      P9GvuNRKwO4N3efk2dm5e46vBhcsNv/6kYFPe06cODEwavmyrQYHBhlj09PTueSyN7w6PT39
      XzbPrZoGvvRr3RAld14mLJbmnft7z3wUinFd3TsnJ6e2tmy5cWuiuqZBL+FGbt48/N3ugMMS
      4+X+hXlPYOX5P/njilIhY8xisURiaYNOoTQ0+m1ziYh3ZN7HMnGrP9HdaZx3eNXlJTMR9rff
      feF3+jEeuHQ0MDUT6LsUEgmEck21nI+FYlxLs3HOvdJar3K6g8aa6pV8aWnKr2/cZrW6Qh6b
      J5I2GtROt6+ts3Ny2v7iSy9yqdil3tFwoEMkELFCdv+BA4/9/tPHT558rN3w1rtHDzy+Z9xs
      bmlpUulrlvzBoM+l2tQYCwQYY/llz6k5u7CkIBKU5gtCx8xYJJE/sH/3QP/1fEnV8Q9nyrU1
      irJSns+LBYLux/eJBRv2we/+Aj3S/Wi/6epKPKWR8qa+6+OTM9GVZbm+qZBati64a6qrGGOG
      zVsvffzvHV2P5pOhRad3OZZkjAlLpW2Nm2xWx8T4mMvn8SylNMoKv9uRzjPzUP+83SlXyHU6
      3Yad71dYnkvrm3Yo5FIBt3rnSs7ZF7sfP3T7xjXrgksiq5ifnKpUKaetHpZPL3oD4lzcvuA/
      eOgxT3g1E/UHIgnGmKHW6HZ6MsuL0TQvWLe1sqZlLeKamBjPS6rOHf9ok6asf/iWNxguFouM
      sY6ubrcvLIwGOh49wPLpeIbf3qAcHjHr6ppyq6HVojTo83IxVyiwZI9kNrAexpiA53nGWNDr
      Ekgq+3pPd+091FRfbbXaqjfVZHO8sLhWJhb4gpGGplZpqTCRSMqkYqvdZawzpHMCjbIi4HEm
      coItRoPN4VIoVYJ8eiWZd00OXjfbv/fy9yP+QOvWJseCu3VL00ae9VfPWiYRT2YEYimfyzCe
      XbnU07X3kF4lFUqVgrXEoidct0mzvMpJhGslMjWf46RiwXIqpygVyioVsXgyGo1tadlSyCac
      noCh1vjp6V/u+oOXalRSxlgoHNapFEuxTKVU6AuGlVX6UhGTV1R4Fu0imVrE53R6vYCxRCLB
      GKuQy8OhMM8Xy8tEIonc41yoVOuLXLxMrpWW8KWy8mwyWyGXbeAHvxsQwG8HT2FAgoCABAEB
      CQICEgQEJAgISBAQkCAgIEFAQIKAgAQBAQkCAhIEBCQICEgQEJAgICBBQECCgIAEAQEJAgIS
      BAQkCAhIEBCQICAgQUBAgoCABAEBCQICEgQEJAgISBAQkCAgIEFAQIKAgAQBAQkCAhIEBCQI
      CEgQEJAgICBBQECCgIAEAQEJAgISBAQkCAhIEBCQICAgQUBAgoCABAEBCQICEgQEJAgISBAQ
      kCAgIEFAQIKAgAQBAQkCAhIEBCQICEgQEJAgICBBQECCgIAEAQEJAgISBAQkCAhIEBCQICAg
      QUBAgoCABAEBCQICEgQEJAgISBAQkCAgIPkPG0JBUNpKF5kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Budget by Market Data' width='192'>
      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
      AA+wsglBjviaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Market Data' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Budget and Ad Coverage by Hotel Data' width='192'>
      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
      ECJFFgEAIAlHM53jOJAEBMUk6QORaGN0dOfW7ny6VLPsIiTF2O2e7PWn7n/4j/9b5+77R4hq
      Tl1/3qutbdEse9SZNMpqmKY8I1a4uNvrdU7afD7nDY9SrlTI8bYPJY5cKQj/9dv/VKw2iGAO
      CbZ65lqFJyaTnjcbv/E6zlUqZDR79VVfzWRLebF/cvDU7/1Pi97w6WefffOV787MeGIE5xvS
      0omWdlyrFF786pc13Zy0m5vnzvyn//Ovv/DCtVZ3WlThpNVx2OKZldydG7er2xfyvXbrYF8t
      r1xbffrxKc0AAAAYnhy8dXsR4mpFdSIkCnxWld782RsRnXnswUIKofr6ZvPOe3R5w3Ucl1Gs
      xYiAZMqFHIXa7W7gaGEum/qzbk9jdzYqtZUPxiqKOu5MFUncvfnuPBKDKMgxUUTmPo4BzZcW
      j2Bv1rNmJ3eODmp8SJSvbInOYXtiWot7Inp81Oq55JlCNJyGESO392+df/4bKzl+POj99FZ3
      rVHQB71UrqjJXMc8BkChksE0WZj9xsoFIra3z+4c3L3T6pys7zz/1CURAABi/3vf+XZ+ZV1M
      jP4yrZcfKPOrTUa8qpwcdmuNXHugyVRKMJy+NM5cuLgYtLwYxHGCQKpmsgRBeH7g+hFLAgxR
      JSfbEdYXc0ByILR4SbG8UOK4JPSzOfWo2cvm8zRMlstlobZORNbMCkkc+UGkqGoaOYulK2ey
      Iksaulasb8DAGswMGkaQZLwwyUpMCogkSbww2d5YhRBGvnN40pFkhWPQVHPyGfH45tvK+iVV
      YE1trmYU3XQ4lrZMc+v8FZ76WB4oTfzl0lto87XV2my60EwnI7MkzZmWt7219uiPMAyDY8lO
      bwISX85VJQaPNYdIfESQXoK2VyvHxy1EAIqTAsfO5fNKJvNBXGDYawUx8MLkzFrVjhCOXNdc
      ivm6IjCPnBMAAJbz8dJJeDLGgIzviWg5T6SBwBDd8YKlqSABOLgvohma8SOMI7vc2ORpotU8
      5nghxtAxdE7OsiCICTqNIkSRjulQNCEqeYkBrd5YFtggjmQpS5CEokiRObtxPM7lVBS6mOJl
      gb4vosMw/Dg3+pRTfon7S9i9Kq+nnPKrQvzlX/4lhBAhBCH48Y9fWW1Ubcc9PmkzJAIAOr7H
      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
    </thumbnail>
    <thumbnail height='192' name='Advertiser Data' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ROI and Churn' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Active Advertisers Last Week' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
