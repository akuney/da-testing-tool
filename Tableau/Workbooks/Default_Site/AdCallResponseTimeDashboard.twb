<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location id='AdCallResponseTimeDashboard_0' path='/workbooks' revision='1.0' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='benchmark' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
        <calculation class='tableau' formula='200.0' />
      </column>
    </datasource>
    <datasource caption='ad_call_reponse_time_dashboard' inline='true' name='vertica.41702.627027175928' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select &#13;&#10;&#9;acsa.date_in_et as &quot;Date&quot;, &#13;&#10;&#9;acsa.ad_unit_id as &quot;Ad Unit ID&quot;, &#13;&#10;&#9;u.name as &quot;Ad Unit Name&quot;,&#13;&#10;&#9;u.ad_type as &quot;Ad Type&quot;,&#13;&#10;&#9;u.product_category_type as &quot;Product Category Type&quot;,&#13;&#10;&#9;s.display_name as &quot;Site Name&quot;,&#13;&#10;&#9;acsa.ad_call_count as &quot;Ad Call Count&quot;,&#13;&#10;&#9;acsa.ad_calls_greater_than_two_hundred_ms_count as &quot;Ad Calls Greater Than Two Hundred MS Count&quot;, &#13;&#10;&#9;acsa.mean_response_time as &quot;Mean Response Time&quot;, &#13;&#10;&#9;acsa.ninety_fifth_percentile_response_time as &quot;Average 95th Percentile Response Time&quot;,&#13;&#10;&#9;(100-(100*(acsa.ad_calls_greater_than_two_hundred_ms_count/acsa.ad_call_count))) as &quot;% under SLA&quot;,&#13;&#10;&#9;(case when (100-(100*(acsa.ad_calls_greater_than_two_hundred_ms_count/acsa.ad_call_count))) &lt;&lt; 100 then 1 else 0 end) as &quot;Count of Ad Units with less 100% SLA&quot;&#13;&#10;from intent_media_production.ad_call_statistics_aggregations acsa&#13;&#10;left join intent_media_production.ad_units u on u.id = acsa.ad_unit_id&#13;&#10;left join intent_media_production.sites s on s.id = u.site_id</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% under SLA]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Ad Call Count]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Ad Calls Greater Than Two Hundred MS Count]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' datatype-customized='true' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Ad Unit Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Ad Unit Name]' default='&quot;WebJet Exit Unit - Home Page&quot;'>
          <bin value='&quot;Expedia Flight List Page - 2012 Redesign&quot;'>
            <value>&quot;Expedia Flight List Page - 2012 Redesign&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;WebJet Exit Unit - Home Page&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
      </column>
      <column caption='% under SLA' datatype='real' name='[Calculation_1500306101248993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100-(100*[Ad Calls Greater Than Two Hundred MS Count]/[Ad Call Count])' scope-isolation='false' />
      </column>
      <column caption='Avg. 95 Percentile Response Time for SSR' datatype='real' name='[Calculation_2400307094350101]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Ad Type] = &quot;SSR&quot; then [Average 95th Percentile Response Time] end' scope-isolation='false' />
      </column>
      <column caption='Count % under SLA Less Than 100' datatype='integer' name='[Calculation_7700306101629967]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [Calculation_1500306101248993]&lt;100 THEN 1 ELSE 0 END)' scope-isolation='false' />
      </column>
      <column caption='Avg. 95 Percentile Response Time for CT Hotels' datatype='real' name='[Calculation_8440307094623962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Ad Type] = &quot;CT&quot; and [Product Category Type] = &quot;HOTELS&quot; &#13;&#10;then [Average 95th Percentile Response Time] end' scope-isolation='false' />
      </column>
      <column caption='Avg. 95 Percentile Response Time for CT flights' datatype='real' name='[Calculation_9710307100256759]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Ad Type] = &quot;CT&quot; and [Product Category Type] = &quot;FLIGHTS&quot; &#13;&#10;then [Average 95th Percentile Response Time] end' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Count of Ad Units with less 100% SLA]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' name='[Mean Response Time]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[% under SLA]' derivation='Avg' name='[avg:% under SLA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ad Call Count]' derivation='Avg' name='[avg:Ad Call Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1500306101248993]' derivation='Avg' name='[avg:Calculation_1500306101248993:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2400307094350101]' derivation='Avg' name='[avg:Calculation_2400307094350101:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8440307094623962]' derivation='Avg' name='[avg:Calculation_8440307094623962:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9710307100256759]' derivation='Avg' name='[avg:Calculation_9710307100256759:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Response Time]' derivation='Avg' name='[avg:Mean Response Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Count of Ad Units with less 100% SLA]' derivation='Count' name='[cnt:Count of Ad Units with less 100% SLA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average 95th Percentile Response Time]' derivation='None' name='[none:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1500306101248993]' derivation='None' name='[none:Calculation_1500306101248993:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ad Call Count]' derivation='Sum' name='[sum:Ad Call Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ad Calls Greater Than Two Hundred MS Count]' derivation='Sum' name='[sum:Ad Calls Greater Than Two Hundred MS Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average 95th Percentile Response Time]' derivation='Sum' name='[sum:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1500306101248993]' derivation='Sum' name='[sum:Calculation_1500306101248993:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2400307094350101]' derivation='Sum' name='[sum:Calculation_2400307094350101:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8440307094623962]' derivation='Sum' name='[sum:Calculation_8440307094623962:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9710307100256759]' derivation='Sum' name='[sum:Calculation_9710307100256759:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Count of Ad Units with less 100% SLA]' derivation='Sum' name='[sum:Count of Ad Units with less 100% SLA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7700306101629967]' derivation='User' name='[usr:Calculation_7700306101629967:qk]' pivot='key' type='quantitative' />
      <group name='[Action (Ad Type,Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Type]' />
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Ad Unit Name,Average 95th Percentile Response Time,Average Mean Response Time,% under SLA,Date,Site Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit Name]' />
          <groupfilter function='level-members' level='[none:Average 95th Percentile Response Time:qk]' />
          <groupfilter function='level-members' level='[none:Average Mean Response Time:qk]' />
          <groupfilter function='level-members' level='[none:Calculation_1500306101248993:qk]' />
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Site Name]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Ad Unit Name,Date,Site Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit Name]' />
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Site Name]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\ad_call_reponse_time_dashboard.tde' schema='Extract' tablename='Extract' update-time='4/16/2014 7:11:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1500306101248993]' formula='100-(100*[Ad Calls Greater Than Two Hundred MS Count]/[Ad Call Count])' />
            <calculation column='[Calculation_2400307094350101]' formula='if [Ad Type] = &quot;SSR&quot; then [Average 95th Percentile Response Time] end' />
            <calculation column='[Calculation_8440307094623962]' formula='if [Ad Type] = &quot;CT&quot; and [Product Category Type] = &quot;HOTELS&quot; &#13;&#10;then [Average 95th Percentile Response Time] end' />
            <calculation column='[Calculation_9710307100256759]' formula='if [Ad Type] = &quot;CT&quot; and [Product Category Type] = &quot;FLIGHTS&quot; &#13;&#10;then [Average 95th Percentile Response Time] end' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='32156' timestamp-start='2014-04-16 19:11:07.291000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average Mean Response Time:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average mean_response_time:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Calculation_2400307094350101:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Mean Response Time:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:\% under SLA:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]:1&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Calculation_1500306101248993:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Calculation_9710307100256759:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Ad Calls Greater Than Two Hundred MS Count:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average mean_response_time:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Calculation_2400307094350101:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41702.627027175928]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Calculation_8440307094623962:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Count of Ad Units with less 100\% SLA:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average Mean Response Time:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[vertica.41702.627027175928].[usr:Calculation_7700306101629967:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average 95th Percentile Response Time:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Avereage 95th Percentile Response Time:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Calculation_1500306101248993:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Ad Call Count:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Ad Call Count:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Calculation_9710307100256759:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Avereage 95th Percentile Response Time:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Calculation_8440307094623962:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41702.627027175928].[cnt:Count of Ad Units with less 100\% SLA:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Ad Units with less 100\% SLA:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.41702.627027175928'>
      <datasources>
        <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
      </datasources>
      <datasource-dependencies datasource='vertica.41702.627027175928'>
        <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Unit Name:nk]'>
        <groupfilter function='level-members' level='[none:Ad Unit Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='relative-date' column='[vertica.41702.627027175928].[none:Date:qk]' first-period='-2' include-future='true' include-null='false' last-period='0' period-type='month' />
      <filter class='categorical' column='[vertica.41702.627027175928].[none:Product Category Type:nk]'>
        <groupfilter function='level-members' level='[none:Product Category Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41702.627027175928].[none:Site Name:nk]'>
        <groupfilter function='level-members' level='[none:Site Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='LineChart_SSR_AdCalls' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Aggregate%20Information?%5Bvertica.41702.627027175928%5D.%5BAd%20Type%5D~s0=&lt;[Ad Type]~na&gt;&amp;%5Bvertica.41702.627027175928%5D.%5BDate%5D~s0=&lt;[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Aggregate Information' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='LineChart_CT_AdCalls' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Aggregate%20Information?%5Bvertica.41702.627027175928%5D.%5BAd%20Type%5D~s0=&lt;[Ad Type]~na&gt;&amp;%5Bvertica.41702.627027175928%5D.%5BDate%5D~s0=&lt;[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Aggregate Information' />
      </command>
    </action>
    <action caption='Filter1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='LineChart_SSR_SLA' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Aggregate%20Information?%5Bvertica.41702.627027175928%5D.%5BAd%20Type%5D~s0=&lt;[Ad Type]~na&gt;&amp;%5Bvertica.41702.627027175928%5D.%5BDate%5D~s0=&lt;[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Aggregate Information' />
      </command>
    </action>
    <action caption='Filter2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='LineChart_CT_SLA' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Aggregate%20Information?%5Bvertica.41702.627027175928%5D.%5BAd%20Type%5D~s0=&lt;[Ad Type]~na&gt;&amp;%5Bvertica.41702.627027175928%5D.%5BDate%5D~s0=&lt;[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Aggregate Information' />
      </command>
    </action>
    <action caption='Filter3' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='SSR_dashboard' type='sheet' />
      <link caption='Filter3' delimiter=',' escape='\' expression='tsl:Aggregate%20Information?%5Bvertica.41702.627027175928%5D.%5BAd%20Type%5D~s0=&lt;[Ad Type]~na&gt;&amp;%5Bvertica.41702.627027175928%5D.%5BDate%5D~s0=&lt;[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Aggregate Information' />
      </command>
    </action>
    <action caption='Filter4' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CT_dashboard' type='sheet' />
      <link caption='Filter4' delimiter=',' escape='\' expression='tsl:Aggregate%20Information?%5Bvertica.41702.627027175928%5D.%5BAd%20Type%5D~s0=&lt;[Ad Type]~na&gt;&amp;%5Bvertica.41702.627027175928%5D.%5BDate%5D~s0=&lt;[Date]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Aggregate Information' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Aggregate Information'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
          </datasources>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='integer' name='[Ad Call Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Ad Calls Greater Than Two Hundred MS Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column caption='% under SLA' datatype='real' name='[Calculation_1500306101248993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100-(100*[Ad Calls Greater Than Two Hundred MS Count]/[Ad Call Count])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Call Count]' derivation='Sum' name='[sum:Ad Call Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Calls Greater Than Two Hundred MS Count]' derivation='Sum' name='[sum:Ad Calls Greater Than Two Hundred MS Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Sum' name='[sum:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1500306101248993]' derivation='Sum' name='[sum:Calculation_1500306101248993:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[sum:Calculation_1500306101248993:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[sum:Ad Call Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[sum:Ad Calls Greater Than Two Hundred MS Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[sum:Average 95th Percentile Response Time:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41702.627027175928].[Action (Ad Type,Date)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Ad Type]' />
              <groupfilter function='level-members' level='[Date]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[Action (Ad Type,Date)]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41702.627027175928].[:Measure Names]' value='280' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' value='244' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41702.627027175928].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] / ([vertica.41702.627027175928].[none:Ad Unit Name:nk] / [vertica.41702.627027175928].[none:Date:ok]))</rows>
        <cols>[vertica.41702.627027175928].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='LineChart_CT'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='benchmark' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;' user:op='manual' />
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average Mean Response Time:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Type:nk]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='Response Time' />
            <format attr='subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[vertica.41702.627027175928].[Multiple Values]' formula='average' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] * [vertica.41702.627027175928].[Multiple Values])</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='LineChart_CT_AdCalls'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='benchmark' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='integer' name='[Ad Call Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' name='[Mean Response Time]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Call Count]' derivation='Avg' name='[avg:Ad Call Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Response Time]' derivation='Avg' name='[avg:Mean Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Mean Response Time:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average Mean Response Time:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Type:nk]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='Response Time' />
            <format attr='subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[avg:Ad Call Count:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[vertica.41702.627027175928].[Multiple Values]' formula='average' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
          <pane id='5' y-axis-name='[vertica.41702.627027175928].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[vertica.41702.627027175928].[avg:Ad Call Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] * ([vertica.41702.627027175928].[Multiple Values] + [vertica.41702.627027175928].[avg:Ad Call Count:qk]))</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='LineChart_CT_SLA'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
          </datasources>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column caption='% under SLA' datatype='real' name='[Calculation_1500306101248993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100-(100*[Ad Calls Greater Than Two Hundred MS Count]/[Ad Call Count])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Count of Ad Units with less 100% SLA]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1500306101248993]' derivation='Avg' name='[avg:Calculation_1500306101248993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count of Ad Units with less 100% SLA]' derivation='Sum' name='[sum:Count of Ad Units with less 100% SLA:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;' user:op='manual' />
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average Mean Response Time:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;CT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Type:nk]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[sum:Count of Ad Units with less 100% SLA:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' y-axis-name='[vertica.41702.627027175928].[avg:Calculation_1500306101248993:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' y-axis-name='[vertica.41702.627027175928].[sum:Count of Ad Units with less 100% SLA:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] * ([vertica.41702.627027175928].[avg:Calculation_1500306101248993:qk] + [vertica.41702.627027175928].[sum:Count of Ad Units with less 100% SLA:qk]))</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='LineChart_SSR'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='benchmark' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;' user:op='manual' />
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average Mean Response Time:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;SSR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Type:nk]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='Response Time' />
            <format attr='subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[vertica.41702.627027175928].[Multiple Values]' formula='average' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] * [vertica.41702.627027175928].[Multiple Values])</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='LineChart_SSR_AdCalls'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='benchmark' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='integer' name='[Ad Call Count]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg. 95 Percentile Response Time for SSR' datatype='real' name='[Calculation_2400307094350101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Ad Type] = &quot;SSR&quot; then [Average 95th Percentile Response Time] end' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' name='[Mean Response Time]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Call Count]' derivation='Avg' name='[avg:Ad Call Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Response Time]' derivation='Avg' name='[avg:Mean Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2400307094350101]' derivation='Sum' name='[sum:Calculation_2400307094350101:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Mean Response Time:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Calculation_2400307094350101:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Mean Response Time:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;SSR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Type:nk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[avg:Ad Call Count:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='Response Time' />
            <format attr='subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[vertica.41702.627027175928].[Multiple Values]' formula='average' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
          <pane id='9' y-axis-name='[vertica.41702.627027175928].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' y-axis-name='[vertica.41702.627027175928].[avg:Ad Call Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] * ([vertica.41702.627027175928].[Multiple Values] + [vertica.41702.627027175928].[avg:Ad Call Count:qk]))</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='LineChart_SSR_SLA'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
          </datasources>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='real' name='[% under SLA]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Average 95th Percentile Response Time]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Count of Ad Units with less 100% SLA]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[% under SLA]' derivation='Avg' name='[avg:% under SLA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average 95th Percentile Response Time]' derivation='Avg' name='[avg:Average 95th Percentile Response Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count of Ad Units with less 100% SLA]' derivation='Sum' name='[sum:Count of Ad Units with less 100% SLA:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;' user:op='manual' />
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Average 95th Percentile Response Time:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Average Mean Response Time:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41702.627027175928].[none:Ad Type:nk]'>
            <groupfilter function='member' level='[none:Ad Type:nk]' member='&quot;SSR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[none:Ad Type:nk]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[vertica.41702.627027175928].[sum:Count of Ad Units with less 100% SLA:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='10'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='11' y-axis-name='[vertica.41702.627027175928].[avg:% under SLA:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='12' y-axis-name='[vertica.41702.627027175928].[sum:Count of Ad Units with less 100% SLA:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([vertica.41702.627027175928].[none:Ad Type:nk] * ([vertica.41702.627027175928].[avg:% under SLA:qk] + [vertica.41702.627027175928].[sum:Count of Ad Units with less 100% SLA:qk]))</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='ad_call_reponse_time_dashboard' name='vertica.41702.627027175928' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='benchmark' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41702.627027175928'>
            <column datatype='string' name='[Ad Unit Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Avg. 95 Percentile Response Time for SSR' datatype='real' name='[Calculation_2400307094350101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Ad Type] = &quot;SSR&quot; then [Average 95th Percentile Response Time] end' scope-isolation='false' />
            </column>
            <column caption='Avg. 95 Percentile Response Time for CT Hotels' datatype='real' name='[Calculation_8440307094623962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Ad Type] = &quot;CT&quot; and [Product Category Type] = &quot;HOTELS&quot; &#13;&#10;then [Average 95th Percentile Response Time] end' scope-isolation='false' />
            </column>
            <column caption='Avg. 95 Percentile Response Time for CT flights' datatype='real' name='[Calculation_9710307100256759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Ad Type] = &quot;CT&quot; and [Product Category Type] = &quot;FLIGHTS&quot; &#13;&#10;then [Average 95th Percentile Response Time] end' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Site Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2400307094350101]' derivation='Avg' name='[avg:Calculation_2400307094350101:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8440307094623962]' derivation='Avg' name='[avg:Calculation_8440307094623962:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9710307100256759]' derivation='Avg' name='[avg:Calculation_9710307100256759:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Unit Name]' derivation='None' name='[none:Ad Unit Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site Name]' derivation='None' name='[none:Site Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2400307094350101]' derivation='Sum' name='[sum:Calculation_2400307094350101:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41702.627027175928].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Calculation_8440307094623962:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Calculation_9710307100256759:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41702.627027175928].[avg:Calculation_2400307094350101:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41702.627027175928].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Calculation_8440307094623962:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[avg:Calculation_9710307100256759:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41702.627027175928].[sum:Calculation_2400307094350101:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[vertica.41702.627027175928].[none:Date:qk]</column>
            <column>[vertica.41702.627027175928].[:Measure Names]</column>
            <column>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Site Name:nk]</column>
            <column>[vertica.41702.627027175928].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='Response Time' />
            <format attr='subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41702.627027175928].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41702.627027175928].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[vertica.41702.627027175928].[Multiple Values]' formula='average' id='refline0' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[vertica.41702.627027175928].[Multiple Values]</rows>
        <cols>[vertica.41702.627027175928].[none:Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CT_dashboard'>
      <style>
      </style>
      <size maxheight='1100' maxwidth='1800' minheight='1100' minwidth='1800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='91111' x='0' y='0'>
              <zone h='50000' id='1' name='LineChart_CT_AdCalls' show-title='true' w='91111' x='0' y='0'>
              </zone>
              <zone h='50000' id='12' name='LineChart_CT_SLA' show-title='true' w='91111' x='0' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8889' x='91111' y='0'>
              <zone h='5001' id='6' name='LineChart_CT_AdCalls' param='[vertica.41702.627027175928].[none:Date:qk]' type='filter' w='8889' x='91111' y='0'>
              </zone>
              <zone h='4364' id='11' param='[Parameters].[Parameter 1]' type='paramctrl' w='8889' x='91111' y='5001'>
              </zone>
              <zone h='7546' id='7' name='LineChart_CT_AdCalls' param='[vertica.41702.627027175928].[none:Product Category Type:nk]' type='filter' w='8889' x='91111' y='9365'>
              </zone>
              <zone h='7546' id='10' name='LineChart_CT_AdCalls' param='[vertica.41702.627027175928].[:Measure Names]' type='color' w='8889' x='91111' y='16911'>
              </zone>
              <zone h='5728' id='13' name='LineChart_CT_SLA' param='[vertica.41702.627027175928].[:Measure Names]' type='color' w='8889' x='91111' y='24457'>
              </zone>
              <zone h='34725' id='8' name='LineChart_CT_AdCalls' param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' w='8889' x='91111' y='30185'>
              </zone>
              <zone h='35090' id='9' name='LineChart_CT_AdCalls' param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' w='8889' x='91111' y='64910'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='SSR_dashboard'>
      <style>
      </style>
      <size maxheight='1100' maxwidth='1800' minheight='1100' minwidth='1800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='91111' x='0' y='0'>
              <zone h='50000' id='1' name='LineChart_SSR_AdCalls' show-title='true' w='91111' x='0' y='0'>
              </zone>
              <zone h='50000' id='11' name='LineChart_SSR_SLA' show-title='true' w='91111' x='0' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8889' x='91111' y='0'>
              <zone h='5001' id='6' name='LineChart_SSR_AdCalls' param='[vertica.41702.627027175928].[none:Date:qk]' type='filter' w='8889' x='91111' y='0'>
              </zone>
              <zone h='4364' id='10' param='[Parameters].[Parameter 1]' type='paramctrl' w='8889' x='91111' y='5001'>
              </zone>
              <zone h='7546' id='9' name='LineChart_SSR_AdCalls' param='[vertica.41702.627027175928].[:Measure Names]' type='color' w='8889' x='91111' y='9365'>
              </zone>
              <zone h='5728' id='12' name='LineChart_SSR_SLA' param='[vertica.41702.627027175928].[:Measure Names]' type='color' w='8889' x='91111' y='16911'>
              </zone>
              <zone h='38498' id='7' name='LineChart_SSR_AdCalls' param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' w='8889' x='91111' y='22639'>
              </zone>
              <zone h='38863' id='8' name='LineChart_SSR_AdCalls' param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' w='8889' x='91111' y='61137'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='LineChart_SSR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[avg:Average mean_response_time:qk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit ID:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[tmn:Date:ok]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='LineChart_CT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[avg:Average mean_response_time:qk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit ID:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[tmn:Date:ok]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='LineChart_SSR_AdCalls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='9' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[Multiple Values]</field>
          <field>[vertica.41702.627027175928].[avg:Average mean_response_time:qk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit ID:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Product Category Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[tmn:Date:ok]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='LineChart_SSR_SLA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='11' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[avg:Average mean_response_time:qk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit ID:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Product Category Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[tmn:Date:ok]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='SSR_dashboard'>
      <zones>
        <zone name='LineChart_SSR_AdCalls'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[vertica.41702.627027175928].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='LineChart_SSR_SLA'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='LineChart_SSR_AdCalls' param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='type_in' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='LineChart_SSR_AdCalls' pane-specification-id='9' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
        <zone name='LineChart_SSR_SLA' pane-specification-id='11' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='LineChart_CT_AdCalls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Product Category Type:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[avg:Average mean_response_time:qk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit ID:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Product Category Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[tmn:Date:ok]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='LineChart_CT_SLA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='9' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Product Category Type:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Site Name:nk]' type='filter' />
            <card param='[vertica.41702.627027175928].[none:Ad Unit Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[:Measure Names]</field>
          <field>[vertica.41702.627027175928].[avg:Average mean_response_time:qk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit ID:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Date:qk]</field>
          <field>[vertica.41702.627027175928].[none:Product Category Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[tmn:Date:ok]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='CT_dashboard'>
      <zones>
        <zone name='LineChart_CT_AdCalls'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='LineChart_CT_SLA'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='LineChart_CT_AdCalls' param='[vertica.41702.627027175928].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='type_in' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='LineChart_CT_AdCalls' pane-specification-id='5' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
        <zone name='LineChart_CT_SLA' pane-specification-id='9' param='[vertica.41702.627027175928].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Aggregate Information'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41702.627027175928].[none:Ad Type:nk]</field>
          <field>[vertica.41702.627027175928].[none:Ad Unit Name:nk]</field>
          <field>[vertica.41702.627027175928].[none:Site Name:nk]</field>
          <field>[vertica.41702.627027175928].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='LineChart_SSR' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='LineChart_CT' width='192'>
      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
      OtVSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='LineChart_SSR_AdCalls' width='192'>
      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
      S1P8f9dpJHibZsj/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='LineChart_SSR_SLA' width='192'>
      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
      3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SSR_dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='LineChart_CT_AdCalls' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='LineChart_CT_SLA' width='192'>
      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
      lYc3F/b/faXnK4C3mBAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CT_dashboard' width='192'>
      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
      /huCocMX6Y/bTvZ6ekmU5N3erwtXWE81mopKqtauyywuDbG6tmx8at09DyjStH848odyffl1
      JdcF2sl6vR/84XHlDUs/b/9sTVPWLY88HmxsPbPtiSnJVN9Q3zDU04Ia5mlNGdwUe6J/vvTn
      D3350K8u/tX+/v27zbvlqPz60uvvm3dfYNzh4z5SOblO3vn6+Upcuat71+rs1YErPod98x+f
      wCkKAERBSM8vuvzu+8c0D0Eu+dY9v3r5Py/aq8heqAv+aINuTffft5xe4P/utx8TJUmM/lAo
      uvbu7z71yoPav7oLFYpqMlMUREqRPVju3LPK8aOllxp1Rfy4ZmvSTba+Hg/GnraetnqtZpf5
      vnn3sTS99dmnmhYKTufB31z7TD32ybFPPlyw4ZqAyGBbM76tdUp6IHNnq33Y1ucU1192ET31
      nuid3Tu3tG+5Mv/KNXlrKISaIU5eF+u6//P7N63fpCAUIElbNj659Nqbs8sqIknxIv/EwSfK
      9eUbNJdse+G5vKr5BEUBAM+y3adOrLv3exu7/rYic8UNc26I2aoXTr7Ai/z3F30/pJE97p5f
      7vvljxb9aJFpUYhI7Y5tOEHs1bbma/I3FGzYdGpTs735oiOat/Hd66647Z559yAIIgrCvx9/
      ZMMDP0rLyDz28ebO2uOL7/r67LaBkiU1RdV90vFJna3up0t/Wr935+nTB0pvvGrINzTkG+r3
      9GtkmtvKb9PJdIE766x1vz/y+6uLr761/FYA4Bimt7FOOnOwZnbZXFIu5wTu3s/u/c0lv8lR
      5URp0ta2rfv69j25+slRgya4kRa/5aGdD7244cUQL1r36ZOddSdfUH366ldexVEcALY1f7T/
      hU3rf/LTVTmrRm+zdnfuem0TKVca8/JX3nw7iqIpBZrC6iRJ+tmen/UNdS7ah3tuLNWqDCaF
      KUORoSW1fb6+D1o/yFJm3Vh6447uHWa3+ecrfp6lzIpeXU1/zTut7zx1yVORbjgycGTTqU1/
      uvxPUWam7za/O+gb/M+F/xks6LJaNj7zvcyvXX7/gvsDV3ob69qOHbn063eFVFG7Y1taekZB
      9Zk+TJpiglOyJwTHcdMmFUnwwLtviKI4yeo+fOa35vpTYaXqrHWP7nv0k/ZPotcSLPjgzgcb
      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
      pPj/+kkxtTg7IdAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Aggregate Information' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
