<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.1015.1338                -->
  <repository-location id='SSNBudgetChanges' path='/t/PreQA/workbooks' revision='1.8' site='PreQA' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Only Show One Name for Each Hotel' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Aggregated By' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
        </members>
      </column>
      <column caption='Market' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
        <calculation class='tableau' formula='&quot;All Markets&quot;' />
        <members>
          <member value='&quot;All Markets&quot;' />
          <member value='&quot;Global Top 10&quot;' />
          <member value='&quot;Global 11 - 50&quot;' />
          <member value='&quot;Global Top 50&quot;' />
          <member value='&quot;Rest of Asia Pacific&quot;' />
          <member value='&quot;Rest of Europe&quot;' />
          <member value='&quot;Rest of Latin America&quot;' />
          <member value='&quot;Rest of Middle East&quot;' />
          <member value='&quot;Rest of North America&quot;' />
          <member value='&quot;Other&quot;' />
        </members>
      </column>
      <column caption='View Channel Totals' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='SSN_Budget_Change' inline='true' name='vertica.41997.566919652774' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-with-failover.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>-- Author : SUSHMIT ROY&#13;&#10;-- Tableau Report :  SSN budget Changes Report&#13;&#10;-- Expected Number of Rows : 30000&#13;&#10;-- Creation Date : 24th Dec 2014&#13;&#10;-- This pulls data hotel_ssr_bugdet_changes. The left outer join with users table leads to multiple&#13;&#10;-- rows .&#13;&#10;-- Select Primary user 1 or Null for unique changes&#13;&#10;-- Expected Increase per month : 500&#13;&#10;-- Primary purpose is to Check the count of budget changes&#13;&#10;SELECT&#13;&#10;    hsac_change_data_daily.DATE AS Date,&#13;&#10;    (&#13;&#10;        CASE&#13;&#10;            WHEN hsac_change_data_daily.Starting_Time &lt;&lt; first_date.starting_change&#13;&#10;            THEN &apos;Wizard&apos;&#13;&#10;            WHEN hsac_change_data_daily.Starting_Time = first_date.starting_change&#13;&#10;            AND e.first_auction_participation IS NULL&#13;&#10;            THEN &apos;Wizard&apos;&#13;&#10;            WHEN hsac_change_data_daily.Starting_Time = first_date.starting_change&#13;&#10;            AND e.first_auction_participation IS NOT NULL&#13;&#10;            THEN (&#13;&#10;                    CASE&#13;&#10;                        WHEN users.&apos;Channel Status&apos; = &apos;Latter Channel&apos;&#13;&#10;                        THEN &apos;New Channel&apos;&#13;&#10;                        ELSE &apos;Brand New Hotel&apos;&#13;&#10;                    END)&#13;&#10;            ELSE &apos;Active&apos;&#13;&#10;        END)                            AS &apos;Account Status&apos;,&#13;&#10;    e.name                              AS &apos;Advertiser Name&apos;,&#13;&#10;    e.id                                AS &apos;Advertiser ID&apos;,&#13;&#10;    e.ssn_channel_type                  AS &apos;SSN Channel Type&apos;,&#13;&#10;    ifnull(imm.name, &apos;Other&apos;)           AS &apos;Market Name&apos;,&#13;&#10;    ifnull(imm.report_segment, &apos;Other&apos;) AS &apos;Segment Name&apos;,&#13;&#10;    FIRST_VALUE_BUDGET_DAY              AS &apos;Old Amount&apos;,&#13;&#10;    LAST_VALUE_BUDGET_DAY               AS &apos;New Amount&apos;,&#13;&#10;    FIRST_VALUE_BUDGET_TYPE             AS &apos;Old Budget Type&apos;,&#13;&#10;    LAST_VALUE_BUDGET_TYPE              AS &apos;New Budget Type&apos;,&#13;&#10;    users.&apos;Phone Number&apos;,&#13;&#10;    users.&apos;User Name&apos;,&#13;&#10;    users.&apos;User Email&apos;,&#13;&#10;    users.&apos;Channel Status&apos;,&#13;&#10;    users.&apos;Is Primary User&apos;,&#13;&#10;    users.&apos;Distinct Hotel Properties&apos;,&#13;&#10;    users.&apos;Distinct Entities&apos;,&#13;&#10;    users.&apos;User First Auction Participation&apos;,&#13;&#10;    users.&apos;Strategic Account Type&apos;,&#13;&#10;    users.&apos;Known Rotator Type&apos;&#13;&#10;FROM&#13;&#10;    (&#13;&#10;        SELECT&#13;&#10;            hsac_ranked.DATE,&#13;&#10;            hsac_ranked.market_id,&#13;&#10;            hsac_ranked.advertiser_id,&#13;&#10;            MIN(hsac_ranked.Rank_ROWS_DAY)          AS Min_Row_Rank,&#13;&#10;            MIN(hsac_ranked.FIRST_VALUE_TIME)       AS Starting_Time,&#13;&#10;            MIN(hsac_ranked.FIRST_VALUE_BUDGET_DAY) AS FIRST_VALUE_BUDGET_DAY,&#13;&#10;            MIN(FIRST_VALUE_BUDGET_TYPE)            AS FIRST_VALUE_BUDGET_TYPE,&#13;&#10;            MAX(hsac_ranked.Rank_ROWS_DAY)          AS Last_Rank_day,&#13;&#10;            MAX(hsac_ranked.LAST_VALUE_TIME)        AS LastChange_Time,&#13;&#10;            MAX(hsac_ranked.LAST_VALUE_BUDGET_DAY)  AS LAST_VALUE_BUDGET_DAY,&#13;&#10;            MAX(hsac_ranked.LAST_VALUE_BUDGET_TYPE) AS LAST_VALUE_BUDGET_TYPE&#13;&#10;        FROM&#13;&#10;            (&#13;&#10;                SELECT&#13;&#10;                    *,&#13;&#10;                    DATE(NEW_TIME(hsac.created_at,&apos;UTC&apos;,&apos;America/New_York&apos;)) AS DATE,&#13;&#10;                    CASE&#13;&#10;                        WHEN (old_settings IS NULL)&#13;&#10;                        OR  (REPLACE((trim(SPLIT_PART(trim(old_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;) =&apos;&apos;)&#13;&#10;                        THEN 0.00&#13;&#10;                        ELSE CAST(REPLACE((trim(SPLIT_PART(trim(old_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;) AS&#13;&#10;                            FLOAT)&#13;&#10;                    END AS &apos;Old Amount&apos; ,&#13;&#10;                    CASE&#13;&#10;                        WHEN (new_settings IS NULL)&#13;&#10;                        OR  (REPLACE((trim(SPLIT_PART(trim(new_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;) =&apos;&apos;)&#13;&#10;                        THEN 0.00&#13;&#10;                        ELSE CAST(REPLACE((trim(SPLIT_PART(trim(new_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;) AS&#13;&#10;                            FLOAT)&#13;&#10;                    END AS &apos;New Amount&apos; ,&#13;&#10;                    CASE&#13;&#10;                        WHEN change_type = &apos;Budget Changed&apos;&#13;&#10;                        THEN trim(SPLIT_PART(SPLIT_PART(trim(old_settings),&apos;,&apos;,1),&apos;:&apos;,2))&#13;&#10;                        ELSE NULL&#13;&#10;                    END AS &apos;Old Budget Type&apos;,&#13;&#10;                    CASE&#13;&#10;                        WHEN change_type = &apos;Budget Changed&apos;&#13;&#10;                        THEN trim(SPLIT_PART(SPLIT_PART(trim(new_settings),&apos;,&apos;,1),&apos;:&apos;,2))&#13;&#10;                        ELSE NULL&#13;&#10;                    END AS &apos;New Budget Type&apos;,&#13;&#10;                    RANK() OVER ( PARTITION BY DATE(hsac.created_at) , hsac.market_id ,&#13;&#10;                    hsac.advertiser_id ORDER BY hsac.created_at ASC ) AS Rank_ROWS_DAY,&#13;&#10;                    FIRST_VALUE(hsac.created_at) OVER ( PARTITION BY DATE(hsac.created_at) ,&#13;&#10;                    hsac.market_id , hsac.advertiser_id ORDER BY hsac.created_at ASC ) AS&#13;&#10;                    FIRST_VALUE_TIME,&#13;&#10;                    FIRST_VALUE(&#13;&#10;                        CASE&#13;&#10;                            WHEN (old_settings IS NULL)&#13;&#10;                            OR  (REPLACE((trim(SPLIT_PART(trim(old_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;) =&apos;&apos;)&#13;&#10;                            THEN 0.00&#13;&#10;                            ELSE CAST(REPLACE((trim(SPLIT_PART(trim(old_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;)&#13;&#10;                                AS FLOAT)&#13;&#10;                        END ) OVER ( PARTITION BY DATE(hsac.created_at) , hsac.market_id ,&#13;&#10;                    hsac.advertiser_id ORDER BY hsac.created_at ASC ) AS FIRST_VALUE_BUDGET_DAY,&#13;&#10;                    FIRST_VALUE (&#13;&#10;                        CASE&#13;&#10;                            WHEN change_type = &apos;Budget Changed&apos;&#13;&#10;                            THEN trim(SPLIT_PART(SPLIT_PART(trim(old_settings),&apos;,&apos;,1),&apos;:&apos;,2))&#13;&#10;                            ELSE NULL&#13;&#10;                        END ) OVER ( PARTITION BY DATE(hsac.created_at) , hsac.market_id ,&#13;&#10;                    hsac.advertiser_id ORDER BY hsac.created_at ASC ) AS FIRST_VALUE_BUDGET_TYPE,&#13;&#10;                    LAST_VALUE(hsac.created_at) OVER ( PARTITION BY DATE(hsac.created_at) ,&#13;&#10;                    hsac.market_id , hsac.advertiser_id ORDER BY hsac.created_at ASC ROWS BETWEEN&#13;&#10;                    UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS LAST_VALUE_TIME,&#13;&#10;                    LAST_VALUE(&#13;&#10;                        CASE&#13;&#10;                            WHEN (new_settings IS NULL)&#13;&#10;                            OR  (REPLACE((trim(SPLIT_PART(trim(new_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;) =&apos;&apos;)&#13;&#10;                            THEN 0.00&#13;&#10;                            ELSE CAST(REPLACE((trim(SPLIT_PART(trim(new_settings),&apos;$&apos;,2))),&apos;,&apos;,&apos;&apos;)&#13;&#10;                                AS FLOAT)&#13;&#10;                        END ) OVER ( PARTITION BY DATE(hsac.created_at) , hsac.market_id ,&#13;&#10;                    hsac.advertiser_id ORDER BY hsac.created_at ASC ROWS BETWEEN UNBOUNDED&#13;&#10;                    PRECEDING AND UNBOUNDED FOLLOWING) AS LAST_VALUE_BUDGET_DAY,&#13;&#10;                    LAST_VALUE(&#13;&#10;                        CASE&#13;&#10;                            WHEN change_type = &apos;Budget Changed&apos;&#13;&#10;                            THEN trim(SPLIT_PART(SPLIT_PART(trim(new_settings),&apos;,&apos;,1),&apos;:&apos;,2))&#13;&#10;                            ELSE NULL&#13;&#10;                        END ) OVER ( PARTITION BY DATE(hsac.created_at) , hsac.market_id ,&#13;&#10;                    hsac.advertiser_id ORDER BY hsac.created_at ASC ROWS BETWEEN UNBOUNDED&#13;&#10;                    PRECEDING AND UNBOUNDED FOLLOWING) AS LAST_VALUE_BUDGET_TYPE&#13;&#10;                FROM&#13;&#10;                    intent_media_production.hotel_ssr_advertiser_changes hsac&#13;&#10;                WHERE&#13;&#10;                    change_type = &apos;Budget Changed&apos;&#13;&#10;                AND DATE(NEW_TIME(hsac.created_at,&apos;UTC&apos;,&apos;America/New_York&apos;)) &lt;&lt; DATE(NEW_TIME(CURRENT_TIMESTAMP,&apos;UTC&apos;,&apos;America/New_York&apos;))&#13;&#10;                    /*ORDER BY&#13;&#10;                    DATE(hsac.created_at) DESC ,&#13;&#10;                    hsac.market_id ,&#13;&#10;                    hsac.advertiser_id*/&#13;&#10;            ) hsac_ranked&#13;&#10;        GROUP BY&#13;&#10;            hsac_ranked.DATE,&#13;&#10;            hsac_ranked.market_id,&#13;&#10;            hsac_ranked.advertiser_id&#13;&#10;            /*    hsac_ranked.DATE desc,&#13;&#10;            hsac_ranked.market_id,&#13;&#10;            hsac_ranked.advertiser_id*/&#13;&#10;    ) hsac_change_data_daily&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.entities e&#13;&#10;ON&#13;&#10;    e.id = hsac_change_data_daily.advertiser_id&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.hotel_property_advertisers hpa&#13;&#10;ON&#13;&#10;    hpa.hotel_ssr_advertiser_id = hsac_change_data_daily.advertiser_id&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.intent_media_hotel_properties_markets imhpm&#13;&#10;ON&#13;&#10;    imhpm.hotel_property_id = hpa.hotel_property_id&#13;&#10;LEFT JOIN&#13;&#10;    intent_media_production.intent_media_markets imm&#13;&#10;ON&#13;&#10;    imm.id = imhpm.intent_media_market_id&#13;&#10;LEFT JOIN&#13;&#10;    (&#13;&#10;        SELECT&#13;&#10;            advertiser_id,&#13;&#10;            MAX(hsac.created_at) AS starting_change&#13;&#10;        FROM&#13;&#10;            intent_media_production.hotel_ssr_advertiser_changes hsac&#13;&#10;        LEFT JOIN&#13;&#10;            intent_media_production.entities e&#13;&#10;        ON&#13;&#10;            e.id = hsac.advertiser_id&#13;&#10;        WHERE&#13;&#10;            (&#13;&#10;                hsac.created_at &lt;&lt;= e.first_auction_participation&#13;&#10;            OR  e.first_auction_participation IS NULL)&#13;&#10;        AND hsac.change_type = &apos;Budget Changed&apos;&#13;&#10;        GROUP BY&#13;&#10;            advertiser_id ) first_date&#13;&#10;ON&#13;&#10;    first_date.advertiser_id = hsac_change_data_daily.advertiser_id&#13;&#10;LEFT JOIN&#13;&#10;    (&#13;&#10;        SELECT&#13;&#10;            entities_to_users.*,&#13;&#10;            (&#13;&#10;                CASE&#13;&#10;                    WHEN entities_to_users.&apos;User ID&apos; = primary_users.primary_user&#13;&#10;                    THEN 1&#13;&#10;                    ELSE 0&#13;&#10;                END) AS &apos;Is Primary User&apos;,&#13;&#10;            hotel_count.&apos;Distinct Hotel Properties&apos;,&#13;&#10;            hotel_count.&apos;Distinct Entities&apos;,&#13;&#10;            hotel_count.&apos;User First Auction Participation&apos;,&#13;&#10;            hotel_count.&apos;Strategic Account Type&apos;,&#13;&#10;            hotel_count.&apos;Known Rotator Type&apos;&#13;&#10;        FROM&#13;&#10;            (&#13;&#10;                SELECT&#13;&#10;                    e.id                           AS &apos;Advertiser ID&apos;,&#13;&#10;                    e.telephone                    AS &apos;Phone Number&apos;,&#13;&#10;                    u.first_name||&apos; &apos;||u.last_name AS &apos;User Name&apos;,&#13;&#10;                    u.email                        AS &apos;User Email&apos;,&#13;&#10;                    u.id                           AS &apos;User ID&apos;,&#13;&#10;                    e.ssn_channel_type             AS &apos;SSN Channel Type&apos;,&#13;&#10;                    channel_types.&apos;Channel Status&apos;&#13;&#10;                FROM&#13;&#10;                    intent_media_production.entities e&#13;&#10;                LEFT JOIN&#13;&#10;                    (&#13;&#10;                        SELECT&#13;&#10;                            e.id AS advertiser_id,&#13;&#10;                            (&#13;&#10;                                CASE&#13;&#10;                                    WHEN multi_channel_hotel_properties.hotel_property_id IS NULL&#13;&#10;                                    THEN &apos;Only Channel&apos;&#13;&#10;                                    WHEN&#13;&#10;                                        multi_channel_hotel_properties.min_first_auction_participation&#13;&#10;                                        = e.first_auction_participation&#13;&#10;                                    THEN &apos;First Channel&apos;&#13;&#10;                                    ELSE &apos;Latter Channel&apos;&#13;&#10;                                END) AS &apos;Channel Status&apos;&#13;&#10;                        FROM&#13;&#10;                            intent_media_production.entities e&#13;&#10;                        LEFT JOIN&#13;&#10;                            intent_media_production.hotel_property_advertisers hpa&#13;&#10;                        ON&#13;&#10;                            hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;                        LEFT JOIN&#13;&#10;                            (&#13;&#10;                                SELECT&#13;&#10;                                    hpa.hotel_property_id,&#13;&#10;                                    MIN(first_auction_participation) AS&#13;&#10;                                    min_first_auction_participation&#13;&#10;                                FROM&#13;&#10;                                    intent_media_production.hotel_property_advertisers hpa&#13;&#10;                                LEFT JOIN&#13;&#10;                                    intent_media_production.entities e&#13;&#10;                                ON&#13;&#10;                                    hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;                                WHERE&#13;&#10;                                    e.active = 1&#13;&#10;                                AND e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                                GROUP BY&#13;&#10;                                    hpa.hotel_property_id&#13;&#10;                                HAVING&#13;&#10;                                    COUNT(e.id) &gt;&gt; 1 ) multi_channel_hotel_properties&#13;&#10;                        ON&#13;&#10;                            multi_channel_hotel_properties.hotel_property_id =&#13;&#10;                            hpa.hotel_property_id&#13;&#10;                        WHERE&#13;&#10;                            e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                        AND e.active = 1 ) channel_types&#13;&#10;                ON&#13;&#10;                    channel_types.advertiser_id = e.id&#13;&#10;                RIGHT JOIN&#13;&#10;                    intent_media_production.memberships m&#13;&#10;                ON&#13;&#10;                    m.entity_id = e.id&#13;&#10;                RIGHT JOIN&#13;&#10;                    intent_media_production.users u&#13;&#10;                ON&#13;&#10;                    u.id = m.user_id&#13;&#10;                WHERE&#13;&#10;                    entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                AND e.active = 1&#13;&#10;                AND e.first_auction_participation IS NOT NULL&#13;&#10;                AND m.active = 1 ) entities_to_users&#13;&#10;        LEFT JOIN&#13;&#10;            (&#13;&#10;                SELECT&#13;&#10;                    m.entity_id  AS entity_id,&#13;&#10;                    MIN(user_id) AS primary_user&#13;&#10;                FROM&#13;&#10;                    intent_media_production.memberships m&#13;&#10;                WHERE&#13;&#10;                    m.active = 1&#13;&#10;                GROUP BY&#13;&#10;                    m.entity_id) primary_users&#13;&#10;        ON&#13;&#10;            entities_to_users.&apos;Advertiser ID&apos; = primary_users.entity_id&#13;&#10;        LEFT JOIN&#13;&#10;            (&#13;&#10;                SELECT&#13;&#10;                    u.email                                                         AS &apos;User Email&apos;,&#13;&#10;                    COUNT(DISTINCT (hpa.hotel_property_id))          AS &apos;Distinct Hotel Properties&apos;,&#13;&#10;                    COUNT(DISTINCT (e.id))                                   AS &apos;Distinct Entities&apos;,&#13;&#10;                    MIN(NEW_TIME(e.first_auction_participation,&apos;UTC&apos;,&apos;America/New_York&apos;)) AS&#13;&#10;                    &apos;User First Auction Participation&apos;,&#13;&#10;                    (&#13;&#10;                        CASE&#13;&#10;                            WHEN SUM(CAST (u.strategic_account AS INTEGER))&gt;&gt; 0&#13;&#10;                            THEN &apos;Strategic Accounts&apos;&#13;&#10;                            ELSE &apos;Other Accounts&apos;&#13;&#10;                        END) AS &apos;Strategic Account Type&apos;,&#13;&#10;                    (&#13;&#10;                        CASE&#13;&#10;                            WHEN SUM (CAST(u.known_property_rotator AS INTEGER)) &gt;&gt; 0&#13;&#10;                            THEN &apos;Known Rotators&apos;&#13;&#10;                            ELSE &apos;Other Accounts&apos;&#13;&#10;                        END) AS &apos;Known Rotator Type&apos;&#13;&#10;                FROM&#13;&#10;                    intent_media_production.users u&#13;&#10;                LEFT JOIN&#13;&#10;                    intent_media_production.memberships m&#13;&#10;                ON&#13;&#10;                    m.user_id = u.id&#13;&#10;                LEFT JOIN&#13;&#10;                    intent_media_production.entities e&#13;&#10;                ON&#13;&#10;                    e.id = m.entity_id&#13;&#10;                LEFT JOIN&#13;&#10;                    intent_media_production.hotel_property_advertisers hpa&#13;&#10;                ON&#13;&#10;                    hpa.hotel_ssr_advertiser_id = e.id&#13;&#10;                WHERE&#13;&#10;                    e.entity_type = &apos;HotelSsrAdvertiser&apos;&#13;&#10;                AND e.active = 1&#13;&#10;                AND m.active = 1&#13;&#10;                GROUP BY&#13;&#10;                    (u.first_name||&apos; &apos;||u.last_name),&#13;&#10;                    u.email ) hotel_count&#13;&#10;        ON&#13;&#10;            entities_to_users.&apos;User Email&apos; = hotel_count.&apos;User Email&apos;) users&#13;&#10;ON&#13;&#10;    users.&apos;Advertiser ID&apos; = hsac_change_data_daily.advertiser_id</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Budget Increases' datatype='integer' name='[Calculation_1300423121309548]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [Calculation_2370422165736190] &gt; [Calculation_1990422165849268] THEN [Advertiser ID] END)' scope-isolation='false' />
      </column>
      <column caption='Converted Old Amount' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_1990422165849268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([Old Budget Type]) = &quot;daily&quot; THEN [Old Amount]*30 ELSE [Old Amount] END' scope-isolation='false' />
      </column>
      <column caption='Converted New Amount' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_2370422165736190]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF LOWER([New Budget Type]) = &quot;daily&quot; THEN [New Amount]*30 ELSE [New Amount] END' scope-isolation='false' />
      </column>
      <column caption='Market Filter' datatype='boolean' name='[Calculation_2900717133108268]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Market Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Segment Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Parameters].[Parameter 3] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Parameter 3] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
      </column>
      <column caption='Negative Budget Decreases' datatype='integer' name='[Calculation_3740624170316661]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Calculation_3900423121554311]' scope-isolation='false' />
      </column>
      <column caption='Budget Decreases Amount' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_3820815140402819]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2370422165736190] &lt; [Calculation_1990422165849268] THEN [Calculation_2370422165736190] - [Calculation_1990422165849268] END' scope-isolation='false' />
      </column>
      <column caption='Budget Decreases' datatype='integer' name='[Calculation_3900423121554311]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [Calculation_2370422165736190] &lt; [Calculation_1990422165849268] THEN [Advertiser ID] END)' scope-isolation='false' />
      </column>
      <column caption='Date Axis' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_5040423125454331]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Day&quot; THEN [Date]&#13;&#10;    WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;    WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Channel Type' datatype='string' name='[Calculation_5331009170939343]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] THEN [SSN Channel Type] + &quot; Total&quot;&#13;&#10;ELSE&#13;&#10;  IF [Channel Status] = &apos;Only Channel&apos; THEN &quot;Active on &quot; + [SSN Channel Type] + &quot; Only&quot;&#13;&#10;  ELSE &quot;Active on Both OTA and GDS&quot;&#13;&#10;  END&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Budget Increases Amount' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_8500815140732569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2370422165736190] &gt; [Calculation_1990422165849268] THEN [Calculation_2370422165736190] - [Calculation_1990422165849268] END' scope-isolation='false' />
      </column>
      <column caption='Primary User Filter' datatype='string' name='[Calculation_9140326132430125]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]&#13;&#10;    THEN IF [Is Primary User] = 0 THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Net Change' datatype='real' default-format='C1033%' name='[Calculation_9690422170733428]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2370422165736190]) - SUM([Calculation_1990422165849268])' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column-instance column='[Calculation_2370422165736190]' derivation='Sum' name='[sum:Calculation_2370422165736190:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1300423121309548]' derivation='User' name='[usr:Calculation_1300423121309548:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3740624170316661]' derivation='User' name='[usr:Calculation_3740624170316661:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9690422170733428]' derivation='User' name='[usr:Calculation_9690422170733428:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\SSN_Budget_Change_vertica.tde' schema='Extract' tablename='Extract' update-time='12/24/14 7:27:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1990422165849268]' formula='IF LOWER([Old Budget Type]) = &quot;daily&quot; THEN [Old Amount]*30 ELSE [Old Amount] END' />
            <calculation column='[Calculation_2370422165736190]' formula='IF LOWER([New Budget Type]) = &quot;daily&quot; THEN [New Amount]*30 ELSE [New Amount] END' />
            <calculation column='[Calculation_3820815140402819]' formula='IF [Calculation_2370422165736190] &lt; [Calculation_1990422165849268] THEN [Calculation_2370422165736190] - [Calculation_1990422165849268] END' />
            <calculation column='[Calculation_8500815140732569]' formula='IF [Calculation_2370422165736190] &gt; [Calculation_1990422165849268] THEN [Calculation_2370422165736190] - [Calculation_1990422165849268] END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Properties in MPM]' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='27911' timestamp-start='2014-12-24 19:27:07.649000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[vertica.41997.566919652774].[sum:Calculation_2370422165736190:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_3740624170316661:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_9690422170733428:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Only Show One Name for Each Hotel' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column caption='Market' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;All Markets&quot;'>
          <calculation class='tableau' formula='&quot;All Markets&quot;' />
          <members>
            <member value='&quot;All Markets&quot;' />
            <member value='&quot;Global Top 10&quot;' />
            <member value='&quot;Global 11 - 50&quot;' />
            <member value='&quot;Global Top 50&quot;' />
            <member value='&quot;Rest of Asia Pacific&quot;' />
            <member value='&quot;Rest of Europe&quot;' />
            <member value='&quot;Rest of Latin America&quot;' />
            <member value='&quot;Rest of Middle East&quot;' />
            <member value='&quot;Rest of North America&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column caption='View Channel Totals' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.41997.566919652774'>
      <datasources>
        <datasource caption='SSN_Budget_Change' name='vertica.41997.566919652774' />
      </datasources>
      <datasource-dependencies datasource='vertica.41997.566919652774'>
        <column datatype='string' name='[Account Status]' role='dimension' type='nominal'>
        </column>
        <column caption='Market Filter' datatype='boolean' name='[Calculation_2900717133108268]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Market Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Segment Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Parameters].[Parameter 3] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Parameter 3] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Account Status]' derivation='None' name='[none:Account Status:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_2900717133108268]' derivation='None' name='[none:Calculation_2900717133108268:nk]' pivot='key' type='nominal' />
        <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
        <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.41997.566919652774].[none:Account Status:nk]'>
        <groupfilter from='&quot;Active&quot;' function='range' level='[none:Account Status:nk]' to='&quot;Wizard&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41997.566919652774].[none:Calculation_2900717133108268:nk]'>
        <groupfilter function='member' level='[none:Calculation_2900717133108268:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41997.566919652774].[none:Known Rotator Type:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Known Rotator Type:nk]' member='%null%' />
          <groupfilter function='member' level='[none:Known Rotator Type:nk]' member='&quot;Known Rotators&quot;' />
          <groupfilter function='member' level='[none:Known Rotator Type:nk]' member='&quot;Other Accounts&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[vertica.41997.566919652774].[none:Properties in MPM:nk]'>
        <groupfilter from='&quot;1&quot;' function='range' level='[none:Properties in MPM:nk]' to='&quot;7-10&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41997.566919652774].[none:Strategic Account Type:nk]'>
        <groupfilter function='level-members' level='[none:Strategic Account Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[vertica.41997.566919652774].[none:User Name:nk]'>
        <groupfilter function='level-members' level='[none:User Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='GDS Change Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Hotels with Budget Increases or Decreases on GDS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SSN_Budget_Change' name='vertica.41997.566919652774' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41997.566919652774'>
            <column datatype='string' name='[Account Status]' role='dimension' type='nominal'>
            </column>
            <column caption='Budget Increases' datatype='integer' name='[Calculation_1300423121309548]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF [Calculation_2370422165736190] &gt; [Calculation_1990422165849268] THEN [Advertiser ID] END)' scope-isolation='false' />
            </column>
            <column caption='Market Filter' datatype='boolean' name='[Calculation_2900717133108268]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Segment Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Parameters].[Parameter 3] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Parameter 3] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Negative Budget Decreases' datatype='integer' name='[Calculation_3740624170316661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Calculation_3900423121554311]' scope-isolation='false' />
            </column>
            <column caption='Date Axis' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_5040423125454331]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Day&quot; THEN [Date]&#13;&#10;    WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;    WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Account Status]' derivation='None' name='[none:Account Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2900717133108268]' derivation='None' name='[none:Calculation_2900717133108268:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5040423125454331]' derivation='Day-Trunc' name='[tdy:Calculation_5040423125454331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1300423121309548]' derivation='User' name='[usr:Calculation_1300423121309548:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3740624170316661]' derivation='User' name='[usr:Calculation_3740624170316661:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41997.566919652774].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41997.566919652774].[usr:Calculation_3740624170316661:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41997.566919652774].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_3740624170316661:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41997.566919652774].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:Is Primary User:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Is Primary User:ok]' member='%null%' />
              <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:SSN Channel Type:nk]'>
            <groupfilter function='member' level='[none:SSN Channel Type:nk]' member='&quot;GDS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41997.566919652774].[none:Date:qk]</column>
            <column>[vertica.41997.566919652774].[:Measure Names]</column>
            <column>[vertica.41997.566919652774].[none:Is Primary User:ok]</column>
            <column>[vertica.41997.566919652774].[none:Calculation_2900717133108268:nk]</column>
            <column>[vertica.41997.566919652774].[none:Properties in MPM:nk]</column>
            <column>[vertica.41997.566919652774].[none:SSN Channel Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Account Status:nk]</column>
            <column>[vertica.41997.566919652774].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[vertica.41997.566919652774].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41997.566919652774].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[vertica.41997.566919652774].[Multiple Values]' scope='rows' value='Number of Hotels with Budget Changes' />
            <format attr='title' class='0' field='[vertica.41997.566919652774].[tdy:Calculation_5040423125454331:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41997.566919652774].[tdy:Calculation_5040423125454331:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41997.566919652774].[tdy:Calculation_5040423125454331:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41997.566919652774].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41997.566919652774].[Multiple Values]</rows>
        <cols>[vertica.41997.566919652774].[tdy:Calculation_5040423125454331:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hotel Budget Changes Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='SSN_Budget_Change' name='vertica.41997.566919652774' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41997.566919652774'>
            <column datatype='string' name='[Account Status]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Converted Old Amount' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_1990422165849268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF LOWER([Old Budget Type]) = &quot;daily&quot; THEN [Old Amount]*30 ELSE [Old Amount] END' scope-isolation='false' />
            </column>
            <column caption='Converted New Amount' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_2370422165736190]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF LOWER([New Budget Type]) = &quot;daily&quot; THEN [New Amount]*30 ELSE [New Amount] END' scope-isolation='false' />
            </column>
            <column caption='Market Filter' datatype='boolean' name='[Calculation_2900717133108268]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Segment Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Parameters].[Parameter 3] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Parameter 3] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Primary User Filter' datatype='string' name='[Calculation_9140326132430125]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]&#13;&#10;    THEN IF [Is Primary User] = 0 THEN &quot;Remove&quot; ELSE &quot;Keep&quot; END&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Net Change' datatype='real' default-format='C1033%' name='[Calculation_9690422170733428]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2370422165736190]) - SUM([Calculation_1990422165849268])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[New Amount]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[New Budget Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Old Amount]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Old Budget Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Email]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Account Status]' derivation='None' name='[none:Account Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser ID]' derivation='None' name='[none:Advertiser ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2900717133108268]' derivation='None' name='[none:Calculation_2900717133108268:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9140326132430125]' derivation='None' name='[none:Calculation_9140326132430125:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Name]' derivation='None' name='[none:Market Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Budget Type]' derivation='None' name='[none:New Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Old Budget Type]' derivation='None' name='[none:Old Budget Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Email]' derivation='None' name='[none:User Email:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1990422165849268]' derivation='Sum' name='[sum:Calculation_1990422165849268:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2370422165736190]' derivation='Sum' name='[sum:Calculation_2370422165736190:ok]' pivot='key' type='ordinal' />
            <column-instance column='[New Amount]' derivation='Sum' name='[sum:New Amount:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Old Amount]' derivation='Sum' name='[sum:Old Amount:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9690422170733428]' derivation='User' name='[usr:Calculation_9690422170733428:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9690422170733428]' derivation='User' name='[usr:Calculation_9690422170733428:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:Calculation_9140326132430125:nk]'>
            <groupfilter function='member' level='[none:Calculation_9140326132430125:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[vertica.41997.566919652774].[none:Date:ok]' direction='DESC' />
          <filter class='quantitative' column='[vertica.41997.566919652774].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:Market Name:nk]'>
            <groupfilter function='level-members' level='[none:Market Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:SSN Channel Type:nk]'>
            <groupfilter function='level-members' level='[none:SSN Channel Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41997.566919652774].[none:Date:qk]</column>
            <column>[vertica.41997.566919652774].[none:Calculation_9140326132430125:nk]</column>
            <column>[vertica.41997.566919652774].[none:Market Name:nk]</column>
            <column>[vertica.41997.566919652774].[none:Account Status:nk]</column>
            <column>[vertica.41997.566919652774].[none:Calculation_2900717133108268:nk]</column>
            <column>[vertica.41997.566919652774].[none:Properties in MPM:nk]</column>
            <column>[vertica.41997.566919652774].[none:SSN Channel Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='79' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41997.566919652774].[none:Advertiser Name:nk]' value='376' />
            <format attr='width' field='[vertica.41997.566919652774].[none:Market Name:nk]' value='248' />
            <format attr='width' field='[vertica.41997.566919652774].[none:User Email:nk]' value='192' />
            <format attr='height-header' value='26' />
            <format attr='width' field='[vertica.41997.566919652774].[sum:Calculation_2370422165736190:ok]' value='88' />
            <format attr='band-color' scope='rows' value='#ebf4ff' />
            <format attr='width' field='[vertica.41997.566919652774].[none:Date:ok]' value='100' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[vertica.41997.566919652774].[usr:Calculation_9690422170733428:qk]' num-steps='2' palette='tableau-red-black' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ebf4ff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='band-level' scope='rows' value='13' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[vertica.41997.566919652774].[none:Properties in MPM:nk]' value='MPM Filter'>
              <formatted-text>
                <run>MPM Filter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41997.566919652774].[usr:Calculation_9690422170733428:qk]' />
              <text column='[vertica.41997.566919652774].[usr:Calculation_9690422170733428:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Advertiser Name:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:Advertiser Name:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Change Type:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:Change Type:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:Date:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Market Name:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:Market Name:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Budget Type:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:New Budget Type:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Old Budget Type:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:Old Budget Type:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>User Email:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:User Email:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>User Name:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[none:User Name:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Converted Old Amount:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[sum:Calculation_1990422165849268:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Converted New Amount:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[sum:Calculation_2370422165736190:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>New Amount:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[sum:New Amount:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Old Amount:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[sum:Old Amount:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Net Change:&#9;</run>
                <run bold='true'>&lt;[vertica.41997.566919652774].[usr:Calculation_9690422170733428:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41997.566919652774].[none:Date:ok] / ([vertica.41997.566919652774].[none:Account Status:nk] / ([vertica.41997.566919652774].[none:SSN Channel Type:nk] / ([vertica.41997.566919652774].[none:Advertiser ID:ok] / ([vertica.41997.566919652774].[none:Advertiser Name:nk] / ([vertica.41997.566919652774].[none:Market Name:nk] / ([vertica.41997.566919652774].[none:User Name:nk] / ([vertica.41997.566919652774].[none:User Email:nk] / ([vertica.41997.566919652774].[none:Old Budget Type:nk] / ([vertica.41997.566919652774].[sum:Old Amount:ok] / ([vertica.41997.566919652774].[sum:Calculation_1990422165849268:ok] / ([vertica.41997.566919652774].[none:New Budget Type:nk] / ([vertica.41997.566919652774].[sum:New Amount:ok] / [vertica.41997.566919652774].[sum:Calculation_2370422165736190:ok])))))))))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='OTA Change Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Hotels with Budget Increases or Decreases on OTA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SSN_Budget_Change' name='vertica.41997.566919652774' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41997.566919652774'>
            <column datatype='string' name='[Account Status]' role='dimension' type='nominal'>
            </column>
            <column caption='Budget Increases' datatype='integer' name='[Calculation_1300423121309548]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF [Calculation_2370422165736190] &gt; [Calculation_1990422165849268] THEN [Advertiser ID] END)' scope-isolation='false' />
            </column>
            <column caption='Market Filter' datatype='boolean' name='[Calculation_2900717133108268]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Segment Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Parameters].[Parameter 3] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Parameter 3] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Negative Budget Decreases' datatype='integer' name='[Calculation_3740624170316661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Calculation_3900423121554311]' scope-isolation='false' />
            </column>
            <column caption='Date Axis' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_5040423125454331]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Day&quot; THEN [Date]&#13;&#10;    WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;    WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Account Status]' derivation='None' name='[none:Account Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2900717133108268]' derivation='None' name='[none:Calculation_2900717133108268:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5040423125454331]' derivation='Second-Trunc' name='[tsc:Calculation_5040423125454331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1300423121309548]' derivation='User' name='[usr:Calculation_1300423121309548:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3740624170316661]' derivation='User' name='[usr:Calculation_3740624170316661:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41997.566919652774].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41997.566919652774].[usr:Calculation_3740624170316661:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41997.566919652774].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_3740624170316661:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41997.566919652774].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:Is Primary User:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Is Primary User:ok]' member='%null%' />
              <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:SSN Channel Type:nk]'>
            <groupfilter function='member' level='[none:SSN Channel Type:nk]' member='&quot;OTA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41997.566919652774].[none:Date:qk]</column>
            <column>[vertica.41997.566919652774].[:Measure Names]</column>
            <column>[vertica.41997.566919652774].[none:Is Primary User:ok]</column>
            <column>[vertica.41997.566919652774].[none:Calculation_2900717133108268:nk]</column>
            <column>[vertica.41997.566919652774].[none:Properties in MPM:nk]</column>
            <column>[vertica.41997.566919652774].[none:SSN Channel Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Account Status:nk]</column>
            <column>[vertica.41997.566919652774].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[vertica.41997.566919652774].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41997.566919652774].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[vertica.41997.566919652774].[Multiple Values]' scope='rows' value='Number of Hotels with Budget Changes' />
            <format attr='title' class='0' field='[vertica.41997.566919652774].[tsc:Calculation_5040423125454331:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[vertica.41997.566919652774].[tsc:Calculation_5040423125454331:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[vertica.41997.566919652774].[tsc:Calculation_5040423125454331:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[vertica.41997.566919652774].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[vertica.41997.566919652774].[Multiple Values]</rows>
        <cols>[vertica.41997.566919652774].[tsc:Calculation_5040423125454331:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Budget Changes by Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SSN_Budget_Change' name='vertica.41997.566919652774' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='vertica.41997.566919652774'>
            <column datatype='string' name='[Account Status]' role='dimension' type='nominal'>
            </column>
            <column caption='Budget Increases' datatype='integer' name='[Calculation_1300423121309548]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF [Calculation_2370422165736190] &gt; [Calculation_1990422165849268] THEN [Advertiser ID] END)' scope-isolation='false' />
            </column>
            <column caption='Converted Old Amount' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_1990422165849268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF LOWER([Old Budget Type]) = &quot;daily&quot; THEN [Old Amount]*30 ELSE [Old Amount] END' scope-isolation='false' />
            </column>
            <column caption='Converted New Amount' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_2370422165736190]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF LOWER([New Budget Type]) = &quot;daily&quot; THEN [New Amount]*30 ELSE [New Amount] END' scope-isolation='false' />
            </column>
            <column caption='Market Filter' datatype='boolean' name='[Calculation_2900717133108268]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Market Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Segment Name] = [Parameters].[Parameter 3] OR &#13;&#10;[Parameters].[Parameter 3] = &quot;All Markets&quot;  OR&#13;&#10;([Parameters].[Parameter 3] = &quot;Global Top 50&quot; AND ([Segment Name] = &quot;Global Top 10&quot; OR [Segment Name] = &quot;Global 11 - 50&quot;))' scope-isolation='false' />
            </column>
            <column caption='Budget Decreases' datatype='integer' name='[Calculation_3900423121554311]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF [Calculation_2370422165736190] &lt; [Calculation_1990422165849268] THEN [Advertiser ID] END)' scope-isolation='false' />
            </column>
            <column caption='Date Axis' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_5040423125454331]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &quot;Day&quot; THEN [Date]&#13;&#10;    WHEN &quot;Week&quot; THEN DATETRUNC(&apos;week&apos;,[Date])&#13;&#10;    WHEN &quot;Month&quot; THEN DATETRUNC(&apos;month&apos;,[Date])&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Channel Type' datatype='string' name='[Calculation_5331009170939343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4] THEN [SSN Channel Type] + &quot; Total&quot;&#13;&#10;ELSE&#13;&#10;  IF [Channel Status] = &apos;Only Channel&apos; THEN &quot;Active on &quot; + [SSN Channel Type] + &quot; Only&quot;&#13;&#10;  ELSE &quot;Active on Both OTA and GDS&quot;&#13;&#10;  END&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Net Change' datatype='real' default-format='C1033%' name='[Calculation_9690422170733428]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2370422165736190]) - SUM([Calculation_1990422165849268])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Is Primary User]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Known Rotator Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Properties in MPM]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Distinct Hotel Properties]&#13;&#10;WHEN 1 THEN &quot;1&quot;&#13;&#10;WHEN 2 THEN &quot;2-3&quot;&#13;&#10;WHEN 3 THEN &quot;2-3&quot;&#13;&#10;WHEN 4 THEN &quot;4-6&quot;&#13;&#10;WHEN 5 THEN &quot;4-6&quot;&#13;&#10;WHEN 6 THEN &quot;4-6&quot;&#13;&#10;WHEN 7 THEN &quot;7-10&quot;&#13;&#10;WHEN 8 THEN &quot;7-10&quot;&#13;&#10;WHEN 9 THEN &quot;7-10&quot;&#13;&#10;WHEN 10 THEN &quot;7-10&quot;&#13;&#10;ELSE &quot;11+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[SSN Channel Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Strategic Account Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[User Name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Account Status]' derivation='None' name='[none:Account Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2900717133108268]' derivation='None' name='[none:Calculation_2900717133108268:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5040423125454331]' derivation='None' name='[none:Calculation_5040423125454331:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5331009170939343]' derivation='None' name='[none:Calculation_5331009170939343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Primary User]' derivation='None' name='[none:Is Primary User:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Known Rotator Type]' derivation='None' name='[none:Known Rotator Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Properties in MPM]' derivation='None' name='[none:Properties in MPM:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSN Channel Type]' derivation='None' name='[none:SSN Channel Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Strategic Account Type]' derivation='None' name='[none:Strategic Account Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User Name]' derivation='None' name='[none:User Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1990422165849268]' derivation='Sum' name='[sum:Calculation_1990422165849268:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2370422165736190]' derivation='Sum' name='[sum:Calculation_2370422165736190:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1300423121309548]' derivation='User' name='[usr:Calculation_1300423121309548:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3900423121554311]' derivation='User' name='[usr:Calculation_3900423121554311:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9690422170733428]' derivation='User' name='[usr:Calculation_9690422170733428:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41997.566919652774].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41997.566919652774].[usr:Calculation_3900423121554311:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41997.566919652774].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_3900423121554311:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_1300423121309548:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41997.566919652774].[sum:Calculation_1990422165849268:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41997.566919652774].[sum:Calculation_2370422165736190:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41997.566919652774].[usr:Calculation_9690422170733428:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[vertica.41997.566919652774].[none:Calculation_5040423125454331:ok]' direction='DESC' />
          <sort class='manual' column='[vertica.41997.566919652774].[none:Calculation_5331009170939343:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Active on GDS Only&quot;</bucket>
              <bucket>&quot;Active on OTA Only&quot;</bucket>
              <bucket>&quot;Active on Both OTA and GDS&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[vertica.41997.566919652774].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:Is Primary User:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Is Primary User:ok]' member='%null%' />
              <groupfilter function='member' level='[none:Is Primary User:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[vertica.41997.566919652774].[none:SSN Channel Type:nk]'>
            <groupfilter function='level-members' level='[none:SSN Channel Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41997.566919652774].[none:Date:qk]</column>
            <column>[vertica.41997.566919652774].[:Measure Names]</column>
            <column>[vertica.41997.566919652774].[none:Is Primary User:ok]</column>
            <column>[vertica.41997.566919652774].[none:Calculation_2900717133108268:nk]</column>
            <column>[vertica.41997.566919652774].[none:Properties in MPM:nk]</column>
            <column>[vertica.41997.566919652774].[none:Account Status:nk]</column>
            <column>[vertica.41997.566919652774].[none:SSN Channel Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Strategic Account Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:Known Rotator Type:nk]</column>
            <column>[vertica.41997.566919652774].[none:User Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41997.566919652774].[:Measure Names]' value='111' />
            <format attr='width' field='[vertica.41997.566919652774].[none:Calculation_5331009170939343:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41997.566919652774].[:Measure Names]' value='32' />
            <format attr='height' field='[vertica.41997.566919652774].[none:Calculation_5331009170939343:nk]' value='36' />
            <format attr='width' field='[vertica.41997.566919652774].[none:Calculation_5040423125454331:ok]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41997.566919652774].[:Measure Names]' value='center' />
            <format attr='text-align' field='[vertica.41997.566919652774].[none:Calculation_5331009170939343:nk]' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='-1.0e-08' field='[vertica.41997.566919652774].[usr:Calculation_9690422170733428:qk]' num-steps='2' palette='tableau-red-black' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[vertica.41997.566919652774].[none:Properties in MPM:nk]' value='MPM Filter'>
              <formatted-text>
                <run>MPM Filter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[vertica.41997.566919652774].[usr:Calculation_9690422170733428:qk]' />
              <text column='[vertica.41997.566919652774].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([vertica.41997.566919652774].[none:Calculation_5040423125454331:ok] / [vertica.41997.566919652774].[none:Account Status:nk])</rows>
        <cols total='true'>([vertica.41997.566919652774].[:Measure Names] / [vertica.41997.566919652774].[none:Calculation_5331009170939343:nk])</cols>
        <subtotals>
          <column>[vertica.41997.566919652774].[tdy:Calculation_5040423125454331:ok]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Change Graphs'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1400' minheight='600' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='26' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6668' id='25' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='93332' id='5' param='horz' type='layout-flow' w='100000' x='0' y='6668'>
              <zone h='93332' id='3' type='layout-basic' w='75857' x='0' y='6668'>
                <zone h='93332' id='1' name='OTA Change Count' show-title='true' w='37286' x='0' y='6668'>
                </zone>
                <zone h='93332' id='21' name='GDS Change Count' show-title='true' w='38571' x='37286' y='6668'>
                </zone>
              </zone>
              <zone fixed-size='338' h='93332' id='13' is-fixed='true' type='layout-basic' w='24143' x='75857' y='6668'>
                <zone h='93332' id='19' type='layout-basic' w='12714' x='75857' y='6668'>
                  <zone h='93332' id='4' param='vert' type='layout-flow' w='12714' x='75857' y='6668'>
                    <zone h='8334' id='15' param='[Parameters].[Parameter 3]' type='paramctrl' w='12714' x='75857' y='6668'>
                    </zone>
                    <zone h='8334' id='10' param='[Parameters].[Parameter 2]' type='paramctrl' w='12714' x='75857' y='15002'>
                    </zone>
                    <zone h='10834' id='32' name='GDS Change Count' param='[vertica.41997.566919652774].[none:Date:qk]' type='filter' w='12714' x='75857' y='23336'>
                    </zone>
                    <zone h='13707' id='27' name='OTA Change Count' param='[vertica.41997.566919652774].[none:Properties in MPM:nk]' type='filter' w='12714' x='75857' y='34170'>
                    </zone>
                    <zone h='13707' id='28' name='OTA Change Count' param='[vertica.41997.566919652774].[none:Account Status:nk]' type='filter' w='12714' x='75857' y='47877'>
                    </zone>
                    <zone h='13707' id='29' name='OTA Change Count' param='[vertica.41997.566919652774].[none:Strategic Account Type:nk]' type='filter' w='12714' x='75857' y='61584'>
                    </zone>
                    <zone h='13707' id='30' name='OTA Change Count' param='[vertica.41997.566919652774].[none:Known Rotator Type:nk]' type='filter' w='12714' x='75857' y='75291'>
                    </zone>
                    <zone h='11002' id='7' name='OTA Change Count' param='[vertica.41997.566919652774].[:Measure Names]' type='color' w='12714' x='75857' y='88998'>
                    </zone>
                  </zone>
                </zone>
                <zone h='93332' id='31' name='OTA Change Count' param='[vertica.41997.566919652774].[none:User Name:nk]' type='filter' w='11429' x='88571' y='6668'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Data'>
      <style>
      </style>
      <size maxheight='1000' maxwidth='1700' minheight='1000' minwidth='1700' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='76733' x='0' y='0'>
            <zone fixed-size='1185' h='100000' id='9' is-fixed='true' name='Table' show-title='true' w='76733' x='0' y='0'>
              <layout-cache fixed-size-h='13513' type-h='fixed' type-w='fixed' />
            </zone>
          </zone>
          <zone h='100000' id='25' type='layout-flow' w='10667' x='89333' y='0'>
            <zone h='100000' id='24' name='Table' param='[vertica.41997.566919652774].[none:User Name:nk]' type='filter' w='10667' x='89333' y='0'>
            </zone>
          </zone>
          <zone h='100000' id='4' param='vert' type='layout-flow' w='12600' x='76733' y='0'>
            <zone h='5400' id='15' param='[Parameters].[Parameter 3]' type='paramctrl' w='12600' x='76733' y='0'>
            </zone>
            <zone h='5000' id='10' param='[Parameters].[Parameter 2]' type='paramctrl' w='12600' x='76733' y='5400'>
            </zone>
            <zone fixed-size='67' h='7500' id='6' is-fixed='true' name='Table' param='[vertica.41997.566919652774].[none:Date:qk]' type='filter' w='12600' x='76733' y='10400'>
            </zone>
            <zone h='800' id='11' name='Table' param='[vertica.41997.566919652774].[none:Status:nk]' type='filter' w='12600' x='76733' y='17900'>
            </zone>
            <zone fixed-size='131' h='13900' id='16' is-fixed='true' name='Table' param='[vertica.41997.566919652774].[none:Properties in MPM:nk]' type='filter' w='12600' x='76733' y='18700'>
            </zone>
            <zone h='6300' id='20' param='[Parameters].[Parameter 4]' type='paramctrl' w='12600' x='76733' y='32600'>
            </zone>
            <zone h='11800' id='21' name='Table' param='[vertica.41997.566919652774].[none:Account Status:nk]' type='filter' w='12600' x='76733' y='38900'>
            </zone>
            <zone h='10000' id='22' name='Table' param='[vertica.41997.566919652774].[none:Strategic Account Type:nk]' type='filter' w='12600' x='76733' y='50700'>
            </zone>
            <zone h='10000' id='23' name='Table' param='[vertica.41997.566919652774].[none:Known Rotator Type:nk]' type='filter' w='12600' x='76733' y='60700'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Hotel Budget Changes'>
      <style>
      </style>
      <size maxheight='1500' maxwidth='2800' minheight='1500' minwidth='2800' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2668' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='97332' id='6' param='horz' type='layout-flow' w='100000' x='0' y='2668'>
              <zone h='97332' id='4' param='horz' type='layout-flow' w='99857' x='0' y='2668'>
                <zone h='97332' id='2' type='layout-basic' w='99857' x='0' y='2668'>
                  <zone h='97332' id='1' name='Hotel Budget Changes Data' w='82593' x='17264' y='2668'>
                  </zone>
                  <zone fixed-size='328' h='97332' id='5' is-fixed='true' param='vert' type='layout-flow' w='8286' x='0' y='2668'>
                    <zone h='3334' id='15' param='[Parameters].[Parameter 3]' type='paramctrl' w='8286' x='0' y='2668'>
                    </zone>
                    <zone h='5467' id='17' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:SSN Channel Type:nk]' type='filter' w='8286' x='0' y='6002'>
                    </zone>
                    <zone h='4134' id='8' param='[Parameters].[Parameter 1]' type='paramctrl' w='8286' x='0' y='11469'>
                      <formatted-text>
                        <run>Only Show One &#10;Name for Each Hotel</run>
                      </formatted-text>
                    </zone>
                    <zone h='534' id='14' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Status:nk]' type='filter' w='8286' x='0' y='15603'>
                    </zone>
                    <zone h='4334' id='7' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Date:qk]' type='filter' w='8286' x='0' y='16137'>
                    </zone>
                    <zone h='7867' id='18' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Account Status:nk]' type='filter' w='8286' x='0' y='20471'>
                    </zone>
                    <zone h='6667' id='19' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Strategic Account Type:nk]' type='filter' w='8286' x='0' y='28338'>
                    </zone>
                    <zone h='6667' id='20' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Known Rotator Type:nk]' type='filter' w='8286' x='0' y='35005'>
                    </zone>
                    <zone h='9067' id='16' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Properties in MPM:nk]' type='filter' w='8286' x='0' y='41672'>
                    </zone>
                  </zone>
                  <zone h='97332' id='21' name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:User Name:nk]' type='filter' w='8978' x='8286' y='2668'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='1400' id='13' type='text' w='3607' x='81071' y='3133'>
          <formatted-text>
            <run bold='true'>Net Change</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hotel Budget Changes Data'>
      <cards>
        <edge name='left'>
          <strip size='232'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41359.540797337962].[:Measure Names]</field>
          <field>[mysql.41359.540797337962].[none:Account Status:nk]</field>
          <field>[mysql.41359.540797337962].[none:Advertiser ID:ok]</field>
          <field>[mysql.41359.540797337962].[none:Advertiser Name:nk]</field>
          <field>[mysql.41359.540797337962].[none:Calculation_2900717133108268:nk]</field>
          <field>[mysql.41359.540797337962].[none:Calculation_9140326132430125:nk]</field>
          <field>[mysql.41359.540797337962].[none:Change Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Date:qk]</field>
          <field>[mysql.41359.540797337962].[none:Known Rotator Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Market Name:nk]</field>
          <field>[mysql.41359.540797337962].[none:New Bid Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:New Budget Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Old Bid Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Old Budget Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Properties in MPM:nk]</field>
          <field>[mysql.41359.540797337962].[none:SSN Channel Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Status:nk]</field>
          <field>[mysql.41359.540797337962].[none:Strategic Account Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:User Email:nk]</field>
          <field>[mysql.41359.540797337962].[none:User Name:nk]</field>
          <field>[mysql.41359.540797337962].[yr:Calculation_2940320105111133:ok]</field>
          <field>[mysql.41359.540797337962].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Hotel Budget Changes'>
      <active id='8' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Hotel Budget Changes Data' param='[vertica.41997.566919652774].[none:Date:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41359.540797337962].[:Measure Names]</field>
          <field>[mysql.41359.540797337962].[none:Account Status:nk]</field>
          <field>[mysql.41359.540797337962].[none:Calculation_5331009170939343:nk]</field>
          <field>[mysql.41359.540797337962].[none:Change Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Is Primary User:ok]</field>
          <field>[mysql.41359.540797337962].[none:SSN Channel Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Status:nk]</field>
          <field>[mysql.41359.540797337962].[twk:Date:ok]</field>
          <field>[mysql.41359.540797337962].[yr:Calculation_5040423125454331:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Data'>
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone name='Table' param='[vertica.41997.566919652774].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='list' name='' param='[Parameters].[Parameter 4]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='OTA Change Count'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41359.540797337962].[:Measure Names]</field>
          <field>[mysql.41359.540797337962].[none:Advertiser ID:ok]</field>
          <field>[mysql.41359.540797337962].[none:Date:qk]</field>
          <field>[mysql.41359.540797337962].[none:Is Primary User:ok]</field>
          <field>[mysql.41359.540797337962].[none:SSN Channel Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Status:nk]</field>
          <field>[mysql.41359.540797337962].[yr:Calculation_5040423125454331:ok]</field>
          <field>[mysql.41359.540797337962].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[vertica.41997.566919652774].[Multiple Values]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='GDS Change Count'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41359.540797337962].[:Measure Names]</field>
          <field>[mysql.41359.540797337962].[none:Advertiser ID:ok]</field>
          <field>[mysql.41359.540797337962].[none:Date:qk]</field>
          <field>[mysql.41359.540797337962].[none:Is Primary User:ok]</field>
          <field>[mysql.41359.540797337962].[none:SSN Channel Type:nk]</field>
          <field>[mysql.41359.540797337962].[none:Status:nk]</field>
          <field>[mysql.41359.540797337962].[yr:Calculation_5040423125454331:ok]</field>
          <field>[mysql.41359.540797337962].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Change Graphs'>
      <zones>
        <zone name='OTA Change Count'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[vertica.41997.566919652774].[Multiple Values]</axis>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
        <zone name='GDS Change Count'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone name='GDS Change Count' param='[vertica.41997.566919652774].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='OTA Change Count' pane-specification-id='7' param='[vertica.41997.566919652774].[:Measure Names]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hotel Budget Changes Data' width='192'>
      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
      yMpkLhZ+5PGnEunkPdnfz3D8jvGRZL4ZWVtcmLki6yiZKXAsY/H2EpocCa+pEIRmziZyCm92
      Hjt6sFIoVupyNZdIFypv26IAgMliLucymUxVbDZ93QM2Uqu2NlonupKN845OiiAn9u1rZCKq
      pjsdTtLs3tnnKdbl27e1e7toXbJ19KeXL128cq3SArGVK/FoonNocO38+aszy3VR9A9NJCNx
      s1a5NDPfUCRgoFg0ma81/R1+mgQdfUN7dozm8ylV0SJrqw1RpUmCo6lqtUqyrF6MidhqNvP1
      WnlpeTmXjqktRFstWqu6FIyoOlyYn4WAGRnoqIoqC+G1K2cuz4ewWo9HInVshrB+5fTJYKIk
      16oWn79ezCWSpVazZvP29drJar0mbnSS7pqO3v56pdw7NDB/9s2ri8vbInqjSLXifCB1+OC+
      D8UujkbCPf1Dd50WjY0Lp89OHT6+7usTlUt1t+eWpOay232f0jw2bwBtp3N8LNi8AdSmLaJZ
      jhXFlt1hJwiSfTdL913RNUXREUAGyzCKBkkAOY7TDChLLYfLzdC3W75VuSXKqsvpaKvXdt4F
      wJBlb3WPVFmmWVbV9PZGO4CgCjHHUJqqkjSrSA1EMDbr2/Ym67p+y0rdplYpMYLVLFy/hKZp
      DEPpOmbZTeT3KrJMUxTJsLfmRG9OApfPpBXQFI1SLnRg52ThbtI5ivnsqZNv1BotqNH+wa7I
      WrB7oJ8haFKXHv3cV1z07Zzocy/9IlTSGZdnwMUoOudzEMGc2KjlfYIZm+12iyA1JJNAC+7e
      1upFxdW3Eo2NdHo5E0c0yy3BZ6KMq28+f/iL/6G0+iZtsnudzkZL7+3tiK8tsw5/LLLY4R/t
      8tslBdcaudHxA7smBgAA3/3utxkCDkwc0jAe7rIuLWY91kYow/p7HKCeMXeNCgyKhpOf/crv
      2jaWFX4v+Pm//Hez2Qe8dkqG3oG+zV4ky2S1io1GR0/f6OhwNl8oJmNww9+YlWycd3TRJDm5
      b69cK9nNjKIYnNnWOzzqum1GPQCAFUwHHnzEzXO1crZVK4Zi2XA0wZB4eS2UStWMVr5Yk0Jr
      a41my9Y5lE5Gvax86dpcQ9QIrCeTiXyh3tnRwbYPRcVUsVjIJyMzl85HqzoiaBPRSqcyM8vB
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hotel Budget Changes' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table' width='191'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Data' width='192'>
      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
      yrvq1Wg1K16vTqNp+WimkDh95kKJYS9fvKgmlaFsWVbdePeDk1qjjZTw3kBaoyY/PfrTcz85
      e6bw2uu/UmpNakq56l3VarQrc065ybh5C+i2y1dd109NLQz3O8rZ9XiJoOXiuTmnyfTbr+ze
      dm2z7t9nYaveCFHlV0WsUVpjVMpCZUNnGqEp59Tkr2IeZ1zqYJjM4V17uru7Nq/lE+4C2ZeL
      Omk5JUl7Xv1gfmx8l4SmmLj3H85NUkzxP1zThkde7O3ubvnoyxduPPjEsXMfnqbl1NzM9WgZ
      Db7wVTlNzUxNxmKeTJYKZGPHj07cafQtIilV47jg7PlXXwmmK0UzH3GFdd/96UiDn22H3Xxt
      sfjjH30v5J4juh9MxtMTI46xsZHGVjfn/g3I4bD4w/kOGYNEGgG/oVLpEUL27h6mmG+32QPx
      HEn1d1qtt11LGAbohUlN94gMVVmx4KVvdMTzXI+926QUD7ESCyW0Go2qns67MfrQkQfOfXh6
      z/7D5WRUKBb01et1hHrs3UKmaGy35UIph3Sgx2773Ic/MjZm1ihSSKtXEYXkeucwJW/ow3br
      8dMjg105HbP3gYP+SJYY6HXYzI2vbgo8jd/m0fA0HvxOg4AAlo+vgbbxTq5Py+W27dfTtms0
      5lyc5blcrmWvhen1+nqVvT4zj0rptoFdCzNOvUkTCacGR3t8rgXa3F5Fohq3cXDf3pkbzvG9
      uzYfaGZmZnx8fCPpDxblA11bvxe4wYfEZROFOKOkBKlQjmBSyuF9Sk2jtyvU+XLgg6u2Jx5O
      Xb5A6KyVImPdN3RvRnPxYMJfsu7p9H9wlbYb6mJKpVY1/llko/5yXYuyoapQUlgNtz95pInT
      Tseirkj7xMCnRzc49zN88iyMZdjgmk+q5qZ+/IuvfPPF+ZOvekpGpFT02wynbrgsenW2EK9n
      Iuddqc0BMWnvf77ypsvrlaS9rqJ5UJFxpsqO/tE/ev7zb4DamjrB5FzhEsXwZZ6XFcqXF5VP
      jTe4VkDIpaLiRp6tVNLBf51ue3QUoaF7M5rNM8X1IN/GFwOxAosoIqI8ONb4aN///Ldo5Blx
      LcGvzpVrpmK+8aUoMe2qlKp8bHVro+/kk4CkCnJ4eLCQWjc+tyfuXbTvfQx5wwNd5qXZ+UPj
      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
      6tq1n797fdZ5441f/iKWLuLPxqG36PPJfDCWRGy5KqqGfc1cydaRWsHHskxVVP3ooznElpsa
      rahzPaN7tzba711zLbv5YrxSrqyl2UIq2tTo+ZvXAuvJbIlN++Yr5Uq24VexVXJJVUIWM7Fb
      owM5LhuPNDX6Tj59EV27ef0qrTGoNOrllUCH3SquVaPhYFvfLnm1UJVpvK75NpspEIrRNElp
      zCYd7r1Im92r7eC6y7XYZmvPp2I6kzmSyDk62xofnc/nKaU0lyttYXSdryyvRSwm3Ra3g7ly
      KLmhEHPN7kSX8ykWEfFUwaSjY7GYjlbUZBrElVq2E33//F6Y6u68G+19OxpzLs7yXC7ncDi2
      PPqW++umerDjwK82AywQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIB
      ASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDA
      AgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQ
      EMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEB
      LBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMAC
      AQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQ
      wAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEs
      EBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIB
      ASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDAAgEBLBAQwAIBASwQEMACAQEsEBDA
      8r/FjIngpVrVXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='OTA Change Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDS Change Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Change Graphs' width='192'>
      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
      raFZLiZ3AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
