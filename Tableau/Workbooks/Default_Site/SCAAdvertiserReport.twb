<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
<<<<<<< HEAD
  <!-- build 8100.14.0914.1345                -->
  <repository-location id='SCAAdvertiserReport' path='/workbooks' revision='1.9' />
=======
  <!-- build 8100.14.0408.1805                -->
  <repository-location id='SCAAdvertiserReport' path='/workbooks' revision='1.8' />
>>>>>>> origin/master
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column datatype='string' name='[Advertiser Segment or Advertiser]' param-domain-type='list' role='measure' type='nominal' value='&quot;Advertiser Segment&quot;'>
        <calculation class='tableau' formula='&quot;Advertiser Segment&quot;' />
        <members>
          <member value='&quot;Advertiser&quot;' />
          <member value='&quot;Advertiser Segment&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Graph Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Impressions&quot;'>
        <calculation class='tableau' formula='&quot;Impressions&quot;' />
        <members>
          <member value='&quot;Cost&quot;' />
          <member value='&quot;Average Position&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;ROI&quot;' />
          <member value='&quot;CVR&quot;' />
          <member value='&quot;CPA&quot;' />
          <member value='&quot;CTR&quot;' />
          <member value='&quot;Clicks&quot;' />
          <member value='&quot;Impressions&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Graph Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Clicks&quot;'>
        <calculation class='tableau' formula='&quot;Clicks&quot;' />
        <members>
          <member value='&quot;Cost&quot;' />
          <member value='&quot;Average Position&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;ROI&quot;' />
          <member value='&quot;CVR&quot;' />
          <member value='&quot;CPA&quot;' />
          <member value='&quot;CTR&quot;' />
          <member value='&quot;Clicks&quot;' />
          <member value='&quot;Impressions&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Graph Type]' param-domain-type='list' role='measure' type='nominal' value='&quot;Year over Year&quot;'>
        <calculation class='tableau' formula='&quot;Year over Year&quot;' />
        <members>
          <member value='&quot;All Time&quot;' />
          <member value='&quot;Year over Year&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Grouping Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Product Category&quot;'>
        <calculation class='tableau' formula='&quot;Product Category&quot;' />
        <aliases>
          <alias key='&quot;Campaign + Ad Group&quot;' value='Campaign + Ad Group' />
        </aliases>
        <members>
          <member value='&quot;All&quot;' />
          <member value='&quot;Advertiser Segment&quot;' />
          <member value='&quot;Site&quot;' />
          <member value='&quot;Campaign&quot;' />
          <member alias='Campaign + Ad Group' value='&quot;Campaign + Ad Group&quot;' />
          <member value='&quot;Total Network&quot;' />
          <member value='&quot;Product Category&quot;' />
          <member value='&quot;Region&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Grouping Sort - Core Metrics]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cost&quot;'>
        <calculation class='tableau' formula='&quot;Cost&quot;' />
        <members>
          <member value='&quot;Cost&quot;' />
          <member value='&quot;Impressions&quot;' />
          <member value='&quot;Clicks&quot;' />
          <member value='&quot;Revenue&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Grouping Sort - ROI]' param-domain-type='list' role='measure' type='nominal' value='&quot;CPA&quot;'>
        <calculation class='tableau' formula='&quot;CPA&quot;' />
        <members>
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;ROI&quot;' />
          <member value='&quot;CVR&quot;' />
          <member value='&quot;CPA&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Grouping Sort - Table]' param-domain-type='list' role='measure' type='nominal' value='&quot;Impressions&quot;'>
        <calculation class='tableau' formula='&quot;Impressions&quot;' />
        <members>
          <member value='&quot;Impressions&quot;' />
          <member value='&quot;Clicks&quot;' />
          <member value='&quot;Cost&quot;' />
          <member value='&quot;Click Conversions&quot;' />
          <member value='&quot;Click Revenue&quot;' />
          <member value='&quot;Average Position&quot;' />
          <member value='&quot;CTR&quot;' />
          <member value='&quot;Click CVR&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;Click CPA&quot;' />
          <member value='&quot;Click ROI&quot;' />
          <member value='&quot;Click AOV&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Grouping Sort - Topline]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cost&quot;'>
        <calculation class='tableau' formula='&quot;Cost&quot;' />
        <members>
          <member value='&quot;Cost&quot;' />
          <member value='&quot;Average Position&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;CTR&quot;' />
        </members>
      </column>
      <column caption='Region' datatype='string' name='[Is Leap Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Europe&quot;' />
          <member value='&quot;US&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
        <calculation class='tableau' formula='&quot;True&quot;' />
        <members>
          <member value='&quot;True&quot;' />
          <member value='&quot;False&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Product Category]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hotels&quot;'>
        <calculation class='tableau' formula='&quot;Hotels&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Flights&quot;' />
          <member value='&quot;Hotels&quot;' />
          <member value='&quot;Meta&quot;' />
        </members>
      </column>
      <column datatype='date' name='[Reference Day]' param-domain-type='range' role='measure' type='quantitative' value='#2012-11-30#'>
        <calculation class='tableau' formula='#2012-11-30#' />
        <range min='#2011-05-22#' />
      </column>
      <column caption='Aggregated By' datatype='string' name='[Time Frame]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
        <calculation class='tableau' formula='&quot;Week&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Time Span]' param-domain-type='list' role='measure' type='nominal' value='&quot;52 Weeks&quot;'>
        <calculation class='tableau' formula='&quot;52 Weeks&quot;' />
        <members>
          <member value='&quot;52 Weeks&quot;' />
          <member value='&quot;All Time&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Week Start]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sunday&quot;'>
        <calculation class='tableau' formula='&quot;Sunday&quot;' />
        <members>
          <member value='&quot;Sunday&quot;' />
          <member value='&quot;Monday&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
        <calculation class='tableau' formula='&quot;Yesterday&quot;' />
        <members>
          <member value='&quot;Yesterday&quot;' />
          <member value='&quot;Reference Day&quot;' />
        </members>
      </column>
    </datasource>
    <datasource inline='true' name='cvr_data' version='8.2'>
<<<<<<< HEAD
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
=======
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-with-failover.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
>>>>>>> origin/master
        <relation name='TableauSQL' type='text'>select &#13;&#10;&#9;fpvs.date_in_et as Date,&#13;&#10;&#9;sites.display_name as &quot;Site&quot;,&#13;&#10;&#9;adv.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;adv.display_format as &quot;Display Type&quot;,&#13;&#10;&#9;fpvs.&quot;Flight Path Visits&quot;,&#13;&#10;&#9;convs.conversions AS &quot;Publisher Conversions&quot;,&#13;&#10;&#9;adv.clicks AS Clicks,&#13;&#10;&#9;adv.click_conversions AS &quot;Advertiser Conversions&quot;&#13;&#10;from&#13;&#10;-----------flight Path&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      date_in_et,&#13;&#10;      site_id,&#13;&#10;      sum(session_count) as &quot;Flight Path Visits&quot;&#13;&#10;    from intent_media_production.air_ct_flight_path_visit_aggregations&#13;&#10;    where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      date_in_et,&#13;&#10;      site_id&#13;&#10;&#9;) as fpvs&#13;&#10;&#13;&#10;join&#13;&#10;----------------Publisher Conversions&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      aggregation_level_date_in_et as date_in_et,&#13;&#10;      site_id,&#13;&#10;      sum(bookings_count) as conversions&#13;&#10;    from intent_media_production.air_ct_transaction_performance_aggregations&#13;&#10;    where segmentation_type IS NULL&#13;&#10;      and pure_group_type IS NULL&#13;&#10;      and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      aggregation_level_date_in_et,&#13;&#10;      site_id&#13;&#10;&#9;) as convs&#13;&#10;on fpvs.date_in_et = convs.date_in_et and fpvs.site_id = convs.site_id&#13;&#10;&#13;&#10;join&#13;&#10;-------------Advertiser Conversions&#13;&#10;&#9;(&#13;&#10;    select&#13;&#10;      apra.date_in_et,&#13;&#10;      apra.advertiser_id,&#13;&#10;      (CASE apra.advertiser_id&#13;&#10;        WHEN 59777 THEN 6&#13;&#10;        WHEN 61224 THEN 2&#13;&#10;      END) as site_id,&#13;&#10;      c.precheck_eligibility_type,&#13;&#10;&#9;  c.display_format,&#13;&#10;      sum(apra.click_count) as clicks,&#13;&#10;      sum(apra.click_conversion_count) as click_conversions&#13;&#10;    from intent_media_production.air_ct_advertiser_performance_report_aggregations apra&#13;&#10;    left join intent_media_production.campaigns c on apra.advertiser_id = c.advertiser_id&#13;&#10;    where apra.advertiser_id IN (59777, 61224)&#13;&#10;      and apra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      apra.date_in_et,&#13;&#10;      apra.advertiser_id,&#13;&#10;      c.precheck_eligibility_type,&#13;&#10;&#9;  c.display_format&#13;&#10;&#9;) as adv&#13;&#10;on fpvs.date_in_et = adv.date_in_et and fpvs.site_id = adv.site_id&#13;&#10;&#13;&#10;join intent_media_production.sites on fpvs.site_id = sites.id</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Conversions per Click]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Advertiser Conversions])/sum([Clicks])' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Conversions per Flight Path Visit]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Publisher Conversions])/sum([Flight Path Visits])' />
      </column>
      <column datatype='string' name='[Date Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] &gt;= TODAY() THEN &quot;Remove&quot; &#13;&#10;END' />
      </column>
      <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;DESKTOP&quot;' value='Desktop' />
          <alias key='&quot;MOBILE&quot;' value='Mobile' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ratio - CVR/CVpFPV]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Conversions per Click]/[Conversions per Flight Path Visit]' />
      </column>
      <extract count='-1' enabled='true' units='records'>
<<<<<<< HEAD
        <connection class='dataengine' dbname='C:\Users\rommy.ghaly\Documents\My Tableau Repository\Datasources\aft_advertiser_report__cvr_data.tde' schema='Extract' tablename='Extract' update-time='3/3/2015 3:55:50 PM'>
=======
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\aft_advertiser_report__cvr_data.tde' schema='Extract' tablename='Extract' update-time='3/25/2015 5:24:14 AM'>
>>>>>>> origin/master
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6912' timestamp-start='2015-03-25 05:24:13.918000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500611' measure-ordering='alphabetic' measure-percentage='0.257631' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='advertiser_data' version='8.2'>
<<<<<<< HEAD
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>/* SCA Flights by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select distinct&#13;&#10;    date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;&#13;&#10;  from intent_media_production.air_ct_advertiser_performance_report_aggregations, intent_media_production.entities&#13;&#10;  where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  and entities.id in (select distinct advertiser_id from intent_media_production.air_ct_advertiser_performance_report_aggregations)&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;    campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;&#9;sites.display_name as Site,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end) as Region,&#13;&#10;    cast(NULL as float) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(NULL as float) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    cast(NULL as float) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  left join intent_media_production.ad_units on acapra.ad_unit_id = ad_units.id&#13;&#10;  left join intent_media_production.sites on ad_units.site_id = sites.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    sites.display_name,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end)&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;/* SCA Flights not by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select distinct&#13;&#10;    date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;&#13;&#10;  from intent_media_production.air_ct_advertiser_performance_report_aggregations, intent_media_production.entities&#13;&#10;  where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  and entities.id in (select distinct advertiser_id from intent_media_production.air_ct_advertiser_performance_report_aggregations)&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    &apos;Total&apos; as Site,&#13;&#10;    &apos;Total&apos; as Region,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot; as &quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot; as &quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot; as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  right join&#13;&#10;    (&#13;&#10;      select&#13;&#10;        aggregation_level_date_in_et date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id,&#13;&#10;        sum(acisra.filtered_ad_count + acisra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;        sum(acisra.impression_count) as &quot;Non-Learning Impressions&quot;,&#13;&#10;        sum(acisra.filtered_ad_count) as &quot;Filtered Ad Count&quot;&#13;&#10;      from intent_media_production.air_ct_impression_share_report_aggregations acisra&#13;&#10;      group by&#13;&#10;        aggregation_level_date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id&#13;&#10;    ) performance&#13;&#10;  on acapra.date_in_et = performance.date_in_et&#13;&#10;    and acapra.advertiser_id = performance.advertiser_id&#13;&#10;    and acapra.ad_group_id = performance.ad_group_id&#13;&#10;    and acapra.campaign_id = performance.campaign_id&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot;&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;/* SCA Hotels by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select distinct&#13;&#10;    date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;&#13;&#10;  from intent_media_production.hotel_ct_advertiser_performance_report_aggregations, intent_media_production.entities&#13;&#10;  where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  and entities.id in (select distinct advertiser_id from intent_media_production.hotel_ct_advertiser_performance_report_aggregations)&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;  campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    sites.display_name as Site,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end) as Region,&#13;&#10;    cast(NULL as float) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(NULL as float) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    cast(NULL as float) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  left join intent_media_production.ad_units on acapra.ad_unit_id = ad_units.id&#13;&#10;  left join intent_media_production.sites on ad_units.site_id = sites.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    sites.display_name,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end)&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;/* SCA Hotels not by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select distinct&#13;&#10;    date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;&#13;&#10;  from intent_media_production.hotel_ct_advertiser_performance_report_aggregations, intent_media_production.entities&#13;&#10;  where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  and entities.id in (select distinct advertiser_id from intent_media_production.hotel_ct_advertiser_performance_report_aggregations)&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;  campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    &apos;Total&apos; as Site,&#13;&#10;    &apos;Total&apos; as Region,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot; as &quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot; as &quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot; as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  right join&#13;&#10;    (&#13;&#10;      select&#13;&#10;        aggregation_level_date_in_et date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id,&#13;&#10;        sum(acisra.filtered_ad_count+acisra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;        sum(acisra.impression_count) as &quot;Non-Learning Impressions&quot;,&#13;&#10;        sum(acisra.filtered_ad_count) as &quot;Filtered Ad Count&quot;&#13;&#10;      from intent_media_production.hotel_ct_impression_share_report_aggregations acisra&#13;&#10;      group by&#13;&#10;        aggregation_level_date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id&#13;&#10;    ) performance&#13;&#10;  on acapra.date_in_et = performance.date_in_et&#13;&#10;    and acapra.advertiser_id = performance.advertiser_id&#13;&#10;    and acapra.ad_group_id = performance.ad_group_id&#13;&#10;    and acapra.campaign_id = performance.campaign_id&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;  campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot;&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;/* PPA Hotels by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select distinct&#13;&#10;    date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;&#13;&#10;  from intent_media_production.hotel_meta_advertiser_performance_aggregations, intent_media_production.entities&#13;&#10;  where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  and entities.id in (select distinct advertiser_id from intent_media_production.hotel_meta_advertiser_performance_aggregations)&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;    campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    sites.display_name as Site,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end) as Region,&#13;&#10;    sum(acapra.filtered_ad_count + acapra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(null as int) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    sum(acapra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    cast(null as int) as &quot;Click Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;View Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;Click Revenue&quot;,&#13;&#10;    cast(null as int) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_meta_advertiser_performance_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  left join intent_media_production.ad_units on acapra.ad_unit_id = ad_units.id&#13;&#10;  left join intent_media_production.sites on ad_units.site_id = sites.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;    campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    sites.display_name,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end)&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union&#13;&#10;&#13;&#10;&#13;&#10;/* PPA Hotels not by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select distinct&#13;&#10;    date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;&#13;&#10;  from intent_media_production.hotel_meta_advertiser_performance_aggregations, intent_media_production.entities&#13;&#10;  where date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  and entities.id in (select distinct advertiser_id from intent_media_production.hotel_meta_advertiser_performance_aggregations)&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;    campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    &apos;Total&apos; as Site,&#13;&#10;    &apos;Total&apos; as Region,&#13;&#10;    sum(acapra.filtered_ad_count + acapra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(null as int) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    sum(acapra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    cast(null as int) as &quot;Click Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;View Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;Click Revenue&quot;,&#13;&#10;    cast(null as int) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_meta_advertiser_performance_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;    campaigns.display_format,&#13;&#10;    acapra.date_in_et&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id</relation>
=======
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-with-failover.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>/* SCA Flights by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;    date.date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select date(ts) as date_in_et&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select &apos;2011-05-18 00:00:00&apos;::timestamp t from dual&#13;&#10;      union&#13;&#10;      select current_timestamp at timezone &apos;America/New_York&apos;::timestamp t from dual&#13;&#10;    ) q1&#13;&#10;    timeseries ts as &apos;1 day&apos; over (order by t)&#13;&#10;  ) date,&#13;&#10;  (&#13;&#10;    select distinct e.id, e.name&#13;&#10;    from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;    inner join intent_media_production.entities e&#13;&#10;    on acapra.advertiser_id = e.id&#13;&#10;  ) entities&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;    campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;&#9;  sites.display_name as Site,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end) as Region,&#13;&#10;    cast(NULL as float) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(NULL as float) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    cast(NULL as float) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  left join intent_media_production.ad_units on acapra.ad_unit_id = ad_units.id&#13;&#10;  left join intent_media_production.sites on ad_units.site_id = sites.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;  campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    sites.display_name,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end)&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union all&#13;&#10;&#13;&#10;&#13;&#10;/* SCA Flights not by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;    date.date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select date(ts) as date_in_et&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select &apos;2011-05-18 00:00:00&apos;::timestamp t from dual&#13;&#10;      union&#13;&#10;      select current_timestamp at timezone &apos;America/New_York&apos;::timestamp t from dual&#13;&#10;    ) q1&#13;&#10;    timeseries ts as &apos;1 day&apos; over (order by t)&#13;&#10;  ) date,&#13;&#10;  (&#13;&#10;    select distinct e.id, e.name&#13;&#10;    from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;    inner join intent_media_production.entities e&#13;&#10;    on acapra.advertiser_id = e.id&#13;&#10;  ) entities&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Flights&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    &apos;Total&apos; as Site,&#13;&#10;    &apos;Total&apos; as Region,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot; as &quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot; as &quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot; as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  right join&#13;&#10;    (&#13;&#10;      select&#13;&#10;        aggregation_level_date_in_et date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id,&#13;&#10;        sum(acisra.filtered_ad_count + acisra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;        sum(acisra.impression_count) as &quot;Non-Learning Impressions&quot;,&#13;&#10;        sum(acisra.filtered_ad_count) as &quot;Filtered Ad Count&quot;&#13;&#10;      from intent_media_production.air_ct_impression_share_report_aggregations acisra&#13;&#10;      group by&#13;&#10;        aggregation_level_date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id&#13;&#10;    ) performance&#13;&#10;  on acapra.date_in_et = performance.date_in_et&#13;&#10;    and acapra.advertiser_id = performance.advertiser_id&#13;&#10;    and acapra.ad_group_id = performance.ad_group_id&#13;&#10;    and acapra.campaign_id = performance.campaign_id&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot;&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union all&#13;&#10;&#13;&#10;&#13;&#10;/* SCA Hotels by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;    date.date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select date(ts) as date_in_et&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select &apos;2012-12-03 00:00:00&apos;::timestamp t from dual&#13;&#10;      union&#13;&#10;      select current_timestamp at timezone &apos;America/New_York&apos;::timestamp t from dual&#13;&#10;    ) q1&#13;&#10;    timeseries ts as &apos;1 day&apos; over (order by t)&#13;&#10;  ) date,&#13;&#10;  (&#13;&#10;    select distinct e.id, e.name&#13;&#10;    from intent_media_production.hotel_ct_advertiser_performance_report_aggregations hcapra&#13;&#10;    inner join intent_media_production.entities e&#13;&#10;    on hcapra.advertiser_id = e.id&#13;&#10;  ) entities&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;  campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    sites.display_name as Site,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end) as Region,&#13;&#10;    cast(NULL as float) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(NULL as float) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    cast(NULL as float) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  left join intent_media_production.ad_units on acapra.ad_unit_id = ad_units.id&#13;&#10;  left join intent_media_production.sites on ad_units.site_id = sites.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    sites.display_name,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end)&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union all&#13;&#10;&#13;&#10;&#13;&#10;/* SCA Hotels not by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;    date.date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select date(ts) as date_in_et&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select &apos;2012-12-03 00:00:00&apos;::timestamp t from dual&#13;&#10;      union&#13;&#10;      select current_timestamp at timezone &apos;America/New_York&apos;::timestamp t from dual&#13;&#10;    ) q1&#13;&#10;    timeseries ts as &apos;1 day&apos; over (order by t)&#13;&#10;  ) date,&#13;&#10;  (&#13;&#10;    select distinct e.id, e.name&#13;&#10;    from intent_media_production.hotel_ct_advertiser_performance_report_aggregations hcapra&#13;&#10;    inner join intent_media_production.entities e&#13;&#10;    on hcapra.advertiser_id = e.id&#13;&#10;  ) entities&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Hotels&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;  campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    &apos;Total&apos; as Site,&#13;&#10;    &apos;Total&apos; as Region,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot; as &quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot; as &quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot; as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;    sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;    sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;    sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_ct_advertiser_performance_report_aggregations acapra&#13;&#10;  right join&#13;&#10;    (&#13;&#10;      select&#13;&#10;        aggregation_level_date_in_et date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id,&#13;&#10;        sum(acisra.filtered_ad_count+acisra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;        sum(acisra.impression_count) as &quot;Non-Learning Impressions&quot;,&#13;&#10;        sum(acisra.filtered_ad_count) as &quot;Filtered Ad Count&quot;&#13;&#10;      from intent_media_production.hotel_ct_impression_share_report_aggregations acisra&#13;&#10;      group by&#13;&#10;        aggregation_level_date_in_et,&#13;&#10;        advertiser_id,&#13;&#10;        ad_group_id,&#13;&#10;        campaign_id&#13;&#10;    ) performance&#13;&#10;  on acapra.date_in_et = performance.date_in_et&#13;&#10;    and acapra.advertiser_id = performance.advertiser_id&#13;&#10;    and acapra.ad_group_id = performance.ad_group_id&#13;&#10;    and acapra.campaign_id = performance.campaign_id&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;&#9;  campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;    performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;    performance.&quot;Filtered Ad Count&quot;&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union all&#13;&#10;&#13;&#10;&#13;&#10;/* PPA Hotels by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;    date.date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select date(ts) as date_in_et&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select &apos;2013-12-27 00:00:00&apos;::timestamp t from dual&#13;&#10;      union&#13;&#10;      select current_timestamp at timezone &apos;America/New_York&apos;::timestamp t from dual&#13;&#10;    ) q1&#13;&#10;    timeseries ts as &apos;1 day&apos; over (order by t)&#13;&#10;  ) date,&#13;&#10;  (&#13;&#10;    select distinct e.id, e.name&#13;&#10;    from intent_media_production.hotel_meta_advertiser_performance_aggregations hcapra&#13;&#10;    inner join intent_media_production.entities e&#13;&#10;    on hcapra.advertiser_id = e.id&#13;&#10;  ) entities&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;    campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    sites.display_name as Site,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end) as Region,&#13;&#10;    sum(acapra.filtered_ad_count + acapra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(null as int) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    sum(acapra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    cast(null as int) as &quot;Click Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;View Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;Click Revenue&quot;,&#13;&#10;    cast(null as int) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_meta_advertiser_performance_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  left join intent_media_production.ad_units on acapra.ad_unit_id = ad_units.id&#13;&#10;  left join intent_media_production.sites on ad_units.site_id = sites.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;    campaigns.display_format,&#13;&#10;    acapra.date_in_et,&#13;&#10;    sites.display_name,&#13;&#10;    (case when (ad_units.tag_id like &apos;%_uk%&apos;) or (ad_units.name like &apos;%UK%&apos;) then &apos;Europe&apos; else &apos;US&apos; end)&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id&#13;&#10;&#13;&#10;&#13;&#10;union all&#13;&#10;&#13;&#10;&#13;&#10;/* PPA Hotels not by Site */&#13;&#10;select&#13;&#10;  dimension.Date,&#13;&#10;  dimension.&quot;Advertiser Name&quot;,&#13;&#10;  dimension.&quot;Product Category Type&quot;,&#13;&#10;  performance.&quot;Advertiser Segment&quot;,&#13;&#10;  performance.&quot;Ad Group&quot;,&#13;&#10;  performance.Campaign,&#13;&#10;  performance.&quot;Precheck Type&quot;,&#13;&#10;  performance.&quot;Display Type&quot;,&#13;&#10;  performance.Site,&#13;&#10;  performance.Region,&#13;&#10;  performance.&quot;Eligible Ad Calls&quot;,&#13;&#10;  performance.&quot;Non-Learning Impressions&quot;,&#13;&#10;  performance.&quot;Filtered Ad Count&quot;,&#13;&#10;  performance.Impressions,&#13;&#10;  performance.Clicks,&#13;&#10;  performance.Spend,&#13;&#10;  performance.&quot;Click Conversions&quot;,&#13;&#10;  performance.&quot;View Conversions&quot;,&#13;&#10;  performance.&quot;Click Revenue&quot;,&#13;&#10;  performance.&quot;Exposed Revenue&quot;,&#13;&#10;  performance.&quot;Auction Position Sum&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select&#13;&#10;    date.date_in_et as Date,&#13;&#10;    entities.id as advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select date(ts) as date_in_et&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select &apos;2013-12-27 00:00:00&apos;::timestamp t from dual&#13;&#10;      union&#13;&#10;      select current_timestamp at timezone &apos;America/New_York&apos;::timestamp t from dual&#13;&#10;    ) q1&#13;&#10;    timeseries ts as &apos;1 day&apos; over (order by t)&#13;&#10;  ) date,&#13;&#10;  (&#13;&#10;    select distinct e.id, e.name&#13;&#10;    from intent_media_production.hotel_meta_advertiser_performance_aggregations hcapra&#13;&#10;    inner join intent_media_production.entities e&#13;&#10;    on hcapra.advertiser_id = e.id&#13;&#10;  ) entities&#13;&#10;) dimension&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name as &quot;Advertiser Name&quot;,&#13;&#10;    &apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;    (case entities.advertiser_category_type&#13;&#10;      when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;      when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;      when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;      when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;      when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;      when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;      when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;      when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;      else entities.advertiser_category_type&#13;&#10;    end) as &quot;Advertiser Segment&quot;,&#13;&#10;    ad_groups.name as &quot;Ad Group&quot;,&#13;&#10;    campaigns.name as &quot;Campaign&quot;,&#13;&#10;    campaigns.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;    campaigns.display_format as &quot;Display Type&quot;,&#13;&#10;    acapra.date_in_et as Date,&#13;&#10;    &apos;Total&apos; as Site,&#13;&#10;    &apos;Total&apos; as Region,&#13;&#10;    sum(acapra.filtered_ad_count + acapra.impression_count) as &quot;Eligible Ad Calls&quot;,&#13;&#10;    cast(null as int) as &quot;Non-Learning Impressions&quot;,&#13;&#10;    sum(acapra.filtered_ad_count) as &quot;Filtered Ad Count&quot;,&#13;&#10;    sum(acapra.impression_count) as Impressions,&#13;&#10;    sum(acapra.click_count) as Clicks,&#13;&#10;    sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;    cast(null as int) as &quot;Click Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;View Conversions&quot;,&#13;&#10;    cast(null as int) as &quot;Click Revenue&quot;,&#13;&#10;    cast(null as int) as &quot;Exposed Revenue&quot;,&#13;&#10;    sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;  from intent_media_production.hotel_meta_advertiser_performance_aggregations acapra&#13;&#10;  left join intent_media_production.entities on acapra.advertiser_id = entities.id&#13;&#10;  left join intent_media_production.ad_groups on acapra.ad_group_id = ad_groups.id&#13;&#10;  left join intent_media_production.campaigns on ad_groups.campaign_id = campaigns.id&#13;&#10;  where acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;  group by&#13;&#10;    acapra.advertiser_id,&#13;&#10;    entities.name,&#13;&#10;    entities.advertiser_category_type,&#13;&#10;    ad_groups.name,&#13;&#10;    campaigns.name,&#13;&#10;    campaigns.precheck_eligibility_type,&#13;&#10;    campaigns.display_format,&#13;&#10;    acapra.date_in_et&#13;&#10;) performance&#13;&#10;on dimension.Date = performance.Date and dimension.advertiser_id = performance.advertiser_id</relation>
>>>>>>> origin/master
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[advertiser_data].[sum:Spend:qk]&quot;' value='Cost' />
        </aliases>
      </column>
      <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Auction Position Sum - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Auction Position Sum]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Auction Position Sum - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Auction Position Sum] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Auction Position Sum] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Auction Position Sum - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Auction Position Sum - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Auction Position Sum - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Auction Position Sum - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Auction Position Sum] END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Average Position % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Average Position - Ref Day]-[Average Position - SDPW])/[Average Position - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Average Position - Ref Week]-[Average Position - PW])/[Average Position - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Average Position - MTD]-[Average Position - PMTD])/[Average Position - PMTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Average Position - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - MTD])/sum([Impressions - MTD])' />
      </column>
      <column datatype='real' name='[Average Position - Negative]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='5-[Average Position]' />
      </column>
      <column datatype='real' name='[Average Position - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - PMTD])/sum([Impressions - PMTD])' />
      </column>
      <column datatype='real' name='[Average Position - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - PW])/sum([Impressions - PW])' />
      </column>
      <column datatype='real' name='[Average Position - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - Ref Day])/sum([Impressions - Ref Day])' />
      </column>
      <column datatype='real' name='[Average Position - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - Ref Week])/sum([Impressions - Ref Week])' />
      </column>
      <column datatype='real' name='[Average Position - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - SDPW])/sum([Impressions - SDPW])' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Average Position - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Average Position - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Average Position - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Average Position]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(sum([Auction Position Sum])) or ISNULL(sum([Impressions])) THEN&#13;&#10;NULL&#13;&#10;ELSE &#13;&#10;sum([Auction Position Sum])/sum([Impressions])&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPA]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Click Conversions])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CPC % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([CPC - Ref Day]-[CPC - SDPW])/[CPC - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([CPC - Ref Week]-[CPC - PW])/[CPC - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([CPC - MTD]-[CPC - PMTD])/[CPC - PMTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[CPC - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - MTD])/sum([Clicks - MTD])' />
      </column>
      <column datatype='real' name='[CPC - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - PMTD])/sum([Clicks - PMTD])' />
      </column>
      <column datatype='real' name='[CPC - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - PW])/sum([Clicks - PW])' />
      </column>
      <column datatype='real' name='[CPC - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - Ref Day])/sum([Clicks - Ref Day])' />
      </column>
      <column datatype='real' name='[CPC - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - Ref Week])/sum([Clicks - Ref Week])' />
      </column>
      <column datatype='real' name='[CPC - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - SDPW])/sum([Clicks - SDPW])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([CTR - Ref Day]-[CTR - SDPW])/[CTR - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([CTR - Ref Week]-[CTR - PW])/[CTR - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([CTR - MTD]-[CTR - PMTD])/[CTR - PMTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[CTR - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - MTD])/sum([Impressions - MTD])' />
      </column>
      <column datatype='real' name='[CTR - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PMTD])/sum([Impressions - PMTD])' />
      </column>
      <column datatype='real' name='[CTR - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - PW])/sum([Impressions - PW])' />
      </column>
      <column datatype='real' name='[CTR - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Ref Day])/sum([Impressions - Ref Day])' />
      </column>
      <column datatype='real' name='[CTR - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Ref Week])/sum([Impressions - Ref Week])' />
      </column>
      <column datatype='real' name='[CTR - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - SDPW])/sum([Impressions - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
      </column>
      <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ABS(Spend - D PW)' datatype='real' name='[Calculation_2630227135535721]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Spend - D PW])' scope-isolation='false' />
      </column>
      <column caption='ABS(Spend - D SDPW)' datatype='real' name='[Calculation_5850227135409412]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Spend - D SDPW])' scope-isolation='false' />
      </column>
      <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
      </column>
      <column caption='ABS(Spend - D PMTD)' datatype='real' name='[Calculation_6620227135559262]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Spend - D PMTD])' scope-isolation='false' />
      </column>
      <column caption='Campaign and Ad Group' datatype='string' name='[Calculation_8291016103909586]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Campaign] + &quot; - &quot; + [Ad Group]' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Capped CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CTR] &lt; 0.1 THEN [CTR] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Click AOV]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Revenue])/sum([Click Conversions])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Click CPA Filtered]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Click CPA] &lt; 500&#13;&#10;THEN [Click CPA]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Click CPA]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Click Conversions])' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Click CVR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Conversions])/sum([Clicks])' />
      </column>
      <column datatype='real' name='[Click ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Revenue])/sum([Spend])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicked Conversion Value Sum - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Click Revenue]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicked Conversion Value Sum - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Click Revenue] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Click Revenue] END)&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicked Conversion Value Sum - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Click Revenue] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicked Conversion Value Sum - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Click Revenue] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicked Conversion Value Sum - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Click Revenue] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicked Conversion Value Sum - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Click Revenue] END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Clicked ROI % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Clicked ROI - Ref Day]-[Clicked ROI - SDPW])/[Clicked ROI - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Clicked ROI - Ref Week]-[Clicked ROI - PW])/[Clicked ROI - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Clicked ROI - MTD]-[Clicked ROI - PMTD])/[Clicked ROI - PMTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Clicked ROI - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicked Conversion Value Sum - MTD])/sum([Spend - MTD])' />
      </column>
      <column datatype='real' name='[Clicked ROI - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicked Conversion Value Sum - PMTD])/sum([Spend - PMTD])' />
      </column>
      <column datatype='real' name='[Clicked ROI - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicked Conversion Value Sum - PW])/sum([Spend - PW])' />
      </column>
      <column datatype='real' name='[Clicked ROI - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicked Conversion Value Sum - Ref Day])/sum([Spend - Ref Day])' />
      </column>
      <column datatype='real' name='[Clicked ROI - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicked Conversion Value Sum - Ref Week])/sum([Spend - Ref Week])' />
      </column>
      <column datatype='real' name='[Clicked ROI - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicked Conversion Value Sum - SDPW])/sum([Spend - SDPW])' />
      </column>
      <column datatype='real' name='[Clicked ROI for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Clicked ROI - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Clicked ROI - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Clicked ROI - MTD]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicks - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Clicks]&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicks - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Clicks] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Clicks] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicks - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicks - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicks - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Clicks] END' />
      </column>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Clicks - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Clicks] END' />
      </column>
      <column datatype='string' name='[Color]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Advertiser Segment or Advertiser]&#13;&#10;    WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;    WHEN &quot;Advertiser&quot; THEN [Advertiser Name]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date by]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date of Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;,[Date]))' />
      </column>
      <column datatype='date' name='[Date of Week (Monday Start)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]-1)+1)' />
      </column>
      <column datatype='date' name='[Date of Week (Sunday Start)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;, [Date]))' />
      </column>
      <column datatype='date' name='[Date of Week]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Week Start]&#13;&#10;WHEN &quot;Sunday&quot; THEN [Date of Week (Sunday Start)]&#13;&#10;WHEN &quot;Monday&quot; THEN [Date of Week (Monday Start)]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;DESKTOP&quot;' value='Desktop' />
          <alias key='&quot;MOBILE&quot;' value='Mobile' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Eligible Ad Calls % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;    WHEN &quot;Day&quot; THEN (sum([Eligible Ad Calls - Ref Day])-sum([Eligible Ad Calls - SDPW]))/sum([Eligible Ad Calls - SDPW])&#13;&#10;    WHEN &quot;Week&quot; THEN (sum([Eligible Ad Calls - Ref Week])-sum([Eligible Ad Calls - PW]))/sum([Eligible Ad Calls - PW])&#13;&#10;    WHEN &quot;Month&quot; THEN (sum([Eligible Ad Calls - MTD])-sum([Eligible Ad Calls - PMTD]))/sum([Eligible Ad Calls - PMTD])&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Eligible Ad Calls]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Eligible Ad Calls] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Eligible Ad Calls] END)&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Eligible Ad Calls] END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Eligible Ad Calls] END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Eligible Ad Calls] END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Eligible Ad Calls] END' />
      </column>
      <column datatype='real' name='[Eligible Ad Calls for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;    WHEN &quot;Day&quot; THEN [Eligible Ad Calls - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Eligible Ad Calls - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Eligible Ad Calls - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Exposed Conversion Value Sum - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Exposed Revenue]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Exposed Conversion Value Sum - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Exposed Revenue] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Exposed Revenue] END)&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Exposed Conversion Value Sum - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Exposed Conversion Value Sum - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Exposed Conversion Value Sum - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Exposed Conversion Value Sum - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Exposed Revenue] END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Exposed ROI % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Exposed ROI - Ref Day]-[Exposed ROI - SDPW])/[Exposed ROI - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Exposed ROI - Ref Week]-[Exposed ROI - PW])/[Exposed ROI - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Exposed ROI - MTD]-[Exposed ROI - PMTD])/[Exposed ROI - PMTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Exposed ROI - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum - MTD])/sum([Spend - MTD])' />
      </column>
      <column datatype='real' name='[Exposed ROI - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum - PMTD])/sum([Spend - PMTD])' />
      </column>
      <column datatype='real' name='[Exposed ROI - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum - PW])/sum([Spend - PW])' />
      </column>
      <column datatype='real' name='[Exposed ROI - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum - Ref Day])/sum([Spend - Ref Day])' />
      </column>
      <column datatype='real' name='[Exposed ROI - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum - Ref Week])/sum([Spend - Ref Week])' />
      </column>
      <column datatype='real' name='[Exposed ROI - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Conversion Value Sum - SDPW])/sum([Spend - SDPW])' />
      </column>
      <column datatype='real' name='[Exposed ROI for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Exposed ROI - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Exposed ROI - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Exposed ROI - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Exposed ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Exposed Revenue])/sum([Spend])' />
      </column>
      <column datatype='real' name='[Graph Metric 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Graph Parameter 1]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Graph Metric 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Graph Parameter 2]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;END' />
      </column>
      <column caption='Advertiser Selection' datatype='string' name='[Grouping Parameter (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Advertiser Name]&#13;&#10;ELSE &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
          <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
          <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
          <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
          <alias key='&quot;VAYAMA&quot;' value='Vayama' />
        </aliases>
      </column>
      <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
          <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
          <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
          <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
          <alias key='&quot;VAYAMA&quot;' value='Vayama' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Impression Share - Ref Day]-[Impression Share - SDPW])/[Impression Share - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Impression Share - Ref Week]-[Impression Share - PW])/[Impression Share - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Impression Share - MTD]-[Impression Share - PMTD])/[Impression Share - PMTD]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Impression Share - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - MTD])/sum([Eligible Ad Calls - MTD])' />
      </column>
      <column datatype='real' name='[Impression Share - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - PMTD])/sum([Eligible Ad Calls - PMTD])' />
      </column>
      <column datatype='real' name='[Impression Share - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - PW])/sum([Eligible Ad Calls - PW])' />
      </column>
      <column datatype='real' name='[Impression Share - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - Ref Day])/sum([Eligible Ad Calls - Ref Day])' />
      </column>
      <column datatype='real' name='[Impression Share - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - Ref Week])/sum([Eligible Ad Calls - Ref Week])' />
      </column>
      <column datatype='real' name='[Impression Share - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - SDPW])/sum([Eligible Ad Calls - SDPW])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Impression Share - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Impression Share - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Impression Share - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Impressions - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Impressions]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Impressions] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Impressions] END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Impressions - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Impressions - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Impressions - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Impressions - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Is Leap Year]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Ref Day]) % 4 = 0 THEN&#13;&#10;    IF YEAR([Ref Day]) % 100 = 0 THEN&#13;&#10;        IF YEAR([Ref Day]) % 400 = 0 THEN&#13;&#10;            1&#13;&#10;        ELSE 0 END&#13;&#10;    ELSE 0 END&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN &#13;&#10;(CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Monday&quot; THEN (IF DATEPART(&apos;weekday&apos;,[Ref Day]) = 1 THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))) END)&#13;&#10;    WHEN &quot;Sunday&quot; THEN (IF DATEPART(&apos;weekday&apos;,[Ref Day]) = 7 THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-1) END)&#13;&#10;END)&#13;&#10;WHEN &quot;Month&quot; THEN (IF [Ref Day] = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,[Ref Day]))) THEN [Ref Day] ELSE (DATE(DATETRUNC(&apos;month&apos;,[Ref Day]))-1) END)&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Last Day of Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE MONTH([Ref Day])&#13;&#10;WHEN 1 THEN 31&#13;&#10;WHEN 2 THEN (IF [Is Leap Year] = 1 THEN 29 ELSE 28 END)&#13;&#10;WHEN 3 THEN 31&#13;&#10;WHEN 4 THEN 30&#13;&#10;WHEN 5 THEN 31&#13;&#10;WHEN 6 THEN 30&#13;&#10;WHEN 7 THEN 31&#13;&#10;WHEN 8 THEN 31&#13;&#10;WHEN 9 THEN 30&#13;&#10;WHEN 10 THEN 31&#13;&#10;WHEN 11 THEN 30&#13;&#10;WHEN 12 THEN 31&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If MONTH([Ref Day]) = 1 THEN 12 &#13;&#10;ELSE MONTH([Ref Day])-1 END' />
      </column>
      <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Click Revenue])/sum([Spend])' />
      </column>
      <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Yesterday or Reference Day]&#13;&#10;WHEN &quot;Yesterday&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Reference Day&quot; THEN [Parameters].[Reference Day]&#13;&#10;END' />
      </column>
      <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Ref Day] -7' />
      </column>
      <column datatype='real' name='[Sort for Grouping - Core Metrics]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Grouping Sort - Core Metrics]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Sort for Grouping - ROI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Grouping Sort - ROI]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Sort for Grouping - Table]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Grouping Sort - Table]&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Click Conversions&quot; THEN sum([Click Conversions])&#13;&#10;WHEN &quot;Click Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Click CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Click CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;Click ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;Click AOV&quot; THEN [Click AOV]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Sort for Grouping - Topline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Grouping Sort - Topline]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Spend % for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN (sum([Spend - Ref Day])-sum([Spend - SDPW]))/sum([Spend - SDPW])&#13;&#10;WHEN &quot;Week&quot; THEN (sum([Spend - Ref Week])-sum([Spend - PW]))/sum([Spend - PW])&#13;&#10;WHEN &quot;Month&quot; THEN (sum([Spend - MTD])-sum([Spend - PMTD]))/sum([Spend - PMTD])&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - D PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(ifnull([Spend - MTD],0)) - sum(ifnull([Spend - PMTD],0))' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - D PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(ifnull([Spend - Ref Week],0)) - sum(ifnull([Spend - PW],0))' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - D SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(ifnull([Spend - Ref Day],0)) - sum(ifnull([Spend - SDPW],0))' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - MTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATETRUNC(&apos;month&apos;,[Date]) = DATETRUNC(&apos;month&apos;,[Ref Day])&#13;&#10;AND DATEPART(&apos;day&apos;,[Date]) &lt;= DATEPART(&apos;day&apos;,[Ref Day])&#13;&#10;THEN [Spend]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - PMTD]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DAY([Ref Day]) = [Last Day of Month] THEN&#13;&#10;  //need entire previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  THEN [Spend] END)&#13;&#10;ELSE&#13;&#10;  //need up to that day number in previous month&#13;&#10;  (IF YEAR([Date]) = [Year of Previous Month]&#13;&#10;  AND MONTH([Date]) = [Previous Month]&#13;&#10;  AND DAY([Date]) &lt;= DAY([Ref Day]) &#13;&#10;  THEN [Spend] END)&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - PW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= DATEADD(&apos;day&apos;, -7,[Ref Day]) AND [Date] &gt; DATEADD(&apos;day&apos;, -14,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - Ref Day]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Date] = [Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - Ref Week]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Date] &lt;= [Ref Day] AND [Date] &gt; DATEADD(&apos;day&apos;, -7,[Ref Day]) THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - SDPW]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Ref Day],[Date]) = -7 THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend for Time Frame]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Spend - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Spend - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Spend - MTD]&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Title with Time Frame]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN STR([Ref Day])&#13;&#10;WHEN &quot;Week&quot; THEN &quot;Week Ending &quot; + STR([Ref Day])&#13;&#10;WHEN &quot;Month&quot; THEN &quot;Month to Date up to &quot; + STR([Ref Day])&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year of Previous Month]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF MONTH([Ref Day]) = 1 THEN YEAR([Ref Day])-1&#13;&#10;ELSE YEAR([Ref Day])&#13;&#10;END' />
      </column>
      <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Color]' derivation='None' name='[none:Color:nk]' pivot='key' type='nominal' />
      <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
      <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Graph Metric 1]' derivation='User' name='[usr:Graph Metric 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Graph Metric 2]' derivation='User' name='[usr:Graph Metric 2:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Action (Advertiser,Grouping)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Advertiser]' />
          <groupfilter function='level-members' level='[Grouping Parameter]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Grouping,Date Axis)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Grouping Parameter]' />
          <groupfilter function='level-members' level='[Date Axis]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
<<<<<<< HEAD
        <connection class='dataengine' dbname='C:\Users\rommy.ghaly\Documents\My Tableau Repository\Datasources\aft_advertiser_report__advertiser_data.tde' schema='Extract' tablename='Extract' update-time='3/27/2015 6:20:04 PM'>
=======
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\aft_advertiser_report__advertiser_data.tde' schema='Extract' tablename='Extract' update-time='3/25/2015 4:57:14 AM'>
>>>>>>> origin/master
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1700907132435113]' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' />
            <calculation column='[Calculation_8291016103909586]' formula='[Campaign] + &quot; - &quot; + [Ad Group]' />
            <calculation column='[Date of Month]' formula='DATE(DATETRUNC(&apos;month&apos;,[Date]))' />
            <calculation column='[Date of Week (Monday Start)]' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]-1)+1)' />
            <calculation column='[Date of Week (Sunday Start)]' formula='DATE(DATETRUNC(&apos;week&apos;, [Date]))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
<<<<<<< HEAD
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11532004' timestamp-start='2015-03-27 18:20:04.785000' />
=======
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11650418' timestamp-start='2015-03-25 04:57:13.687000' />
>>>>>>> origin/master
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.414948' measure-ordering='alphabetic' measure-percentage='0.326031' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Ad Group:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;MVMC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Domestic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;TopO-International&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HVLC&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;LVHC&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Int&apos;l - Top 50 Dom Dests&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;HVMC&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;TopO-Domestic&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Domestic-Domestic&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;TopO-TopD&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MVHC&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;International-Domestic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Int&apos;l - Top 50 Int&apos;l Dests&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;LVMC&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Int&apos;l - Any Domestic&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;MVLC&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;International-International &quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;International-TopD&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Domestic-TopD&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Int&apos;l - Any Int&apos;l&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;HVHC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Color:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Delta &quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Emirates Airlines&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Student Universe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Aeromexico&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Domestic Airline&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;FlightHub&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Travelation&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Airfarewatchdog&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hawaiian Airlines&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;OTA Tier 1&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;United Airlines&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cathay Pacific - Canada&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Orbitz-ads-on-Network&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Qatar Airways&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;British Airways&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Jetsetz&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;One Travel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Apple Vacations&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;INDEPENDENT_HOTEL&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Kayak Software Corporation&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;OTA Budget&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Webjet&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AirTicketsDirect&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hawaiian Airlines - JFK Launch&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;OTA Tier 2&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Vayama&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Expedia-Ads&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Travel Ticker&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Air Canada&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Explore Trip&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;FlightNetwork&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hotel Chain&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Travelocity-Ads&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;CheapTickets-Ads&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;South African Airlines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;BudgetAir&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Orbitz-ads-on-EXPE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;LAN Airlines&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Webjet-ca&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;CheapOair&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;SmartFares&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alaska Airlines&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hipmunk&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;DealBase&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Starwood Hotels&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;BudgetAir-ca&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;OTA_BUDGET&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;OWW-ads-on-CTIX&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cathay Pacific&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Priceline&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Air Canada - Marketel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fly-com&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;International Airline&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Travelocity-ca&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;American Airlines&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hotwire-Ads&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Virgin Atlantic&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Air France&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Globester&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;TripAdvisor&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[advertiser_data]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[advertiser_data].[usr:Graph Metric 1:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[advertiser_data].[usr:Graph Metric 2:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Grouping Parameter:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Booking.com - UK&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;BudgetAir.ca&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;FlightNetwork&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Gogobot&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;POS US and Canada 2012 - MLM&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Red Roof Inn&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Roomer Travel - ads&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;TAM Airlines&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;TripAdvisor&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;itravel2000&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Aeromexico&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Agoda - Ads&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AirFastTickets&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AirTkt&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Amoma&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Booking.com - UK - Meta&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;BudgetAir&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;CheapTickets-Ads&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Domestic Airline&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Flights&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hotels.com-Meta&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;LAN Airlines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;POS US and Canada 2012 - ACA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;POS US and Canada 2012 - MTY&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;TAll Selected Advertisers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Total Network&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;TravelSupermarket - UK&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Travelation&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;goSeek&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Air France-ads&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CheapOair- Europe ads&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Expedia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fly-com&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hilton Hotels&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;HotelReservations&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;International Airline&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kugunda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Momondo&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;POS US and Canada 2012 - CJS&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;POS US and Canada 2012 - PAZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Rovia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tier 1&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Travelstart&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ebookers - UK - Meta&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Booking.com-ads&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;DealBase - ads&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Expedia-Meta&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Expedia.co.uk&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fly.com - CA&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jetsetter-ads&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kayak&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;POS US and Canada 2012 - LEN&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;POS US and Canada 2012 - VSA&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Priceline&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Priceline - US - Meta&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Skyscanner-ads&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Travelbuddy 247&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;American Airlines Vacation&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Edreams&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;HOTWIRE_MEDIA_FILL_IN&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hotels.com - UK - Meta&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Kayak Software Corporation&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;OTA Tier 2&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;POS US and Canada 2012 - GDL&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;POS US and Canada 2012 - TAP&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Priceline-Meta&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Qatar Airways - ads&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Roomer Travel&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;TripAdvisor-Europe&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Vayama&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Virgin Holidays - UK&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;eDreams - UK&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AirFastTickets - UK&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;American Airlines&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Crowne Plaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Getaroom - US - Meta&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hotwire-Ads&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Kayak Software Corporation - Ads - Europe&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Laterooms.com - UK&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;OTA Tier 1&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;OWW-ads-on-CTIX&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Orbitz&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;POS US and Canada 2012 - CUU&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;POS US and Canada 2012 - SLP&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Skyscanner - US&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Trivago&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Air New Zealand&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cathay Pacific - Canada&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CheapOair-Canada&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Expedia - UK - Meta&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Expedia.ca&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hotels.com&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;KAYAK UK&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Kugunda - UK&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;One Travel&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;POS US and Canada 2012 - CPE&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;POS US and Canada 2012 - PVR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;San Francisco Travel&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Webjet.ca&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;eDreams - Europe&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Caesars&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;EasyVoyage - UK&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fly.com&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Globehunters - UK&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;POS US and Canada 2012 - MTT&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tingo&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Travelzoo&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Air Canada&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AirTickets.co.uk&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis - UK&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Booking.com - US - Meta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;FlyFar&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Jetcost - UK&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;LatinOFare-ads&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;POS US and Canada 2012 - AGU&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;POS US and Canada 2012 - MXL&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Virgin Atlantic&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ebookers - UK&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;ASAP Tickets&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;FareBoom-ads&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Justairticket-ads&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OneFineStay&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;POS US and Canada 2012 - MEX&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;POS US and Canada 2012 - ZIH&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;South African Airlines&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;TRIPDOTCOM&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Travelocity&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Travelocity-Ads&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Trip.com&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;XL Airways&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;bookit.com&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;AirTkt-ads&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Apple Vacations&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Holiday Inn&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hotels.com - US - Meta&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hotels.com-Ads - UK&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hotwire-Meta&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;LowFares&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;On the Beach - UK&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;POS US and Canada 2012 - HMO&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;POS US and Canada 2012 - TGZ&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;STA Travel-Ads&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;ShareTrips&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Vegas.com-ads&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;American Airlines Fare Sale&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;CheapOair- UK ads&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;HotelClub - UK - Meta&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;POS US and Canada 2012 - DGO&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;POS US and Canada 2012 - TAM&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Priceline - UK&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Priceline-Ads&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Room77&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Trivago - UK&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Airlines&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Booking.com-Meta&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Explore Trip&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Faregeek - US&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;HotelTonight&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Jetsetz&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;POS US and Canada 2012 - LMM&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;POS US and Canada 2012 - ZCL&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;SmartFares&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Travelbuddy 247 - UK&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Travelocity - US - Meta&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;AirTicketsDirect&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;BudgetAir - UK&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Expedia - UK&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Expedia - US - Meta&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hipmunk&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hipmunk-Ads&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hotwire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;OneTime - ads&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;POS US and Canada 2012 - CUL&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;POS US and Canada 2012 - REX&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rocketmiles&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ShareTrips - Ads&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tier 2&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Westin Hotels&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;lastminute.com&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;CheapFareGuru&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;DO NOT BILL_Test1&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;FlightHub&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fly.com UK&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;InsanelyCheapFlights&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kayak Software Corporation - Ads&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;POS US and Canada 2012 - MID&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Student Universe&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Webjet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Apple Vacations-ads &quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bookit&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Etihad Airways&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Expedia IAB&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Holiday Inn Express&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;HotelsCombined - UK&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Indian Eagle&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;KAYAK&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;LowCostAirlines&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Orbitz - US - Meta&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Orbitz-ads-on-Network&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;POS US and Canada 2012 - HUX&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;POS US and Canada 2012 - TRC&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;StudentUniverse&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Traveljunction&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Aston Hotels&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Faregeek - UK&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Hotels.com-Ads&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;HotelsCombined - US&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;JetaPort&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;OneTravel&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;POS US and Canada 2012 - LAP&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;POS US and Canada 2012 - VER&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Priceline - UK - Meta&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Room 77&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Top10 - UK&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Air Canada - CA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Airfarewatchdog&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CheapTickets&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cheaptickets - US - Meta&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Expedia-Ads&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Groupon-Ads&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hotel Chain&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;JustFly&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marriott Hotels&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;POS US and Canada 2012 - BJX&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;POS US and Canada 2012 - MZT&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Travelocity-Meta&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TripAdvisor - UK&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Wego&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Alaska Airlines&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;BudgetPlaces - UK&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;CheapOair UK&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cheaptickets-Meta&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;FareSpotter&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fly.com - UK&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Getaroom - UK - Meta&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Orbitz-Meta&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;POS US and Canada 2012 - CUN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;POS US and Canada 2012 - SJD&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Skyscanner - UK&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tripping.com&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;ebookers&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lastminute.com - UK&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Air Canada - UK&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cathay Pacific&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;CheapAir&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;CheapOair&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dealbase&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Easytobook - UK - Meta&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hawaiian Airlines&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hotwire UK&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kayak Software Corporation - Ads - UK&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Melia Hotels-Ads&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;POS US and Canada 2012 - CEN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;POS US and Canada 2012 - OAX&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Travelocity.ca&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Advertiser Segment or Advertiser]' param-domain-type='list' role='measure' type='nominal' value='&quot;Advertiser Segment&quot;'>
          <calculation class='tableau' formula='&quot;Advertiser Segment&quot;' />
          <members>
            <member value='&quot;Advertiser&quot;' />
            <member value='&quot;Advertiser Segment&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Graph Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Impressions&quot;'>
          <calculation class='tableau' formula='&quot;Impressions&quot;' />
          <members>
            <member value='&quot;Cost&quot;' />
            <member value='&quot;Average Position&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;ROI&quot;' />
            <member value='&quot;CVR&quot;' />
            <member value='&quot;CPA&quot;' />
            <member value='&quot;CTR&quot;' />
            <member value='&quot;Clicks&quot;' />
            <member value='&quot;Impressions&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Graph Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Clicks&quot;'>
          <calculation class='tableau' formula='&quot;Clicks&quot;' />
          <members>
            <member value='&quot;Cost&quot;' />
            <member value='&quot;Average Position&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;ROI&quot;' />
            <member value='&quot;CVR&quot;' />
            <member value='&quot;CPA&quot;' />
            <member value='&quot;CTR&quot;' />
            <member value='&quot;Clicks&quot;' />
            <member value='&quot;Impressions&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Grouping Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Product Category&quot;'>
          <calculation class='tableau' formula='&quot;Product Category&quot;' />
          <aliases>
            <alias key='&quot;Campaign + Ad Group&quot;' value='Campaign + Ad Group' />
          </aliases>
          <members>
            <member value='&quot;All&quot;' />
            <member value='&quot;Advertiser Segment&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Campaign&quot;' />
            <member alias='Campaign + Ad Group' value='&quot;Campaign + Ad Group&quot;' />
            <member value='&quot;Total Network&quot;' />
            <member value='&quot;Product Category&quot;' />
            <member value='&quot;Region&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Grouping Sort - Core Metrics]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cost&quot;'>
          <calculation class='tableau' formula='&quot;Cost&quot;' />
          <members>
            <member value='&quot;Cost&quot;' />
            <member value='&quot;Impressions&quot;' />
            <member value='&quot;Clicks&quot;' />
            <member value='&quot;Revenue&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Grouping Sort - ROI]' param-domain-type='list' role='measure' type='nominal' value='&quot;CPA&quot;'>
          <calculation class='tableau' formula='&quot;CPA&quot;' />
          <members>
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;ROI&quot;' />
            <member value='&quot;CVR&quot;' />
            <member value='&quot;CPA&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Grouping Sort - Table]' param-domain-type='list' role='measure' type='nominal' value='&quot;Impressions&quot;'>
          <calculation class='tableau' formula='&quot;Impressions&quot;' />
          <members>
            <member value='&quot;Impressions&quot;' />
            <member value='&quot;Clicks&quot;' />
            <member value='&quot;Cost&quot;' />
            <member value='&quot;Click Conversions&quot;' />
            <member value='&quot;Click Revenue&quot;' />
            <member value='&quot;Average Position&quot;' />
            <member value='&quot;CTR&quot;' />
            <member value='&quot;Click CVR&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;Click CPA&quot;' />
            <member value='&quot;Click ROI&quot;' />
            <member value='&quot;Click AOV&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Grouping Sort - Topline]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cost&quot;'>
          <calculation class='tableau' formula='&quot;Cost&quot;' />
          <members>
            <member value='&quot;Cost&quot;' />
            <member value='&quot;Average Position&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;CTR&quot;' />
          </members>
        </column>
        <column caption='Region' datatype='string' name='[Is Leap Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Europe&quot;' />
            <member value='&quot;US&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;True&quot;'>
          <calculation class='tableau' formula='&quot;True&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Product Category]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hotels&quot;'>
          <calculation class='tableau' formula='&quot;Hotels&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Flights&quot;' />
            <member value='&quot;Hotels&quot;' />
            <member value='&quot;Meta&quot;' />
          </members>
        </column>
        <column datatype='date' name='[Reference Day]' param-domain-type='range' role='measure' type='quantitative' value='#2012-11-30#'>
          <calculation class='tableau' formula='#2012-11-30#' />
          <range min='#2011-05-22#' />
        </column>
        <column caption='Aggregated By' datatype='string' name='[Time Frame]' param-domain-type='list' role='measure' type='nominal' value='&quot;Week&quot;'>
          <calculation class='tableau' formula='&quot;Week&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Time Span]' param-domain-type='list' role='measure' type='nominal' value='&quot;52 Weeks&quot;'>
          <calculation class='tableau' formula='&quot;52 Weeks&quot;' />
          <members>
            <member value='&quot;52 Weeks&quot;' />
            <member value='&quot;All Time&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Week Start]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sunday&quot;'>
          <calculation class='tableau' formula='&quot;Sunday&quot;' />
          <members>
            <member value='&quot;Sunday&quot;' />
            <member value='&quot;Monday&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
          <calculation class='tableau' formula='&quot;Yesterday&quot;' />
          <members>
            <member value='&quot;Yesterday&quot;' />
            <member value='&quot;Reference Day&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='advertiser_data'>
      <datasources>
        <datasource name='advertiser_data' />
      </datasources>
      <datasource-dependencies datasource='advertiser_data'>
        <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
        </column>
        <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;DESKTOP&quot;' value='Desktop' />
            <alias key='&quot;MOBILE&quot;' value='Mobile' />
          </aliases>
        </column>
        <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
        </column>
        <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
        </column>
        <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
        <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[advertiser_data].[none:Advertiser Name:nk]'>
        <groupfilter function='level-members' level='[none:Advertiser Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[advertiser_data].[none:Calculation_1700907132435113:nk]'>
        <groupfilter function='member' level='[none:Calculation_1700907132435113:nk]' member='&quot;Non-Prechecks&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[advertiser_data].[none:Calculation_6550404114703346:nk]'>
        <groupfilter function='member' level='[none:Calculation_6550404114703346:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[advertiser_data].[none:Date:qk]' included-values='all'>
      </filter>
      <filter class='categorical' column='[advertiser_data].[none:Display Type:nk]'>
        <groupfilter function='member' level='[none:Display Type:nk]' member='&quot;DESKTOP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[advertiser_data].[none:Product Category Filter:nk]'>
        <groupfilter function='member' level='[none:Product Category Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[advertiser_data].[none:Time Span Filter:nk]'>
        <groupfilter function='member' level='[none:Time Span Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Action 1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Impression Share' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Grouping,Grouping Parameter' />
        <param name='target' value='Impression Share' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Advertiser Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>[advertiser_data].[none:Title with Time Frame:nk]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Average Position % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Average Position - Ref Day]-[Average Position - SDPW])/[Average Position - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Average Position - Ref Week]-[Average Position - PW])/[Average Position - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Average Position - MTD]-[Average Position - PMTD])/[Average Position - PMTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Average Position - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Average Position - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Average Position - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CPC % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([CPC - Ref Day]-[CPC - SDPW])/[CPC - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([CPC - Ref Week]-[CPC - PW])/[CPC - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([CPC - MTD]-[CPC - PMTD])/[CPC - PMTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [CPC - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [CPC - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [CPC - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([CTR - Ref Day]-[CTR - SDPW])/[CTR - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([CTR - Ref Week]-[CTR - PW])/[CTR - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([CTR - MTD]-[CTR - PMTD])/[CTR - PMTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [CTR - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [CTR - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [CTR - MTD]&#13;&#10;END' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Clicked ROI % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Clicked ROI - Ref Day]-[Clicked ROI - SDPW])/[Clicked ROI - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Clicked ROI - Ref Week]-[Clicked ROI - PW])/[Clicked ROI - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Clicked ROI - MTD]-[Clicked ROI - PMTD])/[Clicked ROI - PMTD]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Clicked ROI for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Clicked ROI - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Clicked ROI - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Clicked ROI - MTD]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Eligible Ad Calls % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;    WHEN &quot;Day&quot; THEN (sum([Eligible Ad Calls - Ref Day])-sum([Eligible Ad Calls - SDPW]))/sum([Eligible Ad Calls - SDPW])&#13;&#10;    WHEN &quot;Week&quot; THEN (sum([Eligible Ad Calls - Ref Week])-sum([Eligible Ad Calls - PW]))/sum([Eligible Ad Calls - PW])&#13;&#10;    WHEN &quot;Month&quot; THEN (sum([Eligible Ad Calls - MTD])-sum([Eligible Ad Calls - PMTD]))/sum([Eligible Ad Calls - PMTD])&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Eligible Ad Calls for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;    WHEN &quot;Day&quot; THEN [Eligible Ad Calls - Ref Day]&#13;&#10;    WHEN &quot;Week&quot; THEN [Eligible Ad Calls - Ref Week]&#13;&#10;    WHEN &quot;Month&quot; THEN [Eligible Ad Calls - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Exposed ROI % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Exposed ROI - Ref Day]-[Exposed ROI - SDPW])/[Exposed ROI - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Exposed ROI - Ref Week]-[Exposed ROI - PW])/[Exposed ROI - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Exposed ROI - MTD]-[Exposed ROI - PMTD])/[Exposed ROI - PMTD]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Exposed ROI for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Exposed ROI - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Exposed ROI - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Exposed ROI - MTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN ([Impression Share - Ref Day]-[Impression Share - SDPW])/[Impression Share - SDPW]&#13;&#10;WHEN &quot;Week&quot; THEN ([Impression Share - Ref Week]-[Impression Share - PW])/[Impression Share - PW]&#13;&#10;WHEN &quot;Month&quot; THEN ([Impression Share - MTD]-[Impression Share - PMTD])/[Impression Share - PMTD]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Impression Share - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Impression Share - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Impression Share - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Precheck Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Yesterday or Reference Day]&#13;&#10;WHEN &quot;Yesterday&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Reference Day&quot; THEN [Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Spend % for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN (sum([Spend - Ref Day])-sum([Spend - SDPW]))/sum([Spend - SDPW])&#13;&#10;WHEN &quot;Week&quot; THEN (sum([Spend - Ref Week])-sum([Spend - PW]))/sum([Spend - PW])&#13;&#10;WHEN &quot;Month&quot; THEN (sum([Spend - MTD])-sum([Spend - PMTD]))/sum([Spend - PMTD])&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend for Time Frame]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Spend - Ref Day]&#13;&#10;WHEN &quot;Week&quot; THEN [Spend - Ref Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Spend - MTD]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Title with Time Frame]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN STR([Ref Day])&#13;&#10;WHEN &quot;Week&quot; THEN &quot;Week Ending &quot; + STR([Ref Day])&#13;&#10;WHEN &quot;Month&quot; THEN &quot;Month to Date up to &quot; + STR([Ref Day])&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Precheck Type]' derivation='None' name='[none:Precheck Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title with Time Frame]' derivation='None' name='[none:Title with Time Frame:nk]' pivot='key' type='nominal' />
            <column-instance column='[Eligible Ad Calls for Time Frame]' derivation='Sum' name='[sum:Eligible Ad Calls for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend for Time Frame]' derivation='Sum' name='[sum:Spend for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ref Day]' derivation='Day-Trunc' name='[tdy:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position % for Time Frame]' derivation='User' name='[usr:Average Position % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position for Time Frame]' derivation='User' name='[usr:Average Position for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC % for Time Frame]' derivation='User' name='[usr:CPC % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC for Time Frame]' derivation='User' name='[usr:CPC for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR % for Time Frame]' derivation='User' name='[usr:CTR % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR for Time Frame]' derivation='User' name='[usr:CTR for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicked ROI % for Time Frame]' derivation='User' name='[usr:Clicked ROI % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicked ROI for Time Frame]' derivation='User' name='[usr:Clicked ROI for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Eligible Ad Calls % for Time Frame]' derivation='User' name='[usr:Eligible Ad Calls % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI % for Time Frame]' derivation='User' name='[usr:Exposed ROI % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed ROI for Time Frame]' derivation='User' name='[usr:Exposed ROI for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impression Share % for Time Frame]' derivation='User' name='[usr:Impression Share % for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impression Share for Time Frame]' derivation='User' name='[usr:Impression Share for Time Frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend % for Time Frame]' derivation='User' name='[usr:Spend % for Time Frame:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Eligible Ad Calls for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Eligible Ad Calls \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Impression Share for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Impression Share \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CTR for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CTR \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CPC for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CPC \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Spend for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Spend \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Clicked ROI for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Clicked ROI \% for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Exposed ROI for Time Frame:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Exposed ROI \% for Time Frame:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[advertiser_data].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[advertiser_data].[sum:Eligible Ad Calls for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Eligible Ad Calls \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Impression Share for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Impression Share \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:CTR for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:CTR \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:CPC for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:CPC \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[sum:Spend for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Spend \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Average Position for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Average Position \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Clicked ROI for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Clicked ROI \% for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Exposed ROI for Time Frame:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Exposed ROI \% for Time Frame:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[advertiser_data].[none:Advertiser Name:nk]' direction='ASC' />
          <filter class='categorical' column='[advertiser_data].[none:Precheck Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Precheck Type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Precheck Type:nk]' member='&quot;NON_PRECHECKS_ONLY&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Precheck Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[advertiser_data].[:Measure Names]' value='79' />
            <format attr='text-format' field='[advertiser_data].[usr:Clicked ROI for Time Frame:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[advertiser_data].[usr:Exposed ROI for Time Frame:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[advertiser_data].[:Measure Names]' value='80' />
            <format attr='band-color' scope='cols' value='#d7d7d7' />
            <format attr='width' field='[advertiser_data].[none:Advertiser Name:nk]' value='140' />
            <format attr='width' field='[advertiser_data].[none:Advertiser Segment:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[advertiser_data].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[advertiser_data].[Multiple Values]' max='1.0' min='-1.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f43030</color>
                <color>#e95d5d</color>
                <color>#df8585</color>
                <color>#d4aaaa</color>
                <color>#cacaca</color>
                <color>#9b9b9b</color>
                <color>#777777</color>
                <color>#565656</color>
                <color>#383838</color>
                <color>#1e1e1e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d7d7d7' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='2' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[advertiser_data].[Multiple Values]' />
              <color column='[advertiser_data].[Multiple Values]' />
              <lod column='[advertiser_data].[tdy:Ref Day:qk]' />
              <lod column='[advertiser_data].[none:Title with Time Frame:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([advertiser_data].[none:Advertiser Segment:nk] / [advertiser_data].[none:Advertiser Name:nk])</rows>
        <cols>[advertiser_data].[:Measure Names]</cols>
        <subtotals>
          <column>[advertiser_data].[none:Advertiser Segment:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Advertiser Name'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='18'>&lt;</run>
            <run fontsize='18'>[advertiser_data].[none:Advertiser Name:nk]</run>
            <run fontsize='18'>&gt;</run>
            <run fontsize='18'>Æ </run>
            <run fontsize='18'>&lt;</run>
            <run fontsize='18'>[advertiser_data].[none:Calculation_1700907132435113:nk]</run>
            <run fontsize='18'>&gt;</run>
            <run fontsize='18'> Topline ROI Summary Data Table&#10;</run>
            <run fontsize='18'>&lt;</run>
            <run fontsize='18'>[Parameters].[Graph Parameter 1]</run>
            <run fontsize='18'>&gt;</run>
            <run fontsize='18'> vs. </run>
            <run fontsize='18'>&lt;</run>
            <run fontsize='18'>[Parameters].[Graph Parameter 2]</run>
            <run fontsize='18'>&gt;</run>
            <run fontsize='18'> by </run>
            <run fontsize='18'>&lt;</run>
            <run fontsize='18'>[Parameters].[Grouping Parameter]</run>
            <run fontsize='18'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='height-header' value='10' />
            <format attr='width' field='[advertiser_data].[none:Advertiser Name:nk]' value='428' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#000000' />
            <format attr='text-align' field='[advertiser_data].[none:Advertiser Name:nk]' value='right' />
            <format attr='font-size' field='[advertiser_data].[none:Advertiser Name:nk]' value='18' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Average Position'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Average Position</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Average Position]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(sum([Auction Position Sum])) or ISNULL(sum([Impressions])) THEN&#13;&#10;NULL&#13;&#10;ELSE &#13;&#10;sum([Auction Position Sum])/sum([Impressions])&#13;&#10;END' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Position]' derivation='User' name='[usr:Average Position:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Average Position:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Average Position:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[advertiser_data].[usr:Average Position:qk]' field-type='quantitative' max='5.0' min='1.0' range-type='fixed' reverse='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[advertiser_data].[usr:Average Position:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Average Position:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Average Position:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Average Position:qk]' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[none:Date Axis:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Average Position:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Average Position:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:Average Position:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='CPA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPA]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Click Conversions])' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPA]' derivation='User' name='[usr:CPA:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:CPA:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:CPA:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:CPA:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>CPA:&#9;</run>
                <run>&lt;[advertiser_data].[usr:CPA:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:CPA:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='CPC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CPC</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Grouping Parameter:nk]'>
            <groupfilter function='level-members' level='[none:Grouping Parameter:nk]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Grouping Parameter:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:CPC:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:CPC:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:CPC:qk]' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[none:Date Axis:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[advertiser_data].[none:Grouping Parameter:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>CPC:&#9;</run>
                <run>&lt;[advertiser_data].[usr:CPC:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:CPC:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='CTR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CTR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:CTR:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:CTR:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:CTR:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[advertiser_data].[none:Grouping Parameter:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>CTR:&#9;</run>
                <run>&lt;[advertiser_data].[usr:CTR:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:CTR:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='CVR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CVR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Click CVR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversions])/sum([Clicks])' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click CVR]' derivation='User' name='[usr:Click CVR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Click CVR:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Click CVR:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Click CVR:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Click CVR:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Click CVR:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:Click CVR:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Clicks for Topline'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Clicks</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Grouping Parameter:nk]'>
            <groupfilter function='level-members' level='[none:Grouping Parameter:nk]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Grouping Parameter:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[none:Date Axis:qk]' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[sum:Clicks:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[sum:Clicks:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[sum:Clicks:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[advertiser_data].[none:Grouping Parameter:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Clicks:&#9;</run>
                <run>&lt;[advertiser_data].[sum:Clicks:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[sum:Clicks:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Comparison 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>[Parameters].[Graph Parameter 1]</run>
            <run bold='true'>&gt;</run>
            <run bold='true'> and </run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[Parameters].[Graph Parameter 2]</run>
            <run bold='true'>&gt;</run>
            <run bold='true'> for </run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[Parameters].[Advertiser]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column datatype='string' name='[Graph Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Impressions&quot;'>
              <calculation class='tableau' formula='&quot;Impressions&quot;' />
              <members>
                <member value='&quot;Cost&quot;' />
                <member value='&quot;Average Position&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Revenue&quot;' />
                <member value='&quot;ROI&quot;' />
                <member value='&quot;CVR&quot;' />
                <member value='&quot;CPA&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;Clicks&quot;' />
                <member value='&quot;Impressions&quot;' />
              </members>
            </column>
            <column datatype='string' name='[Graph Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Clicks&quot;'>
              <calculation class='tableau' formula='&quot;Clicks&quot;' />
              <members>
                <member value='&quot;Cost&quot;' />
                <member value='&quot;Average Position&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Revenue&quot;' />
                <member value='&quot;ROI&quot;' />
                <member value='&quot;CVR&quot;' />
                <member value='&quot;CPA&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;Clicks&quot;' />
                <member value='&quot;Impressions&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Graph Metric 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Graph Parameter 1]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Graph Metric 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Graph Parameter 2]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Graph Metric 1]' derivation='User' name='[usr:Graph Metric 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Graph Metric 2]' derivation='User' name='[usr:Graph Metric 2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[usr:Graph Metric 1:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 1:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Graph Metric 1:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Graph Metric 1:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Graph Metric 1:qk]' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Graph Metric 2:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Graph Metric 2:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Graph Metric 2:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Graph Parameter 1]' value='Left Axis Metric (Blue)'>
              <formatted-text>
                <run>Left Axis Metric (Blue)</run>
              </formatted-text>
            </format>
            <format attr='title' field='[Parameters].[Graph Parameter 2]' value='Right Axis Metric (Orange)'>
              <formatted-text>
                <run>Right Axis Metric (Orange)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 1]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 1:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 2]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 2:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[advertiser_data].[usr:Graph Metric 1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 1]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 1:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 2]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 2:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[advertiser_data].[usr:Graph Metric 2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 1]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 1:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 2]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 2:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([advertiser_data].[usr:Graph Metric 1:qk] + [advertiser_data].[usr:Graph Metric 2:qk])</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Comparison 2a'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>[Parameters].[Graph Parameter 1]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column datatype='string' name='[Graph Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Impressions&quot;'>
              <calculation class='tableau' formula='&quot;Impressions&quot;' />
              <members>
                <member value='&quot;Cost&quot;' />
                <member value='&quot;Average Position&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Revenue&quot;' />
                <member value='&quot;ROI&quot;' />
                <member value='&quot;CVR&quot;' />
                <member value='&quot;CPA&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;Clicks&quot;' />
                <member value='&quot;Impressions&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Graph Metric 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Graph Parameter 1]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Graph Metric 1]' derivation='User' name='[usr:Graph Metric 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[usr:Graph Metric 1:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 1:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 1:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Parameters].[Graph Parameter 1]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[Parameters].[Graph Parameter 1]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Graph Metric 1:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Graph Metric 1:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Graph Metric 1:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[advertiser_data].[none:Grouping Parameter:nk]' value='Grouping'>
              <formatted-text>
                <run>Grouping</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[Parameters].[Grouping Parameter]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 1]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 1:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Graph Parameter 1] * [advertiser_data].[usr:Graph Metric 1:qk])</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Comparison 2b'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>[Parameters].[Graph Parameter 2]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column datatype='string' name='[Graph Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Clicks&quot;'>
              <calculation class='tableau' formula='&quot;Clicks&quot;' />
              <members>
                <member value='&quot;Cost&quot;' />
                <member value='&quot;Average Position&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Revenue&quot;' />
                <member value='&quot;ROI&quot;' />
                <member value='&quot;CVR&quot;' />
                <member value='&quot;CPA&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;Clicks&quot;' />
                <member value='&quot;Impressions&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Graph Metric 2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Graph Parameter 2]&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Graph Metric 2]' derivation='User' name='[usr:Graph Metric 2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Graph Metric 2:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[Parameters].[Graph Parameter 2]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Graph Metric 2:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Graph Metric 2:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Graph Metric 2:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[advertiser_data].[none:Grouping Parameter:nk]' value='Grouping'>
              <formatted-text>
                <run>Grouping</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[Parameters].[Grouping Parameter]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>&lt;[Parameters].[Graph Parameter 2]&gt;:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Graph Metric 2:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Graph Parameter 2] * [advertiser_data].[usr:Graph Metric 2:qk])</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Conversion per X'>
      <table>
        <view>
          <datasources>
            <datasource name='cvr_data' />
          </datasources>
          <datasource-dependencies datasource='cvr_data'>
            <column datatype='real' default-format='p0.00%' name='[Conversions per Click]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Advertiser Conversions])/sum([Clicks])' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Conversions per Flight Path Visit]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Publisher Conversions])/sum([Flight Path Visits])' />
            </column>
            <column datatype='string' name='[Date Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &gt;= TODAY() THEN &quot;Remove&quot; &#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Precheck Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Ratio - CVR/CVpFPV]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Conversions per Click]/[Conversions per Flight Path Visit]' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Date Filter]' derivation='None' name='[none:Date Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Precheck Type]' derivation='None' name='[none:Precheck Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Conversions per Click]' derivation='User' name='[usr:Conversions per Click:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Conversions per Flight Path Visit]' derivation='User' name='[usr:Conversions per Flight Path Visit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ratio - CVR/CVpFPV]' derivation='User' name='[usr:Ratio - CVR/CVpFPV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[cvr_data].[none:Date Filter:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Date Filter:nk]' />
              <groupfilter function='member' level='[none:Date Filter:nk]' member='&quot;Remove&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[cvr_data].[none:Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[cvr_data].[none:Display Type:nk]'>
            <groupfilter function='member' level='[none:Display Type:nk]' member='&quot;DESKTOP&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[cvr_data].[none:Precheck Type:nk]'>
            <groupfilter function='member' level='[none:Precheck Type:nk]' member='&quot;NON_PRECHECKS_ONLY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[cvr_data].[none:Date Filter:nk]</column>
            <column>[cvr_data].[none:Date:qk]</column>
            <column>[cvr_data].[none:Precheck Type:nk]</column>
            <column>[cvr_data].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[cvr_data].[twk:Date:qk]' scope='cols' value=' ' />
            <format attr='subtitle' class='0' field='[cvr_data].[twk:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[cvr_data].[twk:Date:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[cvr_data].[usr:Conversions per Flight Path Visit:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[cvr_data].[usr:Conversions per Flight Path Visit:qk]' scope='rows' value='true' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='subtitle' class='0' field='[cvr_data].[usr:Conversions per Click:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[cvr_data].[usr:Conversions per Click:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[cvr_data].[usr:Conversions per Flight Path Visit:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.0050000000000000001' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[cvr_data].[usr:Conversions per Click:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.01' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[cvr_data].[none:Site:nk]' value='bold' />
            <format attr='font-size' field='[cvr_data].[none:Site:nk]' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#d7d7d7' />
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#d7d7d7' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='5' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[cvr_data].[none:Site:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[cvr_data].[usr:Conversions per Click:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[cvr_data].[none:Site:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[cvr_data].[usr:Conversions per Flight Path Visit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[cvr_data].[none:Site:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[cvr_data].[usr:Ratio - CVR/CVpFPV:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[cvr_data].[none:Site:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([cvr_data].[usr:Conversions per Click:qk] + ([cvr_data].[usr:Conversions per Flight Path Visit:qk] + [cvr_data].[usr:Ratio - CVR/CVpFPV:qk]))</rows>
        <cols>[cvr_data].[twk:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#686868'>We were down for some days these weeks</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[cvr_data].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[cvr_data].[none:Site:nk]</field>
                        <field>[cvr_data].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[cvr_data].[none:Site:nk]</field>
                      <field>[cvr_data].[twk:Date:qk]</field>
                      <field>[cvr_data].[:Measure Names]</field>
                      <field>[cvr_data].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Expedia&quot;</value>
                    <value>#2011-10-02 00:00:00#</value>
                    <value>&quot;[cvr_data].[usr:Conversions per Flight Path Visit:qk]&quot;</value>
                    <value>0.036348049632708261</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='133' y='-71' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[cvr_data].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[cvr_data].[none:Site:nk]</field>
                        <field>[cvr_data].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[cvr_data].[none:Site:nk]</field>
                      <field>[cvr_data].[twk:Date:qk]</field>
                      <field>[cvr_data].[:Measure Names]</field>
                      <field>[cvr_data].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Expedia&quot;</value>
                    <value>#2012-01-01 00:00:00#</value>
                    <value>&quot;[cvr_data].[usr:Conversions per Flight Path Visit:qk]&quot;</value>
                    <value>0.02580199294752622</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-87' y='-95' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#686868'>We were down for some days these weeks.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2011-10-02 00:55:50.749900#'>
                  <node-reference>
                    <axis>[cvr_data].[twk:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.03611010952401781'>
                  <node-reference>
                    <axis>[cvr_data].[usr:Conversions per Flight Path Visit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='141' y='23' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run>Æ </run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2012-01-01 03:13:59.520600#'>
                  <node-reference>
                    <axis>[cvr_data].[twk:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.025421999092409709'>
                  <node-reference>
                    <axis>[cvr_data].[usr:Conversions per Flight Path Visit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='-136' y='-28' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Cost'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run bold='true'>Spend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Auction Position Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Average Position - Negative]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='5-[Average Position]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Average Position]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(sum([Auction Position Sum])) or ISNULL(sum([Impressions])) THEN&#13;&#10;NULL&#13;&#10;ELSE &#13;&#10;sum([Auction Position Sum])/sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Capped CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [CTR] &lt; 0.1 THEN [CTR] END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Click AOV]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Revenue])/sum([Click Conversions])' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Click CVR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversions])/sum([Clicks])' />
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Click Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Exposed Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Auction Position Sum]' derivation='Sum' name='[sum:Auction Position Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Revenue]' derivation='Sum' name='[sum:Click Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Revenue]' derivation='Sum' name='[sum:Exposed Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position - Negative]' derivation='User' name='[usr:Average Position - Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position]' derivation='User' name='[usr:Average Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capped CTR]' derivation='User' name='[usr:Capped CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click AOV]' derivation='User' name='[usr:Click AOV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click CVR]' derivation='User' name='[usr:Click CVR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Auction Position Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position - Negative:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Capped CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Click AOV:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Click CVR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Click Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Exposed Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[sum:Spend:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[sum:Spend:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[sum:Spend:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Spend:&#9;</run>
                <run>&lt;[advertiser_data].[sum:Spend:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0573683977127075' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[sum:Spend:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Data Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'> Performance by </run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[Parameters].[Time Frame]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Average Position]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(sum([Auction Position Sum])) or ISNULL(sum([Impressions])) THEN&#13;&#10;NULL&#13;&#10;ELSE &#13;&#10;sum([Auction Position Sum])/sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Click AOV]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Revenue])/sum([Click Conversions])' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Click CVR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversions])/sum([Clicks])' />
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Click Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date by]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column caption='Advertiser Selection' datatype='string' name='[Grouping Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Advertiser Name]&#13;&#10;ELSE &quot;Total&quot;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Sort for Grouping - Table]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Sort - Table]&#13;&#10;WHEN &quot;Impressions&quot; THEN sum([Impressions])&#13;&#10;WHEN &quot;Clicks&quot; THEN sum([Clicks])&#13;&#10;WHEN &quot;Cost&quot; THEN sum([Spend])&#13;&#10;WHEN &quot;Click Conversions&quot; THEN sum([Click Conversions])&#13;&#10;WHEN &quot;Click Revenue&quot; THEN sum([Click Revenue])&#13;&#10;WHEN &quot;Average Position&quot; THEN [Average Position]&#13;&#10;WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;WHEN &quot;Click CVR&quot; THEN [Click CVR]&#13;&#10;WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;WHEN &quot;Click CPA&quot; THEN [Click CPA]&#13;&#10;WHEN &quot;Click ROI&quot; THEN [Click ROI]&#13;&#10;WHEN &quot;Click AOV&quot; THEN [Click AOV]&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date by]' derivation='None' name='[none:Date by:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter (copy)]' derivation='None' name='[none:Grouping Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Revenue]' derivation='Sum' name='[sum:Click Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position]' derivation='User' name='[usr:Average Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click AOV]' derivation='User' name='[usr:Click AOV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click CVR]' derivation='User' name='[usr:Click CVR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sort for Grouping - Table]' derivation='User' name='[usr:Sort for Grouping - Table:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Click Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Click CVR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Click AOV:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[advertiser_data].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[advertiser_data].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[sum:Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[sum:Click Revenue:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Average Position:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Click CVR:qk]&quot;</bucket>
              <bucket>&quot;[advertiser_data].[usr:Click AOV:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[advertiser_data].[none:Date by:ok]' direction='DESC' />
          <sort class='computed' column='[advertiser_data].[none:Grouping Parameter:nk]' direction='DESC' using='[advertiser_data].[usr:Sort for Grouping - Table:qk]'>
          </sort>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[advertiser_data].[:Measure Names]' value='152' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[advertiser_data].[:Measure Names]' value='34' />
            <format attr='width' field='[advertiser_data].[none:Grouping Parameter:nk]' value='100' />
            <format attr='width' field='[advertiser_data].[none:Date by:ok]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[advertiser_data].[:Measure Names]' value='bold' />
            <format attr='text-align' field='[advertiser_data].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[advertiser_data].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([advertiser_data].[none:Date by:ok] / ([advertiser_data].[none:Grouping Parameter (copy):nk] / [advertiser_data].[none:Grouping Parameter:nk]))</rows>
        <cols>[advertiser_data].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Impression Share'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run bold='true'>Impression Share</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Auction Position Sum]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Average Position - Negative]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='5-[Average Position]' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Average Position]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(sum([Auction Position Sum])) or ISNULL(sum([Impressions])) THEN&#13;&#10;NULL&#13;&#10;ELSE &#13;&#10;sum([Auction Position Sum])/sum([Impressions])&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Capped CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [CTR] &lt; 0.1 THEN [CTR] END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Click AOV]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Revenue])/sum([Click Conversions])' />
            </column>
            <column datatype='real' default-format='p0.00%' name='[Click CVR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Conversions])/sum([Clicks])' />
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Click Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Exposed Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Eligible Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Auction Position Sum]' derivation='Sum' name='[sum:Auction Position Sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Revenue]' derivation='Sum' name='[sum:Click Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Revenue]' derivation='Sum' name='[sum:Exposed Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position - Negative]' derivation='User' name='[usr:Average Position - Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position]' derivation='User' name='[usr:Average Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capped CTR]' derivation='User' name='[usr:Capped CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click AOV]' derivation='User' name='[usr:Click AOV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click CVR]' derivation='User' name='[usr:Click CVR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impression Share]' derivation='User' name='[usr:Impression Share:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Auction Position Sum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Average Position - Negative:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Capped CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Click AOV:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[usr:Click CVR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Click Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Exposed Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[advertiser_data].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Site:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Impression Share:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Impression Share:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[advertiser_data].[usr:Impression Share:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:Impression Share:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:Impression Share:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:Impression Share:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Impression Share:&#9;</run>
                <run>&lt;[advertiser_data].[usr:Impression Share:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:Impression Share:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Impressions'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run bold='true'>Impressions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Ad Group]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Campaign]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Ad Group]' derivation='None' name='[none:Ad Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Campaign]' derivation='None' name='[none:Campaign:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[none:Ad Group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ad Group:nk]' />
              <groupfilter function='member' level='[none:Ad Group:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Campaign:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Campaign:nk]' />
              <groupfilter function='member' level='[none:Campaign:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Grouping Parameter:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Grouping Parameter:nk]' />
              <groupfilter function='member' level='[none:Grouping Parameter:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[none:Grouping Parameter:nk]</column>
            <column>[advertiser_data].[none:Campaign:nk]</column>
            <column>[advertiser_data].[none:Ad Group:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[sum:Impressions:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[sum:Impressions:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[sum:Impressions:qk]' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[none:Date Axis:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[none:Date Axis:qk]' value='false' />
            <format attr='alternate-text' field='[advertiser_data].[sum:Impressions:qk]' value='NULL' />
            <format attr='display-alternate-text' field='[advertiser_data].[sum:Impressions:qk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Impressions:&#9;</run>
                <run>&lt;[advertiser_data].[sum:Impressions:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1226881742477417' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[sum:Impressions:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='ROI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' name='[ROI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Click Revenue])/sum([Spend])' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ROI]' derivation='User' name='[usr:ROI:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Site:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[usr:ROI:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[usr:ROI:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[usr:ROI:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Click ROI:&#9;</run>
                <run>&lt;[advertiser_data].[usr:ROI:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[usr:ROI:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Click Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Frame]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN [Date of Week]&#13;&#10;WHEN &quot;Month&quot; THEN [Date of Month]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Full Time Frames] = &quot;True&quot;&#13;&#10;THEN (IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END)&#13;&#10;ELSE &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Grouping Parameter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Grouping Parameter]&#13;&#10;WHEN &quot;All&quot; THEN [Advertiser Name]&#13;&#10;WHEN &quot;Campaign&quot; THEN [Campaign]&#13;&#10;WHEN &quot;Campaign + Ad Group&quot; THEN [Calculation_8291016103909586]&#13;&#10;WHEN &quot;Site&quot; THEN [Site]&#13;&#10;WHEN &quot;Advertiser Segment&quot; THEN [Advertiser Segment]&#13;&#10;WHEN &quot;Total Network&quot; THEN &quot;TAll Selected Advertisers&quot;&#13;&#10;WHEN &quot;Product Category&quot; THEN [Product Category Type]&#13;&#10;WHEN &quot;Region&quot; THEN [Region]&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;BUDGETAIR&quot;' value='BudgetAir' />
                <alias key='&quot;CHEAPTICKETS&quot;' value='CheapTickets' />
                <alias key='&quot;EXPEDIA&quot;' value='Expedia' />
                <alias key='&quot;ORBITZ_GLOBAL&quot;' value='Orbitz Global' />
                <alias key='&quot;VAYAMA&quot;' value='Vayama' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='None' name='[none:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grouping Parameter]' derivation='None' name='[none:Grouping Parameter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Revenue]' derivation='Sum' name='[sum:Click Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[advertiser_data].[:Measure Names]</column>
            <column>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[none:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[advertiser_data].[sum:Click Revenue:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='omit-on-special' field='[advertiser_data].[sum:Click Revenue:qk]' value='true' />
            <format attr='break-on-special' field='[advertiser_data].[sum:Click Revenue:qk]' value='true' />
            <format attr='show-null-value-warning' field='[advertiser_data].[sum:Click Revenue:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[advertiser_data].[none:Grouping Parameter:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Color:&#9;</run>
                <run>&lt;[advertiser_data].[none:Grouping Parameter:nk]&gt;&#10;</run>
                <run bold='true'>Date Axis:&#9;</run>
                <run>&lt;[advertiser_data].[none:Date Axis:qk]&gt;&#10;</run>
                <run bold='true'>Click Revenue:&#9;</run>
                <run>&lt;[advertiser_data].[sum:Click Revenue:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.3073563277721405' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[advertiser_data].[sum:Click Revenue:qk]</rows>
        <cols>[advertiser_data].[none:Date Axis:qk]</cols>
        <show-full-range>
          <column>[advertiser_data].[Date Axis]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Tornado - Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Spend&#10;</run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[advertiser_data].[none:Ref Day:qk]</run>
            <run bold='true'>&gt;</run>
            <run bold='true'> vs. </run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[advertiser_data].[none:SDPW:qk]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column caption='ABS(Spend - D PMTD)' datatype='real' name='[Calculation_6620227135559262]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Spend - D PMTD])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Yesterday or Reference Day]&#13;&#10;WHEN &quot;Yesterday&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Reference Day&quot; THEN [Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Ref Day] -7' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - D SDPW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(ifnull([Spend - Ref Day],0)) - sum(ifnull([Spend - SDPW],0))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='None' name='[none:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPW]' derivation='None' name='[none:SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6620227135559262]' derivation='User' name='[usr:Calculation_6620227135559262:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend - D SDPW]' derivation='User' name='[usr:Spend - D SDPW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[advertiser_data].[usr:Calculation_6620227135559262:qk]' included-values='in-range'>
            <min>0.01</min>
          </filter>
          <slices>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[usr:Calculation_6620227135559262:qk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[usr:Spend - D SDPW:qk]' scope='cols' value='Spend' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Spend - D SDPW:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Spend - D SDPW:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[advertiser_data].[none:Advertiser Name:nk]' value='160' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[advertiser_data].[usr:Spend - D SDPW:qk]' max='11.09' min='-11.09' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[advertiser_data].[usr:Spend - D SDPW:qk]' />
              <lod column='[advertiser_data].[none:Ref Day:qk]' />
              <lod column='[advertiser_data].[none:SDPW:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[advertiser_data].[none:Advertiser Name:nk]</rows>
        <cols>[advertiser_data].[usr:Spend - D SDPW:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tornado - MTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Spend&#10;Current MTD vs. Previous MTD</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column caption='ABS(Spend - D PMTD)' datatype='real' name='[Calculation_6620227135559262]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Spend - D PMTD])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - D PMTD]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(ifnull([Spend - MTD],0)) - sum(ifnull([Spend - PMTD],0))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6620227135559262]' derivation='User' name='[usr:Calculation_6620227135559262:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend - D PMTD]' derivation='User' name='[usr:Spend - D PMTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[advertiser_data].[usr:Calculation_6620227135559262:qk]' included-values='in-range'>
            <min>0.01</min>
          </filter>
          <slices>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[usr:Calculation_6620227135559262:qk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[advertiser_data].[none:Advertiser Name:nk]' value='160' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[advertiser_data].[usr:Spend - D PMTD:qk]' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[advertiser_data].[usr:Spend - D PMTD:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[advertiser_data].[none:Advertiser Name:nk]</rows>
        <cols>[advertiser_data].[usr:Spend - D PMTD:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tornado - Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Spend&#10;WE </run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[advertiser_data].[none:Ref Day:qk]</run>
            <run bold='true'>&gt;</run>
            <run bold='true'> vs. WE </run>
            <run bold='true'>&lt;</run>
            <run bold='true'>[advertiser_data].[none:SDPW:qk]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='advertiser_data' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='advertiser_data'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column caption='Precheck' datatype='string' name='[Calculation_1700907132435113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;NON_PRECHECKS_ONLY&quot; THEN &quot;Non-Prechecks&quot;&#13;&#10;ELSEIF ISNULL([Precheck Type]) OR [Precheck Type] = &quot;PRECHECKS_ONLY&quot; THEN &quot;Prechecks&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Region Filter' datatype='boolean' name='[Calculation_6550404114703346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Is Leap Year Parameter] = &quot;Total&quot; OR [Parameters].[Is Leap Year Parameter] = [Region]' scope-isolation='false' />
            </column>
            <column caption='ABS(Spend - D PMTD)' datatype='real' name='[Calculation_6620227135559262]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Spend - D PMTD])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;    WHEN [Product Category Type] THEN &quot;Keep&quot; &#13;&#10;    ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Ref Day]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Yesterday or Reference Day]&#13;&#10;WHEN &quot;Yesterday&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Reference Day&quot; THEN [Parameters].[Reference Day]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[SDPW]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Ref Day] -7' />
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Spend - D PW]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(ifnull([Spend - Ref Week],0)) - sum(ifnull([Spend - PW],0))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Time Span Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Time Span]&#13;&#10;WHEN &quot;52 Weeks&quot; THEN&#13;&#10;//Pull 52 weeks from the beginning of the last full week&#13;&#10;    CASE [Parameters].[Week Start]&#13;&#10;    WHEN &quot;Sunday&quot; THEN IF [Date] &gt;= DATE(DATETRUNC(&apos;week&apos;,[Ref Day]))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    WHEN &quot;Monday&quot; THEN IF [Date] &gt;= (DATE(DATETRUNC(&apos;week&apos;,[Ref Day]-1)+1))-364 THEN &quot;Keep&quot; ELSE &quot;Exclude&quot; END&#13;&#10;    END&#13;&#10;WHEN &quot;All Time&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1700907132435113]' derivation='None' name='[none:Calculation_1700907132435113:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6550404114703346]' derivation='None' name='[none:Calculation_6550404114703346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ref Day]' derivation='None' name='[none:Ref Day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SDPW]' derivation='None' name='[none:SDPW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time Span Filter]' derivation='None' name='[none:Time Span Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6620227135559262]' derivation='User' name='[usr:Calculation_6620227135559262:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend - D PW]' derivation='User' name='[usr:Spend - D PW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[advertiser_data].[none:Site:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Site:nk]' />
              <groupfilter function='member' level='[none:Site:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[advertiser_data].[usr:Calculation_6620227135559262:qk]' included-values='in-range'>
            <min>0.01</min>
          </filter>
          <slices>
            <column>[advertiser_data].[none:Time Span Filter:nk]</column>
            <column>[advertiser_data].[none:Site:nk]</column>
            <column>[advertiser_data].[none:Product Category Filter:nk]</column>
            <column>[advertiser_data].[usr:Calculation_6620227135559262:qk]</column>
            <column>[advertiser_data].[none:Calculation_6550404114703346:nk]</column>
            <column>[advertiser_data].[none:Advertiser Name:nk]</column>
            <column>[advertiser_data].[none:Calculation_1700907132435113:nk]</column>
            <column>[advertiser_data].[none:Display Type:nk]</column>
            <column>[advertiser_data].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[advertiser_data].[usr:Spend - D PW:qk]' scope='cols' value='Spend' />
            <format attr='subtitle' class='0' field='[advertiser_data].[usr:Spend - D PW:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[advertiser_data].[usr:Spend - D PW:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[advertiser_data].[none:Advertiser Name:nk]' value='160' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[advertiser_data].[usr:Spend - D PW:qk]' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[advertiser_data].[usr:Spend - D PW:qk]' />
              <lod column='[advertiser_data].[none:Ref Day:qk]' />
              <lod column='[advertiser_data].[none:SDPW:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[advertiser_data].[none:Advertiser Name:nk]</rows>
        <cols>[advertiser_data].[usr:Spend - D PW:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Advertiser Data Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='2000' maxwidth='1800' minheight='2000' minwidth='1800' />
      <zones>
        <zone h='100000' id='14' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='2' type='layout-basic' w='99778' x='0' y='0'>
                <zone h='94467' id='1' name='Advertiser Data' show-title='true' w='88567' x='0' y='5533'>
                </zone>
                <zone h='5533' id='8' type='title' w='99778' x='0' y='0'>
                </zone>
                <zone fixed-size='160' h='94467' id='3' is-fixed='true' param='vert' type='layout-flow' w='11211' x='88567' y='5533'>
                  <zone h='2550' id='16' name='Advertiser Data' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' w='11211' x='88567' y='5533'>
                  </zone>
                  <zone h='5000' id='17' name='Advertiser Data' param='[advertiser_data].[none:Precheck Type:nk]' type='filter' w='11211' x='88567' y='8083'>
                  </zone>
                  <zone h='5000' id='18' name='Advertiser Data' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='11211' x='88567' y='13083'>
                  </zone>
                  <zone h='2500' id='15' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='11211' x='88567' y='18083'>
                  </zone>
                  <zone h='2500' id='13' param='[Parameters].[Product Category]' type='paramctrl' w='11211' x='88567' y='20583'>
                  </zone>
                  <zone h='2500' id='5' param='[Parameters].[Time Frame]' type='paramctrl' w='11211' x='88567' y='23083'>
                  </zone>
                  <zone h='3100' id='6' param='[Parameters].[Yesterday or Reference Day]' type='paramctrl' w='11211' x='88567' y='25583'>
                    <formatted-text>
                      <run>Yesterday or &#10;Reference Day</run>
                    </formatted-text>
                  </zone>
                  <zone h='2350' id='7' param='[Parameters].[Reference Day]' type='paramctrl' w='11211' x='88567' y='28683'>
                  </zone>
                  <zone h='3150' id='11' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='11211' x='88567' y='31033'>
                  </zone>
                  <zone h='2500' id='12' type='text' w='11211' x='88567' y='34183'>
                    <formatted-text>
                      <run fontsize='9'>You must set &#10;</run>
                      <run bold='true' fontsize='9'>Only Full Time Frames = False&#10;</run>
                      <run fontsize='9'>for this page</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Advertiser Tornados'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Advertiser Tornados</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1900' maxwidth='1500' minheight='1900' minwidth='1500' />
      <zones>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2107' id='11' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='97682' id='8' param='horz' type='layout-flow' w='100000' x='0' y='2107'>
              <zone h='97682' id='6' param='vert' type='layout-flow' w='89333' x='0' y='2107'>
                <zone h='97682' id='4' type='layout-basic' w='89333' x='0' y='2107'>
                  <zone h='97682' id='1' name='Tornado - Day' show-title='true' w='30565' x='0' y='2107'>
                  </zone>
                  <zone h='97682' id='2' name='Tornado - Week' show-title='true' w='28267' x='30565' y='2107'>
                  </zone>
                  <zone h='97682' id='3' name='Tornado - MTD' show-title='true' w='30501' x='58832' y='2107'>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='97682' id='7' is-fixed='true' param='vert' type='layout-flow' w='10667' x='89333' y='2107'>
                <zone h='2633' id='13' param='[Parameters].[Product Category]' type='paramctrl' w='10667' x='89333' y='2107'>
                </zone>
                <zone h='2633' id='14' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='10667' x='89333' y='4740'>
                </zone>
                <zone h='3264' id='9' param='[Parameters].[Yesterday or Reference Day]' type='paramctrl' w='10667' x='89333' y='7373'>
                  <formatted-text>
                    <run>Yesterday or&#10;Reference Day</run>
                  </formatted-text>
                </zone>
                <zone h='2475' id='10' param='[Parameters].[Reference Day]' type='paramctrl' w='10667' x='89333' y='10637'>
                </zone>
                <zone h='5264' id='15' name='Tornado - Day' param='[advertiser_data].[none:Precheck Type:nk]' type='filter' w='10667' x='89333' y='13112'>
                </zone>
                <zone h='5264' id='16' name='Tornado - Week' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='10667' x='89333' y='18376'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='CVR vs Conversion per FPV'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run>Conversions per Click vs. Conversions per Flight Path Visit</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='1' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='24' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='29' type='layout-basic' w='83000' x='0' y='0'>
              <zone h='8250' id='19' param='vert' type='layout-flow' w='83000' x='0' y='0'>
                <zone fixed-size='67' h='8250' id='18' is-fixed='true' type='layout-basic' w='83000' x='0' y='0'>
                  <zone h='8250' id='20' type='title' w='83000' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
              <zone h='91750' id='30' param='vert' type='layout-flow' w='83000' x='0' y='8250'>
                <zone h='91250' id='22' name='Conversion per X' w='83000' x='0' y='8250'>
                  <layout-cache minheight='339' type-h='scalable' type-w='fixed' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='204' h='100000' id='23' is-fixed='true' param='vert' type='layout-flow' w='17000' x='83000' y='0'>
              <zone h='8250' id='25' name='Conversion per X' param='[cvr_data].[none:Site:nk]' type='color' w='17000' x='83000' y='0'>
              </zone>
              <zone h='8125' id='26' name='Conversion per X' param='[cvr_data].[none:Date:qk]' type='filter' w='17000' x='83000' y='8250'>
              </zone>
              <zone h='6375' id='27' name='Conversion per X' param='[cvr_data].[none:Precheck Type:nk]' type='filter' w='17000' x='83000' y='16375'>
              </zone>
              <zone h='10250' id='28' name='Conversion per X' param='[cvr_data].[none:Display Type:nk]' type='filter' w='17000' x='83000' y='22750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Graph Parameter 1]</run>
            <run fontalignment='0'>&gt;</run>
            <run fontalignment='0'> vs. </run>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Graph Parameter 2]</run>
            <run fontalignment='0'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' value='auto' />
          <format attr='text-align' id='dash-text_29' value='left' />
          <format attr='vertical-align' id='dash-text_29' value='top' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='76' h='9500' id='12' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='9500' id='30' name='Advertiser Name' show-title='true' w='100000' x='0' y='0'>
                </zone>
              </zone>
              <zone h='90500' id='4' param='horz' type='layout-flow' w='100000' x='0' y='9500'>
                <zone h='90500' id='2' type='layout-basic' w='99667' x='0' y='9500'>
                  <zone h='90500' id='1' name='Comparison 1' show-title='true' w='85667' x='0' y='9500'>
                  </zone>
                  <zone fixed-size='160' h='90500' id='16' is-fixed='true' param='vert' type='layout-flow' w='14000' x='85667' y='9500'>
                    <zone h='6375' id='28' name='Comparison 1' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' w='14000' x='85667' y='9500'>
                    </zone>
                    <zone h='12500' id='31' name='Comparison 1' param='[advertiser_data].[none:Precheck Type:nk]' type='filter' w='14000' x='85667' y='15875'>
                    </zone>
                    <zone h='12500' id='32' name='Comparison 1' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='14000' x='85667' y='28375'>
                    </zone>
                    <zone h='6250' id='27' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='14000' x='85667' y='40875'>
                    </zone>
                    <zone h='6250' id='19' param='[Parameters].[Product Category]' type='paramctrl' w='14000' x='85667' y='47125'>
                    </zone>
                    <zone h='6250' id='20' param='[Parameters].[Week Start]' type='paramctrl' w='14000' x='85667' y='53375'>
                    </zone>
                    <zone h='6250' id='21' param='[Parameters].[Time Frame]' type='paramctrl' w='14000' x='85667' y='59625'>
                    </zone>
                    <zone h='6250' id='22' param='[Parameters].[Time Span]' type='paramctrl' w='14000' x='85667' y='65875'>
                    </zone>
                    <zone h='6250' id='23' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='14000' x='85667' y='72125'>
                    </zone>
                    <zone h='8125' id='24' name='Comparison 1' param='[advertiser_data].[none:Date:qk]' type='filter' w='14000' x='85667' y='78375'>
                    </zone>
                    <zone h='6250' id='25' param='[Parameters].[Graph Parameter 1]' type='paramctrl' w='14000' x='85667' y='86500'>
                      <formatted-text>
                        <run fontcolor='#0062c4'>Left Axis Metric (Blue)</run>
                      </formatted-text>
                    </zone>
                    <zone h='6250' id='26' param='[Parameters].[Graph Parameter 2]' type='paramctrl' w='14000' x='85667' y='92750'>
                      <formatted-text>
                        <run fontcolor='#ff8000'>Right Axis Metric (Orange)</run>
                      </formatted-text>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison by Group'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Advertiser]</run>
            <run fontalignment='0'>&gt;</run>
            <run fontalignment='0'>: </run>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Graph Parameter 1]</run>
            <run fontalignment='0'>&gt;</run>
            <run fontalignment='0'> vs. </run>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Graph Parameter 2]</run>
            <run fontalignment='0'>&gt;</run>
            <run fontalignment='0'> by </run>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Grouping Parameter]</run>
            <run fontalignment='0'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_26' value='left' />
          <format attr='vertical-align' id='dash-text_26' value='top' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1200' minheight='1000' minwidth='1200' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='73' h='7300' id='15' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='7300' id='27' name='Advertiser Name' show-title='true' w='100000' x='0' y='0'>
              </zone>
            </zone>
            <zone h='92700' id='4' param='horz' type='layout-flow' w='100000' x='0' y='7300'>
              <zone h='92700' id='2' type='layout-basic' w='84333' x='0' y='7300'>
                <zone h='46355' id='1' name='Comparison 2a' show-title='true' w='84333' x='0' y='7300'>
                </zone>
                <zone h='46345' id='11' name='Comparison 2b' show-title='true' w='84333' x='0' y='53655'>
                </zone>
              </zone>
              <zone fixed-size='188' h='92700' id='19' is-fixed='true' type='layout-basic' w='15667' x='84333' y='7300'>
                <zone h='46400' id='3' param='vert' type='layout-flow' w='15667' x='84333' y='7300'>
                  <zone fixed-size='43' h='5100' id='28' is-fixed='true' name='Advertiser Name' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' w='15667' x='84333' y='7300'>
                  </zone>
                  <zone fixed-size='81' h='8900' id='29' is-fixed='true' name='Comparison 2a' param='[advertiser_data].[none:Precheck Type:nk]' type='filter' w='15667' x='84333' y='12400'>
                  </zone>
                  <zone fixed-size='96' h='10400' id='30' is-fixed='true' name='Comparison 2a' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='15667' x='84333' y='21300'>
                  </zone>
                  <zone fixed-size='47' h='5500' id='25' is-fixed='true' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='15667' x='84333' y='31700'>
                  </zone>
                  <zone fixed-size='50' h='5800' id='24' is-fixed='true' param='[Parameters].[Product Category]' type='paramctrl' w='15667' x='84333' y='37200'>
                  </zone>
                  <zone fixed-size='24' h='3200' id='8' is-fixed='true' param='[Parameters].[Week Start]' type='paramctrl' w='15667' x='84333' y='43000'>
                  </zone>
                  <zone h='7500' id='13' param='[Parameters].[Time Frame]' type='paramctrl' w='15667' x='84333' y='46200'>
                    <formatted-text>
                      <run>Aggregated by</run>
                    </formatted-text>
                  </zone>
                </zone>
                <zone h='33900' id='20' param='vert' type='layout-flow' w='15667' x='84333' y='66100'>
                  <zone fixed-size='93' h='8600' id='5' is-fixed='true' name='Comparison 2a' param='[advertiser_data].[none:Date:qk]' type='filter' w='15667' x='84333' y='66100'>
                  </zone>
                  <zone fixed-size='49' h='5700' id='9' is-fixed='true' param='[Parameters].[Grouping Parameter]' type='paramctrl' w='15667' x='84333' y='74700'>
                    <formatted-text>
                      <run>Color</run>
                    </formatted-text>
                  </zone>
                  <zone fixed-size='45' h='5300' id='10' is-fixed='true' param='[Parameters].[Graph Parameter 1]' type='paramctrl' w='15667' x='84333' y='80400'>
                    <formatted-text>
                      <run>Top Graph Parameter</run>
                    </formatted-text>
                  </zone>
                  <zone fixed-size='45' h='5300' id='12' is-fixed='true' param='[Parameters].[Graph Parameter 2]' type='paramctrl' w='15667' x='84333' y='85700'>
                    <formatted-text>
                      <run>Bottom Graph Parameter</run>
                    </formatted-text>
                  </zone>
                  <zone fixed-size='169' h='9000' id='6' is-fixed='true' name='Comparison 2a' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' w='15667' x='84333' y='91000'>
                  </zone>
                </zone>
                <zone h='6100' id='22' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='15667' x='84333' y='60000'>
                </zone>
                <zone h='6300' id='23' param='[Parameters].[Time Span]' type='paramctrl' w='15667' x='84333' y='53700'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Data'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>[Parameters].[Advertiser]</run>
            <run fontalignment='0'>&gt;</run>
            <run fontalignment='0'>: Data Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_28' value='left' />
          <format attr='vertical-align' id='dash-text_28' value='top' />
        </style-rule>
      </style>
      <size maxheight='1200' maxwidth='1300' minheight='1200' minwidth='1300' />
      <zones>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='72' h='6000' id='11' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='6000' id='29' name='Advertiser Name' show-title='true' w='100000' x='0' y='0'>
              </zone>
            </zone>
            <zone h='94000' id='4' param='horz' type='layout-flow' w='100000' x='0' y='6000'>
              <zone h='94000' id='2' type='layout-basic' w='87154' x='0' y='6000'>
                <zone h='94000' id='1' name='Data Table' show-title='true' w='87154' x='0' y='6000'>
                </zone>
              </zone>
              <zone fixed-size='167' h='94000' id='15' is-fixed='true' type='layout-basic' w='12846' x='87154' y='6000'>
                <zone h='94000' id='3' param='vert' type='layout-flow' w='12846' x='87154' y='6000'>
                  <zone h='4249' id='27' name='Data Table' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' w='12846' x='87154' y='6000'>
                  </zone>
                  <zone h='8333' id='30' name='Data Table' param='[advertiser_data].[none:Precheck Type:nk]' type='filter' w='12846' x='87154' y='10249'>
                  </zone>
                  <zone h='4166' id='26' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='12846' x='87154' y='18582'>
                  </zone>
                  <zone h='4166' id='21' param='[Parameters].[Product Category]' type='paramctrl' w='12846' x='87154' y='22748'>
                  </zone>
                  <zone h='4166' id='7' param='[Parameters].[Week Start]' type='paramctrl' w='12846' x='87154' y='26914'>
                  </zone>
                  <zone h='4166' id='22' param='[Parameters].[Time Frame]' type='paramctrl' w='12846' x='87154' y='31080'>
                  </zone>
                  <zone h='4166' id='23' param='[Parameters].[Time Span]' type='paramctrl' w='12846' x='87154' y='35246'>
                  </zone>
                  <zone h='4166' id='19' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='12846' x='87154' y='39412'>
                  </zone>
                  <zone h='4166' id='24' param='[Parameters].[Grouping Parameter]' type='paramctrl' w='12846' x='87154' y='43578'>
                  </zone>
                  <zone h='5416' id='25' name='Data Table' param='[advertiser_data].[none:Date:qk]' type='filter' w='12846' x='87154' y='47744'>
                  </zone>
                  <zone h='8333' id='31' name='Data Table' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='12846' x='87154' y='53160'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='ROI Summary'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run fontalignment='0'>ROI Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_40' value='top' />
        </style-rule>
      </style>
      <size maxheight='1335' maxwidth='1400' minheight='1335' minwidth='1400' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='94462' id='26' param='horz' type='layout-flow' w='100000' x='0' y='5538'>
            <zone h='94462' id='24' type='layout-basic' w='86286' x='0' y='5538'>
              <zone h='94462' id='4' param='horz' type='layout-flow' w='86286' x='0' y='5538'>
                <zone h='94462' id='2' type='layout-basic' w='86286' x='0' y='5538'>
                  <zone h='31835' id='1' name='Revenue' show-title='true' w='43141' x='43145' y='36629'>
                  </zone>
                  <zone h='31536' id='9' name='ROI' show-title='true' w='43141' x='43145' y='68464'>
                  </zone>
                  <zone h='31385' id='10' name='CVR' show-title='true' w='43145' x='0' y='37079'>
                  </zone>
                  <zone h='31536' id='11' name='CPA' show-title='true' w='43145' x='0' y='68464'>
                  </zone>
                  <zone h='31541' id='22' name='CPC' show-title='true' w='43145' x='0' y='5538'>
                  </zone>
                  <zone h='31091' id='23' name='Cost' show-title='true' w='43141' x='43145' y='5538'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='192' h='94462' id='25' is-fixed='true' param='vert' type='layout-flow' w='13714' x='86286' y='5538'>
              <zone h='3746' id='37' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='13714' x='86286' y='5538'>
              </zone>
              <zone h='3746' id='30' param='[Parameters].[Product Category]' type='paramctrl' w='13714' x='86286' y='9284'>
              </zone>
              <zone h='3746' id='31' param='[Parameters].[Week Start]' type='paramctrl' w='13714' x='86286' y='13030'>
              </zone>
              <zone h='3746' id='32' param='[Parameters].[Time Frame]' type='paramctrl' w='13714' x='86286' y='16776'>
              </zone>
              <zone h='3746' id='33' param='[Parameters].[Time Span]' type='paramctrl' w='13714' x='86286' y='20522'>
              </zone>
              <zone h='3746' id='34' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='13714' x='86286' y='24268'>
              </zone>
              <zone h='3746' id='35' param='[Parameters].[Grouping Parameter]' type='paramctrl' w='13714' x='86286' y='28014'>
              </zone>
              <zone h='4870' id='36' name='CPC' param='[advertiser_data].[none:Date:qk]' type='filter' w='13714' x='86286' y='31760'>
              </zone>
              <zone h='1574' id='28' type='text' w='13714' x='86286' y='36630'>
                <formatted-text>
                  <run bold='true' fontalignment='0'>&lt;</run>
                  <run bold='true' fontalignment='0'>[Parameters].[Grouping Parameter]</run>
                  <run bold='true' fontalignment='0'>&gt;</run>
                </formatted-text>
              </zone>
              <zone h='2098' id='27' name='CPC' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' w='13714' x='86286' y='38204'>
              </zone>
              <zone h='3821' id='39' name='Advertiser Name' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' w='13714' x='86286' y='40302'>
              </zone>
              <zone h='7491' id='41' name='CPC' param='[advertiser_data].[none:Precheck Type:nk]' type='filter' w='13714' x='86286' y='44123'>
              </zone>
              <zone h='7491' id='42' name='CPC' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='13714' x='86286' y='51614'>
              </zone>
            </zone>
          </zone>
          <zone h='5538' id='38' name='Advertiser Name' show-title='true' w='100000' x='0' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Topline'>
      <layout-options export-orientation='landscape'>
        <title>
          <formatted-text>
            <run fontalignment='0'>Topline</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_53' value='top' />
        </style-rule>
      </style>
      <size maxheight='1752' maxwidth='1400' minheight='1752' minwidth='1400' />
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='73' h='4167' id='18' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='4167' id='51' name='Advertiser Name' show-title='true' w='100000' x='0' y='0'>
              </zone>
            </zone>
            <zone h='95833' id='4' param='horz' type='layout-flow' w='100000' x='0' y='4167'>
              <zone h='95833' id='2' type='layout-basic' w='86214' x='0' y='4167'>
                <zone h='23959' id='26' name='Impressions' show-title='true' w='43109' x='0' y='4167'>
                </zone>
                <zone h='23959' id='38' name='Impression Share' show-title='true' w='43105' x='43109' y='4167'>
                </zone>
                <zone h='23958' id='41' name='CPC' show-title='true' w='43109' x='43105' y='52084'>
                </zone>
                <zone h='23958' id='42' name='CTR' show-title='true' w='43105' x='0' y='52084'>
                </zone>
                <zone h='23958' id='43' name='Average Position' show-title='true' w='43109' x='0' y='28126'>
                </zone>
                <zone h='23958' id='46' name='Cost' show-title='true' w='43105' x='0' y='76042'>
                </zone>
                <zone h='23958' id='48' type='empty' w='43109' x='43105' y='76042'>
                </zone>
                <zone h='23958' id='49' name='Clicks for Topline' show-title='true' w='43105' x='43109' y='28126'>
                </zone>
              </zone>
              <zone fixed-size='193' h='95833' id='22' is-fixed='true' type='layout-basic' w='13786' x='86214' y='4167'>
                <zone h='95833' id='3' param='vert' type='layout-flow' w='13786' x='86214' y='4167'>
                  <zone h='2910' id='52' name='Advertiser Name' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' w='13786' x='86214' y='4167'>
                  </zone>
                  <zone h='2853' id='50' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' w='13786' x='86214' y='7077'>
                  </zone>
                  <zone h='2910' id='54' name='Impressions' param='[advertiser_data].[none:Calculation_1700907132435113:nk]' type='filter' w='13786' x='86214' y='9930'>
                  </zone>
                  <zone h='5707' id='55' name='Impressions' param='[advertiser_data].[none:Display Type:nk]' type='filter' w='13786' x='86214' y='12840'>
                  </zone>
                  <zone h='2853' id='39' param='[Parameters].[Product Category]' type='paramctrl' w='13786' x='86214' y='18547'>
                  </zone>
                  <zone h='2853' id='8' param='[Parameters].[Week Start]' type='paramctrl' w='13786' x='86214' y='21400'>
                  </zone>
                  <zone h='2853' id='14' param='[Parameters].[Time Frame]' type='paramctrl' w='13786' x='86214' y='24253'>
                    <formatted-text>
                      <run>Aggregated by</run>
                    </formatted-text>
                  </zone>
                  <zone h='2853' id='37' param='[Parameters].[Time Span]' type='paramctrl' w='13786' x='86214' y='27106'>
                  </zone>
                  <zone h='2853' id='34' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='13786' x='86214' y='29959'>
                  </zone>
                  <zone h='2853' id='12' param='[Parameters].[Grouping Parameter]' type='paramctrl' w='13786' x='86214' y='32812'>
                    <formatted-text>
                      <run>Color</run>
                    </formatted-text>
                  </zone>
                  <zone h='3709' id='5' name='Impression Share' param='[advertiser_data].[none:Date:qk]' type='filter' w='13786' x='86214' y='35665'>
                  </zone>
                  <zone h='1198' id='40' type='text' w='13786' x='86214' y='39374'>
                    <formatted-text>
                      <run bold='true' fontalignment='0'>&lt;</run>
                      <run bold='true' fontalignment='0'>[Parameters].[Grouping Parameter]</run>
                      <run bold='true' fontalignment='0'>&gt;</run>
                    </formatted-text>
                  </zone>
                  <zone h='2397' id='47' name='Cost' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' w='13786' x='86214' y='40572'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='61' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tornado - Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[advertiser_data].[usr:Spend - D SDPW:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Yesterday or Reference Day]' type='parameter' />
            <card mode='compact' param='[Parameters].[Product Category]' type='parameter' />
            <card mode='checkdropdown' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[advertiser_data].[none:Advertiser Name:nk]</field>
          <field>[advertiser_data].[none:Calculation_6550404114703346:nk]</field>
          <field>[advertiser_data].[none:Product Category Filter:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[advertiser_data].[yr:Ref Day:ok]</field>
          <field>[advertiser_data].[yr:SDPW:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tornado - Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[advertiser_data].[none:Advertiser Name:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[advertiser_data].[yr:Ref Day:ok]</field>
          <field>[advertiser_data].[yr:SDPW:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tornado - MTD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='66'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[advertiser_data].[none:Advertiser Name:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[advertiser_data].[yr:Ref Day:ok]</field>
          <field>[advertiser_data].[yr:SDPW:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Advertiser Tornados'>
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Yesterday or Reference Day]' type='paramctrl' />
        <zone mode='datetime' name='' param='[Parameters].[Reference Day]' type='paramctrl' />
        <zone name='Tornado - Day' param='[advertiser_data].[none:Precheck Type:nk]' show-domain='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Advertiser Data'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='143' type='filters' />
            <card size='254' type='marks' />
            <card size='206' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
            <card mode='compact' param='[Parameters].[Yesterday or Reference Day]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Reference Day]' type='parameter' />
            <card param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Only Full Time Frames]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[AfT Daily Dashboard (local copy)].[none:Advertiser Segment:nk]</field>
          <field>[advertiser_data].[none:Advertiser Filter:nk]</field>
          <field>[advertiser_data].[none:Advertiser Name:nk]</field>
          <field>[advertiser_data].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[advertiser_data].[none:Eligible Ad Calls for Time Frame:qk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40938.613126574077].[none:Advertiser Name:nk]</field>
          <field>[mysql.40938.613126574077].[none:Advertiser Segment:nk]</field>
          <field>[mysql.40938.613126574077].[none:Dataset:nk]</field>
          <field>[mysql.40938.613126574077].[yr:Ref Day:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Advertiser Data Table'>
      <zones>
        <zone mode='dropdown' name='Advertiser Data' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
        <zone name='Advertiser Data' param='[advertiser_data].[none:Precheck Type:nk]' show-domain='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Frame]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Yesterday or Reference Day]' type='paramctrl' />
        <zone mode='datetime' name='' param='[Parameters].[Reference Day]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Advertiser Name'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cost'>
      <cards>
        <edge name='left'>
          <strip size='237'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Only Full Time Frames]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Span]' type='parameter' />
            <card mode='compact' param='[Parameters].[Product Category]' type='parameter' />
            <card mode='checkdropdown' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Advertiser:vtsvr:nk]</field>
          <field>[AfT Advertiser Report Aggregations].[none:Date:vtsvr:ok]</field>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[AfT Advertiser Report Aggregations_1 (local copy)].[:Measure Names]</field>
          <field>[AfT Advertiser Report Aggregations_1 (local copy)].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[advertiser_data].[none:Advertiser Name:nk]</field>
          <field>[advertiser_data].[none:Precheck Type:nk]</field>
          <field>[advertiser_data].[none:Region:nk]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Calculation1:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
          <field>[mysql.40876.472398553240].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impressions'>
      <cards>
        <edge name='left'>
          <strip size='281'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Full Time Frames]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Span]' type='parameter' />
            <card mode='compact' param='[Parameters].[Is Leap Year Parameter]' type='parameter' />
            <card param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Calculation_1700907132435113:nk]</field>
          <field>[advertiser_data].[none:Date of Week (Sunday Start):qk]</field>
          <field>[advertiser_data].[none:Date of Week:qk]</field>
          <field>[advertiser_data].[none:Display Type:nk]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
          <field>[mysql.40876.472398553240].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impression Share'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Full Time Frames]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Span]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Advertiser:vtsvr:nk]</field>
          <field>[AfT Advertiser Report Aggregations].[none:Date:vtsvr:ok]</field>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[AfT Advertiser Report Aggregations_1 (local copy)].[:Measure Names]</field>
          <field>[AfT Advertiser Report Aggregations_1 (local copy)].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[advertiser_data].[none:Region:nk]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Calculation1:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
          <field>[mysql.40876.472398553240].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Average Position'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='list' param='[Parameters].[Time Frame]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser Segment:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Clicks for Topline'>
      <cards>
        <edge name='left'>
          <strip size='223'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser Segment:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CTR'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Topline'>
      <zones>
        <zone name='Advertiser Name'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Impressions'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Impression Share'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CPC'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CTR'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Average Position'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Clicks for Topline'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='checkdropdown' name='Advertiser Name' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone mode='checkdropdown' name='Impressions' param='[advertiser_data].[none:Calculation_1700907132435113:nk]' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Week Start]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Time Frame]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Span]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Grouping Parameter]' type='paramctrl' />
        <zone name='Impression Share' param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Cost' pane-specification-id='0' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CVR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[advertiser_data].[sum:Click Revenue:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[advertiser_data].[usr:CPA:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ROI'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations].[none:Grouping:vtsvr:nk]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='ROI Summary'>
      <zones>
        <zone name='Revenue'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='ROI'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CVR'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CPA'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CPC'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Week Start]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Frame]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Span]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Grouping Parameter]' type='paramctrl' />
        <zone name='CPC' param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='CPC' pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
        <zone mode='dropdown' name='Advertiser Name' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
        <zone name='CPC' param='[advertiser_data].[none:Precheck Type:nk]' show-domain='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Data Table'>
      <cards>
        <edge name='left'>
          <strip size='245'>
            <card size='36' type='pages' />
            <card size='215' type='filters' />
            <card size='197' type='marks' />
            <card size='155' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='273'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Time Frame]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Product Category]' type='parameter' />
            <card param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[AfT Advertiser Report Aggregations_1 (local copy)].[none:Calculation2:ok]</field>
          <field>[advertiser_data].[none:Grouping Parameter (copy):nk]</field>
          <field>[advertiser_data].[none:Product Category Filter:nk]</field>
          <field>[mysql.40876.472398553240].[:Measure Names]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Calculation2:qk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Data'>
      <zones>
        <zone mode='checkdropdown' name='Data Table' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
        <zone name='Data Table' param='[advertiser_data].[none:Precheck Type:nk]' show-domain='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Week Start]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Frame]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Span]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Grouping Parameter]' type='paramctrl' />
        <zone name='Data Table' param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Comparison 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[advertiser_data].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Graph Parameter 1]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Graph Parameter 2]' type='parameter' />
            <card param='[advertiser_data].[none:Display Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Graph Parameter 1]</field>
          <field>[Parameters].[Graph Parameter 2]</field>
          <field>[mysql.40876.472398553240].[:Measure Names]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Comparison'>
      <zones>
        <zone name='Comparison 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='dropdown' name='Comparison 1' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
        <zone name='Comparison 1' param='[advertiser_data].[none:Precheck Type:nk]' show-domain='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Week Start]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Frame]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Time Span]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone name='Comparison 1' param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Graph Parameter 1]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Graph Parameter 2]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Comparison 2a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Graph Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Graph Parameter 1]</field>
          <field>[mysql.40876.472398553240].[:Measure Names]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Comparison 2b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Week Start]' type='parameter' />
            <card mode='compact' param='[Parameters].[Grouping Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Graph Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Graph Parameter 2]</field>
          <field>[advertiser_data].[none:Site:nk]</field>
          <field>[mysql.40876.472398553240].[none:Ad Group:nk]</field>
          <field>[mysql.40876.472398553240].[none:Advertiser:nk]</field>
          <field>[mysql.40876.472398553240].[none:Campaign:nk]</field>
          <field>[mysql.40876.472398553240].[none:Date of Week:qk]</field>
          <field>[mysql.40876.472398553240].[none:Date:qk]</field>
          <field>[mysql.40876.472398553240].[none:Grouping:nk]</field>
          <field>[mysql.40876.472398553240].[yr:Date Axis:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Comparison by Group'>
      <zones>
        <zone name='Comparison 2a'>
          <viewpoint>
            <zoom type='entire-view' />
            <floating-toolbar-visibility value='2' />
          </viewpoint>
        </zone>
        <zone name='Comparison 2b'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='dropdown' name='Advertiser Name' param='[advertiser_data].[none:Advertiser Name:nk]' type='filter' />
        <zone name='Comparison 2a' param='[advertiser_data].[none:Precheck Type:nk]' show-domain='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Is Leap Year Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Week Start]' type='paramctrl' />
        <zone custom-title='true' mode='list' name='' param='[Parameters].[Time Frame]' type='paramctrl' />
        <zone name='Comparison 2a' param='[advertiser_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Grouping Parameter]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Graph Parameter 1]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Graph Parameter 2]' type='paramctrl' />
        <zone name='Comparison 2a' pane-specification-id='1' param='[advertiser_data].[none:Grouping Parameter:nk]' type='color' />
        <zone mode='list' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Time Span]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Conversion per X'>
      <cards>
        <edge name='left'>
          <strip size='222'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[cvr_data].[none:Site:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Conversions as Advertiser and Publisher (local copy)].[none:Date:qk]</field>
          <field>[Conversions as Advertiser and Publisher].[none:Site:nk]</field>
          <field>[cvr_data].[none:Display Type:nk]</field>
          <field>[cvr_data].[none:Precheck Type:nk]</field>
          <field>[mysql.41003.729713009256].[none:Site:nk]</field>
          <field>[mysql.41003.729713009256].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='CVR vs Conversion per FPV'>
      <zones>
        <zone name='Conversion per X'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[mysql.41003.729713009256].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Conversion per X' pane-specification-id='1' param='[cvr_data].[none:Site:nk]' type='color' />
        <zone name='Conversion per X' param='[cvr_data].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='dropdown' name='Conversion per X' param='[cvr_data].[none:Precheck Type:nk]' type='filter' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Tornado - Day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tornado - Week' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tornado - MTD' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Advertiser Tornados' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2df2wc53nnH7fru3fvVsX7oqu7eQHyyjcgU72s
      eKcZmD3vJmyhBWQg1DmAKaiFxXN6KZMCjpygsJSgl6hFkNr5o7GDSxrVaA2luBhygBpkEBte
      4azLEle6s0ap2+FFBF/iyPO7PS3uHVR7Ny/qQffBZa+6P5aiVpRIUeRydynuB4LNXQ3nx6t3
      Zr7zzPd5nsdu3boFPXrslJ/r9A702N/0JlCPXdGbQI8+1tqTEyfXP4ZhePH1i5stXJgtBIvB
      zFszW6/z0p9feuELL7zwhRd+/utf/3qrdrRHd3LxtYvR/4keg8fkkHzhd1/48ZUfx3Ec/DT4
      tU/82st/+HLlf1X+9PU/NRWz/N+Xv/Pad957773of0c2svHfx9/54+/osj7MDn/5wpff+8l7
      8pfl537nc48nHpdSeq6Hf49iSPQm0KPP+RfPf+5zn7v42sX+f9EP/w9+6zO/df2/XQ//Z5j4
      Rwn8B3z1P7zq/iv3+//x+/39/af+zan0P0t/4lc/Mf3O9GOPPVatVkW/mPnRTIqkVlZXAAAR
      z714rrFataTg5yDR0UPrsecU3y96ox6llKRIWA211uaGAYDxZ8ZfePGFUrE086OZ8y+eF0KE
      YQgEAKD2sxoAyCMydyJ39vmzuRO5U58+FUUROUS01hvW/1jvMf7RpnC14LkeTVO1qmzVaq1N
      aNyjbu547tIbl6Y+O6UW1eW/uJx7KpeEpBgQtXotfyXP09x13Us/uJQdzeaO5y6+dpGkyOSz
      k6X5Uu5ErrFmtaygN4F67JLeU1iPXdGbQD12xZqIthY7ux/7HUrJhm8QAfHRH9UuvQKd/8r5
      qd+ZVMvKL/oYo1/0o6rxi74ua7WsTjWFxXpszfjEyQt/cEEtK39+bSRNaPyiH1nrF/2p357c
      5frXRHS3XYH8on/hGxc8OUwpLcwWTNUMy2FKKcaIdYyiWuFqodP7eBddewW69PrF/GyBAIgB
      4Rf9xkiKPrG0suSNeLqsL785vZv1d2kcKLhWlEPDkABV1pOfmVLXg8xYDuqgb+iwogmJOr2D
      +wa1okQfNxUTxdHkZ6b0DS36hRgUzrzQq0vyiNzl+rv0CtTAL/pyaJilaad35MF07RWoQf6d
      mfGnJ/Zize27AkXWnv/K2clnp/SqKl1XniuVUq6bwTqqIBBC6BtaDknq8CSQUuALISafm7p3
      Pa98+1UbR9nRrOPw/DvTvF8oFZw5faYwW1CrOjeW9Yv+ha++9Op3Xz7zmak3f3Dp3Je+xvt4
      2w6ztVz+4WWeZoXZAk1zXdbccaY+M6WNvvTaxfNfvTA9M62X1finTuWvTp99/nz+6rt6WeVO
      jBeu5qc+f7Ywm588M/XSN1+afHby3tljKtov+jPvzEw9N3X5rWnRx7OZXO5E7uyXXshmMlBH
      IIRTlr+Sl1ISQvSNRgyaEJLMjmXUssIYoY5r78IQ63s9FklC6nVU6rr9O/uro9n8lfduaP3x
      Xx42f6OzYzn/r/7y0C8cUh/q2MaJn6+vVCrXF4NTz/zm1Bem3v7xX/zgje9fv65yx3MAIEeG
      L752MfEP9cP/nL/3Xh7/b710/acrq+o3/+2/u/5f/3p+Yf7Xfv2p6z+dD0rBxwdl4T+/J4+O
      9Pf37/XREbLxVKzXoV7f7ahWq9ULX/8987cm8Rjo/7HS/0si+68/8fGhoff+y+zNanVIfLz+
      DzjnF2KsH/rHiUOMHWbM/6u/zB7Pvfef3l4tV4Y+NnR9YT7+O9v/S+Llb/7+j380/fsX/n36
      F+nwr/zLQ7/Azv/e74aVsFD0D//i4eQ/OSR/Rfb39zNKZ+dmEePyh5XUPyXFD4o/XV05REju
      13P+X/vVMKz+rUkmD+m/0fHfx3/5QbF9T2G6rC+98WZhtiCld+EPzuWO5xhj0zOXxZA899Xz
      3qinFhVLsfETOQAIK5oQCgBiQMgRLzOWK1zNT78zAwAXvnIumQAEaMwnd0RyxliaF/LvhmEo
      BuT0zOWJ02copZGNarUaIcm2HWPLyWayphpNnplav4haa6bfuqzVUmG2kCQk/04+O5qtfRRd
      npnmDr/0/UteJnv5B5dzYzn3qIt1NDcNIUQMiCW1NPncVCaTyV/N59/JAwA7xM599QLGljsc
      AEwYYoyvfuvlpaAkpTd+YhwSRAxK4TiMsfNfPc8dgXWExNrIm4pOEtLVGmgf0eUaaO9Ym0AH
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Advertiser Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Advertiser Data Table' width='192'>
      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
      VB5u8Hhmgv8PgdMB0K5radoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='34' name='Advertiser Name' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAAAiCAIAAABJHHUaAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABk0lEQVR4nO3bsUsCYRjH8edtOjdvu/VGHQUhHRWC2jIasvFs
      kMbbaotys60G8QwCHZK7BtH+ACG3luJuq9GDAoUGDxSeBh/Dqcbi+H2GF+7lfeHgvtzLDaeY
      mQCINv76BuC/QAogkAIIpAACKYBACiCQAgikAAIpgEAKIJACCKQAAimAQAogkAIIpAACKYBA
      CiCQAgikAAIpgEAKIJACCKQQU6FTVInD+0guHyoqV3/7cQdSiKfgpq5VraA7iH5fK5BCLAVe
      xyydHe89X7XD1dwiqG/pSunpshMsiGg6OsnrCaX0dKUbEhExxM/QNvbdGfO4UUjVfGbmgUWk
      lToTnvnnm1RojHloG4blvvNsdGpqZfeTkULszPuWtv6GMOzhMgWrP2dmfr3M0VF/Oa7vwwER
      N1Gv7e66s9UDHrcyzrUXERG1ne6UoqBzNypkM2Y2b/Q874Oil4u8KjohDoi4mTS3DXu4NjF/
      tI1C89YiKllVU6Nk6qDpz5l58lTbSWpEyVS55TOzYvxUD0SELwj4hhRAfAFEPRWmqBxs/wAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cost' width='192'>
      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
      QwTVyT+MLUYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impressions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
<<<<<<< HEAD
      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
      AABJRU5ErkJggg==
=======
      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
      OrsS5OtMaI8AAAAASUVORK5CYII=
>>>>>>> origin/master
    </thumbnail>
    <thumbnail height='192' name='Impression Share' width='192'>
      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
      QCg+moNscAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Position' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CPC' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Clicks for Topline' width='192'>
      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
      1hVgngAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CTR' width='192'>
      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
      Mszk617cdTW9JK+fbeZO8fvtdUClpUKoVP/JoQ+cCekHxEznZ92hY9ZHGW1wRO6amnvk93em
      cp/FD7Tz9yQRjf64mcfr0qoSgmxDGELEpslMXll56+HKC5ZlNfmzbS5ntI49PY1XTGOz7mif
      nT3UwuOMiH4+644PNm3yZOFxMP/At03hK968gmUlyTIMu72NIlrxQ1nmNiI7LTKdKafD4Iim
      7nrXz+2PveCeBvTzr9zR/TA5Kss8cdvLf9mEc0Mv4Mk7Xv7c64sUHJGqsFQsy0xEGdOw02LL
      qGt6SYpPm7wX3C21eoQbYV0/v/XlVZ1X76m5B/6VhSeavyR8WRu+Vny+Uf+f/ao2/OuVRl64
      5/Z0PdA+mgkd+tyUiktrGmuSIpq47Z4fcBqZY0nQxKBz+a7X+LvviZv3g9ZdUPbRTZ52rix6
      qtH7UKYWvYxtNHy8djqEYxo3vw0afPtdtrnqRm6ECOi9jKQYO2FfaWg3MP8wCFl3EDM2YH/j
      yqDhhHdNUOHRG+7RztTF0w4C+pDsIZMS353Y75y3ruZcf+K07jVSkaALg85kQwXzrlXnrqmx
      WffCoD30uUmtvCa6RUyedIKXfPmOt8N74lSFJ+56Uz9zmjK7l+kyrKRYeFzfgezm/eDUr0pN
      b4iZLt/1ppfl9NlMpuO7QzMC2k6CLp507HZx/pa77UfCEV247U0M1rMuZTvjg06+JFVlpz+f
      vydXXoRjJ+zNWZpmWXgcjNwoZTpT189l3rx2v6en8fvaH71w+NqK/75LEa9q3zzyh6+tzLl+
      09+6+Cwc/+2OrilcX35+cf5J7VWtVmvahYDnG9XRr1cmF55U435ZfEDVarVWq4UbfrVaDV9W
      wzD8078c3IBqtdoTvzp0rbjy4q3/hOqr2pzrD18rXvnD8/Dlbl25uTj/5JtH26R5tfD84u9e
      d7byIhy7uaLzptVq7cofno9+vfLEf+/f9ZeXLl3aurdi/o/ZmX/sPTz9i+ln/6uC9UfF//of
      xZ/0/H2nUir5w2QTd4z7S3sy8U8/ar/0zbO2Tz/p+bskM/32W3nl909Tfy3+7VRv9h9S4q92
      a/bhqN3+m/9+9ruVIPU3bZ1xx8epRVn5P770xsjd+qEorqq2Tz/t/NtGjqdewOdvPfhJT/u/
      /rSnPfnevyt+KqOwVOjPHJ6fnQuFZXcZdipVLBVPnRujSmCaB33JFTNN3HE5orDCp3rNoXqW
      rWmSZc6XpCzzaJ+V7Tb/PFk2dddjoosnt573BRUen3VnvuxrYFpt5Ct38vT2V0FbYk30flRa
      VZku46MsnA0qPFPyV9aCLzJ27og5teSJhBgfjL/mlL8n2xI0fLy+K1ILjwPvRTj+TpEx6joo
      HvAxUEsJq7Xry89zvyxeLTz/wI9VX9WGrhXDl3X85u9esrPhHPZA+1y0/e3phaeq8Myf3PGF
      zfw92ZZoGz6+o7EKrgPtczs4hmYPGYFiL9jRhUVVoYIXDH++05EuAjoQLp50phZ3NCUyveSN
      nnB2PuhGQAfC5p27206JyDJLxXWtF0VAB8XYgJMvyQ/PxkwteuOD9c0BI6CDwhA02mePzrqb
      S2nfVVpVhhD1rgTfD+u2oUlyR0w7bUzc8bI9xuhxe8uHf3VJTtV/mx72QAeLY4qZcxkiGrnh
      yjfOy+YfBv3dRgOLCHAd6ICSZb58x8t0GWMnbI5o5EZppqFbchHQgZa/LwuesgzRb6cau1E4
      PiBvVTrddrAmq0QcEVeU1WGbeG7895Es880H8t2J2B2KGwNFXHxQIuKZX04vLHvSK8lHXmGx
      oCocVkKtjYXWY6dFw/VQ/FlYQhztdVhx7p+/UAkhErbRK+QzTwiRSqYa31L4PsIYCLTgNB60
      ICDQgoBACwICLQgItCAg0IKAQAsCAi0ICLQgINCCgEBL3GRqxAtLxdxgf+HOAgsj9YM2fyPM
      OE7Tn5UB3wNxe6CEYFZEImVZSnEY+iLiwlIhUFjOAVvFL6rvP9bPKgjDal/GIdGWEsIPfNMQ
      KsJyDngLlnOAFgyiQQsCAi0ICLQgINCCgEALAgItCAi0ICDQgoBACwICLfEBcYWJKFgPuKKU
      4iAIePceQAX7WfxDzPO3Zsa+HCncmpEJy+kgPwjtLic70I+MYIv/B1ICAguzu5uOAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Topline' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
<<<<<<< HEAD
      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
      NwQVsAL7CADS0JLAroMAMNYPYUCYYB8RgmYiEoU7gaKNoAK9DcKsSbZmQhgIGCWJL11oJoQJ
      vb0mKwFDSUQ0xMTiL+GBouBMSmu36Uw6htBARCSoqfFAywlQ4VJOMt+6breJSvJ4vxbUuysz
      Soo9l6XkGxOV63Z0X0p/rqeW85wZSrHyKUKgKGK0ma269VESykPZranSrxhAbYxJIAKAEJsn
      7vOZLiCo1DSokmCFlgRaUk2cUpcXBXkll5Xc+2zq7I+GKq0JeE76ULfZIh6SIdE0Dddx009b
      nudHI/VPMav3hthxsN2gFl389hH9u333JTchgq7TajNYbyqECdGoCap1g493Ga0m3XG4zIiJ
      I52p/BjLojRbmmm+X+kaiJmVUrTop8PMtHRc+1re3djuW+jZVqtLqhGJC4ay4edZxSK6/qXL
      TI0mmF5L38e5+xpv3dxrrtIOFLDnKa84P5sCcwBU8woASi0XK+kVPTB79+IpKUZcVvd1f1Co
      ZbVBtTHuZV1QK+zrec703JNTjGafVin1gO4BK8XzPx1FUMsKwYqDlT75LLNRyUopOeV4S3T3
      it5933bAqgyKEZiVUoVrjUd8L7gy0b1KBMyKH/BxvKLHSlXb//L3vve9Vdz2F3f+8IOxG1cu
      BP/HG/3Pn7ftavv8ws8iv/o1jfDp+0PBr2z/5OLY1xJ7l+r9yYc/ufEXZXnrxuef31D/43Z0
      hzVxfmi2e/nvbM+NjbX/xpLdAeT/JOf835J9/pPtiVT2Z0M7/unXCBh+b0jTto2NXd37G8tt
      vO2rn7me+8n7P3GKpejfijz51/8v+18+22tZypO5sULuT3Pt+1NLLQn5L2784chVdzJvf1F6
      4svbqryt5GRvP7HD/LtUuDgs/1LL/tlY6jeXe/Lcn+TuTF4d/c+fq5LaZRpDH374tUQ7mIfP
      fcK/8OhXdmyvU2dQ/WDgw/x/K0T/uvTJf8pv/9V/pG59Zv9i2y495ox/ND51V/GTe3ftWOam
      S7PclW/838in5z9NJduX6vyzwT9UZffz/64mJ3Kr1ECRqClgPpX2yj4QFYLarHYuKQasRDuA
      5Sd+a1+awJWyj5hQAfQYqt0BWIl2woNqXQXK8RR8vxIhisBKtPslBaA90Y4IPTAzodA0AKbV
      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
=======
      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
      gg==
>>>>>>> origin/master
    </thumbnail>
    <thumbnail height='192' name='CVR' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAMI0lEQVR4nO3dwW8b55nH8YfpKHiZUuk7LpmdNys1GkBehIIV
      hETsDbntAiEgFFaRQ130UAc5FDkt3FPjow/5A+pbcuoKARaI91BEAVYIfTAwOkgQDdjQGHDg
      UWEVrwFpMYP1FHxRE+GTZLzegylLlknZ4pta1vr3OUWSR/My+mI45Dwa5e7du0cAw3rhoBcA
      h5uz3w2Y2aRGCPH3WA0cOrn9PoUxM2UkCggIiPAUBpYQEFhBQGAFAYEVBARW+r+MD5cDLqiy
      FMF1rVwix+122R/3/En/Ka8PnnH9j0D+pE8OyTFfCmq3WetVk+hgqWU6bFLzlJcIz7L+R6DV
      MFK+H11rMeVVifzpXwjqJjcjIYQoSsqe8iLh2YU3EsEKTqLBCgICKwgIrCAgsIKAwAoCAisI
      CKwgILCCgMAKAgIrCAisDBznIOn7Hq2EiRrtkuO2mf0xz5/AOAc8pP/FVJMm0WZb3NarhpUQ
      xmjhiHbm/uqXs2yMlBIXU+G+AeMcrRV1tOwe9d0oVqPkl38lqKsxzgGPwDgHWMFJNFhBQGAF
      AYEVBARWEBBYQUBgBQGBFQQEVhAQWEFAYAUBgZUBN9lkNpmQDke3YleQkG7bsCuFlPLpLg+e
      df0Dilrz2m2UsxufLUb1SRWnMZFQY35jpsEdxi1a4YH+T2HKLwvqmjukpMsZ++V6tTIVr4WG
      h7gxMPx/hnEOsIKTaLCCgMAKAgIrCAisICCwgoDACgICKwgIrCAgsIKAwAoCAisDLo1mvXEO
      fSt2BVFBtTtG4Z4K8IgB4xxL89ptqPbqyib7BYrTJmfkT1Zn36lhnAN22mucg0YEp23O2C9X
      65WqvhYkGOeAh2GcA6zgJBqsICCwgoDACgICKwgIrCAgsIKAwAoCAisICKwgILCCgMDKgIAy
      ZiYiYsMmTbjDSWJ6nwLYYa9xjsaE+OSPn5UnVGxizqj8erXxsxozCwdXUqFn0DiHT1lXb2pm
      NtxWk9V6pRwuf5kw4S+twE4Y5wArOIkGKwgIrCAgsIKAwAoCAisICKwgILCCgMAKAgIrCAis
      ICCwMvDuHExCECcpS0EkBDMLIXBbBdhlr3GOukfBYiAcapu2YapU6o2fVnA1Hnba/RR2f2hM
      jfuUtePNG20WxF01UW1Uyq3m59qw6ZgDWCY8q7bHOZoL8/pWXJ+Zrbzu77EBxjlgpx1HoIxF
      QQjc/gf2Yzug6vGaK904xeAz7MN2QO00EQVZPbbX8xfALtsBxbe79Vp15Up4gKuBQ2c7IFXK
      r1wKVMk7wNXAobN9zlx+syZE5HrqAFcDh872EUh/FV74Yn51TR/gauDQ2Q7In/S9MZ/v4H1C
      2IcdR6DN2KSxGJUHuBo4dLYDSrRWRZwAwf5sB9Qlcfr903wnPsDVwKGzfS3MJHrlSlSt1b2i
      ZJMYktLhcC32CkwFZUxbecorSlwLg536/258tDyvC3V1e3U1ZSVEbHTeESTUqXcbJjUSf7YH
      tvSfSPQnyq7oSuUSCSF4qtKoTFcFx0xCFnGWDdtwdw6wgplosIKAwAoCAisICKwgILCCgMAK
      AgIrCAisICCwgoDACgICK/1/EVWvR3npS8HheuwJyku3bbqq6OJKKuwy4O4ckWbSFSW+XIrq
      E36cBnlHhFKdOtkb53jKq4RnVv+AhMNiVBkmv6jI4alKQxBH11d64xy4wwtswTgHWMFJNFhB
      QGAFAYEVBARWEBBYQUBgBQGBFQQEVhAQWEFAYAUBgZX+F1OTW5GQvhQUrmlVIJKqbdqq6OI6
      POzSP6DV65pJ+4JWUvaFiNOAHOEW/dmZujFGFpAR9PR/ChPEsuAK1yXDRGZqul6dnuLNyJBA
      PbATxjnACk6iwQoCAisICKwgILCCgMAKAgIrCAisICCwgoDACgICKwgIrAwa59CiqGRBmNRw
      py2k2zbsSoFxDthlwDhHGLETzdaqc59+Xp5UcaqJpBrzGzMN7rAQuJIKPYOewowQIk7bRMQZ
      ++VGtTIVr4WGByUHzymMc4AVnESDFQQEVhAQWEFAYAUBgRUEBMMzHQQEFj5ZjBAQDEmnvJoY
      BARDOn8pOjtTRkAwjNYtQ0S1CYmAYBgfX4o+nCkTXoXBEOavJVOe9IuCBl1bb/7pAhX9uu99
      dilQBeKMYkP1WrX2VuXpLhWeOZzR3JL+7Le1+x8OOAI5gjttcsifnBLCFVLVX1crl5rasEnN
      01ssPHvmlvSpiicLvQ/7j3OYJCEhuWNi0/aLrpAeZWyM8cY8jHM8z0yH3/s0/PzfamLrqQvz
      QLAP576I6kfd2WPeg8/gJBqeVJSwTnlnPdRJEBA8qfOXorMz/vbHRtN/vocJZ3girXUjHKpM
      bP1aThLRwgd08hMcgeCJ/GHrnUMios0WLfyOfjlHYxUcgeDx5q8l1YneO4fUMXTxHP3630n6
      hJNoeCxmmlvSZ97ZOvwsnKF3PrxfDyEgeKy5lj513JP337e5fJ6KPk3OPvgqAoK9JIaDteS9
      t3wios0W3QzonXM7/wECgr18vKg/+JkvHCI2dPEcvfsxOQ+9h4yAYKAoYW149phHGdPCGaqd
      eXDq8wACgoHOX4zO1iQtn6dPGzRep2OnHv03e41zlF2av6LLkkxG7U63XqlWnnicQ28mnA2/
      dDhwYdIVm83KUkCV0/R+QANuyTLgfSBHcKdtiIQQ5JBwqCzFylIgJ8v5jhEFQUyU9fs2GRER
      Z3yhpdsI6DATRB++W+OJM+QIyoiYt7+24yc7YJxjU1PBFQ7FCedFV0hfEMdJ7E/6uBoPO2Gc
      A6zgJBqsICCwgoDACgICKwgIrAwzD2SMEYxXYUA0xMv4R5nUyOKQNyDnDpNDw9142ma/z8+2
      Vnu8/yfe9zzIfA8TiTbvCdncs9xqv8/NtjZ7fGw9NPQ5UOtyq/dfGQkhiDm4HN7/RLDciq62
      wq90/w0Xg9bVsPdeeEbkUHg5uH/VTF8Lo7Vo/mIwaKfhchAstygjvR4xk9nUetMQEadJ61rU
      /GLe8IAt2QTLYbQWPXgPXggRLPYeQms50GvRg/Xv3unVVnOhaTpM2daFmlSH6wkRcce0robB
      xWaSDtox6fVo17bR9rZRshbqgdvy/J/mo3VNGUVfRUQkHBEsb615MaCMW33WzM2FILoa6LS3
      052PNFgMiKi19U36/o9qXY16q82IiFvLWz/WxVbvqw8b5gjEJgn+68sbN3VeiK5p54vq1MlG
      shHR2xXKONnQ9ZON5uJq5djuS/9EJEYojvXZC3NuyZdj6oPfnI514r9NgojbMY/XKQ05I9Fn
      XRzfZtcxn3w6R8bM/tbPd0xkhD8mOevGt01ZiWjT1Cb7Ha6ZW1dWvKIIFppGyMqkPztT14km
      qhFRvKErb9VbX8zT230uFWsdz56snP39OXVUeUX5i3ffI+Y4jSuTHhHFWlfK6sYt7RXLj25L
      zPpmFIahXluN74gPfn9OEWsdlyc9yji+qVejZvnUOb/o9dk2Y72uKeO5/7igRkV4U58+2Ug2
      emvWt5IuN1vr7dojaw5bYTxOfD0xyQ3hVT98f1Ynce+xbOpwsRlc1rWf1vrskShsraysmxtX
      AmbjTjZOzVT0hq5RhTLWSdxcuKFTt/bWQ4/0Bx999FHf77WHdHOjOvPz7H82OiRGvk1JqMr0
      0ey7LJflClJmd7NOmo7+WCmv9Oi2t/4S5X9UUq+M09ed0oQ/fdR37mX8dc49UhgZcZhN+jVN
      l/uUR+R0/rpxJ+/+RDrySOnV13xZyFPWueuUioU8f8e3/zv5p3K50C89omy0NC5eoNGX8vV/
      rubdknqllLub5TIuvOxSLsd/62Qjef8n449uyXfM9T9vnKhXvX8cd190Sv/ge0dGOt9mORqR
      UnKX49u3fX/KfbnfM0XWCddidUQWXym98UZVvaqKL49m3/Hdb0fkKwW+S/9aOyGKyn2p35pf
      oPxoqVr2sxcL6khevXZ0fExl32S5b3MFWXBy2RvH6+4PR5Sndj/SFzIh1ciLhaOvqqnytPJK
      ubvMWc59uZC7l6scPzH6w7x6VfXZI5H5Jjvxmlq6FlXePD5dfqNULGTfMP9vzpUyd5dP/Esj
      n3d2/VhtT6JNmgjp9X5q2T6OaMw7/mjLfjb8Ph3G/Q637dA/msdt+z28CoPn2f8Bt183PvWw
      pCwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue' width='192'>
      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
      71GqJvFQpQk/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CPA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ROI' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAM5UlEQVR4nO3dT2wbx70H8B8dul01K3fXIVNuKqbewM4T++K0
      VB3HIp5TlEAOj0YKJEYPaZCTj057eM3poShyKHqqj0Uv9alAcwisHgoxhwA0UBukAftpDVDw
      CijxhoAI7KAhokFB1L9G46gHKvpD7VIUB5ah8Ps5UaRWO6S+2NmZ/e0wtbGxQQDjOvakGwBH
      W3qUXxJt4dru424KHEUjBci1XSfjPO6mwFGELgyMIEBgBAECIwgQGEGAwAgCBEYQIDCCAIER
      BAiMIEBgBAECIwgQGEGAwAgCBEbiyzlYydqtulJcfvOnOfuQmwRHSfwRqPZJLbhbs9KW6EjV
      VYfcJjhCUkk10bItREcWL8xbaVJdhYIyiJUYoJ0QIEiCk2gwggCBEQQIjCBAYAQBAiMIEBhB
      gMAIAgRGECAwggCBEQQIjCBAYAQBAiMIEBhBgMBIfIBYKWaWHUn6kNsDR0x8TbRoLQWhEJKv
      /uwqCslgiKQubIpoqpCzREeqHmqiIRFKWsEITqLBCAIERhAgMIIAgREECIwgQGAEAQIjCBAY
      QYDACAIERhAgMIIAgREECIwgQGAEAQIjCBAYiS9pDe83mJxoVZT/u2KN9MXOMKHij0D+6UL9
      5gIz11ewzC8MEx8g0QrnXilTmuZO51DMCkOgJhqM4CQajCBAYAQBAiMIEBhBgMAIAgRGECAw
      ggCBEQQIjCBAYAQBAiMIEBhBgMAIAgRGECAwggCBkfiC5+BOQwgRdtZ+8bOrlnXITYKjJD5A
      lkV+oWilg6AtCxkkCBIlBChtWbZrnS0WZnNEhLp6SIKaaDCCk2gwggCBEQQIjCBAYAQBAiMI
      EBhBgMAIAgRGECAwsuNSho55DmC47SNQcKv63v+8V7sfPsHWwJGzHaA1pt/+5te8Fj3B1sCR
      sx0gb5qu/f6663pPsDVw5GwHSKxb/oxXmC08wdbAkbMdIN91LduJpHiCrYEjJ74eSLRCSruq
      GxXPFQn1QJBA9RKG7F7GW/jwOjke2x5KWiFJrSXjJxJrn1T9Yulh76Gfc3DsgSTVZoSSVhiT
      6vGVDwNcyoAx1VZU+XQOAYIxVZtR5ayHAME4VI/WNPsZCwGCcVRXZKWQI5RzwHgWm9GllzxC
      gGAMqsesOedYhADBGKrLqt9/EQIEY1gMN/svQoDgoKRi+rL/IgQIDqq2EpXP5rZ+RIDgYBZD
      dWl2u+oQAYIDkIqJaKv/IgQIDmRxJbpU2HVZHQGCA6g1ZXl2V9U8AgSjkoqJrJ39FyFAMLrF
      5ejS2cGysPgAyeVG4374p48WmB9/u+CIqIay8pI/8GR8gBzHij5VFq+FHYklWoGIpGIrbTn2
      4PMJy/w6fvEMi/TDwkzOsrDML/T7r5ibThMWUrAd3yb/VC7+VZg8tVD+7u3i3udxEg37E12e
      SluOHXODFwIE+6uuROW4/osQIBhFLZSV2fj7uhAg2IfosmvF91+EAMG+qs2oUkhc9AcBgn3U
      VmR5NmE83qoiQDDMl/1X3Gua6eY1BAiGqTajSjGh/5IB5YoIEAxTW5GVpP6rXSe/hABBItFl
      17YSvzR3dYlmcASCZNUgqiTMHxIR9STZPgIEiWqt5PFXNyTHpzSG8ZAglOw5lpPUf3UCyhcJ
      80CQZPj8IYk6nSoRAgRJ6i1ZSuq/iKgbUmboEYgZdWSTa5/+qyfJsvq1ZPEFZXK5tnhXEUel
      N94p5LC85sTpL1+X+HJniWZK/YfxR6DcjE9pYmYiUj0chyZOrSXLp5P7r9U65ef7DxNKWh3/
      yrs+6c3X0ZdNlFCy7yTPHxJRJ6CL7/cfDj2JxjfPTaRqIIb1X6yIiKzNExuMwmA3TbW2Spw/
      JKJuSLntr3RCgGCXUCrfsawhnU+7TvnS1k8IEOyy0IzeSqrf6Ftdopnt+3sQINhlqa1KQ+4H
      1EQ9Sc72Dc4IEGwLOsrPDB1/qXBneggBgp2qzahydnD5hF2+vIa6BQGCbfW2Kp0aeuEhWqKZ
      uZ1PIECwKeioQsYZ1n9R/xrqrq9lRoBg0z71h33MW1OIfQgQbKq3Ven00P5LCXIGB2gIEBAR
      BW1VyDnD5g+JSAbkzQ08hwAB0fD7v7ZEuy5i9CFAQKyp3lbl4eMvIuosUQ5HINgj6KjCjLNP
      8YUmYkU2zoFgj8VmdHn/8ZccGH/1JQdIc/XjKpb5/erTFHZUcd/+Sz7YewJEw2rGWCmloq5y
      h88swRHXGGX8RfFDMBrahVmO7UzZlpNBUf1X2WIzfv3eQZ/GDMFoWIBsp/JGJZd4Zwd8RQSj
      9F9E1BUD1+H7cBI90RotVZwZof9iRZZFaSzzC7vdaEaX9p0/pMTDDyFAk4w1hR01P0r/JZfI
      i1mmnhCgSRa0Rzv7IaIo2DsH3YcATa4bo8wf9ilBGXRhsANrCuVoRyDNe8uAtiBAE6reVqWZ
      0fqvbuLhhxCgiTVS/WFfN6RszBRiHwI0iViT6KriiEeg1frOOwkHIECTqN5Sc/vWbxCRJrp9
      jWRIuVLSryBAk6jaFPvXHypJH16mh0zv3qDkezWwgsvEYU2h5OLwheeWF6jxO3r913Rqfvhf
      Q4AmTr0lS6eT+y9W9MkvSfcPPPufJKELmzgLQfRW0vir3aA/XqZ8id78wyjpIRyBJg0ziS4X
      9o6/NNOta9Sp00/+kHTdNBYCNFlqLVneefegZmrXqLlA3Qd09h16d/GgfzAxQKzk9T/eqLx9
      xc/sX1OmFEcKC3EeAQt3xS9ORXSnRmsR9QQpSafm6ZWrlCuOdzBJ3qi35jquVMoli5m5x4O/
      rrcfLrWjaijH2T8cLt9+WCBBlsd+gWyXHH+zTEwz7byBIuEfvff51MbGRtLOxIrwZ30iUl2F
      ymiINWwU1k8PwBAYxoMRBAiMIEBgBAECIwgQGBlp8mitt/a42wFH1LB5oCRjTwuNt2F/DtOy
      D3yT9dgbHvIbHG/Dw26kJtVTjjO44TjT12P8S0w2HLpy+uPZ8HDf4HgbHnYj0+TYB1ofaLfg
      ToP7U9qarLRFRLWbjf5Ltds1sRI27gQDm3BXVv9SlV0mvTntbRFv/pqm2s1GcK8RrIi9+1JS
      VP9SlV1FmsLlkIhqt77c181GuBw07oWxjazdrIm2UD3enH1Pk1hpSMVEpDphsBwufFRlPbiV
      WA62dre5oebNXWiu3W4Et2thO/5CjWyFUm2/QeqpYFkQETE37gSqE4btuEuErP704YLoSNLc
      f4MWcePe5ifTuNmQbSG6u5Zm4q5o3AurH1c396V3f5i3G9RTwf2YD5OIRCvc+V/grghbkoi4
      pxr3Q7Ec9D+iAdWPq+G9hpBq61KGbAWhZCLirgyWhbgfyB6PdgTSXG/UwqC+5hSoF1mWe+Xt
      ipCCaJ6IpBDlc6XGn6vzF2JKr298dD3qkWeTd6pQuTgXrUZ0oUjEohOV3ihVbz0o7pnvXrob
      lF8vX/vf3xbfKIuWKMz6shP1PynZEaX5txb+XJ0/F3OfgOyIsBUSWRYxa+vyu1eUipRdyDkW
      M68p8iwVKR64PCyFmHu9cv1X76+lvcKZXOlHl3yHIhHRuQJpkiKae71YC0Qh7itIRBgKDh80
      l9zjXHzz/bnMQxHJ4ks+E4nV8EFDuLOVwqk9H4teE+2IePF6V7lEYRRV5ueiv0V0rkiaRSda
      ay3SK+/5me09KqXqd5eiriQl6s2o9ON3yi/5YlXMXyiSZhGJhdWltZ5f/H7MxYOgUad0XbRU
      9JCv/vyqpzkQa4XTOdIUibDWqJV/+svc9wfeHYf36lHG5aZQUviZ3Pyb71Avisgv5Cymh5EI
      b3xSu/zz95/64IMP9u5yAH/W9f5jbvrr+tPPOGunFOvzPyimHumUZvuEm95I9Xpdfdz1n99V
      ptT77NPVbveF/AvZnKfa4uVXS/nnPF7XKX5kn3RS69z9e9f9VtZ7NjuwO/eb1l8bwdyF871/
      pl7IZ/PP+3qd+YuU69h6Q/dUl552/ZmYkii9kco/k80+Y2fzL3rPuIXT+aljxP/Qx0+6tpXS
      rKOuevE/zw4sRqHX+e7/Nc//12vZk5nnM641nfWec3hdp/Qj+6Sj11n9PXK/nfcy7t4P5u7S
      3/LfdrLPeue/Nzed8fInXV7n1BePHMfR67p88bX009PZk/bgdl+kstkX/e9MT53wsl9L588U
      8s95/K9e6vOUnXH0Or9cnLNPeK693dD0Fyn9uc6fedk6lva+lZ0rnnccS68z65R70kmt69LF
      145/3fZyMY2kp7LZp7n5/73yxdJ3v3fGSqf0vziVnnZO2LxBr7163n3Ws78xcChJTz1F1gnv
      +NfS+Re+S5/r0qtnp46lteZHx6YyJ6b1I/rhq3PTz3oHPolmpciyNk8v9KgnUcy8fUYy8la7
      jLfVV37DA/wLhpTG77dtj5POnMYZhQFs+TchFC3Xr84kOwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ROI Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Comparison 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison 2a' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison 2b' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison by Group' width='192'>
      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
      hQoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Conversion per X' width='192'>
      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
      XbDXdlvnb/74xz9+/f22BHdpfsWvBBXv5v98s1wuP1l6av79w7/6X6ae/a1DQtek79+8e1f7
      1i964RGxt7WFm/jN7IxTrf5i+pfiAO7P5f/F/y1/8PeMzNT/YPwnf6AxuAv/4sG/8n7v7x4q
      OcuHxaHXOVBhbo6Iniw+/tVX9vLib57+m397yDhY/X+f0IFD2u8o7te5X/0/+MFh7Tf/qnJY
      HHydAxWnf+F+W735i/saKvOFgv1X//bw7x7M3f3VD473Afifrv/Fod/9vcf/x68O/f0fvObE
      wL27OSUSsX/9S3tp+Tdf/+Z7f+s/eoc0UETloMB5ZNdC5la8oOoRkazCd11J4LrOVYhOwb7/
      2kdimrtgm6YoFG1vxWFMIykRwl12EcLoEEyh7K2bxqHXzb/WDnKv7NjLLhR4FSllQBUv99Ct
      F/gVXQJhkL01Y+6m4NrOF8QN50HRskTpYcl94jBNDyoBUyJ+RQIQnUJWAyjs9SNyelRzHpfc
      soewJqvSexZg9Z3i28Z/C/OF9S9rQfDNmzh4LQhq3zafyeuzdkXF0to3gRds3mB/CJ7t14Fq
      33ilx79dXV19xThQmzZ13qEhrM37SFuA2rwWbQFq81r8/ztgS40oDeonAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CVR vs Conversion per FPV' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO29fWwbaX7n+e0Je/dhjs4+laVyVTlqospKE5Vi
      75gau7fJawcQG57ANIxAEpyFxfMFXnZvtiP3Ymel2d0ZM425CZ0gE2kG021OY2yzfdMGZVwb
      lO7aMJVtnUu3owbZGTksY6WohEjnEsZCqm7M23ou5g6foJnl/UFa1AstUS9+6TY/fxgW+dRT
      bz8+z/N7eX6/F0qlEho02ClfeNoX0OCzTUOAGuyKhgA12BUNAWqwKxoC1GBX/MK3vvWtp30N
      VbSPU+/96IMX/1FTs9i0sx7USVWW5V1eBs+zH/0wNvkTvePLneaixoovaJkZ+Z807+AUqevx
      Dz6cbJY7hF8iO7oUpt42ZM8On8YKse9FPhxX1Umt84Ck3WULf6Wt3ALPGdN3WfOvCAC025r0
      qxIAY14bfjuW+Tiz7l1odzQnZ0bu75t+2VX+5BkSIG1yVP2p49+/Gf7w6sUvfeW3jNvqxauj
      X1I6f/IXP1b/z9TSz/6e/z8Lwq/K9/5aYxAmkz9Ss/MveQ+krsWnF617sz/+6MfaS4c7jSVD
      2uf8/ve/z19sEoq5xNiHkx9nOr/y0kfJeLkBAGtR//A/Tvz445+8dLhTv525mPjgS7/ROfOf
      pz8c+/Cf/rOXHMC3/sPg//QHgy+1CYnkhOPn96wXmx0/zwv/sDgc+8G+pi+lbvwo4HtJ/UST
      v9jMlnXjv/x9Eylm7hjT//ED9c7yS15l5Y7i75xvOvDV3/udr/7ghz/8rSN+9cbI6Ec/7vzy
      Sz8eH02lUn/vFBb0GVmWtY9V4VekH737/fmf8QO/JsSvJiz2dz/+8w+0Jdb5G82GlXfy3Pd/
      eLFJ+lLupz/5cFzNzC699GUl/u6wtsQ6f7MNgP6JOjGV+cn8vc7fbMuMj37w52rnl1+ankx9
      qE6/9JUDACb+L/Vbb0UDXX7+N9qH05b0Sw5JEL7/zvDST3P0H/Ef/q+j+qz+681N/+r1sy/9
      1m83/bJLm0rJX33t97q/+qff+dPgb3915FLso/TMr/9j5++d/Tfyr9DRW9Mzs3rnVzodX3iW
      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
      B1NCSAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
