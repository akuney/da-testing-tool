<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location id='ExceptionReportingDashboard' path='/workbooks' revision='2.5' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Min Average Ad Calls per Day' datatype='integer' name='[Average Pages per Day]' param-domain-type='any' role='measure' type='quantitative' value='1000'>
        <calculation class='tableau' formula='1000' />
      </column>
      <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
        <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Site&quot;' />
          <member value='&quot;Ad Unit&quot;' />
          <member value='&quot;Site and Browser&quot;' />
          <member value='&quot;Ad Unit and Browser&quot;' />
        </members>
      </column>
      <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
        <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
        <members>
          <member value='&quot;Blacklisted Ad Calls&quot;' />
          <member value='&quot;Fraudulent Clicks&quot;' />
          <member value='&quot;Fill Rate&quot;' />
          <member value='&quot;Interaction Rate&quot;' />
          <member value='&quot;CPI&quot;' />
          <member value='&quot;CTR&quot;' />
          <member value='&quot;CPC&quot;' />
          <member value='&quot;Gross Media Revenue&quot;' />
          <member value='&quot;Ad Calls&quot;' />
        </members>
      </column>
      <column caption='Browser Min Ad Call Percent' datatype='real' default-format='p0%' name='[Min Average Ad Calls per Day (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='0.01'>
        <calculation class='tableau' formula='0.01' />
      </column>
      <column caption='% Served Cutoff' datatype='real' name='[Min Average Ad Calls per Day (copy)]' param-domain-type='any' role='measure' type='quantitative' value='99.0'>
        <calculation class='tableau' formula='99.0' />
      </column>
      <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Only Show One Day of Week' datatype='boolean' name='[Only Show One Day of Week]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Browser or Browser Family' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Browser&quot;'>
        <calculation class='tableau' formula='&quot;Browser&quot;' />
        <members>
          <member value='&quot;Browser&quot;' />
          <member value='&quot;Browser Family&quot;' />
        </members>
      </column>
      <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
        <calculation class='tableau' formula='2.0' />
      </column>
    </datasource>
    <datasource caption='funnel' inline='true' name='funnel (copy 2)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;  dimensions.requested_at_date_in_et as Date,&#13;&#10;  dimensions.ad_unit_id as &quot;Ad Unit ID&quot;,&#13;&#10;  dimensions.browser_family as &quot;Browser Family&quot;,&#13;&#10;  dimensions.browser as Browser,&#13;&#10;  sites.id as &quot;Site ID&quot;,&#13;&#10;  sites.display_name as &quot;Site&quot;,&#13;&#10;  ad_units.name as &quot;Ad Unit&quot;,&#13;&#10;  ad_units.ad_type as &quot;Ad Type&quot;,&#13;&#10;  ad_units.product_category_type as &quot;Product Category Type&quot;,&#13;&#10;  sum(numbers.ad_calls) as &quot;Ad Calls&quot;,&#13;&#10;  sum(numbers.blacklisted_ad_calls) as &quot;Blacklisted Ad Calls&quot;,&#13;&#10;  sum(numbers.served_ad_calls) as &quot;Served Ad Calls&quot;,&#13;&#10;  sum(numbers.interactions) as Interactions,&#13;&#10;  sum(numbers.clicks) as Clicks,&#13;&#10;  sum(numbers.fraudulent_clicks) as &quot;Fraudulent Clicks&quot;, &#13;&#10;  sum(numbers.sum_actual_cpc) as &quot;Gross Media Revenue&quot;&#13;&#10;from&#13;&#10;(&#13;&#10;  select *&#13;&#10;  from&#13;&#10;    (select&#13;&#10;        distinct(requested_at_date_in_et) as requested_at_date_in_et&#13;&#10;    from intent_media_log_data_production.ad_calls&#13;&#10;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)) dates,&#13;&#10;    (select&#13;&#10;        distinct(ad_unit_id) as ad_unit_id&#13;&#10;    from intent_media_log_data_production.ad_calls&#13;&#10;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)) ad_units,&#13;&#10;    (select&#13;&#10;        ifnull(browser_family,&apos;NULL&apos;) as browser_family,&#13;&#10;        ifnull(browser,&apos;NULL&apos;) as browser&#13;&#10;    from intent_media_log_data_production.ad_calls&#13;&#10;    where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;        and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;        browser_family,&#13;&#10;        browser) browser&#13;&#10;) dimensions&#13;&#10;left join&#13;&#10;(&#13;&#10;  select&#13;&#10;    requested_at_date_in_et,&#13;&#10;    site_id,&#13;&#10;    product_category_type,&#13;&#10;    ad_unit_id,&#13;&#10;    browser_family,&#13;&#10;    browser,&#13;&#10;    count(case when ip_address_blacklisted = 0 then request_id end) as ad_calls,&#13;&#10;    count(case when ip_address_blacklisted = 1 then request_id end) as blacklisted_ad_calls,&#13;&#10;    count(case when ip_address_blacklisted = 0 and outcome_type = &apos;SERVED&apos; then request_id end) as served_ad_calls,&#13;&#10;    sum(interactions) as interactions,&#13;&#10;    sum(clicks) as clicks,&#13;&#10;    sum(fraudulent_clicks) as fraudulent_clicks,&#13;&#10;    sum(sum_actual_cpc) as sum_actual_cpc&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select&#13;&#10;      min(ac.requested_at_date_in_et) as requested_at_date_in_et,&#13;&#10;      min(ac.site_id) as site_id,&#13;&#10;      min(ac.product_category_type) as product_category_type,&#13;&#10;      min(ac.ad_unit_id) as ad_unit_id,&#13;&#10;      min(ac.browser_family) as browser_family,&#13;&#10;      min(ac.browser) as browser,&#13;&#10;      min(ac.outcome_type) as outcome_type,&#13;&#10;      ac.ip_address_blacklisted,&#13;&#10;      ac.request_id,&#13;&#10;      case when count(case when c.fraudulent = 0 then c.request_id end) &gt;&gt; 0 then 1 else 0 end as interactions,&#13;&#10;      count(case when c.fraudulent = 0 then c.request_id end) as clicks,&#13;&#10;      count(case when c.fraudulent = 1 then c.request_id end) as fraudulent_clicks,&#13;&#10;      sum(case when c.fraudulent = 0 then c.actual_cpc end) as sum_actual_cpc&#13;&#10;    from intent_media_log_data_production.ad_calls ac&#13;&#10;    left join intent_media_log_data_production.clicks c&#13;&#10;    on ac.request_id = c.ad_call_request_id&#13;&#10;    and c.requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;    and c.requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    and c.ip_address_blacklisted = 0&#13;&#10;    where ac.requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;      and ac.requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    group by&#13;&#10;      ac.ip_address_blacklisted,&#13;&#10;      ac.request_id&#13;&#10;  ) media&#13;&#10;  group by&#13;&#10;    requested_at_date_in_et,&#13;&#10;    site_id,&#13;&#10;    product_category_type,&#13;&#10;    ad_unit_id,&#13;&#10;    browser_family,&#13;&#10;    browser&#13;&#10;) numbers&#13;&#10;on dimensions.requested_at_date_in_et = numbers.requested_at_date_in_et&#13;&#10;and dimensions.ad_unit_id = numbers.ad_unit_id&#13;&#10;and dimensions.browser_family = numbers.browser_family&#13;&#10;and dimensions.browser = numbers.browser&#13;&#10;left join intent_media_production.ad_units on ad_units.id = dimensions.ad_unit_id&#13;&#10;left join intent_media_production.sites on sites.id = ad_units.site_id&#13;&#10;where ad_units.active = 1&#13;&#10;group by&#13;&#10;  dimensions.requested_at_date_in_et,&#13;&#10;  dimensions.ad_unit_id,&#13;&#10;  dimensions.browser_family,&#13;&#10;  dimensions.browser,&#13;&#10;  sites.id,&#13;&#10;  sites.display_name,&#13;&#10;  ad_units.name,&#13;&#10;  ad_units.ad_type,&#13;&#10;  ad_units.product_category_type</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_0690728163405674:qk:3]&quot;' value='Revenue Impact - Ad Calls' />
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_1340429224859530:qk:2]&quot;' value='CPI Mean' />
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_3350317120944013:qk:1]&quot;' value='% Served without Min/Max' />
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_4160317122837051:qk:3]&quot;' value='CTR without Min/Max' />
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_4590310124859040:qk:2]&quot;' value='Blacklisted Ad Calls Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_8430317113102213:qk:3]&quot;' value='Gross Media Revenue without Min/Max' />
          <alias key='&quot;[funnel (copy 2)].[usr:Calculation_9720310125012918:qk:2]&quot;' value='Fraudulent Clicks Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:CPC Average:qk:3]&quot;' value='CPC Average' />
          <alias key='&quot;[funnel (copy 2)].[usr:CPC Z-Score:qk:3]&quot;' value='CPC Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:CPI Average:qk:1]&quot;' value='CPI Average' />
          <alias key='&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;' value='CPI Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:CTR Z-Score:qk:2]&quot;' value='CTR Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Fill Rate Average:qk:3]&quot;' value='% Served Average' />
          <alias key='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' value='% Served Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' value='Gross Media Revenue Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Interaction Rate Average:qk:3]&quot;' value='Interaction Rate Average' />
          <alias key='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' value='Interaction Rate Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Metric Z-Score:qk:1]&quot;' value='Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Pages Available Average:qk:2]&quot;' value='Ad Calls Average' />
          <alias key='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' value='Ad Calls Z-Score' />
          <alias key='&quot;[funnel (copy 2)].[usr:Revenue Impact - \% Served (copy):qk:4]&quot;' value='Revenue Impact - IR' />
          <alias key='&quot;[funnel (copy 2)].[usr:Revenue Impact - Ad Call (copy):qk:4]&quot;' value='Revenue Impact - % Served' />
          <alias key='&quot;[funnel (copy 2)].[usr:Revenue Impact - IR (copy):qk:4]&quot;' value='Revenue Impact - CPI' />
        </aliases>
      </column>
      <column datatype='string' name='[Ad Unit and Browser]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Ad Unit] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
      </column>
      <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CPC Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CPC Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CPC P-Value]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [CPC Z-Score] &lt; -3.09023230616781 THEN &quot;99.9%+&quot;&#13;&#10;ELSEIF [CPC Z-Score] &lt; -2.32634787404084 THEN &quot;99%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &lt; -1.64485362695147 THEN &quot;95%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &lt; -1.2815515655446 THEN &quot;90%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 3.09023230616781 THEN &quot;99.9%+&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 2.32634787404084 THEN &quot;99%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 1.64485362695147 THEN &quot;95%&quot;&#13;&#10;ELSEIF [CPC Z-Score] &gt; 1.2815515655446 THEN &quot;90%&quot;&#13;&#10;ELSE &quot;&lt;90%&quot;&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='boolean' name='[CPC outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[CPC Z-Score] &gt; [Parameters].[Standard Deviations] OR [CPC Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[CPI Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Calculation_1270429225019056] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='boolean' name='[CPI outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1270429225019056] &gt; [Parameters].[Standard Deviations] OR [Calculation_1270429225019056] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_4160317122837051],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[CTR Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CTR Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[CTR Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CTR],0) - WINDOW_AVG([Calculation_4160317122837051],-27,0))/WINDOW_STDEV([Calculation_4160317122837051],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[CTR outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[CTR Z-Score] &gt; [Parameters].[Standard Deviations] OR [CTR Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
      </column>
      <column caption='Blacklisted Ad Calls without Min/Max' datatype='integer' name='[Calculation_0060317124106415]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Blacklisted Ad Calls]),0) = WINDOW_MAX(ifnull(sum([Blacklisted Ad Calls]),0)) &#13;&#10;OR ifnull(sum([Blacklisted Ad Calls]),0) = WINDOW_MIN(ifnull(sum([Blacklisted Ad Calls]),0))&#13;&#10;THEN NULL ELSE ifnull(sum([Blacklisted Ad Calls]),0) END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_0120314135922361]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,,&quot; +  IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Ad Calls without Min/Max' datatype='integer' name='[Calculation_0180317120202106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Ad Calls]),0) = WINDOW_MAX(ifnull(sum([Ad Calls]),0)) &#13;&#10;OR ifnull(sum([Ad Calls]),0) = WINDOW_MIN(ifnull(sum([Ad Calls]),0))&#13;&#10;THEN 0 ELSE ifnull(sum([Ad Calls]),0) END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Revenue Impact - Ad Call' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_0690728163405674]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL(SUM([Ad Calls]),0) - [Pages Available Average])/ [Pages Available Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='CPI Mean' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Calculation_1340429224859530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([CPI],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric without Min/Max' datatype='real' name='[Calculation_1510314114443868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN NULL ELSE [Metric] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_2830314120024265]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Calculation_9090314114330358] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9090314114330358 1 1 1 1 1 1] &gt; [Parameters].[Standard Deviations] OR [Calculation_9090314114330358 1 1 1 1 1 1] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fraudulent Clicks without Min/Max' datatype='integer' name='[Calculation_3070317124605609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ifnull(sum([Fraudulent Clicks]),0) = WINDOW_MAX(ifnull(sum([Fraudulent Clicks]),0)) &#13;&#10;OR ifnull(sum([Fraudulent Clicks]),0) = WINDOW_MIN(ifnull(sum([Fraudulent Clicks]),0))&#13;&#10;THEN NULL ELSE ifnull(sum([Fraudulent Clicks]),0) END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Interaction Rate without Min/Max' datatype='real' default-format='n#,##0.00000;-#,##0.00000' name='[Calculation_3270317122151926]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Interaction Rate] = WINDOW_MAX([Interaction Rate]) &#13;&#10;OR [Interaction Rate] = WINDOW_MIN([Interaction Rate])&#13;&#10;THEN 0 ELSE [Interaction Rate] END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='% Served without Min/Max' datatype='real' default-format='n#,##0.00000000;-#,##0.00000000' name='[Calculation_3350317120944013]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Fill Rate] = WINDOW_MAX([Fill Rate]) &#13;&#10;OR [Fill Rate] = WINDOW_MIN([Fill Rate])&#13;&#10;THEN 0 ELSE [Fill Rate] END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='CTR without Min/Max' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_4160317122837051]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CTR] = WINDOW_MAX([CTR]) &#13;&#10;OR [CTR] = WINDOW_MIN([CTR])&#13;&#10;THEN 0 ELSE [CTR] END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Blacklisted Ad Calls Z-Score' datatype='real' name='[Calculation_4590310124859040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Blacklisted Ad Calls]),0) - WINDOW_AVG([Calculation_0060317124106415],-27,0))/WINDOW_STDEV([Calculation_0060317124106415],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5610426170532853]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='CPI without Min/Max' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_7430317122702530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CPI] = WINDOW_MAX([CPI]) &#13;&#10;OR [CPI] = WINDOW_MIN([CPI])&#13;&#10;THEN 0 ELSE [CPI] END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Browser/ Browser Family' datatype='string' name='[Calculation_7570311114722702]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Browser&quot; THEN [Browser]&#13;&#10;    WHEN &quot;Browser Family&quot; THEN [Browser Family]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Gross Media Revenue without Min/Max' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8430317113102213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ifnull(sum([Gross Media Revenue]),0.0) = WINDOW_MAX(ifnull(sum([Gross Media Revenue]),0.0))&#13;&#10;or ifnull(sum([Gross Media Revenue]),0.0) = WINDOW_MIN(ifnull(sum([Gross Media Revenue]),0.0))&#13;&#10;then 0 else ifnull(sum([Gross Media Revenue]),0.0) end' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='% Served Cutoff Filter' datatype='string' name='[Calculation_8840419130628310]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF TOTAL([Fill Rate]) &lt; ([Parameters].[Min Average Ad Calls per Day (copy)]/100) and [Fill Rate Average] - [Fill Rate] &gt; 0.05 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 7 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-7) - WINDOW_AVG([Calculation_1510314114443868],-34,-7))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-34,-7),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 6 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-6) - WINDOW_AVG([Calculation_1510314114443868],-33,-6))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-33,-6),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 5 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-5) - WINDOW_AVG([Calculation_1510314114443868],-32,-5))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-32,-5),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 4 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-4) - WINDOW_AVG([Calculation_1510314114443868],-31,-4))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-31,-4),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 3 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-3) - WINDOW_AVG([Calculation_1510314114443868],-30,-3))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-30,-3),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 2 Days before Yesterday' datatype='real' name='[Calculation_9090314114330358 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-2) - WINDOW_AVG([Calculation_1510314114443868],-29,-2))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-29,-2),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 1 Day before Yesterday' datatype='real' name='[Calculation_9090314114330358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-1) - WINDOW_AVG([Calculation_1510314114443868],-28,-1))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-28,-1),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CPC without Min/Max' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9180317123147787]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [CPC] = WINDOW_MAX([CPC]) &#13;&#10;OR [CPC] = WINDOW_MIN([CPC])&#13;&#10;THEN 0 ELSE [CPC] END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Metric Negative Filter' datatype='string' name='[Calculation_9430314151108835]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fraudulent Clicks Z-Score' datatype='real' name='[Calculation_9720310125012918]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Fraudulent Clicks]),0) - WINDOW_AVG([Calculation_3070317124605609],-27,0))/WINDOW_STDEV([Calculation_3070317124605609],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column caption='% Served Average' datatype='real' default-format='p0.000%' name='[Fill Rate Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='% Served Negative Filter' datatype='string' name='[Fill Rate Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Fill Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='% Served outside of Standard Deviations' datatype='boolean' name='[Fill Rate outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Fill Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Fill Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Filter: Same Day of Week as Yesterday]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([Parameters].[Only Show One Day of Week] AND (DATEPART(&apos;weekday&apos;,[Date]) = DATEPART(&apos;weekday&apos;,[Yesterday])&#13;&#10;)) OR (NOT [Parameters].[Only Show One Day of Week])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Formatted Dimension]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,All Sites,All Ad Units,All Browser Families,All OSs&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,All Ad Units,All Browser Families,All OSs&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,All Sites,&quot; + IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,All Browser Families,All OSs&quot;&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,All Sites,All Ad Units,&quot; + IFNULL([Browser Family],&quot;NULL&quot;) + &quot;,Total&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Gross Media Revenue Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Gross Media Revenue Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Gross Media Revenue outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Gross Media Revenue Z-Score] &gt; [Parameters].[Standard Deviations] OR [Gross Media Revenue Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.000%' name='[Interaction Rate Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[Interaction Rate Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Interaction Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Interaction Rate outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Interaction Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Interaction Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
      </column>
      <column datatype='boolean' name='[Is Yesterday]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date] = [Yesterday]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Metric Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_1510314114443868],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Metric Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_1510314114443868],-27,0))/ROUND(WINDOW_STDEV([Calculation_1510314114443868],-27,0),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Metric]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Measure]&#13;&#10;    WHEN &quot;Blacklisted Ad Calls&quot; THEN IFNULL(SUM([Blacklisted Ad Calls]),0)&#13;&#10;    WHEN &quot;Fraudulent Clicks&quot; THEN IFNULL(SUM([Fraudulent Clicks]),0)&#13;&#10;    WHEN &quot;Pages Available&quot; THEN IFNULL(SUM([Ad Calls]),0)&#13;&#10;    WHEN &quot;Fill Rate&quot; THEN [Fill Rate]&#13;&#10;    WHEN &quot;Interaction Rate&quot; THEN [Interaction Rate]&#13;&#10;    WHEN &quot;CPI&quot; THEN [CPI]&#13;&#10;    WHEN &quot;CTR&quot; THEN [CTR]&#13;&#10;    WHEN &quot;CPC&quot; THEN [CPC]&#13;&#10;    WHEN &quot;Gross Media Revenue&quot; THEN IFNULL(SUM([Gross Media Revenue]),0.0)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Ad Calls Negative Filter' datatype='string' name='[Pages Available Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Pages Available Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Ad Calls outside of Standard Deviations' datatype='boolean' name='[Pages Available outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Pages Available Z-Score] &gt; [Parameters].[Standard Deviations] OR [Pages Available Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FLIGHTS&quot;' value='Flights' />
          <alias key='&quot;HOTELS&quot;' value='Hotels' />
        </aliases>
      </column>
      <column caption='Revenue Impact - IR' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - % Served (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL([Interaction Rate],0) - [Interaction Rate Average]) / [Interaction Rate Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Revenue Impact - % Served' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - Ad Call (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL([Fill Rate],0) - [Fill Rate Average]) / [Fill Rate Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Revenue Impact - CPC' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - CPI (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL([CPC],0) - [CPC Average]) / WINDOW_AVG([Calculation_9180317123147787],-27,0)) * [Gross Media Revenue Average]' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Revenue Impact - GMR' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - IR (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL(SUM([Gross Media Revenue]),0) - [Gross Media Revenue Average]) / [Gross Media Revenue Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Revenue Impact - CPI' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - IR (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((IFNULL([CPI],0) - [Calculation_1340429224859530]) / [Calculation_1340429224859530]) * [Gross Media Revenue Average]' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Site and Browser]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Site] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Site]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Value Label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Value&quot;' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
          <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='date' name='[Yesterday]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='// DATE(&quot;12-17-2013&quot;)&#13;&#10;TODAY()-1' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Z-Score Label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Z-Score&quot;' scope-isolation='false' />
      </column>
      <column-instance column='[Is Yesterday]' derivation='None' name='[none:Is Yesterday:nk]' pivot='key' type='nominal' />
      <column-instance column='[CPC Average]' derivation='User' name='[usr:CPC Average:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CPC P-Value]' derivation='User' name='[usr:CPC P-Value:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[CPC Z-Score]' ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CPI Average]' derivation='User' name='[usr:CPI Average:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CTR Z-Score]' derivation='User' name='[usr:CTR Z-Score:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_4160317122837051]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_0690728163405674]' derivation='User' name='[usr:Calculation_0690728163405674:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Pages Available Average]' ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1340429224859530]' derivation='User' name='[usr:Calculation_1340429224859530:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_3350317120944013]' derivation='User' name='[usr:Calculation_3350317120944013:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_4160317122837051]' derivation='User' name='[usr:Calculation_4160317122837051:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_4590310124859040]' derivation='User' name='[usr:Calculation_4590310124859040:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_0060317124106415]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_8430317113102213]' derivation='User' name='[usr:Calculation_8430317113102213:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_9720310125012918]' derivation='User' name='[usr:Calculation_9720310125012918:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_3070317124605609]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Fill Rate Average]' derivation='User' name='[usr:Fill Rate Average:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Interaction Rate Average]' derivation='User' name='[usr:Interaction Rate Average:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_1510314114443868]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Revenue Impact - % Served (copy)]' derivation='User' name='[usr:Revenue Impact - % Served (copy):qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Interaction Rate Average]' ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Revenue Impact - Ad Call (copy)]' derivation='User' name='[usr:Revenue Impact - Ad Call (copy):qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Fill Rate Average]' ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Revenue Impact - IR (copy)]' derivation='User' name='[usr:Revenue Impact - IR (copy):qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
        <table-calc field='[funnel (copy 2)].[Calculation_1340429224859530]' ordering-type='Rows' />
      </column-instance>
      <group name='[Action (Ad Unit)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Ad Unit,Browser Family,OS,Product,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ad Unit]' />
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[OS]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family,Date,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Browser Family,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Browser Family]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group name='[Action (Dimension) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Breakdown Dimension]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Dimension)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Formatted Dimension]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (OS,Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OS]' />
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category Type]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Product,Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category Type]' />
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <group name='[Action (Site)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Site]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\system_monitoring_funnel copy 4 copy 1.tde' schema='Extract' tablename='Extract' update-time='12/11/2014 5:19:18 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_5610426170532853]' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' />
          </calculations>
          <refresh increment-key='[Date]' incremental-updates='true'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='632320' timestamp-start='2014-12-05 16:35:43.245000' />
            <refresh-event add-from-file-path='' increment-value='#2014-12-06#' refresh-type='increment' rows-inserted='33280' timestamp-start='2014-12-07 21:27:57.714000' />
            <refresh-event add-from-file-path='' increment-value='#2014-12-10#' refresh-type='increment' rows-inserted='65016' timestamp-start='2014-12-11 16:46:40' />
            <refresh-event add-from-file-path='' increment-value='#2014-12-10#' refresh-type='increment' rows-inserted='0' timestamp-start='2014-12-11 17:10:30.945000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.290932' group-percentage='0.102015' measure-ordering='alphabetic' measure-percentage='0.421914' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[funnel (copy 2)].[usr:CTR \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue \%D 2W:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Served \%D 2W:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Multiple Values]' max='6.0' min='-6.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          <encoding attr='color' field='[usr:CPC P-Value:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;&lt;90\%&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;99\%&quot;</bucket>
            </map>
            <map to='#eac0bd'>
              <bucket>&quot;90\%&quot;</bucket>
            </map>
            <map to='#f37263'>
              <bucket>&quot;95\%&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Is Yesterday:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>false</bucket>
            </map>
            <map to='#d62728'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Min Average Ad Calls per Day' datatype='integer' name='[Average Pages per Day]' param-domain-type='any' role='measure' type='quantitative' value='1000'>
          <calculation class='tableau' formula='1000' />
        </column>
        <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
          <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Site and Browser&quot;' />
            <member value='&quot;Ad Unit and Browser&quot;' />
          </members>
        </column>
        <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
          <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
          <members>
            <member value='&quot;Blacklisted Ad Calls&quot;' />
            <member value='&quot;Fraudulent Clicks&quot;' />
            <member value='&quot;Fill Rate&quot;' />
            <member value='&quot;Interaction Rate&quot;' />
            <member value='&quot;CPI&quot;' />
            <member value='&quot;CTR&quot;' />
            <member value='&quot;CPC&quot;' />
            <member value='&quot;Gross Media Revenue&quot;' />
            <member value='&quot;Ad Calls&quot;' />
          </members>
        </column>
        <column caption='% Served Cutoff' datatype='real' name='[Min Average Ad Calls per Day (copy)]' param-domain-type='any' role='measure' type='quantitative' value='99.0'>
          <calculation class='tableau' formula='99.0' />
        </column>
        <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Only Show One Day of Week' datatype='boolean' name='[Only Show One Day of Week]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Browser or Browser Family' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Browser&quot;'>
          <calculation class='tableau' formula='&quot;Browser&quot;' />
          <members>
            <member value='&quot;Browser&quot;' />
            <member value='&quot;Browser Family&quot;' />
          </members>
        </column>
        <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='request_errors' inline='true' name='request_errors (copy 2)' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;requested_at_date_in_et as &quot;Date&quot;,&#13;&#10;&#9;browser_family as &quot;Browser Family&quot;,&#13;&#10;&#9;browser as &quot;Browser&quot;,&#13;&#10;&#9;os_family as &quot;OS Family&quot;,&#13;&#10;&#9;os as &quot;OS&quot;,&#13;&#10;&#9;sum(case when uncaught_exception then 1 else 0 end) as &quot;Uncaught Exception&quot;,&#13;&#10;&#9;sum(case when parsing_error then 1 else 0 end) as &quot;Parsing Error&quot;,&#13;&#10;&#9;sum(case when inactive_entity then 1 else 0 end) as &quot;Inactive Entity&quot;,&#13;&#10;&#9;sum(case when derived_intent_mismatch then 1 else 0 end) as &quot;Derived Intent Mismatch&quot;,&#13;&#10;&#9;sum(case when unknown_entity then 1 else 0 end) as &quot;Unknown Entity&quot;,&#13;&#10;&#9;sum(case when unknown_hotel_property then 1 else 0 end) as &quot;Unknown Hotel Property&quot;,&#13;&#10;&#9;sum(case when unknown_product_category then 1 else 0 end) as &quot;Unknown Product Category&quot;,&#13;&#10;&#9;sum(case when unknown_ad_unit then 1 else 0 end) as &quot;Unknown Ad Unit&quot;,&#13;&#10;&#9;sum(case when unknown_market then 1 else 0 end) as &quot;Unknown Market&quot;,&#13;&#10;&#9;sum(case when unknown_airport_code then 1 else 0 end) as &quot;Unknown Airport Code&quot;,&#13;&#10;&#9;sum(case when publisher_show_ads_suppression then 1 else 0 end) as &quot;Suppressed by Publisher&quot;,&#13;&#10;&#9;sum(case when suspicious_hotel_conversion_value then 1 else 0 end) as &quot;Suspicious Hotel Conversion Value&quot;,&#13;&#10;&#9;count(1) as &quot;Request Errors&quot;&#13;&#10;from intent_media_log_data_production.request_errors&#13;&#10;where requested_at_date_in_et &gt;&gt;= (date(current_timestamp at timezone &apos;America/New_York&apos;) - interval &apos;38 days&apos;)&#13;&#10;&#9;and requested_at_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;and ip_address_blacklisted = 0&#13;&#10;group by&#13;&#10;&#9;requested_at_date_in_et,&#13;&#10;&#9;os_family,&#13;&#10;&#9;os,&#13;&#10;&#9;browser_family,&#13;&#10;&#9;browser</relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[request_errors (copy 2)].[usr:Metric Z-Score:ok]&quot;' value='Metric Z-Score' />
          <alias key='&quot;[request_errors (copy 2)].[usr:Request Errors Z-Score:ok:1]&quot;' value='Count Z-Score' />
        </aliases>
      </column>
      <column caption='Metric Z-Score - 3 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1510311113219541]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-3) - WINDOW_AVG([Calculation_2590311154506235],-30,-3))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-30,-3),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors Average' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_2580116164200677]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric without Min/Max' datatype='integer' default-format='N' name='[Calculation_2590311154506235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Metric] = WINDOW_MAX([Metric]) &#13;&#10;OR [Metric] = WINDOW_MIN([Metric])&#13;&#10;THEN NULL ELSE [Metric] END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 7 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_3570311113337993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-7) - WINDOW_AVG([Calculation_2590311154506235],-34,-7))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-34,-7),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 4 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_4100311113237449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-4) - WINDOW_AVG([Calculation_2590311154506235],-31,-4))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-31,-4),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 1 Day before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_4450311100654122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-1) - WINDOW_AVG([Calculation_2590311154506235],-28,-1))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-28,-1),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 2 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8380311113127777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-2) - WINDOW_AVG([Calculation_2590311154506235],-29,-2))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-29,-2),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Dimension' datatype='string' name='[Calculation_8640115165316652]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Site&quot; THEN &apos;Total&apos;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &apos;Total&apos;&#13;&#10;    WHEN &quot;Browser Family&quot; THEN IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Browser&quot; THEN IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;OS Family&quot; THEN IFNULL([OS Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;OS&quot; THEN IFNULL([OS],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_8760311113355964]' role='measure' type='nominal'>
        <calculation class='tableau' formula='([Calculation_4450311100654122] &gt; [Parameters].[Standard Deviations] OR [Calculation_4450311100654122] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_8380311113127777] &gt; [Parameters].[Standard Deviations] OR [Calculation_8380311113127777] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_1510311113219541] &gt; [Parameters].[Standard Deviations] OR [Calculation_1510311113219541] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_4100311113237449] &gt; [Parameters].[Standard Deviations] OR [Calculation_4100311113237449] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9660311113253455] &gt; [Parameters].[Standard Deviations] OR [Calculation_9660311113253455] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9420311113315981] &gt; [Parameters].[Standard Deviations] OR [Calculation_9420311113315981] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_3570311113337993] &gt; [Parameters].[Standard Deviations] OR [Calculation_3570311113337993] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_8930219124412291]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Metric Z-Score - 6 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9420311113315981]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-6) - WINDOW_AVG([Calculation_2590311154506235],-33,-6))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-33,-6),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Z-Score - 5 Days before Yesterday' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9660311113253455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LOOKUP(IFNULL([Metric],0),-5) - WINDOW_AVG([Calculation_2590311154506235],-32,-5))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-32,-5),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Derived Intent Mismatch]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Inactive Entity]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Metric Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_2590311154506235],-27,0)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Metric Positive Filter' datatype='string' name='[Metric Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Metric Z-Score] &gt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Metric Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_2590311154506235],-27,0))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-27,0),2)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Metric]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Request Errors])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Parsing Error]' role='measure' type='quantitative'>
      </column>
      <column caption='Count Average' datatype='real' name='[Request Errors Average]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors Positive Filter' datatype='string' name='[Request Errors Negative Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Request Errors Z-Score] &gt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END &#13;&#10;ELSE &apos;Keep&apos; END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Request Errors Z-Score]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(IFNULL(SUM([Request Errors]),0) - WINDOW_AVG(SUM([Request Errors])))/WINDOW_STDEV(SUM([Request Errors]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Request Errors outside of Standard Deviations' datatype='boolean' name='[Request Errors outside of Standard Deviations]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Request Errors Z-Score] &gt; [Parameters].[Standard Deviations] OR [Request Errors Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Request Errors]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Suppressed by Publisher]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Suspicious Hotel Conversion Value]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Uncaught Exception]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Ad Unit]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Airport Code]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Entity]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Hotel Property]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Market]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Unknown Product Category]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Derived Intent Mismatch]' derivation='Sum' name='[sum:Derived Intent Mismatch:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inactive Entity]' derivation='Sum' name='[sum:Inactive Entity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parsing Error]' derivation='Sum' name='[sum:Parsing Error:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Request Errors]' derivation='Sum' name='[sum:Request Errors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suppressed by Publisher]' derivation='Sum' name='[sum:Suppressed by Publisher:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Suspicious Hotel Conversion Value]' derivation='Sum' name='[sum:Suspicious Hotel Conversion Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Uncaught Exception]' derivation='Sum' name='[sum:Uncaught Exception:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Ad Unit]' derivation='Sum' name='[sum:Unknown Ad Unit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Airport Code]' derivation='Sum' name='[sum:Unknown Airport Code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Entity]' derivation='Sum' name='[sum:Unknown Entity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Hotel Property]' derivation='Sum' name='[sum:Unknown Hotel Property:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Market]' derivation='Sum' name='[sum:Unknown Market:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown Product Category]' derivation='Sum' name='[sum:Unknown Product Category:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
        <table-calc field='[request_errors (copy 2)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Request Errors Z-Score]' derivation='User' name='[usr:Request Errors Z-Score:ok:1]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\request_errors copy 5 copy 1.tde' schema='Extract' tablename='Extract' update-time='12/11/2014 5:19:29 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18262' timestamp-start='2014-12-11 17:19:29.200000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.281768' measure-ordering='alphabetic' measure-percentage='0.527624' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Derived Intent Mismatch:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[request_errors (copy 2)].[usr:Calculation_2580116164200677:ok]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Request Errors:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Unknown Entity:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Unknown Ad Unit:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Suppressed by Publisher:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Inactive Entity:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Unknown Hotel Property:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Unknown Airport Code:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Suspicious Hotel Conversion Value:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Unknown Market:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Unknown Product Category:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[request_errors (copy 2)].[usr:Request Errors Z-Score:ok:1]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Uncaught Exception:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[request_errors (copy 2)].[sum:Parsing Error:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
          <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Site&quot;' />
            <member value='&quot;Ad Unit&quot;' />
            <member value='&quot;Site and Browser&quot;' />
            <member value='&quot;Ad Unit and Browser&quot;' />
          </members>
        </column>
        <column caption='Only Show Negative Changes' datatype='boolean' name='[Only Show Negative Changes]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
        <column caption='Standard Deviations' datatype='real' name='[Standard Deviations]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='funnel (copy 2)'>
      <datasources>
        <datasource caption='funnel' name='funnel (copy 2)' />
      </datasources>
      <datasource-dependencies datasource='funnel (copy 2)'>
        <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
        </column>
        <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;FLIGHTS&quot;' value='Flights' />
            <alias key='&quot;HOTELS&quot;' value='Hotels' />
          </aliases>
        </column>
        <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[funnel (copy 2)].[none:Ad Type:nk]'>
        <groupfilter function='level-members' level='[none:Ad Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[funnel (copy 2)].[none:Product Category Type:nk]'>
        <groupfilter function='level-members' level='[none:Product Category Type:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='to Site Breakdown' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overall Graphs' type='sheet' worksheet='Gross Media Revenue' />
      <link caption='to Site Breakdown' delimiter=',' escape='\' expression='tsl:Site%20Graphs?%5Bfunnel%20%28copy%202%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Site Graphs' />
      </command>
    </action>
    <action caption='to Ad Unit Breakdown' name='[Action2]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Ad Unit Breakdown' delimiter=',' escape='\' expression='tsl:Ad%20Unit%20Graphs?%5Bfunnel%20%28copy%202%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Ad Unit Graphs' />
      </command>
    </action>
    <action caption='to Ad Unit and Browser Breakdown' name='[Action3]'>
      <source dashboard='Ad Unit Graphs' type='sheet' worksheet='Ad Unit Worms' />
      <link caption='to Ad Unit and Browser Breakdown' delimiter=',' escape='\' expression='tsl:Ad%20Unit%20and%20Browser%20Graphs?%5Bfunnel%20%28copy%202%29%5D.%5BAd%20Unit%5D~s0=&lt;[Ad Unit]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Ad Unit and Browser Graphs' />
      </command>
    </action>
    <action caption='to Site and Browser Breakdown' name='[Action4]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Site and Browser Breakdown' delimiter=',' escape='\' expression='tsl:Site%20and%20Browser%20Graphs?%5Bfunnel%20%28copy%202%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Site and Browser Graphs' />
      </command>
    </action>
    <action caption='to Browser Breakdown' name='[Action5]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Browser Breakdown' delimiter=',' escape='\' expression='tsl:Browser%20Graphs?%5Bfunnel%20%28copy%202%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Browser Graphs' />
      </command>
    </action>
    <action caption='to Ad Unit and Browser Breakdown' name='[Action6]'>
      <activation auto-clear='true' />
      <source dashboard='Site Graphs' type='sheet' worksheet='Site Worms' />
      <link caption='to Ad Unit and Browser Breakdown' delimiter=',' escape='\' expression='tsl:Ad%20Unit%20and%20Browser%20Graphs?%5Bfunnel%20%28copy%202%29%5D.%5BSite%5D~s0=&lt;[Site]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Ad Unit and Browser Graphs' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% Served' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5610426170532853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='% Served Cutoff Filter' datatype='string' name='[Calculation_8840419130628310]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL([Fill Rate]) &lt; ([Parameters].[Min Average Ad Calls per Day (copy)]/100) and [Fill Rate Average] - [Fill Rate] &gt; 0.05 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Average' datatype='real' default-format='p0.000%' name='[Fill Rate Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served Negative Filter' datatype='string' name='[Fill Rate Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Fill Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served outside of Standard Deviations' datatype='boolean' name='[Fill Rate outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Fill Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Fill Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column caption='Revenue Impact - % Served' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - Ad Call (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL([Fill Rate],0) - [Fill Rate Average]) / [Fill Rate Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5610426170532853]' derivation='None' name='[none:Calculation_5610426170532853:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8840419130628310]' derivation='User' name='[usr:Calculation_8840419130628310:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Fill Rate Average]' ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate Average]' derivation='User' name='[usr:Fill Rate Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Negative Filter]' derivation='User' name='[usr:Fill Rate Negative Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Fill Rate Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate outside of Standard Deviations]' derivation='User' name='[usr:Fill Rate outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Fill Rate Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Average]' derivation='User' name='[usr:Gross Media Revenue Average:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Revenue Impact - Ad Call (copy)]' derivation='User' name='[usr:Revenue Impact - Ad Call (copy):qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Fill Rate Average]' ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Average:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Revenue Impact - Ad Call (copy):qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Average:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Revenue Impact - Ad Call (copy):qk:4]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Average:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Calculation_5610426170532853:nk]'>
            <groupfilter function='member' level='[none:Calculation_5610426170532853:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[none:Date:ok]'>
            <groupfilter function='level-members' level='[none:Date:ok]' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Calculation_8840419130628310:nk]'>
            <groupfilter function='member' level='[usr:Calculation_8840419130628310:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Fill Rate Negative Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Fill Rate Negative Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Fill Rate outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:Fill Rate outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[none:Date:ok]</column>
            <column>[funnel (copy 2)].[usr:Last:qk]</column>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[usr:Fill Rate Negative Filter:nk:1]</column>
            <column>[funnel (copy 2)].[usr:Fill Rate outside of Standard Deviations:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy 2)].[usr:Calculation_8840419130628310:nk]</column>
            <column>[funnel (copy 2)].[none:Calculation_5610426170532853:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[none:Date:ok]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Breakdown Dimension:nk]' value='200' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy 2)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy 2)].[:Measure Names] / [funnel (copy 2)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Ad Calls' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Revenue Impact - Ad Call' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Calculation_0690728163405674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL(SUM([Ad Calls]),0) - [Pages Available Average])/ [Pages Available Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5610426170532853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Average' datatype='real' name='[Pages Available Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Ad Calls Negative Filter' datatype='string' name='[Pages Available Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Pages Available Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Ad Calls outside of Standard Deviations' datatype='boolean' name='[Pages Available outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Pages Available Z-Score] &gt; [Parameters].[Standard Deviations] OR [Pages Available Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5610426170532853]' derivation='None' name='[none:Calculation_5610426170532853:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0690728163405674]' derivation='User' name='[usr:Calculation_0690728163405674:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Pages Available Average]' ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Average]' derivation='User' name='[usr:Pages Available Average:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Negative Filter]' derivation='User' name='[usr:Pages Available Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Pages Available Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Pages Available outside of Standard Deviations]' derivation='User' name='[usr:Pages Available outside of Standard Deviations:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Pages Available Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Average:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_0690728163405674:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Average:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Calculation_5610426170532853:nk]'>
            <groupfilter function='member' level='[none:Calculation_5610426170532853:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Pages Available Negative Filter:nk]'>
            <groupfilter function='member' level='[usr:Pages Available Negative Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Pages Available outside of Standard Deviations:nk:1]'>
            <groupfilter function='member' level='[usr:Pages Available outside of Standard Deviations:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[usr:Last:qk]</column>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[usr:Pages Available Negative Filter:nk]</column>
            <column>[funnel (copy 2)].[usr:Pages Available outside of Standard Deviations:nk:1]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy 2)].[none:Date:qk]</column>
            <column>[funnel (copy 2)].[none:Calculation_5610426170532853:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[none:Date:ok]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Breakdown Dimension:nk]' value='184' />
            <format attr='height' field='[funnel (copy 2)].[:Measure Names]' value='42' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy 2)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy 2)].[:Measure Names] / [funnel (copy 2)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Ad Unit Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1270429225019056]' derivation='User' name='[usr:Calculation_1270429225019056:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[Action (Site)]'>
            <groupfilter function='member' level='[Site]' member='&quot;KAYAK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[none:Ad Unit:nk]'>
            <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Kayak Flights Listpage Exit Unit&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[Action (Site)]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[funnel (copy 2)].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy 2)].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[funnel (copy 2)].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[:Measure Names]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[none:Site:nk]' />
              <lod column='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]' />
              <lod column='[funnel (copy 2)].[usr:CPI:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC Z-Score:qk:3]' />
              <lod column='[funnel (copy 2)].[usr:CPI Z-Score:qk:3]' />
              <tooltip column='[funnel (copy 2)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>% Served:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&gt;</run>
                <run>)</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='51' />
                <format attr='maxheight' value='51' />
                <format attr='minwidth' value='762' />
                <format attr='maxwidth' value='762' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Ad Unit:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Product Category Type:nk] / [funnel (copy 2)].[:Measure Names]))) * [funnel (copy 2)].[Multiple Values])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ad Unit and Browser Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit and Browser]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Ad Unit] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit and Browser]' derivation='None' name='[none:Ad Unit and Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser Family]' derivation='None' name='[none:Browser Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1270429225019056]' derivation='User' name='[usr:Calculation_1270429225019056:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[Action (Ad Unit)]'>
            <groupfilter function='level-members' level='[Ad Unit]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[none:Browser Family:nk]'>
            <groupfilter function='member' level='[none:Browser Family:nk]' member='&quot;SAFARI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[Action (Site)]</column>
            <column>[funnel (copy 2)].[Action (Ad Unit)]</column>
            <column>[funnel (copy 2)].[none:Browser Family:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Ad Type:nk]' value='60' />
            <format attr='width' field='[funnel (copy 2)].[none:Ad Unit and Browser:nk]' value='116' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPI:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC Z-Score:qk:1]' />
              <lod column='[funnel (copy 2)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>% Served:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='53' />
                <format attr='maxheight' value='53' />
                <format attr='minwidth' value='813' />
                <format attr='maxwidth' value='813' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Product Category Type:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Ad Unit and Browser:nk] / [funnel (copy 2)].[:Measure Names]))) * [funnel (copy 2)].[Multiple Values])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Blacklisted and Fraudulent Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Blacklisted Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' name='[CTR Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CTR],0) - WINDOW_AVG([Calculation_4160317122837051],-27,0))/WINDOW_STDEV([Calculation_4160317122837051],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Blacklisted Ad Calls Z-Score' datatype='real' name='[Calculation_4590310124859040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Blacklisted Ad Calls]),0) - WINDOW_AVG([Calculation_0060317124106415],-27,0))/WINDOW_STDEV([Calculation_0060317124106415],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Fraudulent Clicks Z-Score' datatype='real' name='[Calculation_9720310125012918]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Fraudulent Clicks]),0) - WINDOW_AVG([Calculation_3070317124605609],-27,0))/WINDOW_STDEV([Calculation_3070317124605609],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Fraudulent Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blacklisted Ad Calls]' derivation='Sum' name='[sum:Blacklisted Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fraudulent Clicks]' derivation='Sum' name='[sum:Fraudulent Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CTR Z-Score]' derivation='User' name='[usr:CTR Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_4160317122837051]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_4590310124859040]' derivation='User' name='[usr:Calculation_4590310124859040:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0060317124106415]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4590310124859040]' derivation='User' name='[usr:Calculation_4590310124859040:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0060317124106415]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_9720310125012918]' derivation='User' name='[usr:Calculation_9720310125012918:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3070317124605609]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_9720310125012918]' derivation='User' name='[usr:Calculation_9720310125012918:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3070317124605609]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_4590310124859040:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_9720310125012918:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CTR Z-Score:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC Z-Score:qk:1]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[none:Browser:nk]'>
            <groupfilter function='level-members' level='[none:Browser:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Unit:nk]</column>
            <column>[funnel (copy 2)].[none:Browser:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Site:nk]' value='96' />
            <format attr='width' field='[funnel (copy 2)].[none:Ad Type:nk]' value='60' />
            <format attr='width' field='[funnel (copy 2)].[none:Product Category Type:nk]' value='52' />
            <format attr='width' field='[funnel (copy 2)].[none:Ad Unit:nk]' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]' max='6.0' min='-6.0' num-steps='3' type='interpolated' />
            <encoding attr='color' field='[funnel (copy 2)].[Multiple Values]' max='7.5' min='-7.5' num-steps='3' palette='tableau-red-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[sum:Blacklisted Ad Calls:qk]' />
              <lod column='[funnel (copy 2)].[usr:Calculation_4590310124859040:qk]' />
              <lod column='[funnel (copy 2)].[sum:Fraudulent Clicks:qk]' />
              <lod column='[funnel (copy 2)].[usr:Calculation_9720310125012918:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Pages Available:&#9;</run>
                <run> ()&#10;</run>
                <run fontcolor='#787878'>Fill Rate:&#9;</run>
                <run bold='true'>Æ </run>
                <run>()&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run> ()&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run bold='true'>Æ </run>
                <run>()</run>
                <run bold='true'>Æ&#10;</run>
                <run fontcolor='#787878'>CPC:&#9;</run>
                <run> ()&#10;</run>
                <run fontcolor='#787878'>Blacklisted Ad Calls</run>
                <run>&#9; ()</run>
                <run bold='true'>Æ&#10;</run>
                <run fontcolor='#787878'>Fraudulent Clicks:</run>
                <run>&#9; ()</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='70' />
                <format attr='maxheight' value='70' />
                <format attr='minwidth' value='1338' />
                <format attr='maxwidth' value='1338' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Site:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Product Category Type:nk] / ([funnel (copy 2)].[none:Ad Unit:nk] / [funnel (copy 2)].[:Measure Names])))) * [funnel (copy 2)].[Multiple Values])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Browser List'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
              <members>
                <member value='&quot;Blacklisted Ad Calls&quot;' />
                <member value='&quot;Fraudulent Clicks&quot;' />
                <member value='&quot;Fill Rate&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser]' derivation='None' name='[none:Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[pcto:sum:Ad Calls:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Pane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Ad Calls]' derivation='Sum' name='[pcto:sum:Ad Calls:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[funnel (copy 2)].[none:Browser:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;CHROME&quot;</bucket>
              <bucket>&quot;IE11&quot;</bucket>
              <bucket>&quot;FIREFOX2&quot;</bucket>
              <bucket>&quot;MOBILE_SAFARI&quot;</bucket>
              <bucket>&quot;IE9&quot;</bucket>
              <bucket>&quot;IE8&quot;</bucket>
              <bucket>&quot;IE10&quot;</bucket>
              <bucket>&quot;SAFARI&quot;</bucket>
              <bucket>&quot;SAFARI6&quot;</bucket>
              <bucket>&quot;SAFARI5&quot;</bucket>
              <bucket>&quot;IE7&quot;</bucket>
              <bucket>&quot;CHROME_MOBILE&quot;</bucket>
              <bucket>&quot;CHROME21&quot;</bucket>
              <bucket>&quot;CHROME31&quot;</bucket>
              <bucket>&quot;FIREFOX24&quot;</bucket>
              <bucket>&quot;SAFARI4&quot;</bucket>
              <bucket>&quot;CHROME30&quot;</bucket>
              <bucket>&quot;FIREFOX26&quot;</bucket>
              <bucket>&quot;CHROME29&quot;</bucket>
              <bucket>&quot;SILK&quot;</bucket>
              <bucket>&quot;FIREFOX17&quot;</bucket>
              <bucket>&quot;CHROME28&quot;</bucket>
              <bucket>&quot;FIREFOX16&quot;</bucket>
              <bucket>&quot;CHROME27&quot;</bucket>
              <bucket>&quot;FIREFOX13&quot;</bucket>
              <bucket>&quot;APPLE_WEB_KIT&quot;</bucket>
              <bucket>&quot;FIREFOX25&quot;</bucket>
              <bucket>&quot;FIREFOX20&quot;</bucket>
              <bucket>&quot;FIREFOX22&quot;</bucket>
              <bucket>&quot;FIREFOX12&quot;</bucket>
              <bucket>&quot;CHROME26&quot;</bucket>
              <bucket>&quot;FIREFOX23&quot;</bucket>
              <bucket>&quot;OPERA&quot;</bucket>
              <bucket>&quot;FIREFOX10&quot;</bucket>
              <bucket>&quot;FIREFOX21&quot;</bucket>
              <bucket>&quot;CHROME11&quot;</bucket>
              <bucket>&quot;BOT&quot;</bucket>
              <bucket>&quot;FIREFOX3&quot;</bucket>
              <bucket>&quot;FIREFOX19&quot;</bucket>
              <bucket>&quot;CHROME24&quot;</bucket>
              <bucket>&quot;FIREFOX15&quot;</bucket>
              <bucket>&quot;CHROME19&quot;</bucket>
              <bucket>&quot;CHROME23&quot;</bucket>
              <bucket>&quot;OPERA12&quot;</bucket>
              <bucket>&quot;FIREFOX18&quot;</bucket>
              <bucket>&quot;FIREFOX14&quot;</bucket>
              <bucket>&quot;IEMOBILE10&quot;</bucket>
              <bucket>&quot;CHROME22&quot;</bucket>
              <bucket>&quot;CHROME25&quot;</bucket>
              <bucket>&quot;FIREFOX11&quot;</bucket>
              <bucket>&quot;FIREFOX9&quot;</bucket>
              <bucket>&quot;CHROME18&quot;</bucket>
              <bucket>&quot;FIREFOX4&quot;</bucket>
              <bucket>&quot;CHROME20&quot;</bucket>
              <bucket>&quot;CHROME12&quot;</bucket>
              <bucket>&quot;BLACKBERRY10&quot;</bucket>
              <bucket>&quot;FIREFOX8&quot;</bucket>
              <bucket>&quot;FIREFOX5&quot;</bucket>
              <bucket>&quot;CHROME17&quot;</bucket>
              <bucket>&quot;FIREFOX7&quot;</bucket>
              <bucket>&quot;FIREFOX6&quot;</bucket>
              <bucket>&quot;CHROME16&quot;</bucket>
              <bucket>&quot;FIREFOX_MOBILE&quot;</bucket>
              <bucket>&quot;MOZILLA&quot;</bucket>
              <bucket>&quot;CHROME15&quot;</bucket>
              <bucket>&quot;CHROME13&quot;</bucket>
              <bucket>&quot;OPERA_MINI&quot;</bucket>
              <bucket>&quot;CHROME14&quot;</bucket>
              <bucket>&quot;IEMOBILE9&quot;</bucket>
              <bucket>&quot;CHROME10&quot;</bucket>
              <bucket>&quot;UNKNOWN&quot;</bucket>
              <bucket>&quot;CHROME8&quot;</bucket>
              <bucket>&quot;CHROME9&quot;</bucket>
              <bucket>&quot;OPERA11&quot;</bucket>
              <bucket>&quot;OPERA16&quot;</bucket>
              <bucket>&quot;IE6&quot;</bucket>
              <bucket>&quot;OPERA15&quot;</bucket>
              <bucket>&quot;CAMINO2&quot;</bucket>
              <bucket>&quot;FIREFOX_MOBILE23&quot;</bucket>
              <bucket>&quot;OPERA10&quot;</bucket>
              <bucket>&quot;IE&quot;</bucket>
              <bucket>&quot;ADOBE_AIR&quot;</bucket>
              <bucket>&quot;OMNIWEB&quot;</bucket>
              <bucket>&quot;LOTUS_NOTES&quot;</bucket>
              <bucket>&quot;OPERA9&quot;</bucket>
              <bucket>&quot;FLOCK&quot;</bucket>
              <bucket>&quot;THUNDERBIRD2&quot;</bucket>
              <bucket>&quot;SEAMONKEY&quot;</bucket>
              <bucket>&quot;FIREFOX&quot;</bucket>
              <bucket>&quot;THUNDERBIRD&quot;</bucket>
              <bucket>&quot;KONQUEROR&quot;</bucket>
              <bucket>&quot;FIREFOX1_5&quot;</bucket>
              <bucket>&quot;CFNETWORK&quot;</bucket>
              <bucket>&quot;NETFRONT&quot;</bucket>
              <bucket>&quot;CAMINO&quot;</bucket>
              <bucket>&quot;LYNX&quot;</bucket>
              <bucket>&quot;FIREFOX3MOBILE&quot;</bucket>
              <bucket>&quot;THUNDERBIRD3&quot;</bucket>
              <bucket>&quot;OUTLOOK_EXPRESS7&quot;</bucket>
              <bucket>&quot;DOWNLOAD&quot;</bucket>
              <bucket>&quot;DOLFIN2&quot;</bucket>
              <bucket>&quot;IEMOBILE6&quot;</bucket>
              <bucket>&quot;NULL&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Date:ok]'>
            <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy 2)].[none:Date:ok]' direction='DESC' />
          <filter class='quantitative' column='[funnel (copy 2)].[pcto:sum:Ad Calls:qk:1]' included-values='in-range'>
            <min>0.0</min>
            <max>0.28922297816252002</max>
          </filter>
          <slices>
            <column>[funnel (copy 2)].[none:Date:ok]</column>
            <column>[funnel (copy 2)].[pcto:sum:Ad Calls:qk:1]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='108' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Browser:nk]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Parameters].[Measure]' value='true' />
            <format attr='display' field='[funnel (copy 2)].[none:Date:ok]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[pcto:sum:Ad Calls:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Browser:nk]</rows>
        <cols>[funnel (copy 2)].[none:Date:ok]</cols>
        <percentages enabled='true' mode='column-in-pane' />
      </table>
    </worksheet>
    <worksheet name='Browser Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Browser/ Browser Family' datatype='string' name='[Calculation_7570311114722702]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Browser&quot; THEN [Browser]&#13;&#10;    WHEN &quot;Browser Family&quot; THEN [Browser Family]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7570311114722702]' derivation='None' name='[none:Calculation_7570311114722702:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1270429225019056]' derivation='User' name='[usr:Calculation_1270429225019056:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[Action (Site)]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='54' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Calculation_7570311114722702:nk]' value='108' />
            <format attr='width' field='[funnel (copy 2)].[none:Ad Unit:nk]' value='144' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPI:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC Z-Score:qk:1]' />
              <tooltip column='[funnel (copy 2)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>% Served:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI:qk]&gt;</run>
                <run> ()</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='50' />
                <format attr='maxheight' value='50' />
                <format attr='minwidth' value='1110' />
                <format attr='maxwidth' value='1110' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Ad Unit:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Product Category Type:nk] / ([funnel (copy 2)].[none:Calculation_7570311114722702:nk] / [funnel (copy 2)].[:Measure Names])))) * [funnel (copy 2)].[Multiple Values])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CPC' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[CPC Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [CPC Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[CPC outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[CPC Z-Score] &gt; [Parameters].[Standard Deviations] OR [CPC Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5610426170532853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column caption='Revenue Impact - CPC' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - CPI (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL([CPC],0) - [CPC Average]) / WINDOW_AVG([Calculation_9180317123147787],-27,0)) * [Gross Media Revenue Average]' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5610426170532853]' derivation='None' name='[none:Calculation_5610426170532853:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPC Average]' derivation='User' name='[usr:CPC Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC Average]' derivation='User' name='[usr:CPC Average:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC Negative Filter]' derivation='User' name='[usr:CPC Negative Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[CPC Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC outside of Standard Deviations]' derivation='User' name='[usr:CPC outside of Standard Deviations:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[CPC Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Revenue Impact - CPI (copy)]' derivation='User' name='[usr:Revenue Impact - CPI (copy):qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[CPC Average]' ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC Average:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Revenue Impact - CPI (copy):qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC Average:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC Z-Score:qk:1]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Calculation_5610426170532853:nk]'>
            <groupfilter function='member' level='[none:Calculation_5610426170532853:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:CPC Negative Filter:nk:1]'>
            <groupfilter function='member' level='[usr:CPC Negative Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:CPC outside of Standard Deviations:nk:1]'>
            <groupfilter function='member' level='[usr:CPC outside of Standard Deviations:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk]'>
            <groupfilter function='empty-level' member='[usr:Volume Filter:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[usr:Last:qk]</column>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[usr:CPC Negative Filter:nk:1]</column>
            <column>[funnel (copy 2)].[usr:CPC outside of Standard Deviations:nk:1]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy 2)].[none:Date:qk]</column>
            <column>[funnel (copy 2)].[none:Calculation_5610426170532853:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[none:Date:ok]' value='43' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Breakdown Dimension:nk]' value='188' />
            <format attr='height' field='[funnel (copy 2)].[none:Date:ok]' value='26' />
            <format attr='height' field='[funnel (copy 2)].[:Measure Names]' value='38' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy 2)].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[usr:CPC Z-Score:qk]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
            <encoding attr='color' field='[funnel (copy 2)].[usr:CPC Z-Score:qk:3]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[usr:CPC Z-Score:qk]' />
              <text column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy 2)].[:Measure Names] / [funnel (copy 2)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='CPI' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[CPI Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Calculation_1270429225019056] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[CPI outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1270429225019056] &gt; [Parameters].[Standard Deviations] OR [Calculation_1270429225019056] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='CPI Mean' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Calculation_1340429224859530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5610426170532853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column caption='Revenue Impact - CPI' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - IR (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL([CPI],0) - [Calculation_1340429224859530]) / [Calculation_1340429224859530]) * [Gross Media Revenue Average]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5610426170532853]' derivation='None' name='[none:Calculation_5610426170532853:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPI Average]' derivation='User' name='[usr:CPI Average:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Negative Filter]' derivation='User' name='[usr:CPI Negative Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_1270429225019056]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI outside of Standard Deviations]' derivation='User' name='[usr:CPI outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_1270429225019056]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1270429225019056]' derivation='User' name='[usr:Calculation_1270429225019056:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1340429224859530]' derivation='User' name='[usr:Calculation_1340429224859530:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Revenue Impact - IR (copy)]' derivation='User' name='[usr:Revenue Impact - IR (copy):qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_1340429224859530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1340429224859530:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Revenue Impact - IR (copy):qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_1340429224859530:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Average:qk:1]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Calculation_5610426170532853:nk]'>
            <groupfilter function='member' level='[none:Calculation_5610426170532853:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[none:Date:qk]' filter-group='3' included-values='all'>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:CPI Negative Filter:nk:1]'>
            <groupfilter function='member' level='[usr:CPI Negative Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:CPI outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:CPI outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[usr:Last:qk]</column>
            <column>[funnel (copy 2)].[usr:CPI Negative Filter:nk:1]</column>
            <column>[funnel (copy 2)].[usr:CPI outside of Standard Deviations:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[none:Date:qk]</column>
            <column>[funnel (copy 2)].[none:Calculation_5610426170532853:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[none:Date:ok]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Breakdown Dimension:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy 2)].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[usr:CPI Z-Score:qk:3]' max='10.0' min='-10.0' num-steps='2' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy 2)].[:Measure Names] / [funnel (copy 2)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Gross Media Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[Filter: Same Day of Week as Yesterday]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([Parameters].[Only Show One Day of Week] AND (DATEPART(&apos;weekday&apos;,[Date]) = DATEPART(&apos;weekday&apos;,[Yesterday])&#13;&#10;)) OR (NOT [Parameters].[Only Show One Day of Week])' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter: Same Day of Week as Yesterday]' derivation='None' name='[none:Filter: Same Day of Week as Yesterday:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[none:Filter: Same Day of Week as Yesterday:nk]'>
            <groupfilter function='member' level='[none:Filter: Same Day of Week as Yesterday:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Filter: Same Day of Week as Yesterday:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Site:nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Product:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Product Category Type:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue Z-Score:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Site:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / [funnel (copy 2)].[none:Product Category Type:nk])) * [funnel (copy 2)].[sum:Gross Media Revenue:qk])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Interaction Rate' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column caption='Dimension' datatype='string' name='[Breakdown Dimension]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN IFNULL([Product Category Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Ad Type],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Site],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN IFNULL([Ad Unit],&quot;NULL&quot;) + &quot;,&quot; + IFNULL([Browser],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Browser Min Ad Call Filter' datatype='string' name='[Calculation_5610426170532853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Browser]&#13;&#10;WHEN &quot;CHROME&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;FIREFOX2&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;MOBILE_SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE7&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE8&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE9&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE10&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;IE11&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI5&quot; THEN &quot;Keep&quot;&#13;&#10;WHEN &quot;SAFARI6&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate Average]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Interaction Rate Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Interaction Rate Z-Score] &lt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Interaction Rate outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Interaction Rate Z-Score] &gt; [Parameters].[Standard Deviations] OR [Interaction Rate Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column caption='Revenue Impact - IR' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Revenue Impact - % Served (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((IFNULL([Interaction Rate],0) - [Interaction Rate Average]) / [Interaction Rate Average]) * [Gross Media Revenue Average]' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Breakdown Dimension]' derivation='None' name='[none:Breakdown Dimension:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5610426170532853]' derivation='None' name='[none:Calculation_5610426170532853:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate Average]' derivation='User' name='[usr:Interaction Rate Average:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Negative Filter]' derivation='User' name='[usr:Interaction Rate Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Interaction Rate Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate outside of Standard Deviations]' derivation='User' name='[usr:Interaction Rate outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Interaction Rate Z-Score]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Revenue Impact - % Served (copy)]' derivation='User' name='[usr:Revenue Impact - % Served (copy):qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Gross Media Revenue Average]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Interaction Rate Average]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Average:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Revenue Impact - \% Served (copy):qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Average:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Calculation_5610426170532853:nk]'>
            <groupfilter function='member' level='[none:Calculation_5610426170532853:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Interaction Rate Negative Filter:nk]'>
            <groupfilter function='member' level='[usr:Interaction Rate Negative Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Interaction Rate outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:Interaction Rate outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[funnel (copy 2)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk:1]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk:1]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[usr:Last:qk]</column>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[usr:Interaction Rate Negative Filter:nk]</column>
            <column>[funnel (copy 2)].[usr:Interaction Rate outside of Standard Deviations:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk:1]</column>
            <column>[funnel (copy 2)].[none:Calculation_5610426170532853:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[none:Date:ok]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Breakdown Dimension:nk]' value='180' />
            <format attr='height' field='[funnel (copy 2)].[:Measure Names]' value='38' />
            <format attr='height' field='[funnel (copy 2)].[none:Date:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[funnel (copy 2)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[none:Product Category Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Breakdown Dimension:nk]</rows>
        <cols>([funnel (copy 2)].[:Measure Names] / [funnel (copy 2)].[none:Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Overall'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column caption='Ad Calls without Min/Max' datatype='integer' name='[Calculation_0180317120202106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ifnull(sum([Ad Calls]),0) = WINDOW_MAX(ifnull(sum([Ad Calls]),0)) &#13;&#10;OR ifnull(sum([Ad Calls]),0) = WINDOW_MIN(ifnull(sum([Ad Calls]),0))&#13;&#10;THEN 0 ELSE ifnull(sum([Ad Calls]),0) END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Interaction Rate without Min/Max' datatype='real' default-format='n#,##0.00000;-#,##0.00000' name='[Calculation_3270317122151926]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Interaction Rate] = WINDOW_MAX([Interaction Rate]) &#13;&#10;OR [Interaction Rate] = WINDOW_MIN([Interaction Rate])&#13;&#10;THEN 0 ELSE [Interaction Rate] END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served without Min/Max' datatype='real' default-format='n#,##0.00000000;-#,##0.00000000' name='[Calculation_3350317120944013]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Fill Rate] = WINDOW_MAX([Fill Rate]) &#13;&#10;OR [Fill Rate] = WINDOW_MIN([Fill Rate])&#13;&#10;THEN 0 ELSE [Fill Rate] END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='CTR without Min/Max' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_4160317122837051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [CTR] = WINDOW_MAX([CTR]) &#13;&#10;OR [CTR] = WINDOW_MIN([CTR])&#13;&#10;THEN 0 ELSE [CTR] END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='CPI without Min/Max' datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[Calculation_7430317122702530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [CPI] = WINDOW_MAX([CPI]) &#13;&#10;OR [CPI] = WINDOW_MIN([CPI])&#13;&#10;THEN 0 ELSE [CPI] END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='CPC without Min/Max' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9180317123147787]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [CPC] = WINDOW_MAX([CPC]) &#13;&#10;OR [CPC] = WINDOW_MIN([CPC])&#13;&#10;THEN 0 ELSE [CPC] END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0180317120202106]' derivation='User' name='[usr:Calculation_0180317120202106:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_3270317122151926]' derivation='User' name='[usr:Calculation_3270317122151926:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_3350317120944013]' derivation='User' name='[usr:Calculation_3350317120944013:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4160317122837051]' derivation='User' name='[usr:Calculation_4160317122837051:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_7430317122702530]' derivation='User' name='[usr:Calculation_7430317122702530:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_9180317123147787]' derivation='User' name='[usr:Calculation_9180317123147787:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_0180317120202106:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_3350317120944013:qk:1]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_3270317122151926:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_7430317122702530:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_4160317122837051:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_9180317123147787:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit:nk]' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[none:Date:ok]'>
            <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy 2)].[none:Date:ok]' direction='DESC' />
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[none:Date:ok]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Ad Unit:nk]' value='256' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy 2)].[none:Date:ok] / ([funnel (copy 2)].[none:Site:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Product Category Type:nk] / [funnel (copy 2)].[none:Ad Unit:nk]))))</rows>
        <cols>[funnel (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Request Errors' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='request_errors' name='request_errors (copy 2)' />
            <datasource name='Parameters' />
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Breakdown' datatype='string' name='[Breakdown]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ad Unit and Browser&quot;'>
              <calculation class='tableau' formula='&quot;Ad Unit and Browser&quot;' />
              <members>
                <member value='&quot;Total&quot;' />
                <member value='&quot;Site&quot;' />
                <member value='&quot;Ad Unit&quot;' />
                <member value='&quot;Site and Browser&quot;' />
                <member value='&quot;Ad Unit and Browser&quot;' />
              </members>
            </column>
            <column caption='Measure' datatype='string' name='[Measure]' param-domain-type='list' role='measure' type='nominal' value='&quot;Blacklisted Ad Calls&quot;'>
              <calculation class='tableau' formula='&quot;Blacklisted Ad Calls&quot;' />
              <members>
                <member value='&quot;Blacklisted Ad Calls&quot;' />
                <member value='&quot;Fraudulent Clicks&quot;' />
                <member value='&quot;Fill Rate&quot;' />
                <member value='&quot;Interaction Rate&quot;' />
                <member value='&quot;CPI&quot;' />
                <member value='&quot;CTR&quot;' />
                <member value='&quot;CPC&quot;' />
                <member value='&quot;Gross Media Revenue&quot;' />
                <member value='&quot;Ad Calls&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='request_errors (copy 2)'>
            <column caption='Request Errors Average' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_2580116164200677]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Request Errors]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Metric outside of Standard Deviations for Week' datatype='boolean' name='[Calculation_8760311113355964]' role='measure' type='nominal'>
              <calculation class='tableau' formula='([Calculation_4450311100654122] &gt; [Parameters].[Standard Deviations] OR [Calculation_4450311100654122] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_8380311113127777] &gt; [Parameters].[Standard Deviations] OR [Calculation_8380311113127777] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_1510311113219541] &gt; [Parameters].[Standard Deviations] OR [Calculation_1510311113219541] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_4100311113237449] &gt; [Parameters].[Standard Deviations] OR [Calculation_4100311113237449] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9660311113253455] &gt; [Parameters].[Standard Deviations] OR [Calculation_9660311113253455] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_9420311113315981] &gt; [Parameters].[Standard Deviations] OR [Calculation_9420311113315981] &lt; (-1*[Parameters].[Standard Deviations])) AND&#13;&#10;([Calculation_3570311113337993] &gt; [Parameters].[Standard Deviations] OR [Calculation_3570311113337993] &lt; (-1*[Parameters].[Standard Deviations]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ad Type, Product, Site, Ad Unit, Browser' datatype='string' name='[Calculation_8930219124412291]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// ad type, product, site, ad unit, browser&#13;&#10;CASE [Parameters].[Breakdown]&#13;&#10;    WHEN &quot;Total&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Site&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Ad Unit&quot; THEN &quot;,,,,&quot;&#13;&#10;    WHEN &quot;Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Site and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;    WHEN &quot;Ad Unit and Browser&quot; THEN &quot;,,,,&quot; + IFNULL([Browser Family],&quot;NULL&quot;)&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Last]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LAST()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Metric Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Metric],0) - WINDOW_AVG([Calculation_2590311154506235],-27,0))/ROUND(WINDOW_STDEV([Calculation_2590311154506235],-27,0),2)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Metric outside of Standard Deviations]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Metric Z-Score] &gt; [Parameters].[Standard Deviations] OR [Metric Z-Score] &lt; (-1*[Parameters].[Standard Deviations])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Request Errors Positive Filter' datatype='string' name='[Request Errors Negative Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Only Show Negative Changes] THEN IF [Request Errors Z-Score] &gt; 0 THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END &#13;&#10;ELSE &apos;Keep&apos; END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_8930219124412291]' derivation='None' name='[none:Calculation_8930219124412291:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2580116164200677]' derivation='User' name='[usr:Calculation_2580116164200677:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_8760311113355964]' derivation='User' name='[usr:Calculation_8760311113355964:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_4450311100654122]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_4100311113237449]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_9660311113253455]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_3570311113337993]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_1510311113219541]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_9420311113315981]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_8380311113127777]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Last]' derivation='User' name='[usr:Last:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Metric Z-Score]' derivation='User' name='[usr:Metric Z-Score:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Metric outside of Standard Deviations]' derivation='User' name='[usr:Metric outside of Standard Deviations:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Metric Z-Score]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Calculation_2590311154506235]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Request Errors Negative Filter]' derivation='User' name='[usr:Request Errors Negative Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[request_errors (copy 2)].[Request Errors Z-Score]' ordering-field='[request_errors (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[request_errors (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[request_errors (copy 2)].[usr:Metric Z-Score:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[request_errors (copy 2)].[usr:Calculation_2580116164200677:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[request_errors (copy 2)].[none:Date:ok]' direction='DESC' />
          <filter class='quantitative' column='[request_errors (copy 2)].[usr:Calculation_2580116164200677:qk:1]' included-values='in-range'>
            <min>1000.0</min>
            <max>92809.552631578947</max>
          </filter>
          <filter class='categorical' column='[request_errors (copy 2)].[usr:Calculation_8760311113355964:nk]'>
            <groupfilter function='member' level='[usr:Calculation_8760311113355964:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[request_errors (copy 2)].[usr:Last:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <filter class='categorical' column='[request_errors (copy 2)].[usr:Metric outside of Standard Deviations:nk]'>
            <groupfilter function='member' level='[usr:Metric outside of Standard Deviations:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[request_errors (copy 2)].[usr:Request Errors Negative Filter:nk]'>
            <groupfilter function='member' level='[usr:Request Errors Negative Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[request_errors (copy 2)].[usr:Last:qk]</column>
            <column>[request_errors (copy 2)].[usr:Metric outside of Standard Deviations:nk]</column>
            <column>[request_errors (copy 2)].[usr:Request Errors Negative Filter:nk]</column>
            <column>[request_errors (copy 2)].[usr:Calculation_2580116164200677:qk:1]</column>
            <column>[request_errors (copy 2)].[usr:Calculation_8760311113355964:nk]</column>
            <column>[request_errors (copy 2)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[request_errors (copy 2)].[:Measure Names]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[request_errors (copy 2)].[none:Calculation_8930219124412291:nk]' value='128' />
            <format attr='width' field='[Parameters].[Measure]' value='100' />
            <format attr='width' field='[Parameters].[Breakdown]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[request_errors (copy 2)].[none:Date:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[request_errors (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[none:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([request_errors (copy 2)].[none:Date:ok] / ([Parameters].[Measure] / ([Parameters].[Breakdown] / [request_errors (copy 2)].[none:Calculation_8930219124412291:nk])))</rows>
        <cols>[request_errors (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Ad Unit:nk]'>
            <groupfilter function='member' level='[none:Ad Unit:nk]' member='&quot;Webjet - Flights List Page&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[funnel (copy 2)].[none:Date:ok]' direction='DESC' />
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Ad Unit:nk]' value='212' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Date:ok]</rows>
        <cols>[funnel (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPI:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[funnel (copy 2)].[none:Date:ok]' direction='DESC' />
          <slices>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[:Measure Names]' value='124' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Ad Unit:nk]' value='244' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy 2)].[none:Date:ok] / ([funnel (copy 2)].[none:Site:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Product Category Type:nk] / [funnel (copy 2)].[none:Ad Unit:nk]))))</rows>
        <cols>[funnel (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Site Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1270429225019056]' derivation='User' name='[usr:Calculation_1270429225019056:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[Action (Site)]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[funnel (copy 2)].[none:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy 2)].[none:Date:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[funnel (copy 2)].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[funnel (copy 2)].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[funnel (copy 2)].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[funnel (copy 2)].[none:Site:nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:CPI:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:CPC:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:CPC Z-Score:qk:1]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Site:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>% Served:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='65' />
                <format attr='maxheight' value='65' />
                <format attr='minwidth' value='596' />
                <format attr='maxwidth' value='596' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Site:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Product Category Type:nk] / [funnel (copy 2)].[:Measure Names]))) * [funnel (copy 2)].[Multiple Values])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Site and Browser Worms'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Browser Family]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0.0000;-#,##0.0000' name='[CPI Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([Calculation_7430317122702530],-27,0))/WINDOW_STDEV([Calculation_7430317122702530],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.000;-#,##0.000' name='[CPI]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Clicks])/SUM([Interactions]),0)' scope-isolation='false' />
            </column>
            <column caption='CPI Actual Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_1270429225019056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPI],0) - WINDOW_AVG([CPI],-27,0))/WINDOW_STDEV([CPI],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Fill Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Fill Rate],0) - WINDOW_AVG([Calculation_3350317120944013],-27,0))/WINDOW_STDEV([Calculation_3350317120944013],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Gross Media Revenue Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Gross Media Revenue]),0.0) - WINDOW_AVG([Calculation_8430317113102213],-27,0))/WINDOW_STDEV([Calculation_8430317113102213],-27,0)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Interaction Rate Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([Interaction Rate],0) - WINDOW_AVG([Calculation_3270317122151926],-27,0))/WINDOW_STDEV([Calculation_3270317122151926],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.000%' name='[Interaction Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Interactions])/SUM([Served Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column caption='Ad Calls Z-Score' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Pages Available Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL(SUM([Ad Calls]),0) - WINDOW_AVG([Calculation_0180317120202106],-27,0))/WINDOW_STDEV([Calculation_0180317120202106],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='string' name='[Site and Browser]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Site] + &quot; - &quot; + [Calculation_7570311114722702]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Volume Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF TOTAL(SUM([Ad Calls])) &gt;= [Parameters].[Average Pages per Day] * TOTAL(COUNTD([Date])) THEN &apos;Keep&apos; ELSE &apos;Remove&apos; END' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Browser Family]' derivation='None' name='[none:Browser Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site and Browser]' derivation='None' name='[none:Site and Browser:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPI Z-Score]' derivation='User' name='[usr:CPI Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_7430317122702530]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[CPI]' derivation='User' name='[usr:CPI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1270429225019056]' derivation='User' name='[usr:Calculation_1270429225019056:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Fill Rate Z-Score]' derivation='User' name='[usr:Fill Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3350317120944013]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Gross Media Revenue Z-Score]' derivation='User' name='[usr:Gross Media Revenue Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_8430317113102213]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Interaction Rate Z-Score]' derivation='User' name='[usr:Interaction Rate Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_3270317122151926]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Interaction Rate]' derivation='User' name='[usr:Interaction Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Pages Available Z-Score]' derivation='User' name='[usr:Pages Available Z-Score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[funnel (copy 2)].[Calculation_0180317120202106]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Volume Filter]' derivation='User' name='[usr:Volume Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Calculation_1270429225019056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Pages Available Z-Score:qk:2]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPI Z-Score:qk:3]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[Action (Site)]'>
            <groupfilter function='level-members' level='[Site]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[none:Browser Family:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Browser Family:nk]' member='%null%' />
              <groupfilter from='&quot;APPLE_WEB_KIT&quot;' function='range' level='[none:Browser Family:nk]' to='&quot;UNKNOWN&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[funnel (copy 2)].[usr:Volume Filter:nk]'>
            <groupfilter function='member' level='[usr:Volume Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[Action (Site)]</column>
            <column>[funnel (copy 2)].[none:Browser Family:nk]</column>
            <column>[funnel (copy 2)].[usr:Volume Filter:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[funnel (copy 2)].[Multiple Values]' max='9.0' min='-9.0' num-steps='3' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[funnel (copy 2)].[Multiple Values]' />
              <lod column='[funnel (copy 2)].[sum:Gross Media Revenue:qk]' />
              <lod column='[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPI:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC:qk]' />
              <lod column='[funnel (copy 2)].[usr:CPC Z-Score:qk:1]' />
              <lod column='[funnel (copy 2)].[usr:CPI Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[sum:Ad Calls:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Pages Available Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate:qk]' />
              <tooltip column='[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[none:Date:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Site:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[Site]&gt;&#10;</run>
                <run fontcolor='#787878'>Gross Media Revenue:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Gross Media Revenue Z-Score:qk]&gt;</run>
                <run>)</run>
                <run bold='true'>Æ&#9;</run>
                <run fontcolor='#787878'>&#10;Ad Calls:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[sum:Ad Calls:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Pages Available Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>% Served:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate:qk]&gt; </run>
                <run>(</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Fill Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>Interaction Rate:&#9;</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:Interaction Rate Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
                <run fontcolor='#787878'>CPI:&#9;</run>
                <run>Æ </run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI:qk]&gt;</run>
                <run> (</run>
                <run bold='true'>&lt;[funnel (copy 2)].[usr:CPI Z-Score:qk]&gt;</run>
                <run>)&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='52' />
                <format attr='maxheight' value='52' />
                <format attr='minwidth' value='746' />
                <format attr='maxwidth' value='746' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([funnel (copy 2)].[none:Product Category Type:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / ([funnel (copy 2)].[none:Site and Browser:nk] / [funnel (copy 2)].[:Measure Names]))) * [funnel (copy 2)].[Multiple Values])</rows>
        <cols>[funnel (copy 2)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp_Testing2'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[CPC Z-Score]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(IFNULL([CPC],0) - WINDOW_AVG([Calculation_9180317123147787],-27,0))/WINDOW_STDEV([Calculation_9180317123147787],-27,0)' scope-isolation='false'>
                <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Gross Media Revenue])/SUM([Clicks]),0)' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC Z-Score]' derivation='User' name='[usr:CPC Z-Score:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
              <table-calc field='[funnel (copy 2)].[Calculation_9180317123147787]' ordering-field='[funnel (copy 2)].[Date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:CPC Z-Score:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:CPC:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[funnel (copy 2)].[none:Date:ok]' direction='DESC' />
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[funnel (copy 2)].[:Measure Names]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[funnel (copy 2)].[none:Date:ok]</rows>
        <cols>[funnel (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp_Testing3'>
      <table>
        <view>
          <datasources>
            <datasource caption='funnel' name='funnel (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='funnel (copy 2)'>
            <column datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='% Served' datatype='real' default-format='p0.000%' name='[Fill Rate]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(SUM([Served Ad Calls])/SUM([Ad Calls]),0)' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Gross Media Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Product' datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FLIGHTS&quot;' value='Flights' />
                <alias key='&quot;HOTELS&quot;' value='Hotels' />
              </aliases>
            </column>
            <column datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Type]' derivation='None' name='[none:Ad Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Media Revenue]' derivation='Sum' name='[sum:Gross Media Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interactions]' derivation='Sum' name='[sum:Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fill Rate]' derivation='User' name='[usr:Fill Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[funnel (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[funnel (copy 2)].[sum:Interactions:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[funnel (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[funnel (copy 2)].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[usr:Fill Rate:qk]&quot;</bucket>
              <bucket>&quot;[funnel (copy 2)].[sum:Gross Media Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[funnel (copy 2)].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2014-04-06#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[funnel (copy 2)].[:Measure Names]</column>
            <column>[funnel (copy 2)].[none:Product Category Type:nk]</column>
            <column>[funnel (copy 2)].[none:Ad Type:nk]</column>
            <column>[funnel (copy 2)].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[funnel (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([funnel (copy 2)].[none:Product Category Type:nk] / ([funnel (copy 2)].[none:Ad Type:nk] / [funnel (copy 2)].[none:Site:nk]))</rows>
        <cols>[funnel (copy 2)].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ad Unit Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='86714' x='13286' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86428' x='13286' y='0'>
              <zone h='100000' id='1' name='Ad Unit Worms' show-title='true' w='86428' x='13286' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13286' x='0' y='0'>
            <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='13286' x='0' y='0'>
              <formatted-text>
                <run>Only Show One&#10;Day of Week</run>
              </formatted-text>
            </zone>
            <zone h='6000' id='11' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='13286' x='0' y='8625'>
            </zone>
            <zone h='8250' id='10' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='13286' x='0' y='14625'>
            </zone>
            <zone fixed-size='41' h='6125' id='7' is-fixed='true' name='Ad Unit Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' w='13286' x='0' y='22875'>
            </zone>
            <zone h='6500' id='13' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='13286' x='0' y='29000'>
            </zone>
            <zone fixed-size='40' h='6000' id='12' is-fixed='true' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' w='13286' x='0' y='35500'>
            </zone>
            <zone fixed-size='42' h='6250' id='9' is-fixed='true' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' w='13286' x='0' y='41500'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ad Unit and Browser Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99714' x='0' y='0'>
              <zone h='100000' id='1' name='Ad Unit and Browser Worms' show-title='true' w='86143' x='13571' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13571' x='0' y='0'>
                <zone h='6875' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='13571' x='0' y='0'>
                </zone>
                <zone h='6000' id='11' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='13571' x='0' y='6875'>
                </zone>
                <zone h='6375' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='13571' x='0' y='12875'>
                </zone>
                <zone h='8250' id='10' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='13571' x='0' y='19250'>
                </zone>
                <zone fixed-size='38' h='5750' id='7' is-fixed='true' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' w='13571' x='0' y='27500'>
                </zone>
                <zone h='6500' id='14' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='13571' x='0' y='33250'>
                </zone>
                <zone fixed-size='43' h='6375' id='8' is-fixed='true' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[Action (Ad Unit)]' type='filter' w='13571' x='0' y='39750'>
                </zone>
                <zone fixed-size='41' h='6125' id='13' is-fixed='true' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[none:Browser Family:nk]' type='filter' w='13571' x='0' y='46125'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Blacklisted and Fraudulent' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='87857' x='12143' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='87571' x='12143' y='0'>
              <zone h='100000' id='1' name='Blacklisted and Fraudulent Graph' show-title='true' w='87571' x='12143' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12143' x='0' y='0'>
            <zone h='8750' id='6' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='12143' x='0' y='0'>
            </zone>
            <zone h='6500' id='7' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Site:nk]' type='filter' w='12143' x='0' y='8750'>
            </zone>
            <zone h='6500' id='9' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='12143' x='0' y='15250'>
            </zone>
            <zone h='6500' id='8' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' w='12143' x='0' y='21750'>
            </zone>
            <zone h='6500' id='10' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' w='12143' x='0' y='28250'>
            </zone>
            <zone h='6500' id='11' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Browser:nk]' type='filter' w='12143' x='0' y='34750'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Browser Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='86714' x='13286' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86428' x='13286' y='0'>
              <zone h='100000' id='7' name='Browser Worms' show-title='true' w='86428' x='13286' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13286' x='0' y='0'>
            <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='13286' x='0' y='0'>
              <formatted-text>
                <run>Only Show One&#10;Day of Week</run>
              </formatted-text>
            </zone>
            <zone h='6000' id='10' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='13286' x='0' y='8625'>
            </zone>
            <zone h='6375' id='11' param='[Parameters].[Parameter 1]' type='paramctrl' w='13286' x='0' y='14625'>
            </zone>
            <zone h='8250' id='9' name='Browser Worms' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='13286' x='0' y='21000'>
            </zone>
            <zone fixed-size='48' h='7000' id='8' is-fixed='true' name='Browser Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' w='13286' x='0' y='29250'>
            </zone>
            <zone h='6500' id='12' name='Browser Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='13286' x='0' y='36250'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Exception Summary' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='1200' maxwidth='3000' minheight='1200' minwidth='3000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='5333' x='0' y='0'>
              <zone h='4332' id='6' param='[Parameters].[Standard Deviations]' type='paramctrl' w='5333' x='0' y='0'>
              </zone>
              <zone h='5416' id='9' param='[Parameters].[Only Show Negative Changes]' type='paramctrl' w='5333' x='0' y='4332'>
                <formatted-text>
                  <run>Only Show Negative&#10;Changes</run>
                </formatted-text>
              </zone>
              <zone h='9833' id='7' param='[Parameters].[Breakdown]' type='paramctrl' w='5333' x='0' y='9748'>
              </zone>
              <zone h='5499' id='15' name='Ad Calls' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='5333' x='0' y='19581'>
              </zone>
              <zone h='666' id='17' name='Request Errors' param='[request_errors (copy 2)].[none:Date:qk]' type='filter' w='5333' x='0' y='25080'>
              </zone>
              <zone h='5166' id='16' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='5333' x='0' y='25746'>
                <formatted-text>
                  <run>Minimum Average&#10;Pages per Day</run>
                </formatted-text>
              </zone>
              <zone h='4249' id='19' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='5333' x='0' y='30912'>
              </zone>
              <zone h='4333' id='20' name='Ad Calls' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='5333' x='0' y='35161'>
              </zone>
            </zone>
            <zone fixed-size='2670' h='100000' id='3' is-fixed='true' type='layout-basic' w='89000' x='5333' y='0'>
              <zone h='100000' id='1' name='Ad Calls' show-title='true' w='14967' x='5333' y='0'>
              </zone>
              <zone h='100000' id='10' name='Interaction Rate' show-title='true' w='15100' x='35267' y='0'>
              </zone>
              <zone h='100000' id='11' name='CPI' show-title='true' w='15033' x='50367' y='0'>
              </zone>
              <zone h='100000' id='12' name='CPC' show-title='true' w='15000' x='65400' y='0'>
              </zone>
              <zone h='100000' id='14' name='Request Errors' show-title='true' w='13933' x='80400' y='0'>
              </zone>
              <zone h='100000' id='18' name='% Served' show-title='true' w='14967' x='20300' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overall Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='172' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12286' x='0' y='0'>
              <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='12286' x='0' y='0'>
                <formatted-text>
                  <run>Only Show One&#10;Day of Week</run>
                </formatted-text>
              </zone>
              <zone h='6000' id='10' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='12286' x='0' y='8625'>
              </zone>
              <zone h='8250' id='9' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='12286' x='0' y='14625'>
              </zone>
              <zone fixed-size='44' h='6500' id='8' is-fixed='true' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Site:nk]' type='filter' w='12286' x='0' y='22875'>
              </zone>
              <zone h='6500' id='12' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='12286' x='0' y='29375'>
              </zone>
              <zone h='6500' id='11' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' w='12286' x='0' y='35875'>
              </zone>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='87428' x='12286' y='0'>
              <zone h='100000' id='1' name='Gross Media Revenue' show-title='true' w='87428' x='12286' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Site Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99714' x='0' y='0'>
              <zone h='100000' id='1' name='Site Worms' show-title='true' w='86571' x='13143' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13143' x='0' y='0'>
                <zone h='8625' id='7' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='13143' x='0' y='0'>
                  <formatted-text>
                    <run>Only Show One&#10;Day of Week</run>
                  </formatted-text>
                </zone>
                <zone h='6000' id='9' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='13143' x='0' y='8625'>
                </zone>
                <zone h='8250' id='8' name='Site Worms' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='13143' x='0' y='14625'>
                </zone>
                <zone fixed-size='43' h='6375' id='6' is-fixed='true' name='Site Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' w='13143' x='0' y='22875'>
                </zone>
                <zone h='6500' id='11' name='Site Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='13143' x='0' y='29250'>
                </zone>
                <zone h='6500' id='10' name='Site Worms' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' w='13143' x='0' y='35750'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Site and Browser Graphs' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='177' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12643' x='0' y='0'>
              <zone h='8625' id='6' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' w='12643' x='0' y='0'>
                <formatted-text>
                  <run>Only Show One&#10;Day of Week</run>
                </formatted-text>
              </zone>
              <zone h='6000' id='11' param='[Parameters].[Average Pages per Day]' type='paramctrl' w='12643' x='0' y='8625'>
              </zone>
              <zone h='6375' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='12643' x='0' y='14625'>
              </zone>
              <zone h='8250' id='10' name='Site and Browser Worms' param='[funnel (copy 2)].[none:Date:qk]' type='filter' w='12643' x='0' y='21000'>
              </zone>
              <zone fixed-size='42' h='6250' id='7' is-fixed='true' name='Site and Browser Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' w='12643' x='0' y='29250'>
              </zone>
              <zone h='6500' id='13' name='Site and Browser Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='12643' x='0' y='35500'>
              </zone>
              <zone fixed-size='42' h='6250' id='9' is-fixed='true' name='Site and Browser Worms' param='[funnel (copy 2)].[none:Browser Family:nk]' type='filter' w='12643' x='0' y='42000'>
              </zone>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='87071' x='12643' y='0'>
              <zone h='100000' id='1' name='Site and Browser Worms' show-title='true' w='87071' x='12643' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Summary' tab-color='#d7e9ff'>
      <style>
      </style>
      <size maxheight='1600' maxwidth='2000' minheight='1600' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='92200' x='7800' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='92000' x='7800' y='0'>
              <zone h='100000' id='1' name='Overall' show-title='true' w='92000' x='7800' y='0'>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='150' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='7800' x='0' y='0'>
            <zone h='3500' id='6' name='Overall' param='[funnel (copy 2)].[none:Date:ok]' type='filter' w='7800' x='0' y='0'>
            </zone>
            <zone h='3250' id='9' name='Overall' param='[funnel (copy 2)].[none:Site:nk]' type='filter' w='7800' x='0' y='3500'>
            </zone>
            <zone h='3250' id='7' name='Overall' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' w='7800' x='0' y='6750'>
            </zone>
            <zone h='3250' id='8' name='Overall' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' w='7800' x='0' y='10000'>
            </zone>
            <zone h='3250' id='11' name='Overall' param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' w='7800' x='0' y='13250'>
            </zone>
            <zone h='3250' id='10' name='Overall' param='[funnel (copy 2)].[none:Browser:nk]' type='filter' w='7800' x='0' y='16500'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Overall'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy 2)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy 2)].[none:Browser:nk]</field>
          <field>[funnel (copy 2)].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Summary'>
      <zones>
        <zone mode='checkdropdown' name='Overall' param='[funnel (copy 2)].[none:Date:ok]' type='filter' />
        <zone mode='checkdropdown' name='Overall' param='[funnel (copy 2)].[none:Site:nk]' type='filter' />
        <zone mode='checkdropdown' name='Overall' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Overall' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Overall' param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' />
        <zone mode='checkdropdown' name='Overall' param='[funnel (copy 2)].[none:Browser:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Gross Media Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:qk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Gross Media Revenue Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Overall Graphs'>
      <zones>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone name='Gross Media Revenue' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Site:nk]' type='filter' />
        <zone mode='checkdropdown' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Gross Media Revenue' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' />
        <zone name='Gross Media Revenue'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Site Worms'>
      <cards>
        <edge name='left'>
          <strip size='207'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[attr:Site:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Date:qk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Site Graphs'>
      <active id='1' />
      <zones>
        <zone name='Site Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone name='Site Worms' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Site Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' />
        <zone mode='checkdropdown' name='Site Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Site Worms' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad Unit Worms'>
      <cards>
        <edge name='left'>
          <strip size='232'>
            <card size='37' type='pages' />
            <card size='169' type='filters' />
            <card size='314' type='marks' />
            <card size='145' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy 2)].[none:Ad Type:nk]</field>
          <field>[funnel (copy 2)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy 2)].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ad Unit Graphs'>
      <zones>
        <zone name='Ad Unit Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone name='Ad Unit Worms' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit Worms' param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Browser Worms'>
      <cards>
        <edge name='left'>
          <strip size='273'>
            <card size='37' type='pages' />
            <card size='145' type='filters' />
            <card size='314' type='marks' />
            <card size='145' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy 2)].[none:Ad Type:nk]</field>
          <field>[funnel (copy 2)].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Calculation_7570311114722702:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Browser Graphs'>
      <zones>
        <zone name='Browser Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Browser Worms' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Browser Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' />
        <zone mode='checkdropdown' name='Browser Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Site and Browser Worms'>
      <cards>
        <edge name='left'>
          <strip size='263'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:OS Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site and Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Site and Browser Graphs'>
      <active id='1' />
      <zones>
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Site and Browser Worms' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Site and Browser Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' />
        <zone mode='checkdropdown' name='Site and Browser Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Site and Browser Worms' param='[funnel (copy 2)].[none:Browser Family:nk]' type='filter' />
        <zone name='Site and Browser Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad Unit and Browser Worms'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='checkdropdown' param='[funnel (copy 2)].[Action (Site)]' type='filter' />
            <card mode='checkdropdown' param='[funnel (copy 2)].[Action (Ad Unit)]' type='filter' />
            <card param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[funnel (copy 2)].[none:Site:nk]' type='filter' />
            <card param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit and Browser:nk]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:OS Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:OS:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ad Unit and Browser Graphs'>
      <zones>
        <zone name='Ad Unit and Browser Worms'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[Action (Site)]' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[Action (Ad Unit)]' type='filter' />
        <zone mode='checkdropdown' name='Ad Unit and Browser Worms' param='[funnel (copy 2)].[none:Browser Family:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ad Calls'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[none:Calculation_5610426170532853:nk]</field>
          <field>[funnel (copy)].[usr:Pages Available Negative Filter:nk:4]</field>
          <field>[funnel (copy)].[usr:Pages Available outside of Standard Deviations:nk:4]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:7]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='% Served'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Min Average Ad Calls per Day (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Min Average Ad Calls per Day (copy 2)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[none:Calculation_5610426170532853:nk]</field>
          <field>[funnel (copy)].[usr:Calculation_8840419130628310:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:7]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Interaction Rate'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Average Pages per Day]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Min Average Ad Calls per Day (copy 2)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[none:Calculation_5610426170532853:nk]</field>
          <field>[funnel (copy)].[usr:Interaction Rate Negative Filter:nk:1]</field>
          <field>[funnel (copy)].[usr:Interaction Rate outside of Standard Deviations:nk:1]</field>
          <field>[funnel (copy)].[usr:Interaction Rate outside of Standard Deviations:nk:2]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPI'>
      <cards>
        <edge name='left'>
          <strip size='282'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[none:Calculation_5610426170532853:nk]</field>
          <field>[funnel (copy)].[usr:CPI Negative Filter:nk:2]</field>
          <field>[funnel (copy)].[usr:CPI Negative Filter:nk:4]</field>
          <field>[funnel (copy)].[usr:CPI Z-Score:qk:3]</field>
          <field>[funnel (copy)].[usr:CPI outside of Standard Deviations:nk:2]</field>
          <field>[funnel (copy)].[usr:CPI outside of Standard Deviations:nk:4]</field>
          <field>[funnel (copy)].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:CPI Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPI Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:CPI outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPI outside of Standard Deviations:nk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPC'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='list' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[none:Calculation_5610426170532853:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Formatted Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Is Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[usr:CPC Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPC Z-Score:qk:2]</field>
          <field>[vertica.41593.498140914351].[usr:CPC outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPC outside of Standard Deviations:nk:3]</field>
          <field>[vertica.41593.498140914351].[usr:CPI Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:CPI outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Fill Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate Negative Filter:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Interaction Rate outside of Standard Deviations:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available Z-Score:qk:3]</field>
          <field>[vertica.41593.498140914351].[usr:Pages Available outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Request Errors'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Breakdown]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Standard Deviations]' type='parameter' />
            <card mode='compact' param='[Parameters].[Only Show Negative Changes]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
          <field>[vertica.41654.504623240740].[:Measure Names]</field>
          <field>[vertica.41654.504623240740].[none:Calculation_8640115165316652:nk]</field>
          <field>[vertica.41654.504623240740].[none:Calculation_8930219124412291:nk]</field>
          <field>[vertica.41654.504623240740].[none:Date:ok]</field>
          <field>[vertica.41654.504623240740].[none:Date:qk]</field>
          <field>[vertica.41654.504623240740].[usr:Calculation_8760311113355964:nk:1]</field>
          <field>[vertica.41654.504623240740].[usr:Calculation_8760311113355964:nk:4]</field>
          <field>[vertica.41654.504623240740].[usr:Metric outside of Standard Deviations:nk:4]</field>
          <field>[vertica.41654.504623240740].[usr:Metric outside of Standard Deviations:nk]</field>
          <field>[vertica.41654.504623240740].[usr:Pages Available Negative Filter:nk:1]</field>
          <field>[vertica.41654.504623240740].[usr:Pages Available outside of Standard Deviations:nk:1]</field>
          <field>[vertica.41654.504623240740].[usr:Request Errors Negative Filter:nk:4]</field>
          <field>[vertica.41654.504623240740].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Exception Summary'>
      <active id='12' />
      <zones>
        <zone mode='type_in' name='' param='[Parameters].[Standard Deviations]' type='paramctrl' />
        <zone custom-title='true' mode='compact' name='' param='[Parameters].[Only Show Negative Changes]' type='paramctrl' />
        <zone mode='list' name='' param='[Parameters].[Breakdown]' type='paramctrl' />
        <zone name='Ad Calls' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='type_in' name='' param='[Parameters].[Average Pages per Day]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Show One Day of Week]' type='paramctrl' />
        <zone mode='checkdropdown' name='Ad Calls' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone name='Ad Calls'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Interaction Rate'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='CPI'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Request Errors'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='% Served'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Browser List'>
      <cards>
        <edge name='left'>
          <strip size='131'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Breakdown]</field>
          <field>[Parameters].[Measure]</field>
          <field>[funnel (copy)].[none:Browser:nk]</field>
          <field>[funnel (copy)].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Calculation_0120314135922361:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Date:qk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Calculation_2830314120024265:nk:1]</field>
          <field>[vertica.41593.498140914351].[usr:Calculation_9430314151108835:nk:2]</field>
          <field>[vertica.41593.498140914351].[usr:Metric outside of Standard Deviations:nk:2]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Blacklisted and Fraudulent Graph'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[funnel (copy 2)].[Multiple Values]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Show One Day of Week]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy 2)].[none:Ad Type:nk]</field>
          <field>[funnel (copy 2)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy 2)].[none:Browser:nk]</field>
          <field>[funnel (copy 2)].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Unit ID:ok]</field>
          <field>[vertica.41593.498140914351].[none:Browser Family:nk]</field>
          <field>[vertica.41593.498140914351].[none:Filter: Same Day of Week as Yesterday:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[usr:Volume Filter:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Blacklisted and Fraudulent'>
      <zones>
        <zone name='Blacklisted and Fraudulent Graph'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='checkdropdown' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Site:nk]' type='filter' />
        <zone mode='checkdropdown' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Ad Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Product Category Type:nk]' type='filter' />
        <zone mode='checkdropdown' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Ad Unit:nk]' type='filter' />
        <zone mode='checkdropdown' name='Blacklisted and Fraudulent Graph' param='[funnel (copy 2)].[none:Browser:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp_Testing2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp_Testing3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41593.498140914351].[:Measure Names]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Date:ok]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy 2)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy)].[none:Ad Unit:nk]</field>
          <field>[vertica.41593.498140914351].[none:Ad Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Breakdown Dimension:nk]</field>
          <field>[vertica.41593.498140914351].[none:Product Category Type:nk]</field>
          <field>[vertica.41593.498140914351].[none:Site:nk]</field>
          <field>[vertica.41593.498140914351].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[funnel (copy 2)].[none:Ad Type:nk]</field>
          <field>[funnel (copy 2)].[none:Ad Unit:nk]</field>
          <field>[funnel (copy 2)].[none:Product Category Type:nk]</field>
          <field>[funnel (copy 2)].[none:Site:nk]</field>
          <field>[funnel (copy 2)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Overall' width='192'>
      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
      H/T086dDKoEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gross Media Revenue' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall Graphs' width='192'>
      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
      OZVKCbEUx3iyOiwGunggERzynnggTFAAMrzrunjgsuM40A8PkwNHevbDO3dYBSFsHUym4juO
      hQnjed5qle/d26UivNwoM9xELoFWH+6E4rFUPG7Udq68873ccCPud+/fiRUXI77f6kgJcYRW
      bQih9vY92U84O8srfirJqqX1BilGM2Hrla9+d2Aqo7+eNZvNer0OTjsUfFEU5bquciwIIajc
      Cz42+DAajUYikWC0EGcSgB8NA8UhyzFMnvWsUQdgm2A6J3o8ARK8dXB7oyhqLBQIIZQoLKlr
      P8syyI3lLK3bbiGS8NK5fJS2mpu6ZTtD6npqcuLBRik/VRTPgYH46EuzV+oPK23ZlxT96mKx
      6bDJy8BAkAuDXsydTqdSqcAuAq0woWHlybOCW0XP9YnjyVGQYgNdbLfb+/v7CCE8nR5aI2LQ
      g1/hIsENxrZtmqZ5no/H4/l8fsivznXdsTBhj8WBHLOl2snhmBtPSFq1ihviM8nokMerqvpU
      cmGnih8onIC2UUSgcQdkcHsq0SBG8AxjoGddeuaFWZbVE1k+xycQXw5aRrBcQVt2vhudnG7W
      cwykSoJm7uQn+JQXCnQJ8iTY7/5ldGk9VZ5PQtmzLg8fLBfyE6rl+ojMJYUP7ywLlBlOzFyZ
      H61PI/K9z+/cKc5fsfUuK6T0TnW/0bZl6dbb7/GjJd17ZXn5XnFySrMsgmQ4yrm7tkN7Wmb6
      xlyhX5HCQBkXEP1MS6tea3bbrd2Vz+vUG9eLE9nXCM+WVMUKdREaTYFqtdru6qcbVS0u+FG+
      vjQ7lXCRYsktWeeT5w81NWu1RqPa2N0sSeTLC5O3b15JxMXqbp1VZIQupED/P0Lu/Ugr9A4d
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Site Worms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Site Graphs' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ad Unit Worms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ad Unit Graphs' width='192'>
      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
      KAhCrVZLp9OKohQKhVQqRZIk3Ob3nNqrhSWiwfPzfWGdTqfVammalk6nrcAdXNZjvvXW28GQ
      FwXOxaV7fjMI9DCdnwABAJrNJsuye5er0QllvfJ6cbvalNUEe59dRR6oB7fK84to5CsvVVXd
      Xx4f+eN9f2FknetJD8dxfP+OaXut7V6BOI5jGGe5suNhGNZzz6+phh4mRVHGWKYdb2t78YJ9
      oHMtn11TEGo+narXauGg5+bHq6FISAfYTPLw8b2DSvksryCL8+lavRaLhG99eDM1N9fpD6cP
      2zHtvjq1oka6DQ2PhncHJuDgzrnW6g1QZPDWb+60BPNHP/mBz+VYz+aCwRA4doAarR6GIm/+
      82vtnvLyj18OuNFSZzCoN04XoG6tXtWU7WwnGnEqgvTEcy/BAJ1rIR8jA8qFI17g0iWuI+jz
      6WnVPMEcimjIx8lgksb8QRyYWkcwU1MBznHKWRi+2IQHxz3OLk6SJGb6aRTewiBb4HwgyJbd
      AKnioN0fAACsBYhWcQQAAIDW6fRF8ZTrI6EvvcMXFt64cQMAgCMG5XGrzXaTiP7xc0+c6XlC
      59ThCwsNRVRRGjhQpVcHKu4gYT8JOhzsREO27N7C6hs38wMyFmRMXWOYgCR1G4Wyf/7iBNb7
      1QeFgBef8EZUh6O4ecvt8vpj8YmJZHb17sW5yfUqj0mttupKxkIy12T9AVFDNIFLZWbfef0f
      4zNzXsbXqW/wjjiudP0EqbAkMlA3Gs2Xnv3G2X5yaCx2AyTxvbUtGdODlXKeFx2LM4G33/zn
      GRWPXWD7gsI6pV/8/KNLj18w5fZ7dzuXH+F6nCL2etqAeu9mNqiUtqSQthAabK+sKLGr4cFK
      nn/hp/Fet5vAqTd/+/q0DwihuIPrm5ijWB8OVm5jc4dML4e+iHZvYRLfNQlXbbtIOJ3NNhf2
      0rqJOlmP3+XgVRxog2618v569flnLotDVZTlYHRS6tba3JBhGBzHb9+6tXDxii52u+32joSl
      o77p2bni5oqomOFIFMFMQ8dYGinWe+GARxkKKkZMRsNn/dmhMYB9IMgWOJAI2QIDBNkCAwTZ
      AgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QID
      BNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZ
      AgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QID
      BNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZ
      AgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QID
      BNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZ
      AgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QIDBNkCAwTZAgME2QID
      BNkCAwTZAgME2fL/AYN1RUVX5v/3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Browser Worms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Browser Graphs' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Site and Browser Worms' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Site and Browser Graphs' width='192'>
      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
      mIXhwl/sxA0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ad Unit and Browser Worms' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2915Mj2ZUffNMhE0gg4b0rX901091jOCSXbumk
      NUEtuVquNkLxxRcbIf1BetGT/gdF6IH6vpW4G+JwyZnh+Onp6nLw3iRMJtKbq4c7jcHAFQpV
      1d2Dqd9DBxrIPJmoPDj33GN+B4MQgjvcYV3gL/oG7vD1xp0C3eFauFOgO1wLdwp0h2vhToHu
      cC3cKdAdrgUSAAAhlGX5Rd/JSw1N02iaXuNECKEoiiRJOhwOkiQBALZt4/jN/G5vUNTa0rC7
      ONASjAaNj540fvT9N2RZdrlcVzpXluVOpyPLstvthhDqum6aJgAAx/FsNrueOk7BNE2CIDAM
      AwBACPP5vKqqJEkyDON0OhmGYVmWIIhVREEILctCKn4lXPmElxbqaHByUUzvHAS5rzzp86dP
      wtFQX8a3U2FTHVU7QjadwFaT6fb5KKwpSZJlWejxXwoIYbfb7fV6LpcrGAwmk8mpA2RZvri4
      yGQyTqdztbtYCMuy0AvbtguFgt/vz2aztm0bhqGqqiAItVqNoqhQKOR2uy+9bdu2515CEITh
      cChJktvt9nq9Ho9nUik3xwIdf/SBLxH/w7/83huPY5baqLdDXmfq6M9GtceKBouNTiAYoIHZ
      18koowT2vvvGYXp8bu7z94/ro5/8+Y/c9Pzf64oWCEJYrVYBAIlEYtFP3zRNy7Ly+Xw6nb70
      uS4HskC2bedyuWAwGAwGZ+8HGUJFUQKBQCAQoChq0Z1PWiDTNDudjiAIAACO47xer9PplGV5
      OBwKgoDjuNvtdjgcBEFsjgKpo8FZvgQAGQ55e8ORqWk0TXpDScyUxKGgWxYgaKgKFuWmLMkb
      205G/ONzC8cf/tM7T//x//2PDDXfCVhRgRqNhmEY6XQaLStzYZomSZKGYeRyuXg87vV61/iy
      Y1EAgFwuF41GfT7fkiMty+r1eoPBwDRNiqLYZxhr+ViBIISDwaDRaCCZc38GpmmORiPDMCzL
      +lKBhu1Kril4WSaWyrpwrc7rBFRj8fgq38RQxOOzvJt1d/v919/4lmPpsqvJw5PzIul0v3Kw
      O/m+0Gvlyq17r7xC45ai2ayLAQBoUu/x05LHxyXjCTdDVFt9F2G7Q/HZS7SrhUp7uH//Fc45
      /0e2BHyrdporvfat77oc0wpk27aqqpIkXepgoh9oLBZboj3gmQKhF9VqNZPJrO0IW5bF8zzD
      MBzHrX6WruuSJEmSpChKOBwOBAJo/UJO9GAwkCQpHo+v6Dx96QMJnZpoBtXcR//6yVnKrdar
      Q8sT9tudRz/79Vb4EktbPDnNvvoGLg+HsrpcewAAxZPz7Qev/fG3/1+jnGtWKtm9w1qzxlKU
      grn/3Y9f/d1v/5nvdzAT++kv/5026PudZnuoGurgo/ffZzlWl0RNxTxeOnPvW68dZibFdpvV
      Nq9Vq/+TctAUIHpCl8IIg2CjcU4sVUSS+/W//8WMegAAALD0jz/805Mi/+jNb8/GNXAcR7Zn
      uQXq9Xqaph0dHV2qDWMFAgCEw+FcLhcOh5fbjzEMwxiNRpIkybKMDMZ11kEIoaqqPM8LgoA8
      m+FwmEqlPB7P6kImLVAV8yaH1ePzUkvW9fs7OyMDp6EYztwPcswlX0wRj0/z2d09RZbi0cjy
      g7+wQIw74Ka7nRbJsJoiVKr8G288bHd4n9ctiCIBqcNHRxQAmtQfapQpd+vl0km194O3HimS
      auPQH4onIoFJsd1GlWTYaq1Gs14CGpitK6rldHtURbBMYALiwav3ibmmAcJSqZA7z33nz3/K
      LlD/5UvYcDhstVq7u7ur/GonFQgAYFnW+fl5JpNZIl/TtH6/PxwOMQzzeDwsy7pcLpIkJ3dh
      1wGEUBAERVEikchVzeEL8IF6rSrti0NTczFUuzc0Rv2uoLzy6gPH/Me7KoRe5zxffuW118tn
      TyhPaDu90uILAAC28fnnx4KsvvnmW/TVfSDbtovFYiaTWXEPPKVAAABN0/L5/N7e3pSHCyHs
      dDo8z1MU5ff7Zz2Sm1IgcI1t/AtQoNxn77ozD9//P/9TtvBwPMPaI4uiDXlULDWc/jCh9XYf
      /SDixvyRJEOttAwj6LJwXm65nQ5ZHAwHfRVnMZWvllueYBB3en/x8x8uPNPSP/3sMeuP7maT
      sw/Dtm1FUSzLumocaOHVLGvWUI1Go1artb29PTYAhmFUKhWn0xmNRhdZhbmi1gNyg9aQ9gIU
      iG+Uql2ZJCwMd7Csi8JANJUqnh0PevwnZ80ffPs+F0zGw/7LBX0VlfzZQLUP93cvTp7SLnYo
      SCyN6TYe8HGCat3f21rjVhvVEhdKsAy1RiBxEWYtEEKn05EkKZvNYhjW7/cbjUYmk1nu33xD
      LVCrnMc8wW6zDkyN9QY6zabb4wYOdi8d/vTT4+z+Ycjnzp09hQ6PA+osy5Qag+1USLYovlpw
      sB63x5tKRJ/LnUK+WaoPsAf3ss9BgQAAlUqFIAhd1yGEmUzmUnvwMijQC4hED9p8tZAbdHr3
      3/xJrfQJ39PscgFyie0Y22j3tg9wAAC0bUUenZ89Jp1uOpDJX+SGuqXyPZeXYzjt+ShQpVQo
      lyoHD954DtdCSKVSxWLR6/X6/f4bUYvngBdggbqNZmckelnnsMe7vP5Oo8m6WdMGDOMQ+kOa
      YXCSsEyDpplQJN6tF2Lb9xWhh0FLNQFmqYBi019VIOSm3Oo9r51MncVdMvWbiOezhK0h6pu4
      hH2NMBq0LirD1x4crH6KrusozG8+g2VZKFT4dVmVroQ7BQIAgGbpLN+W33j9IUN+xYa7fZxy
      XL80G2/btiiKgiCoqooyTSRJOp1OkiRRdqnX6zUaDb/fHwwGb9DkW5aFcu/6MxAE4fV611ht
      F2XjL8XmKJBtyB8+vthNhxvdUcznKDb78WhUlYeVlriVjiSSaYpYuMAbulavN9547eHMJ45X
      Xt1nWVaW5UXmHQUSnU5nOBxmWXaumWFZ1rKsTqdzcXHhdrtRIQeGYRiG4Ti+nnGSJAll/imK
      cjgcDofD4/EYhtFsNjVNc7lcHMcxDAMn4HA4GGZ+UmH5EqZpWrFYTCaTs2GFzVGgRrnQbDYH
      Au9xcYQKs9t7hYvzSv7UpvzKoAYdvq3Ywry3BYEi9nXLnsnGExx3SaYJx/G9vb1Lb48giFgs
      FolE+v0+MkLoRy8IgizLiURidR3Sdb1Wq1mWlUqlXC7X1InhcBhCqCiKIAiiKGITGA6H6XT6
      SqkuAIBlWYVCIRaLNZtNmqanKlU2x4kejUYMTbZaXYbl/JyzUKwEfZ6RZtAORpPFSCLtIBdY
      IEt/9913uoL+s5/91DmTC0NbPFmWb2q/M+VEQwibzWYgEFhl3UFrpaZpKAN/VX8c2adIJDJ7
      rUWRaAhhq9XiOM7lcqFKD13X/X6/w+FAB2yOBbJ15Q8fHH/nB99/8uH7w1iKctCGodOUwzQ1
      gnEv1B4AAOHwsM5PPz81bDBbI4jjOFqYbm8X5vf7z8/Ps9nsohpF27aHw2G/39c0LRgMbm9v
      I6uzxi4M5f9pmp6qPpu7hEEIK5VKKBSKRr+Im4RCIV3Xy+Wyqqo0TUMIN8cC9dv1gY7hpiYK
      g2q54E/uGRKfO8nFs1s44/r5D/9s4ZmW8fjzJ5jDdf9wn8DnP4zb3sarqlooFPb396eM02Aw
      6PV6uq6j6CLDMJPqst42HtW/siwbi8UmrzWlQBDCdrutadpsfRyEEG0sMAzbHAXiW7VmT9zf
      P+g2yownMBIFJ4UBknExlCAb8ch0ueeXsPRPP3tsAurBg1dnDRUqKDNN81aTqQAAQRB4nt/a
      2kIPZTAYtNttlmXD4fCi1W3tZCoyLQRBxONxtDTPLmGCIHS73bG1W4TNUaBbxfMJJDabTV3X
      HQ5Hr9fz+/2RSGS5flwnkAgh7Pf7zWYzHA6HQiEAwNgCqarabrcVRdnb27tUQe8UaAng2ecf
      SFjo9Ve2n48CoZp8mqZDodAqPvv1I9G2bTebTUEQkskkKptvt9sQwkgkwnHcKpI3x4m+cVRK
      hVqdP3j9CmHoawLDsHQ6fflxNwccxxOJRDAYrFariqJ4PJ5UKrUoVjQXm2CBbjWZimIqAIDN
      TqaiSONdMvWGYaijalvYziS+FsnUXq/X6XRQxbTL5aJpevXV7S6ZeiuwgNGotiJB7+qdqZfL
      fNZOeuOiWq1WNpvVNE2W5V6vZxgG6gB0uVwsyy63Lne5sGtB4Jv1vrq/k52KAzGMO5OJL8+F
      rYEbFDW2QIIgjG2P3/9FQbBlWaPRSBTFVqsFAPD5fIv6LqYskKqqvV6PnABFUSRJzpq0zVGg
      bqPqDqeg3NcIp4/90g0c9joapCLBZY1X3Vbtk5NGOpOeaeuhUqnY/HPWAvKo3G73zZZ2oIRD
      JpOZeh8l51Hzq23bnU7n5OQkFostqniEEKLyfghhIBAAABiGoSiKaZqoQAVCiGGYw+GgKAq9
      uUEK1Ky+/cEnYMCLJONjGcblblfLkXQW00QV0BQ0eEFLpJI/nReS9vgjYW/ftue4g+Nc2HX8
      dBS6RZ3q6BkwDENRFE3T12mrGLtT6BmPRqPRaLTkeJIkQ6FQo9HodDper3fcRWRZ1rggBEKI
      0vjjU2bzG7quG4bhcDhYlt0cBQrFUg/9CUIXRQ2QJO5mXQGv1+NhLSOE0S5LFrb2fV7PPEfY
      0j/+6INSR/nevDzGdXJhKNmOmlY9Ho/P50N1HSRJqqo6GAxQZh4tDcgkjHMDaFs0fjF+PdlO
      j5xoAECpVFq9RTUSiWiaVq1WNU0bl5RQFOV0OlfvbhtjcxTItoxhb7h//5UsZbf7UiwcSCXi
      ZydP3cGkCyh13XmwvzO/dZFwbG1lu8KFuY4TCWzbrtfriJWHpmm090F6o6oqx3HxeHwqhwUA
      YBgmFovFYjFUFDapK2NNmtQq9MK27fPzc3ShsSjTNFVVvVKDM03TOzs7SDJ6524X9kVvvKF/
      WCzkFUVx+hO//tVfAoATtixouq5Kv/vn/01SDkkWFFkbjox//x9+7UU0DJYhjIwHjx4657XO
      jxsLl+zCvF6vqqqiKPI8bxiGbdssywaDwbHRmtwuze7CxvqxCGMLBABIpVL5fH53dxfHcSSq
      1WqFQqFrbhLvdmEgktxO7LLlSvXBo9egaVg4Y8rDkWoEXF7c7jlZD+dyQII2zZCH8/CdHj1u
      e8UJn5d9cp7f3z8gZ1YxtIQt34V5PJ4rVWldZxfm8XhisVilUkEmBMdxlIi4plf+dWosfOlg
      myPFcLOztTjw/Pgzd3grHva+bIHEWq2G43g4HO73+5ZlTRZmrIc7Bbp5VEpFhiZGBh0JsLfd
      G39VQAgRp12n01mRFeRSgV+b3vivD+zHH38S39oP+T0vmwUCAFiW9fTpU6/XeyP512+0BUI1
      X7d6CVVVr5SjXoIbpNRAnKw3oo5rW6BNcKLHJGK3ipfBAg0Gg9FoRBAEQRA4jmMY5nQ6F/Fm
      XglrW6A7pvqlgLYoLovtPk9YllWv171eL6InQwR1FxcX9Xp9NjRgWVa73R4MBkuk9fv969/V
      Jixh14dt6pJmuVnn1FZ4NGi8/1ntO986eg410Zei1WqRJDnZTWFZFo7jPM93u91IJIIyXJqm
      dbvd0Wjk8/kGg8HBwcHcHX6j0RgOh36/H3Vc3DnRQBb6GiQZmnaQsFCsbe9sT6XWRyPR7Z4f
      rfn8vX9556zzD3//a46Z+gtqx8eVo6O9JU40yg2tXm623hJmGMbFxcW9e/fmdmXYtt1qtfr9
      PkEQJElGIhGUr22327Ztz27yUafpwcFBo9FQVRVV8n/jI9Hd9ulZYffVN3ykXK3V69WCrJkO
      0uEPBau5U5oLmwD+9c9/MvfcSGo72bfmkTTSR0eXd50WCoXt7e2bKlmci3q9vqR7FcfxeDyO
      elInXaJQKHR6ehoKhab6dcbS4vF4r9c7Pz+fZNe7EjZHgdJbO6OR1Gl3Qlshj4tWDTITdjpc
      vh7Px+JJjKQUa0Gs1jZzuVyny5vzsvGXAsOwVCpVqVR2d3dnH7BlWbVaLZFIXGevpCiKpmmX
      kkHPXgLH8Vgs1mg0Jrf6KDODQucYhgWDQZqmLy4u0E3atm1ZFkrdjF31cSbOegZEWH4zO8CX
      BOJgABzsG68c8M3K9uFRgGO/+GA7e8mZGO7zeZ1taUFT4eVwu900TfM8j/pjxoAQlkolkiRR
      9mrt3XutVkulUuslK3w+X7vdRt1C6JaQtKn739nZaTQaJEniOE48A1ocx7le9BGacIBEmaa5
      OQrk8fqsWgvH7XKphBH1U5x2QKXXF2mGEQx8GUurbdmke38nic97QivWAzEM0263UZXM+M1G
      o+Hz+ZxOJ0EQT548QV18V/WBRFEkCEJRlNkbWFEUx3Hn5+fIExIEgSRJWZanBnxBCOeO9kHF
      HpPvIAs0/u/mKFDh9IlmE/lcifV4ZVkCAEIAMZwMhsNhx9INFEEGXMTvjqv359Ehrl4PhHRo
      POqg3+87nc5xmpOm6eFwuL29bdv26goEIex2u1tbW3MdrBX7wlA5m9PpdDqdKPUxGzr6Rkei
      rwtLPz7L7+3vO8iFS8yKqYxyuex2uwOBgCzL5XJ5f39/8jfdbrclSUqlUotCf6Io1ut1AAD1
      DIZhYBi2KNm+emOhLMv1et3n8+m6nkgkZg+4U6BbwZjibkUFsizr7Owsm82WSqWdnZ1Zs9Fs
      NhEb0FTPjSRJqCotkUggvRkjGAwumRy1ogJBCIvF4mg0Ojo6mivtToFuHgO+BR3UyePSw0cH
      q2fjRVEsFos7Ozssy849oNfrjUYjTdMIgkDLSq/XIwgiGo1eNd12pZikYRiapi0qXLwLJN4S
      LEFQOM59pWz8eMszF2PPF43ekWXZ7/evF+Z+GVhaN0GBbq+1uVEptIfao1fvvZw80ZqmaZo2
      bt26ptj1bmwTdmFoo3QbkgPBkMOD3SxDmaIoszX2awBx/Hg8HtTTg/iEAQA4jqPafoZh3G73
      irn6u6L6W4GuaRC7suFZ8lMWRRFNqLx0sOGlQPRTs/kN27Y1TVNVVdO0ZrN5cHAw17MZjUa1
      Wg3Ru6IdH4o4o8ghCvYwDIMOmNuTCgAwTXMTlrDr4waH7rZaLTS4aTbzgOaCbW1ttdttiqLi
      8fhyHbJtu1Kp+P3+WVG6rudyub29vUWPFqHf7/d6vZ2dnalj0J1sb28jUYhpepy7QP+iQLOu
      65qmoZaPsZBxZmOjUhnlsyctyRi2WtCBW8D1F3/+1m//+e2jo/16+aIrux+8klYHfLUr/eCH
      3539zjiO1yq12ZaMKwFCWC6XMQw7OjrK5/MQwsmBuogsN5vNUhSVyWQqlUqtVlvSTWGaZj6f
      5ziuVqsRBDG1RpfL5eWjfRF8Pp8sy81mMz4x+xZJ3traQps+9O/qS9i4xwhZ2c1RIAAABqFh
      mJn9V8V2k2+UKYp896PPdxIcf1H+DAhyo6i75+fFuGDs4X1tbi51xVQGqs8iSdLr9QqC4PP5
      isViJBIZZ6Da7bbb7VYURRRFkiRdLle32y0Wix6PZ1YPNE0bDocul4uiKJ/PhzKd42VRkiTT
      NDVNkyTp0kdO03Sj0YAQok0AYhVGijWZzVh7G/9l5+w3F6b2v3/z3//Lf/1vI9VYdAjqbF8E
      VVWfPn06GAy+ItU0T09PUfNyuVxuNBooK2kYX1zFtu1qtVooFBRFQR8hiKL45MkT1EWPoCjK
      kydPVFVFpz958gTxHKAmxsu/n2keHx+jq+RyuU6nM3sMGplwqahZbI4PJPQ6v//jn372l3/x
      L7/5H5n9V3RNZxlM0yFF0zhFH+5uLTzzekN3bdu+uLhApPFTH1mWlcvlkH+KRhGCmQwoGpqs
      qipiXCBJcjQazaarZFkulUp7e3u1Wg1R/oKrxIEQjTAa4nGXypiP3OcfVEWYCAcVoVsoVbzR
      DFD4Wq2bTCcEk/ybf/OjhWdeb+jucqDa5Mm5p4tS6BBCVVUVRfF6vYv2TaVSiWGYsVN8pUDi
      YDAQBGGR53SnQNfA0qG7CC9JX9hoNKJpemyc7iLRLzmeN83vGqJeuAJt1C7sZoFofvce7V06
      L+xKuD2OxOsArsvOcWeBVsKdBVqE52qBIIRTlZQvORqVwsggkrEQAOCmLNDt8UQjW7D25AN4
      xxN949BkIVfpHB3uvvwWCEJYKBQ0TQMT+VSO41ZMM389LNCtwrbMQqGY3tqZmrjT63bcHlbW
      oI9jbVPv9sVwOLjij7RWrbLuwG3c7c0CQthsNh0OB2KdQvlUTdPq9brD4UgmkzeYs4IQSpLU
      6XTcbjfHcZtjgU4//YjkPKfHuWA0DE2t2xPdNNh98J3cx79jXFyu0WNZd9AJe4Yz68dcsfsH
      mfD43EVDd8dYwwJBCNEEp9FohDqIUVrjNizQYDDodruzjWkQwsFg0Gg0llD7jo+81AJBCEVR
      bDabFEUFAgFd14fD4eZYoEgsXGx0KdLh9bCDoc06cI/XI4pSanuv0+ZjoUAkFhO7DRdBDcWB
      M/KV/cviobsrcSROYTQa8TyvqqrX641Go+l0ejQa5fN5kiRjsdiNkGkgoF2YoiiNRmN3d3fu
      pszj8bAs22w22+12Op1eVBZ36S5sPL8snU6jr8CyrN/vfwEKBG2rUCj5gsGA7ytTcC1DLVZa
      O9tZaOuKZrMuBgBg6srZed4bDHk9nNvpECTFQWAUw85OYKZoF8OwP/75a9R0h3Jy78uBO/fn
      3tLiobsrcSROotPpDAaDeDw+OcHZ7/f7/X5RFFFek2VZmqYdz3AdnxpCiJpilxTRAgAymYwk
      SaVSaXd3d64OLbdAaODm/v7+rPa/AAXKPf7Us7X33h9+HwiF64WLnaNH7XaDgkC2sLcebr/3
      /keDfocE+MPvfi/iZZVBo9gU/MOeqhqAwPrdLmYTjJc9evhWNvYV76R8cdwUzGKpCCGMRyLN
      ZtWGOOX0RqIetd0t95Vf/eoX82hYAbD0ZqfnD4ap65VzAAB4nh8Oh4hCdfZTxMUpyzLKpYui
      qOu6oiiBQCAaja7S3lWv1xHVldPpZBiGIIhisZjJZFYpt2VZdmtrK5/P7+3tXckKmqZZr9cX
      nfUCFCgcj5zncjQX8LldMJ1VJYEkgDhUktlsucZDy6QcFGYQXs5ZKpZDXufR/Xv6oFxr8oIo
      7ezsCAOJ5RhRHIGvKpDbG9wJsbV6PRJP9lvNRDxmmzakWFUSVAvs7O7OJ4kGlwzdRfRnkiRd
      WnataVqn00kkEst5d5APhOM4wzAMw3g8nlqtJklSIBBYvoiIoogq8BVFGQ6HKHEWDoeRv7z8
      3sZwuVxPnz7NZrNTKzJcXM7R7XYZhhEEYa7AF+BEKyOBYFhd01gnI6uaoQhNXkwmEh73lJcK
      m7Uy7Qljtk5h9pOnJ75wIpWM10p5LhBxuZwe9ivHC71Otd3b3z/gmxWHJ/hlb/yluImhu8hF
      WKUBfq4TjaZPbm9vL+rsqdVqtm1PdcivF0hEt7q3tzeeloqmsaiquru7O/U1h8Mhz/NoczcX
      L8AC1fPHnq3Xj997G2NYm3Cy9mikabIkdlsd4HDhGh/eee3RYRZAq1Qqu/0q36jQDhL3Z4Em
      FvOji1zZ7ax4Y9k3Xz2cFLt+bzyAtm2ZqmrZcJECLYcgCK1Wa5UJo4uAJjIXCgU0yWBKJ2q1
      mmVZq5QgrgKfz4fKI7e3t5EyOZ3OdDpt23a5XI7FYj7fF4Np0OK1v7+/RNoLsEC188eNEW6Z
      I1nSwtEoBa3do6OP3/mdIKp92comA6mtQ6CL/nA8f3osSgJGuGRx+Ob3f5z//APdAk6P19Yk
      xhs+2P4KO2n++JOeQXhZVldGsiyZOE1BZTBU48k47nDd39ta41ZXGTiHpmhns9kVvewl23jL
      stBIdrfb7fV63W43juP1et0wjEwmM6s9a6cyIITtdrvVagWDwUgkQlEUcqIxDEN1tJFIBABQ
      LBb9fv9Yn+biJYoDqdKw1VeyNzpe6ToY8C3VtvLnrUdX6Uy9FJe2k9q2PRqNBEFQFAVC6HQ6
      F3G7XJPwFT6bywEmfCAIYbVaxTDM4/EMBoNs9hJynJdIgV5KGNUqn0rFXlQqY7mNuaVk6tg+
      HR0dXXqrm6BAtzp0F+Hl7Ey9QVFrS9sEBXoOWM8CWZbV7XZ7vd54WBiGYRtWznGnQMuw9tRm
      RVHa7bYsy6FQyO/3S5I0GAwkSXK5XBzH+Xy+G7EcUwqEQlaoURD1ClIUFY1GV+z2ulOg9bFo
      6K6q9j/6qHglJxrtpAAAoVBodgaULMv9fl+WZYZhfD7fNYenTjnRpVIJADBuVaYoCl3O7XaH
      QqHl0eclgcTl2JxkKrSNfKmxu51qNttelj7LV3YP7zugclHq3Lu3u/z3vmjo7hpTm2u1WiAQ
      mKQDnwTHcS6XiyAINJm70Wh4PJ5kMrm2QRpboG63i3pepy4XjUYHg0GpVHI6nfF4fFHK7K4e
      CPTqxT99eFIqntLOgI+Cew8e5j7/8PHxKe2OPPn4D9/7t3+XDC6MTS8eunu1qc3D4dCyLDTv
      eAkwDGNZlmVZVMfTarUmW4/XgKqqnU7n8PBw9iMMw1AsRxCEXC4XDAbD4fA13SbbtmVZRvyb
      m6NAFsX98i9/eHZR8viC8YDr/OmJ0x149cFDysFCM8HSi7/p0qG7q2OcdFz98WAYFovFzs7O
      UCR6veuiSOZypnAMw7xer8fjaTQa5+fn2Wx2jU2laZrD4XAwGOi6jgodbdveHAViKPzpSe6V
      114vnz1pEcSjR3OKe+bjekN3x6hUKvF4/KrlPhiGpdNpxMi5nmGoVqvhcHgV/cNxPJlMyrKM
      htVFIpEVryjLMkrGeb3eZDI5ea3NcaJ1WTgvt9xOhywOhoO+irOYylfLLU8wiDu9y3JhlvHB
      Bx/RHu/9e4ezBB1jcoXlbgpiVljFKV6UTMUwbHnSYK4oNCj+qicCAFRVbbfbY41f5ETbtt1s
      NgmCiMfjc6xXy4gAABwxSURBVIsFNscCtZpN27bjicTFyTAcTw8FifUlA5F0wMcJ6tL+qRWG
      7i5nKDMMo91ub21treKEzlUgn893dnbGcdyVDJgsyzzPHx4erpfQ4DiuUqlks1nkjc060aIo
      VqvVWCwWCoUW/TA2xwKtj4VDd7/E8mk9+Xw+HA5fOssCYVEgcTgc9no9NDhnUjiY6dSxLGsw
      GPR6PcuyMpnMdXIsuq4XCoVgMBgMBidTGaqqtlot0zQzmczyWsc7BVqGVXiibdseDAbLS9Yn
      sSQSXSgUAoGA1+u1LAu5q4i1AwBAkiQK8CiKYhiGz+cLBAKITez6WyrEi5VIJDRNGwwGoijS
      NB0MBjmOu1T4nQItxHo80ZdiSQrdNE1EB2PbNsdxHMeN3VXENmcYBmLPvFTUVdHtdjudDrro
      lcKbm6BAtzl09wue6Oc2dFdRFJIkV/SE0MTCm8qF3RGN3yJe/s7U64vqdrur1PZPYXN2YXdY
      G6jfA7WLLOH9nIs7BQJgZugutIxPP3ty/8HD4tmTWHbfy15t8bpBw7AeUJ086kFDVMDLj5dl
      WdO0vb29er0+d7YmilOg14hOmiCIQCCwUTS/sig4WA6YmoURNPXl99JURVYNv2/ZHvv4w3+d
      HLqrCZ1Bv98aSroiNtt9MsJd2pmKiEdEURRFEb3jdDpRwmtqG7wGqY+u66ivSBTFKaeHYRiX
      y+VyucZsvYIgdDodmqZTqZSu62dnZ+l02ulcGKRArYnpdNqyrHg8XqvVarXaeE4vhLDX66Fh
      jKh0GjybM4wyMJujQOWL46qg2732iHJRGBaORES+5Q2FB+065Y06bFUxgNcffOv1B7PnTg3d
      pbmwz9/2UFBlWJ/Pszwbj8hWR6MRy7I+nw/x8UII0fNGJfFToR2O4/x+v9PpnHxf1/V+v4+o
      XiflQwgdDgfLsoFAIJVKjQPiEELDMFAwut1uo/E/pmlyHDfm6GRZ1uVy5fN51Bs/9/5brRaa
      RY/iQNlstlwut9vtRCIhSVKlUuE47t69e7OB+Gg02ul0NseJLp8fNyWblLo9k4wFOQjtYrEW
      ioQpYKqQxAxZx1yJaOBwf2YKs22+86//56zc/bu///s1mOpR2G318Re6rqMyHUVREMEFahQk
      CAKlzcfRPPCs7n2VmmgIoWmaKDI0dZhlWcVikWGY2bUJMd4fHh5Ojv2GEKLmEBzHL2173RwF
      Gg34SpPf298nMVtWDdbF2KZ+fn4ejGdY0m72pa10Yv5zgPbTxx8+Pqv/4m9+4bo6ze9VMd6F
      QQhR94XT6VzEzHqpqNUHzjWbTUEQEonEuMwNUQqFw2GPxzOVykArssvlulT4Ri1hTcFUDaNd
      LQ4ECac9f/vLv3LRFMDwWqXYHqrdepEgGVWTdV1vNLp//au/9TopAC4Zunt7QK0zs1WLt3St
      eDweCAQajUa9Xo/H4xzHCYKA7mHu8SsyU22OAqHe+HK55PJ4SZLyx7Km3M9VWlHNIggHRajQ
      +sLc+nwBh9NLU89+8UuH7q446mB13Gwc6KqikMr2er3z83MMw3Z2dnieB3eBxGvh5oburoKX
      JJCo67qu6+MJmGuXtN5YV9HXGITj6P69Se2BlvHJx59opn16/Hgo3VKS5AXD4XAsmp96Jdwp
      0DQsQ7t4+tk4DtTuDl70Hb3U2Bwf6KZAUPTe/YeS8QTFgTgPe0c0vgSboEC30dq8f7APACAo
      Bw5sAHDEKXYjkjejtVmSJLRNu3OilwDyzVKtD/ayEdM0nxs7xwsRtfouDEJYq9WGw2EymfT5
      fJtggW4N8Oy8tPfqGy6Xa/XGwlVwg6LQI9d1nef5wWAwDluj8sVAIHCzROO6rufz+VAolE6n
      z8/PWZa9s0AA3NzQ3VVwg9t4NBmz3+8TBBEMBr1e75i1Du3Sq9XqvXv3VgxVX6pAgiDUarVM
      JoOUUlXVYrG4ORbo5NN3843Rt7/3fSBU3v4o/+jVfcs0REEKRSKSMCAoR75S/6uf/2TuudcZ
      uosyEtfscl8kuVgsYhgWCoUmSYMBAIqitFotWZbD4fDu7u7Ug8cwbDzqACXSr38n7XZbEIRJ
      rlaGYaLR6OYo0OGDN4fi23985/0fv3XIOaw/vfe+x+NMpHaenp4O6hWKCzkXJw2WDN1dBajg
      IZPJ3KBLi5o9PB4PGs9bqVS8Xm8wGET9XBiGRaPRVCq1PJAYi8VOT09R+f11bobneVmWZ5tu
      fT7f3RIGgKX/9p9+86TI/+f/9I+zHdBjmt/lz4DneU3TUqnUpZvhVZYwCOFwODQMIxwOj28D
      EabSNB2JRFCGfBVR7Xbb4/EsqQcaX3GRE21ZVq1Wm6wkmcTmKNCLGro7hqIoxWIRsZzOzqzQ
      dV1VVUTuzHHckvQ7SpK73e5LWRBWSWXYtn1ycjLVfIiWpHa7jWrEkOvNMAwyaZOno3qPJdzk
      m6NAL8PQXUQOBCEkCMJ6BvSEHA4HYhbHMExVVZQJ93q9Xq+XpulJsks0XnmVxvUVc2HdblfT
      tGQyOb5Eu92WJGl7e3tcS2Tbdq/X63a76XR6nOKwLAsNpF6yldscBVofNzp0F1XSoKphxEg/
      JXO87iCyC7RUjZ+CZVmhUGhF2oMVFQhCeHJygqzIrPaMj7Esy7btUqnEsiyimykUCsjxWiL8
      ToGWoVEtcaEEy1DPbRtv2/aSEsRZUStm48czv1utlqIoUw3UYGIbjzRsMBigarJUKrVc8p0C
      LcHmRKIhhBcXF263W9O0bDY7q3NTTjQiUFulxedOgRaiUsqXS5WDB2+E/Z6XM5B4pXqg0WjU
      6/UWzUv4RpNs3vFEv0Bpm6BAzwHXsUBTC80iC2RZVqvVarfb29vbXq939gAAAOrdGZ9+ezzR
      aDDqVPh7Lu4KypZhNGi8/YePriOh1+t9+umny7kfEAvY6empw+E4OjpCHaVzD8vlchcXFzdV
      mbQIKIVSr9fPz88vNe13FgiAZUN3lXf+eHIpvcsi7g6e5wVBCIfDnU5ne3sbvTllkHie73a7
      4XB4zDDUarUIgphNYDWbTZIkGYap1+toMNltlHPYtl0sFtHuXdO0Wq1GkmQikVjkHm1OLoxv
      lIvNnqHIkCBIh+ut1155/08fHh3tNevVgebc34kOux1BNu4dHc7+yRcP3XX+2fdeBwAsKedA
      +14AQCqVmuxi7nQ6oiii8Ze9Xk9RlHEDzViUKIqCINy/f3/S+UC8reFweFI5NE0bjUaoAxDH
      8UKhgMaT3ewShiQHAgGkviRJ7u/vDwYDRME2S3QHIdycJazT7GS3t4R+n3S6VHk04uutduuf
      3/lUkfpnT04+e/JZ7umnn52W59rb8dDdNa6LmmNCoVAul2s2mygX1mq1BEHY2dlBmpFMJmu1
      2pSxN02zWq1ubW1Nua4EQUQikWazOfkmal9Hz4/juEQiMbuWQQivs57Ytn1xcREMBieNH6KZ
      vnfvnmEYp6en485/dLmNam22LaNQrISCQY/POxIEB4mTDqbHd2xA2oZmERRmqJTTHQkHp3+w
      lv7uu+90Bf1nP/upcyYXtiJLK3hW1yHLMlrvpgYP9vt9iqLcbvfYiW42m4FAYC4DIWokDQaD
      6NPBYABmqFhlWR4OhxRF6bqO4/i4EgjFvjmOG0u2LEtRFEVREKXG3Js3DKPZbC6nCzYMQxRF
      wzD8fj9FUd1ud6PYOUbDQbVSSWYzH7/3jj+WInHcSQ0xwgEtE3M405HF8filQ3dXYWkdIxQK
      6bo+GAxm86CIhxUlpEiS5Hne7XbHYrFFCxBN051OJxaL2bbdarUODg6mHhaqIFNVFU1wHrP1
      6rqOMiSoVR55NgzDBINB1EmdyWSmEqvD4bDVau3s7FzKExqNRkejUa1WIwjC5XKl0+nNsUD9
      dn2gY7ipicKgWi74k3uGxOdOcvHsFs64fv7DP1t45k0M3V0FPM8rihKLxSzLyufzBwcHy13g
      XC4XjUb7/b7L5ZqbkFq+jbdtG6V1x+9ACAeDQbPZHGdMbduuVCqI7RWsXGs7WUO3ORbIhlAW
      hf39A6oBEpmfjUTBGQ8c3nvgYihBNpaeumzoLlrCbqSth+O4brcrSVKj0UilUohPY8nx8Xg8
      n887HI54PD73yFXaeqZO9Hg8NE1Xq1U0eAqx3Pv9/qu29TidTnT1zbFAt4qbSmVIknR2dhaP
      x8cMTsvRbrcnuVqncJ2hu61Wazgcbm1toQj7NzqVcWuAZ59/IGGh11/ZvsFcWK/XW51Uejle
      homFm7OE3TgqpUKtzu892rvZzlSWZW+qo/Rl6Ex9rhYIFVs9t8vdIO6SqYtwt4SthA0o51iO
      5UuYpmnHx8cHBwezta2bE4m2LTN3caHPDP3qdTu6Jg8ECQBgm3q7w6/+izHUUaFcv9HbBKhK
      +mZl3ipQVBMNNZvNrW6OD3T++Wck5/ntP/2vYDQMTa3bE9002H3wndzHf2RcXK7RY1l30Al7
      hjPrx1yx+weZ8PjcRclUCxiNaisS9F7JB7IsC/GnjuvqUZ/olAQcx2madjgcwWBwvZzolA+E
      5K9n3pb4QJqmqaqaTCadTmehUNja2pqMnm+OAkVi4WKjS5EOr4cdDG3WgXu8HlGUUtt7nTYf
      CwUisZjYbbgIaigOnJGv/OkXJVOvOnRXVdV6va7rOk3T5DMwDMNxHE3TaLkZL2G2bWuaJkkS
      Gli5no9FEAQasTMcDtEylEqlFpUTLcGiJQylipPJJPouW1tbpVJpssvnBSgQtK1CoeQLBgO+
      r3xPy1CLldbOdhbauqLZrIsBAJi6cnae9wZDXg/ndjoESXEQGMWwxMzaS9EuhmF//PPXKGLK
      J0juHYxf3597S+NkKjPd1rPq0F1N0xqNhq7riURilTosAACO406n0+l0IirnyX6aVQAh7Ha7
      /X6fpmmfz4canE3TLJfLqHT1RjwtFEQd3xhKX6BOMST/BShQ7vGnnq299/7w+0AoXC9c7Bw9
      arcbFASyhb31cPu99z8a9DskwB9+93sRL6sMGsWm4B/2VNUABNbvdjGbYLzs0cO3srGv5AUR
      S2uxVIQQxiORZrNqQ5xyeiNRj9rulvvKr371C8dcl8/Sm52ePxim1u2Nr1QqiqLE43GPx7OG
      S+tyufb29hDrRSAQWEUCon4mSfLw8HBy60SS5Pb29nA4PDs7SyQSa4zCnASEsNFoJBKJyTfd
      bnc8Hj8/P4/H416v9wUoUDgeOc/laC7gc7tgOqtKAkkAcagks9lyjYeWSTkozCC8nLNULIe8
      zqP79/RBudbkBVHa2dkRBhLLMaI4Al9VIMTSWqvXI/Fkv9VMxGO2aUOKVSVBtcDO7u60YRpj
      aTJ13Nq8qDYPecTBYNAwjF6vd+nXX7QLCwQCxWIRlQ2ZpmmapmEYuq57PB6KoibdHZReReMN
      +v3+3Kug8hKKolCeFYGmaZQgm/stZlubESc6yuRPHc9xXKlUMgzjBWzjlZFAMKyuaayTkVXN
      UIQmLyYTCY97ap8Mm7Uy7Qljtk5h9pOnJ75wIpWM10p5LhBx4DYvKHvbmfHRQq9Tbff29w/4
      ZsXhCQa4lXhxAHh+yVSEJdt4VGGDDkBTwzAMQx02JEmi9DvP8zzPI5/p0m08UgvjGSRJEkXR
      7XYHg8EpEvFZHwh1AqXT6SUFHhDCF2CB6vljz9brx++9jTGsTThZezTSNFkSu60OcLhwjQ/v
      vPboMAugVSqV3X6Vb1RoB4n7s0ATi/nRRa7sdlZUTQ0k9ncBGP8NPF6fVWvhuF0ulTCiforT
      Dqj0+iLNMIKBL5vavDSZ+jyBYVgkEpl60+12RyIRTdN4nq/X6x6P5+DgYMWIH2qQReUcAIBA
      IIAS6Z1OB5k6NJ9wrjRRFJEBWy7/BVig2vnjxgi3zJEsaeFolILW7tHRx+/8ThDVvmxlk4HU
      1iHQRX84nj89FiUBI1yyOHzz+z/Of/6BbgGnx2trkm5C3QLf+c6bY5ubP/6kZxBeltWVkSxL
      Jk5TUBkM1Xgyjjtc9/e2rnPPmxdItG0bzRYajUaIl97pdBIEMZ7RgfpDLt0bvkSRaFUatvpK
      drVdz/PBaND46EnjR99/Y/MUaBKWZY1Go0kKG0RRtYoP/hLFgRjWm2WvHMC4PQz4FnTQFIZ9
      E2h+kUs+5USv8pVfIgu0Nu46U1+gtE1QoNvDKnPjrwRN09rttmmatm0jOhXbtvf29uaW1l+K
      qSUMJUxWDGNO4a4e6Fbg9nHKcf1GljBN01qtlmEYgUAAuauolUKW5VKpNG47vBKmljAUWlRV
      1ePxBAKBK5nMr0c90EsLgW/W++r+TnZmG//F3Pi1LRCaZ9hsNg3DiMViHo9n9odeKpXQEMyr
      Cp+0QIIgoPjQmE3RsiyO41C2xOFwLDdLq1ggOAHbtnVd1zRtcywQtI18qbG7nWo2216WPstX
      dg/vO6ByUercu7e7fG3vtmqfnDTSmfQMRyLBcVcbaaPreqlUmrQNDocjHA4v4QFOJpPn5+cc
      x63dpwwhrNfrOzs7AAAcx/1+v9/vN01TFEVZlnme13UdNYvFYrGrOjqol6NeryNlRcBx3OFw
      OByOzVGgXr34pw9PSsVT2hnwUXDvwcPc5x8+Pj6l3ZEnH//he//275LBhbFpjz8S9vbttXl+
      n8EwjFwuN6biXhEkSUaj0Vqttoi851LwPD/ZSTgWizQJ/ReFuU9PT690eygdpijKvXv35ur3
      5ixh7VbLzdJnFyWPLxgPuM4LVaeTURSJcrDQVJLb93zuBT6Bpf+v//83pY7y//zHf5jbmboK
      zS86stPpsCy7PKm+KA5UrVbRxOflV5kVZdt2u92ORCKrnKtpGroQy7KTTs8imt/BYKCqajQa
      XaTZm2OBGAp/epJ75bXXy2dPWgTx6NEsU8ICEI6trWxXuJgpZgQAABzHkfez3AcyTRNlji6d
      gbpIgdxud6FQQPQJK9448oEajUY0Gl2djj4ej3e73WaziQbwjnuip3wgNBYjHA4vJ9ncIAVi
      aMbNtWoVy7Z7pdNSpYqpfLXc8gSDuNO7LBdmGcLIePDooXN+tcflME0zl8tNDkReAyjy22q1
      VmwZQzAMQxCEw8PD1U/BMCwcDnMc1263G40GAIBlWZZlKYpCNW6apiFW662trUsXu81RoFaz
      adt2PJG4OBmG4+mhILG+ZCCSDvg4QV0ascUJn5d9cp7f3z9YY1yGbdv5fD4Wi13aWH4potHo
      yckJmpyy4lpWq9Vmp8GvApqm0+k0AMC2bVmWRVEcDodowobP56NpGtUCXCpnc3yg9WGbI8Vw
      s3OGAaySC0N8BqsHXZbnwizL6nQ6vV4P0aws35cNh8NOp7O7u3v9dNhdIPEawEk3O+fvsHou
      jCCIK5XcLz8gFAoFg8F+v39ycuLxeHw+H8MwkwYJVa4NBgOappPJ5I1kxO4CibeLF5KNhxD2
      +31RFFVVtW0b1eerqgohDAQCiBHhhbc2b4ICoZ32rV5iEQviGlib2NAwDEVRGIaZZI6aHaWw
      HpZM61mOTVCg54DNrgcC17BAm9OZeocXgjsFAgAA29RFSZk1xbfR2rxh2JxdmCwKDpYDpmZh
      BE19+b00VZFVw+9bFqQ5/vBf3znr/MPf/5pjvuIErNfaPAnknzkcjvHq8HJWJC7fhaFY0dwU
      zeYoUPniuCrodq89olwUhoUjEZFveUPhQbtOeaMOW1UM4PUH33r9wey5kdR2sm85ZjrHrtra
      DAAwDANxIeq6jmr8UKX6ePIcjuMcx6FCi+u4L7quFwoFDMPGLGPXwSIfCFXAiaKI43g0Gp2t
      OdkcBXK5OQ6zSdLGTTIW5CC0OwZ0WzAQDKsQBzYgHC7OPW90qG3mcrlOlzfnZONXbW0GAOi6
      3mw20SRlNIdwNpqMyoMURWm324qioMHKHo9nbr0OInx1u92zqjYcDtEcU4Ig8vl8MBi8dD7m
      lQAhFEWx3W7bth2JRNAs2PPzc4Zhpsavbs4ubDTgK01+b3+fxGxZNVgXY5v6+fl5MJ5hSbvZ
      l7bSifl/YGg/ffzh47P6L/7mF661ZqZqmtZsNlVVRQmNSwedjn/oaPalKIq6rjMM4/F40Eiv
      4XAoSRLilR6NRhDCaDSK+qZR6Q8aGgcAQOat2WyKopjNZteONYwtkGVZqHfR5XJFIpFJdVFV
      tVAo7O/vTxqqzVGg4w9+3xRMfzjSrhYHgoTTnr/95V81CmfOYHJQz7eHKoUZBMmomqzreqPR
      /etf/a3XSQEAgGU8Ob3QVen+gzdmyBW+wBIFQmMig8Hgio3xc7fxyDIJgjAajRCbx2QBGlJQ
      WZZDoVC/3+c4DtVXTG7jFUUplUpjxnH05mT9F3oxWVUIAED8MggowC1JUjAYXMQ4M5s82RwF
      Kp8f2xRbLpcwHNcV2R/LHu1E3v3g82gkRBD4cChAyyRIh6YrLpdb1qw33nz9GRsQbBTPf/fB
      8a9++TezCrQ6U/2KWDsOBCE0DIOm6fEjmxKFaOrR6y8f8DNNQv9OPW6UyENAAe5LExooMj6e
      R745CrQ+LP34LL+3v+8gF8Zh7wKJk0cWCgWfz4emJtwp0DIY6qjaFrYziTsFmgRi2ocQ+ny+
      u0DiQgz4Fi8KzVr7Rd/ISweCIPb399Hg8M3Zxt84fMEoAIaugG9Ca/Ma5RxoEtQmLGEvvLX5
      SgvcXWvzNxHLKxLL5bKu66lUairINhcb4ANN4k6BVsKlNkaW5Wq16nQ64/H41GNAGYzxf5cr
      kCzLsiwjimDTNNEwOWwCY5ngWWkRSZLEM0yZEAzDELkdSZLjj9BqhVj00PvjENGUOqIjp4De
      RNqG4/idAgEAQO7z94/ro5/8+Y/c9OROHn70ztuh3UeZiG+VRQoVELZaLY7jxvEVFLzZ398f
      G6clCmRZ1unpaTgcRjqBnhCO41PRv/EzHo+UGxNST/kx6E1EWo1OR+eOVQ3DsLFO2LY9pT0o
      AjkLpG0YhlmWtTlO9Mmn7+Ybo29/7/tAqLz9Uf7Rq/uWaYiCFIpEJGFAUI58pf5XP//J3HNx
      HK9VajMtGbZtGu1OL8hSiGtyldsIhUJoHojT6URpDU3TCoVCMBhEerNEgXieR41a6HEaxvIx
      Z9OikBGaPGDM5nwp1q5I3BwFOnzw5lB8+4/vvP/jtw45h/Wn9973eJyJ1M7T09NBvUJxIefi
      pi0uGHt4X5vJpRKZvSNvOEqTxIojLxfB7Xa3Wq29vb1JovEpGIbR6XRSqdRVGwvvfKAXDUv/
      7T/95kmR/8//6R9Zev5f8PqBxFarhRztRc+pVCp5vd4rMTu/DAq0ORZI6HV+/8c//ewv/+Jf
      fvM/Mvuv6JrOMpimQ4qmcYo+3N1aeCZO7R89wqkcuLlyiFlEIpFiscjz/FwVUVVV07Q1RhS8
      cGxOJLpTL7mDkUqxnEqnc6dPBEVr1GuPP/2s1aid5svLzoSmKIiMhyNnFGg0aH3y+OxGbg/D
      sGw2y/O8JEmzn67dYPrCsTkWaPfVb+1+8XLn4RvfvsKZEFqWGYklHeRXnt+Ab0EHpYjSDUai
      M5lMoVDQdX2ytE+SJAghwzBXvcQ3bmLh1xDXZSibhaqqnU5HluVkMomoC87PzzOZzBq1YHc+
      0MuPKzOUXQqSJNPpNOLpwTDM7XYjSoObvcpzw+b4QF8v0DS9u7sbiUSGw+HX1PtB+L865lEe
      NCiUggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ad Unit and Browser Graphs' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='Ad Calls' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='64' name='% Served' width='192'>
      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
      UYAIyt+KS/qhk2qkQgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Interaction Rate' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CPI' width='192'>
      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
      uQ4CgSCRm2g/0zY4iphr81XcojsmxmeutveEWIXNpEysTXYMxbbVFQBAL8y4FSpJ56UzPRM+
      tSx99O13fLyurNiGpD2Xe30/eOXZlZ6WhNTsunGxa2LVaNHNdl9tG5yZnlu2qLFrFy+MLces
      dhuOQKGlkeGo9kfff6LQpu85fwy15M/P+g698mNjrK/dLWfdg87mZ/dvr8sxqvpbWvKfemF/
      XaUkOfXWederr72sybjOdrl3bi88c/QPfePL1Xv3a1CkuDr/zEeXtm6rwzeI6XxU03p4Nsri
      TTvrui+fMxdWKaQSZ1GlAYnQiiIzFe5qbV+gVebMxLK8oU4XHloSihy6e8rZuAcCN9nTeqGj
      P80wPRc/iepq65SeswNhi9W+fWv5Qv/Vk629w70XL7b08UxkdHplcaIXsW8h3N1LWP72PKl7
      LQkASIXmW29OmYzajostwdDa2JjLszTpBradlda7G85MDY+vBfwRFguPXegNyB3WnC11pXfo
      POIsr6M83eO8XR0ZvXz9+pXh4GPNBb3dY10XPmFy6kv1kD+SXr80PD905uyFSXfks9sdc3dO
      xqtLLDCb6G+/fObcBZc/CUCy90rLpbZuv9eH6mxSDNGZbHwowEqVRhkuomq9Vq1Toe2fnLNt
      2bqR9jy6wBiZa1WMj7nKappUFAoAEJhg9wy/rcqq1udv31aGAaC2l+fqKcClI4n0hnI2bAHB
      KnYcPLyvkcIxs826NjPQ54oW5OfIUHZ5jam1o7MZY51JcAumYtutEGmpTKYy6AMz/W03h1gI
      gYA429NB1j/3l3/1N9ukcz2u0HqLUikFwbfmg6RvrqOjo2/MxQiAyyQCoahEZaRwWIKys3Pu
      zzLOUVn9jiYdBSe9c4trEQRTKIRQ1+AUIwKdUbcwePNm/zQTmfjnfzue5oC2oP757x8ut38W
      ZopRGouCmVnw8RCi1OqNei2bToqibPsTTx862GQv25ITGz17tfX8lZvO+pqpsx+mc/c/u019
      6vjx9468NxIj8nRfYU58FOHp2Lmj7896g2kgRNdWA9E0vTLGmkuk6GeLBFjIuMYGB+aSFeXO
      jeRsWCsjGQlyuFKGMMEYrVJJI2trNCBMJh0d8cc4XCsF4QyiwLkEi6spMZIScSEJyQwylA8G
      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
    </thumbnail>
    <thumbnail height='192' name='Exception Summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAX2klEQVR4nO3d2ZMb130v8NN7Y9+BwQCYBZyFM0MOZ7hJoiiF
      tGlaiRXZcSzHsbM9pCqppOr+B7fKlar7ePOQSt1KnCrn3koldmTLjmNLMilZoiiK4jYkR7Mv
      wGAfYLA3lt678zAgh9J1KEhNEaT5+zxwwRygTw++dc7pcw4amK7rCIDPCu91BcDjrRMgoVlP
      b+/wPH/vz1pcRVT2/lupVBBC8Y2VfLH6sQcRQjzfrFS4z7u64FFD7v51/dIF3hosJWITY0Gu
      qRWr1Ug4El9bGDt6KhWPOWiVYCzbO+Vvvfx7m1tpXUslrIwmixJmqivEgbB1PZmrc42w2y/p
      CsvS26VG0O/Czc6nZybvd3Bd2YilR0eGEUIXLrxz6tTpWjHz9sVrJ8/8tt9hQjJ36WYCKdzJ
      Z08+hF/Eb4BEbE2nbZgqDw0NpjeXbm7uvPTCaey/L3/hnQunTp8yeFDiu9/9LkIIIe36zQWf
      05bdTvH1Gmu15wslWZGK1VarwdmsFl3m25J6YGpi7uplnLXmk6uugcn5uZt+jzWfzTQlxURp
      9UJVp8hatUwzFMbYlpZWj80evN8JL1z52aXl6X3eV378H9lS49js9E9+8pOvvPQiLvM/ffXH
      tM0WS5Sb9UJ8+bZu8npdNoOn+htvK7axPH9rYP+M3cxcfvct2tmn1rNvvX1R5JuvnbtQ2Ckj
      obK+lbn8/kWdoN8+98u1ZP7EU0cMHrTTAg2OTP7lyH1bizu++e0/RgghdBYhdOLoofuU/OLJ
      p+7/Uhc/mGN4/vw7l2lniC5nEUIU0ldWVluV4u35edbj11QaaZrLbVtZ29g/3N9N9Z5kU5Pj
      ic31X5x75y+/89LEwSO//PkvYiy5XeDcdnZs5sS0X/7+z68fCujzizGn3dbCLFZWNn5QbPcq
      rFLIzi3Hv3T6OeOv2DUtny8GvI5Ctd2qFmmrM9IfUMT2RjwZjoQLhR27w6mrKkK6zDct7qDL
      bn6IdXssNeo11szm8pXBSH+1lOdErN9j3YglQuGwjtNOm6nRbFpYan0jFhocqRZSCs5GB8MG
      D9oJEN+obaQK01PjD+JEwBOkcxUmirz6BE8ISZLUfWFd1xVF+eRyd6iqqqpq9+UVRdE0rfvy
      svwAeqLPrBMgpzc4e2B/D+vRW5/qPfi0AdI07VMFSFXV3W4hs7Vx48YtUfmEMPU2QGQPjw3u
      L5NK5kqNWGyZwYmqxFiIBoXh1TZhdjsdGBdPlb/27T8LuXs8NIQAfXa6pvzf733v7EtfvXH5
      vWdf+Pr8lXeD4QGhWS9V6wjT7RbH7LFjDLk316+r4j9975+/8tJXrl65euaF37l6+XIkEm40
      mnWuqimqzek7duwwie9N3ISHR0IDaqnecLi9zVqNpTRJUknGKsiipipOd9NuoXtx3h8BAfqI
      Uqnk8XqFZh03OYT6jqBRAa+Lq9dVhFwOx8cKV3Mxm7fvrXPnKZZFCOm6roqNy+9etEVG/Hbi
      g/ffHz04y1j33uNcfNXr9735q4ssQyGEdITEVuW9C1fD4yNWTL506fLBmUNWZu8dCQb7WqIe
      GTYhhNDA3uWSJAoEzRDYfeYIHx4MFlMRQq1Wy2KxIKT92z/83fjTp+MrH574ynfWbrx78ODk
      7Q8u1lSL3UFWc8UXv/mHVhrXNE2SJJZld391uq7ruo7jhK5ru//FMGz3HziOYxgmy7Ku6zRN
      65qGMOwTy4uiSJIkQRDtYuKHb1wNeG0OM11t8E6vj+M4K4nX6tzxL3w56LTsVr7dbpvNPevI
      OnlvN6r5Sjs6GEIIVSoVt9u9+3g6EbM6XKzFaaI/suzaqJVwyiRruNNm2ntU15v1ikZZ7Rbm
      IVX/gWqXM/6Jp4rpGGux0yTmtLL5wnazJVIOr9NhEcuVZluy0uzd8hhC51/7+eFnnyeQLgo8
      SdGiJCuKZmYwHadFQQyHQ/e+Poaj1dvXKpr98Kj3wgdLR2YnCYpt1GtmllI0nWQsPvdHGjmc
      Yqw2q9vlppR6udaQFI01sZqG/H19BIYlEluDg8M9b4Y6LdAbb7w+GXFfXi3b3VZKETxuu45b
      jx4e+T9/+48Hp0eTVf3A+GC1WjdbmVK+0NcXwZqZlWyZNnksFpvbTnBNOWBH5XIjW2u77S6b
      y0nhCsXajs7cbynj0XGnBerK3RZIbOz82w9/GoqObqW2nYyKZCWwb2x9JdY/EKgl1kVL4Bu/
      /w2HidhrgXT1V+fOHzpyRBKFG1ev8wQ7ZFOrEhVPl4f6rZTVd/bUswihuy0QutOlNipFEWN1
      vkbbvE6bqV6vIkQ4HPbd+jwSLRBDYsntiqYqmiIihBXjK0Mnv4FUfHjIt5nMewL+RK5CSJzG
      i/FYLjh+HDULDps5v1MsVRtan7XRlKr5MsvaMbFp940uLq4HzZKl/zd8WlLHmJf/6M/EdvPw
      zIwqtDCKoWmq39+Xii8Pzz7f73fb2Y/ultG08MCAqGD9wb6pQzNuh1XBqCZXO3rUzlAYrxAf
      e325VfrBD378/PNPrW1svfTl564ky/sj8iu//NDlMYm1OofZv/W1L+O9boJ+/RhoaXFx4sCB
      LvcKxdaWRYyZHNv3YGv2MH22FqjL8ndboC7L322Btlbmc+VaqS7SFH7m9HPXr91gCXUpVoyO
      hXCej+dq3/zm1ygc620L1AnQwq3rEmJEvj4U3U9qAslayuVKOBLKpNKBYF+jJVEazzp8dku3
      v7XHy6MZoC7LPxIBOv/m+bNfOvvaa78gSYrC+Eq+orNWrsEHAs4CpwU8NlIomgJTv/X09AM8
      dqvVeoCvZoQoigzT7cB/dyaaoqguy+9OQ3cfCFmWSZLEuu6bRFG8e9Hz8HUClEnECpWmzW4l
      kN6slxBOsWZrq1p4453rX3/590VRZHWetvujAw94T0WrnF1MlsdGR20sqagqRVGapus6v760
      NTwxSZMYiWOyomJIx3Bc1TQMYRRNYQgJXPHqYmooaK805ZCTbuLOaMiLEErF4wShmLxRG63n
      treDgb50NhMdjmIYqhay8UzeZjEXq9zMkWOWe64rjbdAqtReWN60mknS7B7s965vbLabLbvD
      ISNy32DoPi2QzDcWljf3H5zaWl4kLXZVx/cNhu62QC2ulslmEEE1GrzNSmM6qvP6kenR23O3
      B0eiXFN02KwsQ/V+EG2xmFC5FgwP2lgSoZE7Px0//PTzn+vh27VCqaFK1y402vxOpVHihNHR
      CME3soncer6kK1LUbRJtnkpyM5/YEM0Rf9D1u6dPFDnRRSvVUpHnuS889+z51/5DwKxh93NF
      TswlY/lSrkUlnJTMFbaKAhOJjkSCviInbiytPnNk7Pv/8vrw1H5ZVZKJnXA4oGiI7rotuQ9F
      FquVksc3rqh6bOXDG8tbYbd5I5Hz9/n3DYb+u2epsrhd4iwmSke4y2nTzc7N1bXhe8qns9uY
      LIsYY6aJQj4vtgVBQo39kXa9GC861YokOOuDg0PG6/+Z7Q2ir7z/gSQ2abuDyyS3OPQXf/Ly
      Qzg8Xy+uJgoMTZvUypX1yvGZCRXhGl9VFAxjTIQu4QQrqMiE8ToiEWVhWSLSH8IwJDTKi5vb
      4YCjzAk2M4MQikQiGIblc1kCV+ttHeG4LtS5luIN+AZCIQxDrXppI7HtczvdwbCJxBBC9WK2
      0ESjQ6F222gLpIittc0UgWtmq83h8outaqVSs9mtkkaE+3z3aYGkdn1lMzswEMykUg6nS1RR
      pD9A3WmBtlPJRrul47ggIoeNwnGyySuDIV86mR4eH6kW67wgBALe3o+BEELLi0uiLDZrO9Wa
      4Bvc98zhz30K59GZBP9U49DPMIhGCHU/ZvoMg+ju0//A9XIpQxCEXh36Y3ieN5lMn1wOIYSQ
      pmmyLHc/6FYURdf17gMkSRJBEN0HSBAEp9PZZeEHrseLqY2dxGKKGxoMW2ms0RJcLgcvqbpS
      j62ko1NTFElYWbLa4EldximGF0SSpNxuJ4ZQq5y9upqPeNm2THhMagNzTUT7EUKbq6skKdOu
      IROupLO5oN9fqpT3j+/HMJRPx7d3KghhDV44dPRpB9vtO9QNiec+XFyz260qYQ446M1EliFQ
      cHDfzs7O/tH7zZDJQvPDhdWx6enY/A2zO9Dixcnxu2NQVK+U0um0xe2vlcs2E05avI1KYerg
      oYX5m5P7x9fiab/PZ7f1rPlBPQ+Q2KxzvJJYusG1Ba4txTOlQ9NRQuBT8XSuJRNKy22izKFI
      ObmVWV/EPGO+gP3MM0fLDdFO4bWdbVmyPXNk9tKFtyTMPBK0lxpiZSe3U97miKLfrLVLW1da
      rD8yuG8wXG6I8a3k9GT0Rz+9MHRgksS1VCof8DraMnLarcZPhKRNNquVIQlHfz+rcB5/CIlc
      NhHbrjbuEyBNFreLVavNShOq1OZlVnZYzfdevud3yjSOVeucJPJIp7jUjXRRGJk8KEvS2upq
      ttKmcNTbAPW4C5Pa3GYyazLbLXr9Rqz61Mw4L+uayGE6gUgSaRrNsC1RZpGEU6yGUTSNe1xu
      DEOK2Iqld/q99tKdQbTH48EwrFap4LjGS7qq47rc4gXF6XJ63G4MQ7LYiifzAa/T7HDTBIYQ
      anOVmoCCPrcgGO3CpDYXTxf8gYCFQY2WYraY0olkOLpPFdtms+U+XZgsNGOJXCDUz9crGEHw
      EgoFfeSdLqyU3+ZFkba5GFzXFIFgnbgm4SSpSJLd4eC4WrMpejzOHnZhvQxQrVbr1aE/RpKk
      7meKP++JREVRcBzH8W4/dS5Jkt/v77LwAwf7gYAhcHMFYEhnEP2zV1+RFXxkaoTBKRmjLbgg
      NrlbyeZT09GLV26efe5oXdBNmNDk1XK5bnE5j88+yEUx8PjauwqjMWklXnBhbZmyUlKpVuWX
      klUrrXkc1uW1GEKIy6zGirw/PO5WBIQgQAChu2OgbCrelHGfy25hyWJdxJQ2SVEESeu6Xm20
      Q14bJyIaqSpCFEGoCHl7t/wLHinY3Z3hCwsLmqaNjY31cGEFPHY6XdjCwsLk5CRJkrdu3Zqd
      nX37x//CjMwqjVallh/t9yXKyotnP99lefCY6lyFYRi2+3ns3T+jwyNeC4rFUgpBXr1wLllo
      9LKO4BG2Nw+0sLCgqur+/fu7X2cGYG8eyGazURQF6QGfSqcFisfjDofDZrOtrKwcOnTo2vvv
      mi2WtdTOsZkDdk/A+Xh+UBA8BJ0WqF6vezwemqZ3x0BmizmXWF3J1q6//+7CwmJPawgeaXfu
      UMbzKysrOI739/f7/f58ZkvFGF3XVFV1eAJOK/Rr4NfbG0RLkiTLcg83R4LHUWceqFgs5vN5
      lmUJgohGo6V8QmMCZqWk2CK1XJykqHAkwtXrHMeFI5He1hg8UjoBSqfThw8fRgjNzc0hhBYW
      llr19/Il7sy3/jqZTNI0e/HcD8poKOSiIUDgXp0ADQwMzM/PMwyz+xnHsckZXW7HY1tOFqn9
      /qZCPn3qt3cqyO2AyzHwEXtjIFVVZVmGeSDwqdy5wVS7vbq6iuN4MBgMBAI7uZSMSESwocDH
      V925ep3GteVYZvrQQbLXdzcCPdcJ0Nra2u4Y6NatW4FAILa5iTTp4mJ6PGD1Rg+N+ZlrCwuN
      YtM5MKRLwqQXX4tVlreygz5LdTvvGBpV8xu8NcTFb2q28Atnv+RxwqXck+LOfaKdzmKxKIri
      7t5vu92OEIqEwy5fMNznyeZyLENHQgFR1uwOO2tzetwei8VuM1F9/e52scQEhlS+ERyIer1e
      SM8TZW8MlEqlWq3WxMREbysEHi+dFkjX9VqtJopiu93ubYXA42VvQ1kmk4nH47quz87OLs9f
      UQlnavHS1At/npj7FcuadbnWJlztaumLp04sbmT0doGw+BPJ7IvPDP+vf3z1+InTAz6Lrgoq
      5XawYmpH6HdSXEvqHx4N+129PUPwueoECMMwDMMoitpdTM3miq3acpkTpxDSVaHEIRNWXYhV
      J0e8hWTs3auLRyZcS2+9HxwdQgiNTE4tLC76j46Xeb5ZWKas7s1kcYttCbz5O08d7+G5gYcA
      NpQBQ+CTqcAQ+GQqMAQCBAyBAAFDIEDAkE6AFm/P3Zxf2h1O57K5HlYIPF4680C5nXLQgn72
      RrbFcbjcqBRLh89845mDw72tHHj0dQLEUlhVNbmtioX1s7gjGAhHwz276RV4jMA8EDBk7/5A
      77z2qsj2mcxoX2RA17WddKqsqFGXu4EoCld2CvXnTp+kYAcZ+KjOIFoTqzWFXvtwASFkQe3F
      ja0L514rNNRrF8+//d4Hy2ub83M3xE/4/nLwJIIuDBgC80DAEAgQMAQCBAyBAAFDIEDAEAgQ
      MAQCBAyBAAFDIEDAEAgQMAQCBAyBAAFDOts5/vff/M/J44ezmdrkoSMkiTBFJDG1Lco+txfh
      eLPVbvICRbFPHZ+df//tjMhMDQV1XakXS3aPty0pzToXCPi2S7WQx6KS1pGhcG/PCjw0nQAN
      RfvXNjKMqq6uJTx+1oSQjnQMSdXUpkjZanXO5w/JqCEjFM9stxUyrVU0jYhnik7LVmjf5Pyt
      q4x/3GuSC4mGs28QAvTk6GznKJVKmK4IgozTJoq6+32vGkI4Vy0xZhtFM7qOPF5ntVwjMQ0j
      SYKxlbeTTpeLoJhcJtPiqpt57swz0yph8TgfwBdpg8dCJ0CLt+dEjDly6EA3z9lYWeTa0oGZ
      WYaAHYpPuk4XFovFJIwtpxZqTV1RZA2jt4vcvojV7B87PeH+9zevIVEs1MSBQc+ZL7ywlc4d
      Hw++8qOfNfnWaNCMmSNffP5ob08D9EonQP0Dw8eOHbvw5i9cuJLd3vGEBwZGJ/qdZOebwjBq
      MBoeYm0MLnucVoeVXctUg31uQbAozcL0Cfj+1CfX/7elVVc31jeHRscovNM9aRLPichpM/3a
      52ez2VAo9HnXEjyyOgGS2tzrv7r04m8d+qd/PT8wOkA0CvEi+tM//7YF5onAfXUCQpvtTjPT
      bLUwhBCCoTHo1ke6MI7jdm/wC0CX4GM9wBAY4wBDIEDAEAgQMAQCBAzpBCi1tXHr1rysIYRQ
      LBa781P11pVLK8vLlZbysafxXHlubi5fbtz74L23ObvX+spCU5AfdM3BI6GzlLG8Hj864v/7
      v/++p9/dZzdtbXyImSNffH762tW5/RPRix/cGBwakpt1jCXSsa2xycOYyJ08e/bcD/4h1yA8
      Xt9Wauev/sdf7N7m7NWfJ+V2lZTksZO/y2c/3Cm1Ko3iH+yb6u15gs9JJ0B9XudGrnF4dpJi
      SQrp5WRx+sQ0UvWZwwfrLfHg5AhO23gS95hVVQgPTxw087lbc3MDYzMeSRclzR8eZonObc58
      dkmxD2biGweGPZttl6AxLr/bROObsWWk20dGYKvQb5RfPw9kdIVLFbNFLtTn++yvAB4TnQAl
      5t7+0ZX0V7/8bOL2LdO+cTumSYg8NtPV9iDwJNu7xd3L3/nT9fdeWVqNhWlqPplG9gAECHwi
      WMoAhsA8EDAEAgQMgQABQyBAwBAIEDAEAgQMufNtPZsL61VsNuq/ubRx+sTR1//z9ciBqYjf
      32wLqqq6rLSEWK/L1tu6gkdQJ0DXby9VRCSUnaqiIJKxkGR/n/X//fMPo8NhE0OkK/VIMHzm
      1Mne1hU8gnYDpE9MHzbhOqfoPC8hhAbHx1jaHgj12WlE+fpPjUQlxPS2ouDRtDcTXalUCALH
      EGF3QFcFutXpwnSJe/OtS30RB4OsTz9zpLd1Ao+RzlVYJpUbGnTWGrrdDs0P+BRgMRUYAvNA
      wBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQM
      gQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAI
      EDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQAB
      QyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAE
      AgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBAwBAIEDAEAgQMgQABQyBA
      wBAIEDAEAgQMgQABQyBAwBAIEDDkvwCfwFnXSjjeYAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Browser List' width='192'>
      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
      FcC+uf8AAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Blacklisted and Fraudulent Graph' width='192'>
      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
      mgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Blacklisted and Fraudulent' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Temp_Testing2' width='191'>
      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
      y08eHa7eWP9vCOAYe4K29GsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Temp_Testing3' width='192'>
      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
      A/s1aG4TosIiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='191'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
      fHwH+v8BIq3ekjx8XYQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
