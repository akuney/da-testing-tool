<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <repository-location id='HotelMetaPlacementReport' path='/workbooks' revision='2.5' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Only Full Time Frames' datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;False&quot;'>
        <calculation class='tableau' formula='&quot;False&quot;' />
        <members>
          <member value='&quot;True&quot;' />
          <member value='&quot;False&quot;' />
        </members>
      </column>
      <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
        <calculation class='tableau' formula='&quot;Day&quot;' />
        <members>
          <member value='&quot;Day&quot;' />
          <member value='&quot;Week&quot;' />
          <member value='&quot;Month&quot;' />
        </members>
      </column>
      <column caption='Aggregate by Position' datatype='boolean' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Reference Day' datatype='date' name='[Reference Day]' param-domain-type='any' role='measure' type='quantitative' value='#2013-03-03#'>
        <calculation class='tableau' formula='#2013-03-03#' />
      </column>
      <column caption='Yesterday or Reference Day' datatype='string' name='[Yesterday or Reference Day]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yesterday&quot;'>
        <calculation class='tableau' formula='&quot;Yesterday&quot;' />
        <members>
          <member value='&quot;Yesterday&quot;' />
          <member value='&quot;Reference Day&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='media_performance_for_csv' inline='true' name='vertica.41628.647812708332' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select &#13;&#10;&#9;&apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;aggregation_level_date_in_et as &quot;Raw Date&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;au.name as &quot;Ad Unit&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;e.name as &quot;Publisher&quot;,&#13;&#10;&#9;sum(page_view_count) as &quot;Page Views&quot;,&#13;&#10;&#9;sum(pure_page_view_count) as &quot;Pure Page Views&quot;,&#13;&#10;&#9;sum(not_pure_page_view_count) as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;sum(served_page_count) as &quot;Served Pages&quot;,&#13;&#10;&#9;sum(page_view_interaction_count) as &quot;Page View Interactions&quot;,&#13;&#10;&#9;sum(ad_call_count) as &quot;Ad Calls&quot;,&#13;&#10;&#9;sum(not_pure_ad_call_count) as &quot;Not Pure Ad Calls&quot;,&#13;&#10;&#9;sum(pure_ad_call_count) as &quot;Pure Ad Calls&quot;,&#13;&#10;&#9;sum(served_ad_call_count) as &quot;Served Ad Calls&quot;,&#13;&#10;&#9;sum(ad_call_interaction_count) as &quot;Ad Call Interactions&quot;,&#13;&#10;&#9;sum(impression_count) as &quot;Impressions&quot;,&#13;&#10;&#9;sum(click_count) as &quot;Clicks&quot;,&#13;&#10;&#9;sum(gross_revenue_sum) as &quot;Gross Revenue&quot;,&#13;&#10;&#9;sum(clicked_ad_call_position_sum) as &quot;Clicked Ad Call Position Sum&quot;&#13;&#10;from intent_media_production.hotel_meta_media_performance_aggregations hcmpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hcmpa.ad_unit_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;and aggregation_level_date_in_et &gt;&gt; &apos;2014-01-14&apos;&#13;&#10;group by &#13;&#10;&#9;aggregation_level_date_in_et, &#13;&#10;&#9;au.id,&#13;&#10;&#9;au.name,&#13;&#10;&#9;s.display_name,&#13;&#10;&#9;e.name</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.41628.647812708332].[sum:Calculation_2580121141302226:qk]&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Property Interactions' datatype='integer' name='[Ad Call Interactions]' role='measure' type='quantitative'>
      </column>
      <column caption='Available Properties' datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Ad Interaction Rate' datatype='real' default-format='p0.0%' name='[Calculation_0011227123924806]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Served eCPM' datatype='real' default-format='C1033%' name='[Calculation_0810117153324331]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Served Pages])*1000' scope-isolation='false' />
      </column>
      <column caption='Ads per Served Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_0911227123845197]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Impressions])/SUM([vertica.41628.691394351852].[Served Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
      </column>
      <column caption='Blank' datatype='integer' name='[Calculation_2580121141302226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
      </column>
      <column caption='Page Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_4031227123028063]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Served Pages])/SUM([Not Pure Page Views])' scope-isolation='false' />
      </column>
      <column caption='Average Position of Clicked Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_4430117160047386]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicked Ad Call Position Sum])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='Date Label' datatype='string' name='[Calculation_4450207125027646]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Day&quot; THEN &quot;&quot;&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week of&quot;&#13;&#10;    WHEN &quot;Month&quot; THEN &quot;Month of&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Addressable Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_4480121141714556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
      </column>
      <column caption='Page CTR' datatype='real' default-format='p0.00%' name='[Calculation_5670117153726839]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Pages])' scope-isolation='false' />
      </column>
      <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_6470121141648587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Revenue]*[Calculation_9640121141625837]' scope-isolation='false' />
      </column>
      <column caption='Page Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_7051227123102547]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Page View Interactions])/SUM([Served Pages])' scope-isolation='false' />
      </column>
      <column caption='Served Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_8260121141749289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Served Pages])*1000' scope-isolation='false' />
      </column>
      <column caption='Date' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Raw Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Raw Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Raw Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Clicks per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9401227123136141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Page View Interactions])' scope-isolation='false' />
      </column>
      <column caption='Addressable eCPM' datatype='real' default-format='C1033%' name='[Calculation_9570117153248706]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
      </column>
      <column caption='Revenue Share' datatype='real' name='[Calculation_9640121141625837]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.7' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Calculation_8600117133017498] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,TODAY()-1) = 7 THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;week&apos;,TODAY()-1))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF TODAY()-1 = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,TODAY()-1))) THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))-1) END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MONTH([Raw Date])' scope-isolation='false' />
      </column>
      <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Page Interactions' datatype='integer' name='[Page View Interactions]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Quarter]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Month] &lt;= 3 THEN 1&#13;&#10;ELSEIF [Month] &lt;= 6 THEN 2&#13;&#10;ELSEIF [Month] &lt;= 9 THEN 3&#13;&#10;ELSEIF [Month] &lt;= 12 THEN 4&#13;&#10;END' />
      </column>
      <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column caption='Year ' datatype='integer' default-format='n0;-0' name='[Year Number]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([Raw Date])' scope-isolation='false' />
      </column>
      <column-instance column='[Calculation_2580121141302226]' derivation='Sum' name='[sum:Calculation_2580121141302226:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\media_performance_bookmark.tde' schema='Extract' tablename='Extract' update-time='7/15/2014 2:31:29 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2580121141302226]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Calculation_6470121141648587]' formula='[Gross Revenue]*[Calculation_9640121141625837]' />
            <calculation column='[Calculation_9640121141625837]' formula='0.7' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='766' timestamp-start='2014-07-15 14:31:27.947000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.485825' measure-ordering='alphabetic' measure-percentage='0.458763' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Only Full Time Frames' datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;False&quot;'>
          <calculation class='tableau' formula='&quot;False&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
          <calculation class='tableau' formula='&quot;Day&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41628.691394351852'>
        <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='position_performance_for_csv' inline='true' name='vertica.41628.691394351852' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;&apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;aggregation_level_date_in_et as &quot;Raw Date&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;au.name as &quot;Ad Unit&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;e.name as &quot;Publisher&quot;,&#13;&#10;&#9;cast(hcptpa.position as varchar) as &quot;Property Position&quot;,&#13;&#10;&#9;sum(ad_call_count) as &quot;Ad Calls&quot;,&#13;&#10;&#9;sum(pure_ad_call_count) as &quot;Pure Ad Calls&quot;,&#13;&#10;&#9;sum(not_pure_ad_call_count) as &quot;Not Pure Ad Calls&quot;,&#13;&#10;&#9;sum(served_ad_call_count) as &quot;Served Ad Calls&quot;,&#13;&#10;&#9;sum(impression_count) as &quot;Impressions&quot;,&#13;&#10;&#9;sum(click_count) as &quot;Clicks&quot;,&#13;&#10;&#9;sum(ad_call_interaction_count) as &quot;Ad Call Interactions&quot;,&#13;&#10;&#9;sum(gross_revenue_sum) as &quot;Gross Revenue&quot;&#13;&#10;from intent_media_production.hotel_meta_position_media_performance_aggregations hcptpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;and aggregation_level_date_in_et &gt;&gt; &apos;2014-01-14&apos;&#13;&#10;group by &#13;&#10;&#9;aggregation_level_date_in_et, &#13;&#10;&#9;au.id,&#13;&#10;&#9;au.name,&#13;&#10;&#9;s.display_name,&#13;&#10;&#9;e.name,&#13;&#10;&#9;cast(hcptpa.position as varchar)&#13;&#10;&#9;&#13;&#10;union&#13;&#10;&#13;&#10;select&#13;&#10;&#9;&apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;aggregation_level_date_in_et as &quot;Raw Date&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;au.name as &quot;Ad Unit&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;e.name as &quot;Publisher&quot;,&#13;&#10;&#9;&apos;Total&apos; as &quot;Property Position&quot;,&#13;&#10;&#9;sum(ad_call_count) as &quot;Ad Calls&quot;,&#13;&#10;&#9;sum(pure_ad_call_count) as &quot;Pure Ad Calls&quot;,&#13;&#10;&#9;sum(not_pure_ad_call_count) as &quot;Not Pure Ad Calls&quot;,&#13;&#10;&#9;sum(served_ad_call_count) as &quot;Served Ad Calls&quot;,&#13;&#10;&#9;sum(impression_count) as &quot;Impressions&quot;,&#13;&#10;&#9;sum(click_count) as &quot;Clicks&quot;,&#13;&#10;&#9;sum(ad_call_interaction_count) as &quot;Ad Call Interactions&quot;,&#13;&#10;&#9;sum(gross_revenue_sum) as &quot;Gross Revenue&quot;&#13;&#10;from intent_media_production.hotel_meta_position_media_performance_aggregations hcptpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;and aggregation_level_date_in_et &gt;&gt; &apos;2014-01-14&apos;&#13;&#10;group by &#13;&#10;&#9;aggregation_level_date_in_et, &#13;&#10;&#9;au.id,&#13;&#10;&#9;au.name,&#13;&#10;&#9;s.display_name,&#13;&#10;&#9;e.name</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.41628.647812708332].[sum:Calculation_2580121141302226:qk]&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Property Interactions' datatype='integer' name='[Ad Call Interactions]' role='measure' type='quantitative'>
      </column>
      <column caption='Available Properties' datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Clicks per Property Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_0450117153524909]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Ad Call Interactions])' scope-isolation='false' />
      </column>
      <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='Date Label' datatype='string' name='[Calculation_4450207125027646]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Day&quot; THEN &quot;&quot;&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week of&quot;&#13;&#10;    WHEN &quot;Month&quot; THEN &quot;Month of&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Properties per Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6001227123502485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ad Calls])/SUM([vertica.41628.647812708332].[Page Views])' scope-isolation='false' />
      </column>
      <column caption='Properties per Addressable Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6181227123356978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Not Pure Ad Calls])/SUM([vertica.41628.647812708332].[Not Pure Page Views])' scope-isolation='false' />
      </column>
      <column caption='Property CTR' datatype='real' default-format='p0.0%' name='[Calculation_7480117154312654]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Property Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_8031227123601565]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Not Pure Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_8130121142548075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])*ATTR([vertica.41628.647812708332].[Calculation_9640121141625837])' scope-isolation='false' />
      </column>
      <column caption='Date' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Raw Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Raw Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Raw Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Property Interactions per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8971227123741400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([vertica.41628.647812708332].[Page View Interactions])' scope-isolation='false' />
      </column>
      <column caption='Property Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_9301227123642221]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Calculation_8600117133017498] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,TODAY()-1) = 7 THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;week&apos;,TODAY()-1))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF TODAY()-1 = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,TODAY()-1))) THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))-1) END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MONTH([Raw Date])' scope-isolation='false' />
      </column>
      <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Quarter]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Month] &lt;= 3 THEN 1&#13;&#10;ELSEIF [Month] &lt;= 6 THEN 2&#13;&#10;ELSEIF [Month] &lt;= 9 THEN 3&#13;&#10;ELSEIF [Month] &lt;= 12 THEN 4&#13;&#10;END' />
      </column>
      <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column caption='Year ' datatype='integer' default-format='n0;-0' name='[Year Number]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([Raw Date])' scope-isolation='false' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\position_media_bookmark.tde' schema='Extract' tablename='Extract' update-time='7/15/2014 2:31:48 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='22901' timestamp-start='2014-07-15 14:31:48.688000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.467012' measure-ordering='alphabetic' measure-percentage='0.415265' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Only Full Time Frames' datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;False&quot;'>
          <calculation class='tableau' formula='&quot;False&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
          <calculation class='tableau' formula='&quot;Day&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.41628.647812708332'>
        <column caption='Blank' datatype='integer' name='[Calculation_2580121141302226]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
        </column>
        <column caption='Revenue Share' datatype='real' name='[Calculation_9640121141625837]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='0.7' scope-isolation='false' />
        </column>
        <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
        </column>
        <column caption='Page Interactions' datatype='integer' name='[Page View Interactions]' role='measure' type='quantitative'>
        </column>
        <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Calculation_2580121141302226]' derivation='Sum' name='[sum:Calculation_2580121141302226:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='media_performance' inline='true' name='vertica.media_performance' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select &#13;&#10;&#9;&apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;aggregation_level_date_in_et as &quot;Date&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;au.name as &quot;Ad Unit&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;e.name as &quot;Publisher&quot;,&#13;&#10;&#9;sum(page_view_count) as &quot;Page Views&quot;,&#13;&#10;&#9;sum(pure_page_view_count) as &quot;Pure Page Views&quot;,&#13;&#10;&#9;sum(not_pure_page_view_count) as &quot;Not Pure Page Views&quot;,&#13;&#10;&#9;sum(served_page_count) as &quot;Served Pages&quot;,&#13;&#10;&#9;sum(page_view_interaction_count) as &quot;Page View Interactions&quot;,&#13;&#10;&#9;sum(ad_call_count) as &quot;Ad Calls&quot;,&#13;&#10;&#9;sum(not_pure_ad_call_count) as &quot;Not Pure Ad Calls&quot;,&#13;&#10;&#9;sum(pure_ad_call_count) as &quot;Pure Ad Calls&quot;,&#13;&#10;&#9;sum(served_ad_call_count) as &quot;Served Ad Calls&quot;,&#13;&#10;&#9;sum(ad_call_interaction_count) as &quot;Ad Call Interactions&quot;,&#13;&#10;&#9;sum(impression_count) as &quot;Impressions&quot;,&#13;&#10;&#9;sum(click_count) as &quot;Clicks&quot;,&#13;&#10;&#9;sum(gross_revenue_sum) as &quot;Gross Revenue&quot;,&#13;&#10;&#9;sum(clicked_ad_call_position_sum) as &quot;Clicked Ad Call Position Sum&quot;&#13;&#10;from intent_media_production.hotel_meta_media_performance_aggregations hcmpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hcmpa.ad_unit_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;and aggregation_level_date_in_et &gt;&gt; &apos;2014-01-14&apos;&#13;&#10;group by &#13;&#10;&#9;aggregation_level_date_in_et, &#13;&#10;&#9;au.id,&#13;&#10;&#9;au.name,&#13;&#10;&#9;s.display_name,&#13;&#10;&#9;e.name</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.media_performance].[sum:Calculation_2580121141302226:qk]&quot;' value=' ' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_0810117153324331:qk]&quot;' value='     Served eCPM' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_1421227123206307:qk]&quot;' value='     CPC' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_2151227122942735:qk]&quot;' value='     % Addressable' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_4031227123028063:qk]&quot;' value='     Page Fill Rate' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_4480121141714556:qk]&quot;' value='     Addressable Net eCPM' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_7051227123102547:qk]&quot;' value='     Page Interaction Rate' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_8260121141749289:qk]&quot;' value='     Served Net eCPM' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_9570117153248706:qk]&quot;' value='     Addressable eCPM' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_0450117153524909:qk]&quot;' value='     Clicks per Property Interaction' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_8971227123741400:qk]&quot;' value='     Property Interactions per Page Interaction' />
        </aliases>
      </column>
      <column caption='Property Interactions' datatype='integer' name='[Ad Call Interactions]' role='measure' type='quantitative'>
      </column>
      <column caption='Available Properties' datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Ad Interaction Rate' datatype='real' default-format='p0.0%' name='[Calculation_0011227123924806]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
      </column>
      <column caption='Served eCPM' datatype='real' default-format='C1033%' name='[Calculation_0810117153324331]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Served Pages])*1000' scope-isolation='false' />
      </column>
      <column caption='Ads per Served Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_0911227123845197]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Impressions])/SUM([vertica.position_performance].[Served Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
      </column>
      <column caption='Blank' datatype='integer' name='[Calculation_2580121141302226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
      </column>
      <column caption='Page Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_4031227123028063]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Served Pages])/SUM([Not Pure Page Views])' scope-isolation='false' />
      </column>
      <column caption='Average Position of Clicked Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_4430117160047386]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicked Ad Call Position Sum])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='Date Label' datatype='string' name='[Calculation_4450207125027646]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Day&quot; THEN &quot;&quot;&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week of&quot;&#13;&#10;    WHEN &quot;Month&quot; THEN &quot;Month of&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Addressable Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_4480121141714556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
      </column>
      <column caption='Page CTR' datatype='real' default-format='p0.00%' name='[Calculation_5670117153726839]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Pages])' scope-isolation='false' />
      </column>
      <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_6470121141648587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross Revenue]*[Calculation_9640121141625837]' scope-isolation='false' />
      </column>
      <column caption='Page Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_7051227123102547]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Page View Interactions])/SUM([Served Pages])' scope-isolation='false' />
      </column>
      <column caption='Served Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_8260121141749289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Served Pages])*1000' scope-isolation='false' />
      </column>
      <column caption='Date Axis' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Clicks per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9401227123136141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Page View Interactions])' scope-isolation='false' />
      </column>
      <column caption='Addressable eCPM' datatype='real' default-format='C1033%' name='[Calculation_9570117153248706]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
      </column>
      <column caption='Revenue Share' datatype='real' name='[Calculation_9640121141625837]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.7' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,TODAY()-1) = 7 THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;week&apos;,TODAY()-1))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF TODAY()-1 = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,TODAY()-1))) THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))-1) END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MONTH([Date])' />
      </column>
      <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Page Interactions' datatype='integer' name='[Page View Interactions]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Quarter]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Month] &lt;= 3 THEN 1&#13;&#10;ELSEIF [Month] &lt;= 6 THEN 2&#13;&#10;ELSEIF [Month] &lt;= 9 THEN 3&#13;&#10;ELSEIF [Month] &lt;= 12 THEN 4&#13;&#10;END' />
      </column>
      <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Year ' datatype='integer' default-format='n0;-0' name='[Year Number]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([Date])' />
      </column>
      <column-instance column='[Calculation_2580121141302226]' derivation='Sum' name='[sum:Calculation_2580121141302226:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0810117153324331]' derivation='User' name='[usr:Calculation_0810117153324331:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1421227123206307]' derivation='User' name='[usr:Calculation_1421227123206307:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2151227122942735]' derivation='User' name='[usr:Calculation_2151227122942735:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4031227123028063]' derivation='User' name='[usr:Calculation_4031227123028063:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4480121141714556]' derivation='User' name='[usr:Calculation_4480121141714556:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7051227123102547]' derivation='User' name='[usr:Calculation_7051227123102547:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8260121141749289]' derivation='User' name='[usr:Calculation_8260121141749289:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9570117153248706]' derivation='User' name='[usr:Calculation_9570117153248706:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\media_performance.tde' schema='Extract' tablename='Extract' update-time='7/15/2014 2:32:10 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2580121141302226]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Calculation_6470121141648587]' formula='[Gross Revenue]*[Calculation_9640121141625837]' />
            <calculation column='[Calculation_9640121141625837]' formula='0.7' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='766' timestamp-start='2014-07-15 14:32:10.679000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.474227' measure-ordering='alphabetic' measure-percentage='0.268041' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Only Full Time Frames' datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;False&quot;'>
          <calculation class='tableau' formula='&quot;False&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
          <calculation class='tableau' formula='&quot;Day&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.position_performance'>
        <column caption='Clicks per Property Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_0450117153524909]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Clicks])/SUM([Ad Call Interactions])' scope-isolation='false' />
        </column>
        <column caption='Property Interactions per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8971227123741400]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([vertica.media_performance].[Page View Interactions])' scope-isolation='false' />
        </column>
        <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Calculation_0450117153524909]' derivation='User' name='[usr:Calculation_0450117153524909:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_8971227123741400]' derivation='User' name='[usr:Calculation_8971227123741400:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='position_performance' inline='true' name='vertica.position_performance' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='7.0' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;&apos;Meta&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;aggregation_level_date_in_et as &quot;Date&quot;,&#13;&#10;&#9;au.id as &quot;Ad Unit ID&quot;,&#13;&#10;&#9;au.name as &quot;Ad Unit&quot;,&#13;&#10;&#9;s.display_name as &quot;Site&quot;,&#13;&#10;&#9;e.name as &quot;Publisher&quot;,&#13;&#10;&#9;hcptpa.position as &quot;Position&quot;,&#13;&#10;&#9;sum(ad_call_count) as &quot;Ad Calls&quot;,&#13;&#10;&#9;sum(pure_ad_call_count) as &quot;Pure Ad Calls&quot;,&#13;&#10;&#9;sum(not_pure_ad_call_count) as &quot;Not Pure Ad Calls&quot;,&#13;&#10;&#9;sum(served_ad_call_count) as &quot;Served Ad Calls&quot;,&#13;&#10;&#9;sum(impression_count) as &quot;Impressions&quot;,&#13;&#10;&#9;sum(click_count) as &quot;Clicks&quot;,&#13;&#10;&#9;sum(ad_call_interaction_count) as &quot;Ad Call Interactions&quot;,&#13;&#10;&#9;sum(gross_revenue_sum) as &quot;Gross Revenue&quot;&#13;&#10;from intent_media_production.hotel_meta_position_media_performance_aggregations hcptpa&#13;&#10;left join intent_media_production.ad_units au on au.id = hcptpa.ad_unit_id&#13;&#10;left join intent_media_production.sites s on s.id = au.site_id&#13;&#10;left join intent_media_production.entities e on e.id = s.publisher_id&#13;&#10;where aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;&#9;and aggregation_level_date_in_et &gt;&gt; &apos;2014-01-14&apos;&#13;&#10;group by &#13;&#10;&#9;aggregation_level_date_in_et, &#13;&#10;&#9;au.id,&#13;&#10;&#9;au.name,&#13;&#10;&#9;s.display_name,&#13;&#10;&#9;e.name,&#13;&#10;&#9;hcptpa.position</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[vertica.media_performance].[sum:Calculation_2580121141302226:qk]&quot;' value=' ' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_2151227122942735:qk]&quot;' value='     % Addressable' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_4480121141714556:qk]&quot;' value='     Addressable Net eCPM' />
          <alias key='&quot;[vertica.media_performance].[usr:Calculation_9570117153248706:qk]&quot;' value='     Addressable eCPM' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_0450117153524909:qk]&quot;' value='     Clicks per Property Interaction' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_1421227123206307:qk]&quot;' value='     CPC' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_6181227123356978:qk]&quot;' value='     Properties per Addressable Page' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_8031227123601565:qk]&quot;' value='     Property Fill Rate' />
          <alias key='&quot;[vertica.position_performance].[usr:Calculation_9301227123642221:qk]&quot;' value='     Property Interaction Rate' />
        </aliases>
      </column>
      <column caption='Property Interactions' datatype='integer' name='[Ad Call Interactions]' role='measure' type='quantitative'>
      </column>
      <column caption='Available Properties' datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Clicks per Property Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_0450117153524909]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Ad Call Interactions])' scope-isolation='false' />
      </column>
      <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
      </column>
      <column caption='Date Label' datatype='string' name='[Calculation_4450207125027646]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Day&quot; THEN &quot;&quot;&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week of&quot;&#13;&#10;    WHEN &quot;Month&quot; THEN &quot;Month of&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Property Position' datatype='string' name='[Calculation_5050117154515444]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] THEN STR([Position]) ELSE &quot;Total&quot; END' scope-isolation='false' />
      </column>
      <column caption='Properties per Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6001227123502485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ad Calls])/SUM([vertica.media_performance].[Page Views])' scope-isolation='false' />
      </column>
      <column caption='Properties per Addressable Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6181227123356978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Not Pure Ad Calls])/SUM([vertica.media_performance].[Not Pure Page Views])' scope-isolation='false' />
      </column>
      <column caption='Property CTR' datatype='real' default-format='p0.0%' name='[Calculation_7480117154312654]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Property Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_8031227123601565]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Not Pure Ad Calls])' scope-isolation='false' />
      </column>
      <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_8130121142548075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Revenue])*ATTR([vertica.media_performance].[Calculation_9640121141625837])' scope-isolation='false' />
      </column>
      <column caption='Date Axis' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Property Interactions per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8971227123741400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([vertica.media_performance].[Page View Interactions])' scope-isolation='false' />
      </column>
      <column caption='Property Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_9301227123642221]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
      </column>
      <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
      </column>
      <column datatype='date' name='[Last Date to Show]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN TODAY()-1&#13;&#10;WHEN &quot;Week&quot; THEN IF DATEPART(&apos;weekday&apos;,TODAY()-1) = 7 THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;week&apos;,TODAY()-1))-1) END&#13;&#10;WHEN &quot;Month&quot; THEN (IF TODAY()-1 = DATEADD(&apos;day&apos;,-1,DATEADD(&apos;month&apos;,1,DATETRUNC(&apos;month&apos;,TODAY()-1))) THEN TODAY()-1 ELSE (DATE(DATETRUNC(&apos;month&apos;,TODAY()-1))-1) END)&#13;&#10;END' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Month]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MONTH([Date])' />
      </column>
      <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Position]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Quarter]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Month] &lt;= 3 THEN 1&#13;&#10;ELSEIF [Month] &lt;= 6 THEN 2&#13;&#10;ELSEIF [Month] &lt;= 9 THEN 3&#13;&#10;ELSEIF [Month] &lt;= 12 THEN 4&#13;&#10;END' />
      </column>
      <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Year ' datatype='integer' default-format='n0;-0' name='[Year Number]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([Date])' />
      </column>
      <column-instance column='[Calculation_0450117153524909]' derivation='User' name='[usr:Calculation_0450117153524909:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1421227123206307]' derivation='User' name='[usr:Calculation_1421227123206307:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6181227123356978]' derivation='User' name='[usr:Calculation_6181227123356978:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8031227123601565]' derivation='User' name='[usr:Calculation_8031227123601565:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9301227123642221]' derivation='User' name='[usr:Calculation_9301227123642221:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\position_media.tde' schema='Extract' tablename='Extract' update-time='7/15/2014 2:32:39 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='22135' timestamp-start='2014-07-15 14:32:39.812000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.467012' measure-ordering='alphabetic' measure-percentage='0.415265' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Only Full Time Frames' datatype='string' name='[Only Full Time Frames]' param-domain-type='list' role='measure' type='nominal' value='&quot;False&quot;'>
          <calculation class='tableau' formula='&quot;False&quot;' />
          <members>
            <member value='&quot;True&quot;' />
            <member value='&quot;False&quot;' />
          </members>
        </column>
        <column caption='Aggregated By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Day&quot;'>
          <calculation class='tableau' formula='&quot;Day&quot;' />
          <members>
            <member value='&quot;Day&quot;' />
            <member value='&quot;Week&quot;' />
            <member value='&quot;Month&quot;' />
          </members>
        </column>
        <column caption='Aggregate by Position' datatype='boolean' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <members>
            <member value='true' />
            <member value='false' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='vertica.media_performance'>
        <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
        </column>
        <column caption='Blank' datatype='integer' name='[Calculation_2580121141302226]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
        </column>
        <column caption='Addressable Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_4480121141714556]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
        </column>
        <column caption='Addressable eCPM' datatype='real' default-format='C1033%' name='[Calculation_9570117153248706]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
        </column>
        <column caption='Revenue Share' datatype='real' name='[Calculation_9640121141625837]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='0.7' scope-isolation='false' />
        </column>
        <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
        </column>
        <column caption='Page Interactions' datatype='integer' name='[Page View Interactions]' role='measure' type='quantitative'>
        </column>
        <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Calculation_2580121141302226]' derivation='Sum' name='[sum:Calculation_2580121141302226:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_2151227122942735]' derivation='User' name='[usr:Calculation_2151227122942735:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_4480121141714556]' derivation='User' name='[usr:Calculation_4480121141714556:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_9570117153248706]' derivation='User' name='[usr:Calculation_9570117153248706:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='vertica.position_performance'>
      <datasources>
        <datasource caption='position_performance' name='vertica.position_performance' />
      </datasources>
      <datasource-dependencies datasource='vertica.position_performance'>
        <column caption='Property Position' datatype='string' name='[Calculation_5050117154515444]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 2] THEN STR([Position]) ELSE &quot;Total&quot; END' scope-isolation='false' />
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Calculation_5050117154515444]' derivation='None' name='[none:Calculation_5050117154515444:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[vertica.position_performance].[none:Calculation_5050117154515444:nk]'>
        <groupfilter function='member' level='[none:Calculation_5050117154515444:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[vertica.position_performance].[none:Date:qk]' included-values='all'>
      </filter>
      <filter class='categorical' column='[vertica.position_performance].[none:Publisher:nk]'>
        <groupfilter function='level-members' level='[none:Publisher:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='CSV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CSV Download</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='position_performance_for_csv' name='vertica.41628.691394351852' />
            <datasource name='Parameters' />
            <datasource caption='media_performance_for_csv' name='vertica.41628.647812708332' />
          </datasources>
          <datasource-dependencies datasource='vertica.41628.647812708332'>
            <column caption='Ad Interaction Rate' datatype='real' default-format='p0.0%' name='[Calculation_0011227123924806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Ads per Served Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_0911227123845197]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Impressions])/SUM([vertica.41628.691394351852].[Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
            </column>
            <column caption='Page Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_4031227123028063]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Pages])/SUM([Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column caption='Page Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_7051227123102547]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Page View Interactions])/SUM([Served Pages])' scope-isolation='false' />
            </column>
            <column caption='Clicks per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9401227123136141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Page View Interactions])' scope-isolation='false' />
            </column>
            <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column caption='Page Interactions' datatype='integer' name='[Page View Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Raw Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Served Pages]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Not Pure Page Views]' derivation='Sum' name='[sum:Not Pure Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page View Interactions]' derivation='Sum' name='[sum:Page View Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served Pages]' derivation='Sum' name='[sum:Served Pages:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0011227123924806]' derivation='User' name='[usr:Calculation_0011227123924806:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0911227123845197]' derivation='User' name='[usr:Calculation_0911227123845197:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2151227122942735]' derivation='User' name='[usr:Calculation_2151227122942735:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4031227123028063]' derivation='User' name='[usr:Calculation_4031227123028063:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_7051227123102547]' derivation='User' name='[usr:Calculation_7051227123102547:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9401227123136141]' derivation='User' name='[usr:Calculation_9401227123136141:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41628.691394351852'>
            <column caption='Property Interactions' datatype='integer' name='[Ad Call Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Available Properties' datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Properties per Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6001227123502485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Calls])/SUM([vertica.41628.647812708332].[Page Views])' scope-isolation='false' />
            </column>
            <column caption='Properties per Addressable Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6181227123356978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Ad Calls])/SUM([vertica.41628.647812708332].[Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column caption='Property Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_8031227123601565]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Not Pure Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_8130121142548075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])*ATTR([vertica.41628.647812708332].[Calculation_9640121141625837])' scope-isolation='false' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Raw Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Raw Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Raw Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Property Interactions per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8971227123741400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([vertica.41628.647812708332].[Page View Interactions])' scope-isolation='false' />
            </column>
            <column caption='Property Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_9301227123642221]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Calculation_8600117133017498] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MONTH([Raw Date])' scope-isolation='false' />
            </column>
            <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Property Position]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Quarter]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Month] &lt;= 3 THEN 1&#13;&#10;ELSEIF [Month] &lt;= 6 THEN 2&#13;&#10;ELSEIF [Month] &lt;= 9 THEN 3&#13;&#10;ELSEIF [Month] &lt;= 12 THEN 4&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Raw Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Year ' datatype='integer' default-format='n0;-0' name='[Year Number]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Raw Date])' scope-isolation='false' />
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8600117133017498]' derivation='None' name='[none:Calculation_8600117133017498:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Property Position]' derivation='None' name='[none:Property Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Raw Date]' derivation='None' name='[none:Raw Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year Number]' derivation='None' name='[none:Year Number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Call Interactions]' derivation='Sum' name='[sum:Ad Call Interactions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gross Revenue]' derivation='Sum' name='[sum:Gross Revenue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Not Pure Ad Calls]' derivation='Sum' name='[sum:Not Pure Ad Calls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1421227123206307]' derivation='User' name='[usr:Calculation_1421227123206307:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6001227123502485]' derivation='User' name='[usr:Calculation_6001227123502485:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6181227123356978]' derivation='User' name='[usr:Calculation_6181227123356978:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8031227123601565]' derivation='User' name='[usr:Calculation_8031227123601565:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8130121142548075]' derivation='User' name='[usr:Calculation_8130121142548075:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_8971227123741400]' derivation='User' name='[usr:Calculation_8971227123741400:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9301227123642221]' derivation='User' name='[usr:Calculation_9301227123642221:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Property Position:nk]'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:Property Position:nk]' to='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Publisher:nk]'>
            <groupfilter function='level-members' level='[none:Publisher:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41628.691394351852].[none:Raw Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Site:nk]'>
            <groupfilter function='level-members' level='[none:Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41628.691394351852].[none:Publisher:nk]</column>
            <column>[vertica.41628.691394351852].[none:Site:nk]</column>
            <column>[vertica.41628.691394351852].[none:Ad Unit:nk]</column>
            <column>[vertica.41628.691394351852].[none:Raw Date:qk]</column>
            <column>[vertica.41628.691394351852].[none:Property Position:nk]</column>
            <column>[vertica.41628.691394351852].[none:Date Filter for Full Time Frames:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.41628.691394351852].[none:Ad Unit:nk]' value='260' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41628.691394351852].[none:Month:ok] / ([vertica.41628.691394351852].[none:Quarter:ok] / ([vertica.41628.691394351852].[none:Year Number:ok] / ([vertica.41628.691394351852].[none:Calculation_8600117133017498:ok] / ([vertica.41628.691394351852].[none:Product Category Type:nk] / ([vertica.41628.691394351852].[none:Publisher:nk] / ([vertica.41628.691394351852].[none:Site:nk] / ([vertica.41628.691394351852].[none:Ad Unit:nk] / ([vertica.41628.691394351852].[none:Property Position:nk] / ([vertica.41628.647812708332].[sum:Page Views:ok] / ([vertica.41628.647812708332].[usr:Calculation_2151227122942735:ok] / ([vertica.41628.647812708332].[sum:Not Pure Page Views:ok] / ([vertica.41628.647812708332].[usr:Calculation_4031227123028063:ok] / ([vertica.41628.647812708332].[sum:Served Pages:ok] / ([vertica.41628.647812708332].[usr:Calculation_7051227123102547:ok] / ([vertica.41628.647812708332].[sum:Page View Interactions:ok] / ([vertica.41628.691394351852].[usr:Calculation_8971227123741400:ok] / ([vertica.41628.647812708332].[usr:Calculation_9401227123136141:ok] / ([vertica.41628.691394351852].[usr:Calculation_6001227123502485:ok] / ([vertica.41628.691394351852].[sum:Ad Calls:ok] / ([vertica.41628.691394351852].[usr:Calculation_6181227123356978:ok] / ([vertica.41628.691394351852].[sum:Not Pure Ad Calls:ok] / ([vertica.41628.691394351852].[usr:Calculation_8031227123601565:ok] / ([vertica.41628.691394351852].[sum:Served Ad Calls:ok] / ([vertica.41628.691394351852].[usr:Calculation_9301227123642221:ok] / ([vertica.41628.691394351852].[sum:Ad Call Interactions:ok] / ([vertica.41628.647812708332].[usr:Calculation_0911227123845197:ok] / ([vertica.41628.691394351852].[sum:Impressions:ok] / ([vertica.41628.647812708332].[usr:Calculation_0011227123924806:ok] / ([vertica.41628.691394351852].[sum:Clicks:ok] / ([vertica.41628.691394351852].[usr:Calculation_1421227123206307:ok] / ([vertica.41628.691394351852].[sum:Gross Revenue:ok] / [vertica.41628.691394351852].[usr:Calculation_8130121142548075:ok]))))))))))))))))))))))))))))))))</rows>
        <cols></cols>
        <join-lod-include-overrides>
          <column>[vertica.41628.647812708332].[Raw Date]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='CSV Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CSV Download</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='position_performance_for_csv' name='vertica.41628.691394351852' />
            <datasource name='Parameters' />
            <datasource caption='media_performance_for_csv' name='vertica.41628.647812708332' />
          </datasources>
          <datasource-dependencies datasource='vertica.41628.647812708332'>
            <column caption='Ad Interaction Rate' datatype='real' default-format='p0.0%' name='[Calculation_0011227123924806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Impressions])' scope-isolation='false' />
            </column>
            <column caption='Ads per Served Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_0911227123845197]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Impressions])/SUM([vertica.41628.691394351852].[Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
            </column>
            <column caption='Page Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_4031227123028063]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Pages])/SUM([Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column caption='Page Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_7051227123102547]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Page View Interactions])/SUM([Served Pages])' scope-isolation='false' />
            </column>
            <column caption='Clicks per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9401227123136141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Page View Interactions])' scope-isolation='false' />
            </column>
            <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column caption='Page Interactions' datatype='integer' name='[Page View Interactions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Raw Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Served Pages]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Not Pure Page Views]' derivation='Sum' name='[sum:Not Pure Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page View Interactions]' derivation='Sum' name='[sum:Page View Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Pages]' derivation='Sum' name='[sum:Served Pages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0011227123924806]' derivation='User' name='[usr:Calculation_0011227123924806:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0911227123845197]' derivation='User' name='[usr:Calculation_0911227123845197:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151227122942735]' derivation='User' name='[usr:Calculation_2151227122942735:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4031227123028063]' derivation='User' name='[usr:Calculation_4031227123028063:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7051227123102547]' derivation='User' name='[usr:Calculation_7051227123102547:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9401227123136141]' derivation='User' name='[usr:Calculation_9401227123136141:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.41628.691394351852'>
            <column caption='Property Interactions' datatype='integer' name='[Ad Call Interactions]' role='measure' type='quantitative'>
            </column>
            <column caption='Available Properties' datatype='integer' name='[Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Properties per Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6001227123502485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Calls])/SUM([vertica.41628.647812708332].[Page Views])' scope-isolation='false' />
            </column>
            <column caption='Properties per Addressable Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6181227123356978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Ad Calls])/SUM([vertica.41628.647812708332].[Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column caption='Property Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_8031227123601565]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Not Pure Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_8130121142548075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])*ATTR([vertica.41628.647812708332].[Calculation_9640121141625837])' scope-isolation='false' />
            </column>
            <column caption='Date' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Raw Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Raw Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Raw Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Property Interactions per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8971227123741400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([vertica.41628.647812708332].[Page View Interactions])' scope-isolation='false' />
            </column>
            <column caption='Property Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_9301227123642221]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Calculation_8600117133017498] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MONTH([Raw Date])' scope-isolation='false' />
            </column>
            <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Property Position]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Quarter]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Month] &lt;= 3 THEN 1&#13;&#10;ELSEIF [Month] &lt;= 6 THEN 2&#13;&#10;ELSEIF [Month] &lt;= 9 THEN 3&#13;&#10;ELSEIF [Month] &lt;= 12 THEN 4&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Raw Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column caption='Year ' datatype='integer' default-format='n0;-0' name='[Year Number]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='YEAR([Raw Date])' scope-isolation='false' />
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8600117133017498]' derivation='None' name='[none:Calculation_8600117133017498:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category Type]' derivation='None' name='[none:Product Category Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Property Position]' derivation='None' name='[none:Property Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Raw Date]' derivation='None' name='[none:Raw Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year Number]' derivation='None' name='[none:Year Number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ad Call Interactions]' derivation='Sum' name='[sum:Ad Call Interactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ad Calls]' derivation='Sum' name='[sum:Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Revenue]' derivation='Sum' name='[sum:Gross Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Pure Ad Calls]' derivation='Sum' name='[sum:Not Pure Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1421227123206307]' derivation='User' name='[usr:Calculation_1421227123206307:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6001227123502485]' derivation='User' name='[usr:Calculation_6001227123502485:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6181227123356978]' derivation='User' name='[usr:Calculation_6181227123356978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8031227123601565]' derivation='User' name='[usr:Calculation_8031227123601565:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8130121142548075]' derivation='User' name='[usr:Calculation_8130121142548075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8971227123741400]' derivation='User' name='[usr:Calculation_8971227123741400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9301227123642221]' derivation='User' name='[usr:Calculation_9301227123642221:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.41628.691394351852].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[sum:Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[usr:Calculation_2151227122942735:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[sum:Not Pure Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[usr:Calculation_4031227123028063:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[sum:Served Pages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[usr:Calculation_7051227123102547:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[sum:Page View Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_8971227123741400:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[usr:Calculation_9401227123136141:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_6001227123502485:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_6181227123356978:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Not Pure Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_8031227123601565:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_9301227123642221:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Ad Call Interactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[usr:Calculation_0911227123845197:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.647812708332].[usr:Calculation_0011227123924806:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_1421227123206307:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[sum:Gross Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.41628.691394351852].[usr:Calculation_8130121142548075:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.41628.691394351852].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.41628.647812708332].[sum:Page Views:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[usr:Calculation_2151227122942735:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[sum:Not Pure Page Views:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[usr:Calculation_4031227123028063:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[sum:Served Pages:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[usr:Calculation_7051227123102547:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[sum:Page View Interactions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[usr:Calculation_8971227123741400:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[usr:Calculation_9401227123136141:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[usr:Calculation_6001227123502485:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[usr:Calculation_6181227123356978:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Not Pure Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[usr:Calculation_8031227123601565:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[usr:Calculation_9301227123642221:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Ad Call Interactions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[usr:Calculation_0911227123845197:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.647812708332].[usr:Calculation_0011227123924806:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[usr:Calculation_1421227123206307:qk]&quot;</bucket>
              <bucket>&quot;[vertica.41628.691394351852].[sum:Gross Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Property Position:nk]'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:Property Position:nk]' to='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Publisher:nk]'>
            <groupfilter function='level-members' level='[none:Publisher:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.41628.691394351852].[none:Raw Date:qk]' included-values='all'>
          </filter>
          <filter class='categorical' column='[vertica.41628.691394351852].[none:Site:nk]'>
            <groupfilter function='level-members' level='[none:Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.41628.691394351852].[:Measure Names]</column>
            <column>[vertica.41628.691394351852].[none:Publisher:nk]</column>
            <column>[vertica.41628.691394351852].[none:Site:nk]</column>
            <column>[vertica.41628.691394351852].[none:Ad Unit:nk]</column>
            <column>[vertica.41628.691394351852].[none:Raw Date:qk]</column>
            <column>[vertica.41628.691394351852].[none:Property Position:nk]</column>
            <column>[vertica.41628.691394351852].[none:Date Filter for Full Time Frames:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.41628.691394351852].[:Measure Names]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.41628.691394351852].[:Measure Names]' value='66' />
            <format attr='width' field='[vertica.41628.691394351852].[:Measure Names]' value='180' />
            <format attr='width' field='[vertica.41628.691394351852].[none:Ad Unit:nk]' value='260' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.41628.691394351852].[:Measure Names]' value='left' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.41628.691394351852].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.41628.691394351852].[none:Month:ok] / ([vertica.41628.691394351852].[none:Quarter:ok] / ([vertica.41628.691394351852].[none:Year Number:ok] / ([vertica.41628.691394351852].[none:Calculation_8600117133017498:ok] / ([vertica.41628.691394351852].[none:Product Category Type:nk] / ([vertica.41628.691394351852].[none:Publisher:nk] / ([vertica.41628.691394351852].[none:Site:nk] / ([vertica.41628.691394351852].[none:Ad Unit:nk] / [vertica.41628.691394351852].[none:Property Position:nk]))))))))</rows>
        <cols>[vertica.41628.691394351852].[:Measure Names]</cols>
        <join-lod-include-overrides>
          <column>[vertica.41628.647812708332].[Raw Date]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Page'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Page Funnel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='media_performance' name='vertica.media_performance' />
            <datasource name='Parameters' />
            <datasource caption='position_performance' name='vertica.position_performance' />
          </datasources>
          <datasource-dependencies datasource='vertica.media_performance'>
            <column caption='Served eCPM' datatype='real' default-format='C1033%' name='[Calculation_0810117153324331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Served Pages])*1000' scope-isolation='false' />
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Calculation_2580121141302226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Page Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_4031227123028063]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Pages])/SUM([Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column caption='Date Label' datatype='string' name='[Calculation_4450207125027646]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Day&quot; THEN &quot;&quot;&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week of&quot;&#13;&#10;    WHEN &quot;Month&quot; THEN &quot;Month of&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Addressable Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_4480121141714556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
            </column>
            <column caption='Page CTR' datatype='real' default-format='p0.00%' name='[Calculation_5670117153726839]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Pages])' scope-isolation='false' />
            </column>
            <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_6470121141648587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross Revenue]*[Calculation_9640121141625837]' scope-isolation='false' />
            </column>
            <column caption='Page Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_7051227123102547]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Page View Interactions])/SUM([Served Pages])' scope-isolation='false' />
            </column>
            <column caption='Served Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_8260121141749289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Served Pages])*1000' scope-isolation='false' />
            </column>
            <column caption='Date Axis' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Clicks per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_9401227123136141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Page View Interactions])' scope-isolation='false' />
            </column>
            <column caption='Addressable eCPM' datatype='real' default-format='C1033%' name='[Calculation_9570117153248706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Served Pages]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_4450207125027646]' derivation='None' name='[none:Calculation_4450207125027646:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8600117133017498]' derivation='None' name='[none:Calculation_8600117133017498:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2580121141302226]' derivation='Sum' name='[sum:Calculation_2580121141302226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6470121141648587]' derivation='Sum' name='[sum:Calculation_6470121141648587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Revenue]' derivation='Sum' name='[sum:Gross Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Pure Page Views]' derivation='Sum' name='[sum:Not Pure Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Pages]' derivation='Sum' name='[sum:Served Pages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0810117153324331]' derivation='User' name='[usr:Calculation_0810117153324331:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1421227123206307]' derivation='User' name='[usr:Calculation_1421227123206307:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151227122942735]' derivation='User' name='[usr:Calculation_2151227122942735:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4031227123028063]' derivation='User' name='[usr:Calculation_4031227123028063:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4480121141714556]' derivation='User' name='[usr:Calculation_4480121141714556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5670117153726839]' derivation='User' name='[usr:Calculation_5670117153726839:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7051227123102547]' derivation='User' name='[usr:Calculation_7051227123102547:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8260121141749289]' derivation='User' name='[usr:Calculation_8260121141749289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9401227123136141]' derivation='User' name='[usr:Calculation_9401227123136141:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570117153248706]' derivation='User' name='[usr:Calculation_9570117153248706:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.position_performance'>
            <column aggregation='Sum' datatype='integer' name='[Ad Unit ID]' role='dimension' type='ordinal'>
            </column>
            <column caption='Clicks per Property Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_0450117153524909]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Ad Call Interactions])' scope-isolation='false' />
            </column>
            <column caption='Date Axis' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Property Interactions per Page Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_8971227123741400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([vertica.media_performance].[Page View Interactions])' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0450117153524909]' derivation='User' name='[usr:Calculation_0450117153524909:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8971227123741400]' derivation='User' name='[usr:Calculation_8971227123741400:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.media_performance].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_2151227122942735:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Not Pure Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_4031227123028063:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Served Pages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_7051227123102547:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_8971227123741400:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_0450117153524909:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_1421227123206307:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Gross Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_9570117153248706:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_0810117153324331:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Calculation_6470121141648587:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_4480121141714556:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_8260121141749289:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Calculation_2580121141302226:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_9401227123136141:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_5670117153726839:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.media_performance].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.media_performance].[sum:Page Views:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_2151227122942735:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Not Pure Page Views:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_4031227123028063:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Served Pages:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_7051227123102547:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_8971227123741400:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_0450117153524909:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_1421227123206307:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Gross Revenue:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_9570117153248706:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_0810117153324331:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Calculation_6470121141648587:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_4480121141714556:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_8260121141749289:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Calculation_2580121141302226:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_9401227123136141:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_5670117153726839:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.media_performance].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[vertica.media_performance].[none:Date:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[vertica.media_performance].[:Measure Names]</column>
            <column>[vertica.media_performance].[none:Date:qk]</column>
            <column>[vertica.media_performance].[none:Date Filter for Full Time Frames:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[vertica.media_performance].[:Measure Names]' value='26' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[vertica.media_performance].[:Measure Names]' value='240' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.media_performance].[:Measure Names]' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.media_performance].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[vertica.media_performance].[:Measure Names]</rows>
        <cols>([vertica.media_performance].[none:Calculation_4450207125027646:nk] / [vertica.media_performance].[none:Calculation_8600117133017498:ok])</cols>
        <join-lod-include-overrides>
          <column>[vertica.position_performance].[Ad Unit ID]</column>
          <column>[vertica.position_performance].[Calculation_8600117133017498]</column>
          <column>[vertica.position_performance].[Date]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Property'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Property Funnel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='position_performance' name='vertica.position_performance' />
            <datasource name='Parameters' />
            <datasource caption='media_performance' name='vertica.media_performance' />
          </datasources>
          <datasource-dependencies datasource='vertica.media_performance'>
            <column caption='% Addressable' datatype='real' default-format='p0.0%' name='[Calculation_2151227122942735]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Page Views])/SUM([Page Views])' scope-isolation='false' />
            </column>
            <column caption='Blank' datatype='integer' name='[Calculation_2580121141302226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' scope-isolation='false' />
            </column>
            <column caption='Average Position of Clicked Property' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_4430117160047386]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicked Ad Call Position Sum])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Addressable Net eCPM' datatype='real' default-format='C1033%' name='[Calculation_4480121141714556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_6470121141648587])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
            </column>
            <column caption='Addressable eCPM' datatype='real' default-format='C1033%' name='[Calculation_9570117153248706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Not Pure Page Views])*1000' scope-isolation='false' />
            </column>
            <column caption='Addressable Page Views' datatype='integer' name='[Not Pure Page Views]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Page Views]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2580121141302226]' derivation='Sum' name='[sum:Calculation_2580121141302226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Pure Page Views]' derivation='Sum' name='[sum:Not Pure Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Page Views]' derivation='Sum' name='[sum:Page Views:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151227122942735]' derivation='User' name='[usr:Calculation_2151227122942735:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4430117160047386]' derivation='User' name='[usr:Calculation_4430117160047386:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4480121141714556]' derivation='User' name='[usr:Calculation_4480121141714556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570117153248706]' derivation='User' name='[usr:Calculation_9570117153248706:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='vertica.position_performance'>
            <column datatype='string' name='[Ad Unit]' role='dimension' type='nominal'>
            </column>
            <column caption='Clicks per Property Interaction' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_0450117153524909]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Ad Call Interactions])' scope-isolation='false' />
            </column>
            <column caption='CPC' datatype='real' default-format='C1033%' name='[Calculation_1421227123206307]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])/SUM([Clicks])' scope-isolation='false' />
            </column>
            <column caption='Date Label' datatype='string' name='[Calculation_4450207125027646]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Day&quot; THEN &quot;&quot;&#13;&#10;    WHEN &quot;Week&quot; THEN &quot;Week of&quot;&#13;&#10;    WHEN &quot;Month&quot; THEN &quot;Month of&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Property Position' datatype='string' name='[Calculation_5050117154515444]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] THEN STR([Position]) ELSE &quot;Total&quot; END' scope-isolation='false' />
            </column>
            <column caption='Properties per Addressable Page' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_6181227123356978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Not Pure Ad Calls])/SUM([vertica.media_performance].[Not Pure Page Views])' scope-isolation='false' />
            </column>
            <column caption='Property CTR' datatype='real' default-format='p0.0%' name='[Calculation_7480117154312654]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Clicks])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Property Fill Rate' datatype='real' default-format='p0.0%' name='[Calculation_8031227123601565]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Served Ad Calls])/SUM([Not Pure Ad Calls])' scope-isolation='false' />
            </column>
            <column caption='Net Media Revenue' datatype='real' default-format='C1033%' name='[Calculation_8130121142548075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Revenue])*ATTR([vertica.media_performance].[Calculation_9640121141625837])' scope-isolation='false' />
            </column>
            <column caption='Date Axis' datatype='date' name='[Calculation_8600117133017498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Day&quot; THEN [Date]&#13;&#10;WHEN &quot;Week&quot; THEN DATE(DATETRUNC(&apos;week&apos;, [Date]))&#13;&#10;WHEN &quot;Month&quot; THEN DATE(DATETRUNC(&apos;month&apos;,[Date]))&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Property Interaction Rate' datatype='real' default-format='p0.00%' name='[Calculation_9301227123642221]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ad Call Interactions])/SUM([Served Ad Calls])' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Date Filter for Full Time Frames]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Only Full Time Frames]&#13;&#10;WHEN &quot;True&quot; THEN IF [Date] &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;WHEN &quot;False&quot; THEN &quot;Keep&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Gross Media Revenue' datatype='real' default-format='C1033%' name='[Gross Revenue]' role='measure' type='quantitative'>
            </column>
            <column caption='Addressable Properties' datatype='integer' name='[Not Pure Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Position]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal'>
            </column>
            <column caption='Served Properties' datatype='integer' name='[Served Ad Calls]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Site]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ad Unit]' derivation='None' name='[none:Ad Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4450207125027646]' derivation='None' name='[none:Calculation_4450207125027646:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5050117154515444]' derivation='None' name='[none:Calculation_5050117154515444:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8600117133017498]' derivation='None' name='[none:Calculation_8600117133017498:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Filter for Full Time Frames]' derivation='None' name='[none:Date Filter for Full Time Frames:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Site]' derivation='None' name='[none:Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Revenue]' derivation='Sum' name='[sum:Gross Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Pure Ad Calls]' derivation='Sum' name='[sum:Not Pure Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Served Ad Calls]' derivation='Sum' name='[sum:Served Ad Calls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0450117153524909]' derivation='User' name='[usr:Calculation_0450117153524909:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1421227123206307]' derivation='User' name='[usr:Calculation_1421227123206307:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6181227123356978]' derivation='User' name='[usr:Calculation_6181227123356978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7480117154312654]' derivation='User' name='[usr:Calculation_7480117154312654:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8031227123601565]' derivation='User' name='[usr:Calculation_8031227123601565:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8130121142548075]' derivation='User' name='[usr:Calculation_8130121142548075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9301227123642221]' derivation='User' name='[usr:Calculation_9301227123642221:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[vertica.position_performance].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_2151227122942735:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Not Pure Page Views:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_6181227123356978:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[sum:Not Pure Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_8031227123601565:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[sum:Served Ad Calls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_9301227123642221:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_0450117153524909:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_1421227123206307:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[sum:Gross Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_9570117153248706:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_8130121142548075:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_4480121141714556:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[sum:Calculation_2580121141302226:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.media_performance].[usr:Calculation_4430117160047386:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[vertica.position_performance].[usr:Calculation_7480117154312654:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[vertica.position_performance].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[vertica.media_performance].[sum:Page Views:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_2151227122942735:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Not Pure Page Views:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_6181227123356978:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[sum:Not Pure Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_8031227123601565:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[sum:Served Ad Calls:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_9301227123642221:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_0450117153524909:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_1421227123206307:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[sum:Gross Revenue:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_9570117153248706:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_8130121142548075:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_4480121141714556:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[sum:Calculation_2580121141302226:qk]&quot;</bucket>
              <bucket>&quot;[vertica.media_performance].[usr:Calculation_4430117160047386:qk]&quot;</bucket>
              <bucket>&quot;[vertica.position_performance].[usr:Calculation_7480117154312654:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[vertica.position_performance].[none:Ad Unit:nk]'>
            <groupfilter function='level-members' level='[none:Ad Unit:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.position_performance].[none:Date Filter for Full Time Frames:nk]'>
            <groupfilter function='member' level='[none:Date Filter for Full Time Frames:nk]' member='&quot;Keep&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.position_performance].[none:Position:ok]'>
            <groupfilter function='level-members' level='[none:Position:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[vertica.position_performance].[none:Site:nk]'>
            <groupfilter function='level-members' level='[none:Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[vertica.position_performance].[:Measure Names]</column>
            <column>[vertica.position_performance].[none:Date:qk]</column>
            <column>[vertica.position_performance].[none:Publisher:nk]</column>
            <column>[vertica.position_performance].[none:Position:ok]</column>
            <column>[vertica.position_performance].[none:Date Filter for Full Time Frames:nk]</column>
            <column>[vertica.position_performance].[none:Calculation_5050117154515444:nk]</column>
            <column>[vertica.position_performance].[none:Site:nk]</column>
            <column>[vertica.position_performance].[none:Ad Unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[vertica.position_performance].[:Measure Names]' value='82' />
            <format attr='height' field='[vertica.position_performance].[:Measure Names]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[vertica.position_performance].[:Measure Names]' value='46' />
            <format attr='width' field='[vertica.position_performance].[:Measure Names]' value='188' />
            <format attr='width' field='[vertica.position_performance].[none:Calculation_5050117154515444:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[vertica.position_performance].[:Measure Names]' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[vertica.position_performance].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([vertica.position_performance].[none:Site:nk] / ([vertica.position_performance].[none:Ad Unit:nk] / ([vertica.position_performance].[none:Calculation_5050117154515444:nk] / [vertica.position_performance].[:Measure Names])))</rows>
        <cols>([vertica.position_performance].[none:Calculation_4450207125027646:nk] / [vertica.position_performance].[none:Calculation_8600117133017498:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CSV Download'>
      <style>
      </style>
      <size maxheight='1000' maxwidth='3400' minheight='1000' minwidth='3400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99882' x='0' y='0'>
              <zone h='100000' id='1' name='CSV Data' show-title='true' w='92029' x='7853' y='0'>
              </zone>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='7853' x='0' y='0'>
                <zone h='5500' id='12' param='[Parameters].[Parameter 1]' type='paramctrl' w='7853' x='0' y='0'>
                </zone>
                <zone h='5100' id='14' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='7853' x='0' y='5500'>
                </zone>
                <zone h='10100' id='11' name='CSV Data' param='[vertica.41628.691394351852].[none:Publisher:nk]' type='filter' w='7853' x='0' y='10600'>
                </zone>
                <zone h='13700' id='10' name='CSV Data' param='[vertica.41628.691394351852].[none:Site:nk]' type='filter' w='7853' x='0' y='20700'>
                </zone>
                <zone h='17300' id='7' name='CSV Data' param='[vertica.41628.691394351852].[none:Ad Unit:nk]' type='filter' w='7853' x='0' y='34400'>
                </zone>
                <zone h='6600' id='9' name='CSV Data' param='[vertica.41628.691394351852].[none:Raw Date:qk]' type='filter' w='7853' x='0' y='51700'>
                </zone>
                <zone h='41700' id='13' name='CSV Data' param='[vertica.41628.691394351852].[none:Property Position:nk]' type='filter' w='7853' x='0' y='58300'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Page Funnel'>
      <style>
      </style>
      <size maxheight='1000' maxwidth='1900' minheight='1000' minwidth='1900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='256' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13474' x='0' y='0'>
              <zone h='5500' id='10' param='[Parameters].[Parameter 1]' type='paramctrl' w='13474' x='0' y='0'>
              </zone>
              <zone h='5100' id='11' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='13474' x='0' y='5500'>
              </zone>
              <zone h='10100' id='6' name='Page' param='[vertica.media_performance].[none:Publisher:nk]' type='filter' w='13474' x='0' y='10600'>
              </zone>
              <zone h='13700' id='7' name='Page' param='[vertica.media_performance].[none:Site:nk]' type='filter' w='13474' x='0' y='20700'>
              </zone>
              <zone h='17300' id='8' name='Page' param='[vertica.media_performance].[none:Ad Unit:nk]' type='filter' w='13474' x='0' y='34400'>
              </zone>
              <zone h='6600' id='9' name='Page' param='[vertica.media_performance].[none:Date:qk]' type='filter' w='13474' x='0' y='51700'>
              </zone>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='86315' x='13474' y='0'>
              <zone h='100000' id='1' name='Page' show-title='true' w='86315' x='13474' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Property Funnel'>
      <style>
      </style>
      <size maxheight='1000' maxwidth='2000' minheight='1000' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='255' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12750' x='0' y='0'>
              <zone h='5500' id='6' param='[Parameters].[Parameter 1]' type='paramctrl' w='12750' x='0' y='0'>
              </zone>
              <zone h='5100' id='13' param='[Parameters].[Only Full Time Frames]' type='paramctrl' w='12750' x='0' y='5500'>
              </zone>
              <zone h='10100' id='8' name='Property' param='[vertica.position_performance].[none:Publisher:nk]' type='filter' w='12750' x='0' y='10600'>
              </zone>
              <zone h='13700' id='9' name='Property' param='[vertica.position_performance].[none:Site:nk]' type='filter' w='12750' x='0' y='20700'>
              </zone>
              <zone h='17300' id='10' name='Property' param='[vertica.position_performance].[none:Ad Unit:nk]' type='filter' w='12750' x='0' y='34400'>
              </zone>
              <zone h='6600' id='11' name='Property' param='[vertica.position_performance].[none:Date:qk]' type='filter' w='12750' x='0' y='51700'>
              </zone>
              <zone h='5100' id='7' param='[Parameters].[Parameter 2]' type='paramctrl' w='12750' x='0' y='58300'>
              </zone>
              <zone h='36600' id='12' name='Property' param='[vertica.position_performance].[none:Position:ok]' type='filter' w='12750' x='0' y='63400'>
              </zone>
            </zone>
            <zone h='100000' id='3' type='layout-basic' w='87050' x='12750' y='0'>
              <zone h='100000' id='1' name='Property' show-title='true' w='87050' x='12750' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Page'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Only Full Time Frames]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.media_performance].[none:Calculation_4450207125027646:nk]</field>
          <field>[vertica.media_performance].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[vertica.media_performance].[none:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Property'>
      <cards>
        <edge name='left'>
          <strip size='264'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[vertica.position_performance].[none:Position:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.media_performance].[none:Site:nk]</field>
          <field>[vertica.position_performance].[:Measure Names]</field>
          <field>[vertica.position_performance].[none:Ad Unit:nk]</field>
          <field>[vertica.position_performance].[none:Calculation_4450207125027646:nk]</field>
          <field>[vertica.position_performance].[none:Calculation_5050117154515444:nk]</field>
          <field>[vertica.position_performance].[none:Calculation_8600117133017498:ok]</field>
          <field>[vertica.position_performance].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[vertica.position_performance].[none:Date:qk]</field>
          <field>[vertica.position_performance].[none:Position:ok]</field>
          <field>[vertica.position_performance].[none:Product Category Type:nk]</field>
          <field>[vertica.position_performance].[none:Publisher:nk]</field>
          <field>[vertica.position_performance].[none:Site:nk]</field>
          <field>[vertica.position_performance].[yr:Calculation_8600117133017498:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Page Funnel'>
      <active id='10' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone name='Page' param='[vertica.media_performance].[none:Date:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Property Funnel'>
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone name='Property' param='[vertica.position_performance].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CSV Data'>
      <cards>
        <edge name='left'>
          <strip size='264'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[vertica.41628.691394351852].[none:Ad Unit:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41628.647812708332].[none:Site:nk]</field>
          <field>[vertica.41628.691394351852].[:Measure Names]</field>
          <field>[vertica.41628.691394351852].[none:Ad Unit:nk]</field>
          <field>[vertica.41628.691394351852].[none:Calculation_5050117154515444:nk]</field>
          <field>[vertica.41628.691394351852].[none:Calculation_8600117133017498:ok]</field>
          <field>[vertica.41628.691394351852].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[vertica.41628.691394351852].[none:Date:qk]</field>
          <field>[vertica.41628.691394351852].[none:Month:ok]</field>
          <field>[vertica.41628.691394351852].[none:Position:ok]</field>
          <field>[vertica.41628.691394351852].[none:Product Category Type:nk]</field>
          <field>[vertica.41628.691394351852].[none:Property Position:nk]</field>
          <field>[vertica.41628.691394351852].[none:Publisher:nk]</field>
          <field>[vertica.41628.691394351852].[none:Quarter:ok]</field>
          <field>[vertica.41628.691394351852].[none:Raw Date:qk]</field>
          <field>[vertica.41628.691394351852].[none:Site:nk]</field>
          <field>[vertica.41628.691394351852].[none:Year Number:ok]</field>
          <field>[vertica.41628.691394351852].[yr:Calculation_8600117133017498:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='CSV Download'>
      <active id='10' />
      <zones>
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Only Full Time Frames]' type='paramctrl' />
        <zone name='CSV Data' param='[vertica.41628.691394351852].[none:Raw Date:qk]' show-null-ctrls='false' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CSV'>
      <cards>
        <edge name='left'>
          <strip size='264'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[vertica.41628.691394351852].[none:Ad Unit:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[vertica.41628.647812708332].[none:Site:nk]</field>
          <field>[vertica.41628.691394351852].[:Measure Names]</field>
          <field>[vertica.41628.691394351852].[none:Ad Unit:nk]</field>
          <field>[vertica.41628.691394351852].[none:Calculation_5050117154515444:nk]</field>
          <field>[vertica.41628.691394351852].[none:Calculation_8600117133017498:ok]</field>
          <field>[vertica.41628.691394351852].[none:Date Filter for Full Time Frames:nk]</field>
          <field>[vertica.41628.691394351852].[none:Date:qk]</field>
          <field>[vertica.41628.691394351852].[none:Month:ok]</field>
          <field>[vertica.41628.691394351852].[none:Position:ok]</field>
          <field>[vertica.41628.691394351852].[none:Product Category Type:nk]</field>
          <field>[vertica.41628.691394351852].[none:Property Position:nk]</field>
          <field>[vertica.41628.691394351852].[none:Publisher:nk]</field>
          <field>[vertica.41628.691394351852].[none:Quarter:ok]</field>
          <field>[vertica.41628.691394351852].[none:Raw Date:qk]</field>
          <field>[vertica.41628.691394351852].[none:Site:nk]</field>
          <field>[vertica.41628.691394351852].[none:Year Number:ok]</field>
          <field>[vertica.41628.691394351852].[yr:Calculation_8600117133017498:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Page' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy995MkyXXn6aEyMjIiMjNSZ1aW1t1VXS2mR2IE
      wAFAgCSWIO+45J4gz9a4d3a3fwR/2R/WbM1Omd2a8Wx5Z3u8AwmCBEbL7mlZ1VVdWldlZaXW
      MiIztPD7oZsY1ZXZUwVgetD5+WmmrTziheeLcPfnX38PgRCCHj1OC/p1G9Djm03PgR5imubX
      bcI3kp4DPaTdbn/dJnwj6TlQjzPRc6AeZ6LnQD3ORM+BepyJngP1OBM9B+pxJnoO1ONM9Byo
      x5nAv24DnjgsQ3n379944U//OLW2pvEldvSZ4/Xb43Mvoe1Mpiy2FCvIgIZGvHhx9Nq93T/6
      4Wu/+NlbP/iXf2z/ZXsIc/uLuzw3yakSxGJZYZSDWcG8PD24tnlg6pLHH0ylS8++/Ep8+eOJ
      F/8FzNxLoqMvz/T98gJKu/bue/Pf/8GLh4libHvv1d95bn1xiR26hAkpWTJMijEbRTIwNspp
      +zXitbn+X3y4+OM//F3sMw9w76P33RdekgrHTtjM28b19IpE+p8ZcGzmRLnV7g84MhX55Zef
      /eCjW//qv/zRrffeHnn+9Sjn+OUFapn9+f3mq1NsQmGOdvamoo5EWbr03HMHi3cMFKU9gVou
      OzL7nJZaICa/3/sCfRmEIm2qkNdtXpamFF1lKLZQKFRb1ssvPsOxNkEl7EC0bBRq6om9jaZi
      aMbntkE4JyOqWqHWDvk90JQSibSuyNlcfubZbw2FfZVMbe7SYCJfoymb1KrE0wW+LX92QxvB
      HDbMrJRyrDtIEhgb6Pf5guf6HAjbd/XyOQqVATvWqiYdTqepyCsrGxDqlvW5HXGWpmSJVy3C
      7XTIqqIouqFpiaryOy8/5+foWk3pD+DVlmnDkXJir8QrkqZ/trnDwRimfpjhh/r8OFANw0S0
      9tbyveCFb08Ph5Vms298Op9LsjSpyK2eA30RFCcpO5HNVAYGIzRFAgAwHOeLMdThefvnPzdx
      xgZbvIKyDIOhiMPlsUG5LX3mB0AQh4NCdN6ycazDgSBYIOCVBCHf1KoHd9dS/OCAc3kpFg0H
      7DYbAnDOxYii+FkDSIrCMbRYFfsiPsqGAaDIBqk0q047+Ps3PqI9EaWyi9NByuFAAOILeKVW
      Szetzz6AgyJbjYrTE3JQDgQaECFMsW7Z6Bvv/Kyh2VwsEs+0g37OhiEE7XIQliiqnzWAcjhQ
      qOkY6XI4UBRxcR6IEhqkaHH/+moiGPIe7256/H0OygEggvTkHA/ged7lcn3dVnzz6H2BepyJ
      h5No0zSf8u1oWZa/bhO+kfSGsIf0hrDT0RvCepwJ7K/+6q8+87/w/u2Pd/YOZJQNcMwX/hRC
      69aNG5Gw55ObSwRFuVj6N2jnrx1VVe12+yP+vVW+fXeBbys7G6sKcPg5x/r9+VSlVcscLW/u
      ikJtayfeNzyEI4++LITWxv27e4kCX07vHCTD/YOlo83FjUMbai4urZA2ZGFhyeYMuWjbSYZB
      U5u/c9uGIwuLy3ZXwElo169d41XkaHulIsHcwVpZhEG/54T7AwBAen+5KBNHaws1BQ363Htr
      93aPS4haW1qP4VZrefs4EArZ8BM/JapYn1/eoa3W7eXtQN8AiSOxzcUKL++u3y8K+hcDibl8
      IRgMbq8t3f8wEZ64WMyVTFWkCK0uO/71v/mv8Xbh1sKSqKH3lxffT8Vtbo/D5shVWhHOVi7n
      Bi689gffebbDk3wTsdHe567M3L55V7V7dzbXp/pfK0sQrSbPPX9ZJlqz54eWb99SLWA/sf+R
      mUvPLty5PXrlJXXxjmqBTC5vt9QPbuefnxldWrzvivStr2wN/OCFk9orklSvVhiHDSHw7Z2D
      8NX+UrlmEM5WpeoATiDUOToEIAAn9rvZ4qu86Kzzbb9bBhAOjY4dfHSnWdFpNlSpVk0dfC4K
      8GUDVLFUqBpCFiecEACxkd+PJcaen3bRZS+rf+m5USwyfvHKkBOSVL1UIJw+1JRbCjo+NoAh
      yIVLM+99cG92sl8Rm8DuGx6baaV3GFtbdkRCXi6fL4DfugmVJtY+ubNx4epzPhplnJys6pYq
      GYgtm80ODvXvr90D7oij00QArt79hI2MxFbnUU8/pkl9A4OqAqNBrliuRkcnSUNy+/0d2lOs
      m6EITyhqszSXi21Wyq6+Ib6Ypj0hTeTHJs9XMsdaJwfAfD4PQPCJqclcKiHLcrFUYSlgIA7Y
      LiJcvxuVCjWpQ3uXx2vDEDvpIEwhXRL4Jq+qUqlcaVmY3+38wiQaNhtN1uW2dKlQqjkI86f/
      +K47PPK7376iQzLodQFoFAo1v9/dllRNEmysD6htjMAsjNJaNZRye1z0N/QLdNIkWpOEbLHK
      uDyW0mY9XLFQ97tJHaMduEVQdL2Qa6tWdGjQdoIPQWgVMikVECRiqBZqqnqkP1hvSiGfq1Su
      BYK+Yr4UikYJtFO3tfimnaJK5WrA78gVTQqXac6vCDWC8VhSw7I5fe4vzjc+i66KqomrrRqw
      u/hq0e91tXXMS2OlphLkqFKtHYmEsE4GWM1mm6HwfIUnEZ3iQnZEM1HSNDSGdvRWYQ/prcJO
      R28V1uNMPJxEQwgNw/h6Tfl6MU1T1/Xuf9fj83zqQE/5yTrLsp7yHjgdvSGsx5l4GEg84QsE
      K7njShvqiuigaQQAsV7I1VXO6TB1NVMou51sJpWgnVyHKXzi6Mjp8TQLaQ1n7MST66+aptls
      J0bzDJkvNuXc0U5VBj6OhdDKZHPtWkGENqXVomnHSQ0fAmE2m9VlPpapBX2cpbXXN3ftJBZP
      le3AgHYHjnRahemysLKyitrshzs7lNtPEWh8f0tD7dn4gd3t5httmn5ECPSzWLqSK9da1WxR
      MDwuRqhk9pIVmymUBMNS2qSD7rgKBADCXDaLY8b6Ttwf8END2ljbYlzs/v5xF0Xi4f5eiVeG
      p674/X4A4dLd20cC+uNvX15e36+r1vHu1nE2Pxzdc3BBSaiFosPJ/e3gyHQje+TsG8elclMn
      k5u3w4mLDoO3B4VmtTjzzIt9nm7d/cQBdxav59BwK194+fVxAGA+vntzMz3MqCKSjgyd8we6
      tK9mY9du7fg9tjCNpcKDcnyNF7FkbHc3p/BR74teX+fmleReSURGEGt0LLK8svvanD9RV/T4
      PdSoxtK1Z15+qav9x1tL62WUMWoGxowMhA62d1J1rRlkdFl1B0afDXR5AKlZePe9m89dGkym
      aqHhMZhdNx3ua2+80bJ5O38SkOdf/f7IwEB65/aNlX3LEA9TJbRVWVze8A0MAalU11mOJsqV
      Mqk14/l6tVrJ5zJHx6lSIbN3GM/li4d7u6jNyeFKsszvrCzUWmKdFzve8UnEEPKJklyri99+
      /YWVxSUIwX4sJgv1iy99z2nD09s3ttN85yvsH8R0RQiFArlyA0GAKCkuh6XTw6/OBEuF4vU7
      y51DKa6+icvDzOZhNhEvPv/8LAAQxTCMpF/77g8ZUL/+4bWm1Gn6byp8LFNplguAYkmgGiZs
      GWDAi4/NvhRwc5Xk8v3ddGf7D3b3EUQ9yDWmBrkmr/iiI2KpyA6e++Hzo52HMIAi0AQ2j9Ph
      CUYZVGWj556/OIrTXqnZ6B+bdmMy5Y0MRPuGJ88hmjw8cZ4msaHRCQ/riA6NOgjo6xuI+J0m
      yc1OjY5PTRm6NTU5QuLYl2/0tdNhCENJ59T4oJPzNPOZ0NCYZegzc5e9nNPjpEmWs6FopH+Q
      OimSCAAAYGBkwufhXIwN0KEgjQT7IsWSMDU1ZphgIOi2sV4fx3YYQ0xVjCVLfQG2XOcJG25h
      TlSqhsemHEDlomMohP19nSKBKG4fHxvlfD6PzSK9/SRiet2UAJmJwRBEMJfD7g1FWceJwzcA
      IDwwHPB6J8eihbo2FHKZAGkJ0uzFOVPXHwYSLcvSNK3DJX7rabfbDNMpntvjkTy5s9oe3wge
      TqIRBEHRp9qZUBR9ynvgdHzqQB0WsU8DGIY95T1wOnrvXI8z8SUHgla7LUEIAIAPdOa6pnQW
      HKmKbJgWtAxZ/eU0HIoC32jw5qO2+iG0REmG0GwJgqp/A3YPDE0xTNgW+AcHCCE0FVVXpLYo
      q7oqt8RuanxoKYoKoaUoKgDA1DVeaJuG1mw0ZUlqNBqSona+gKYqlmW2BMG0IICwJfCaYYot
      QdUNVRZFWe0qqICWJfCNBt+CEAIAFUUxNEVoiYauNhq8YXX6fR9gGXqTb0EIoWUKgmBa0DI0
      VTe/IGkFUvng3/2vf3vluWcSu+s/e/fGkJ/+5N138wpSLVdloVRpW1IllapKVrt0mG0wqLKy
      HY+v3t7NNRisdXMlawo5DWOdNPjJf/57qXqcU6h84ohxMrubmw1Zb+bivGHjaOzv/vanUT/y
      D2/fpTlfNr5vmEZLlgvFplDJxI7iBOOl7UTXR/rVcpKk1TKU93/y15Z/MrVzP1ZSR/t98fWb
      87uN1N5KJpM/PDrMxpO+0QnqxNAETB8tf7yQ8Nr4d2/vXTg3mk/F7t1dbIuNw0yDc5L7K3cq
      wNfvY09qL/OVn/7DP9EkvrS2qiBcgDZW7i/G8nyrnNxLVfPxHUGyQqFAl1CyZWQSh7fu785M
      j8mN4v/z84/kajoZP0rlyhVJCwcCBNZlLDpc/OTG0ppn8JyY2b67sq7jXGHt/f2q/kVN9L2P
      3hFNs6XopaZmyXwuXxzws0fxhDMcnb9xqyUptcze6l5GbxXvrRxgmH64stFC4ODIwOriisGX
      tzINVTUnR8NrSyuUy0cCNRHbiMXyNn/fwb13V/crmqqNT00Y1dh7dw4vzw2tr6xmq6KsCOs3
      Pri/f1yvNI8Pt2Wbb2Ig2Pl5fuWc5EAIisNWEQnNRZ1GtsSPD/dzTiyWUcJupFgqeUPRVjnh
      GrnMnbiXgLi8VHy//MwzU4l0ZWpiyMl5GrlDxNUPhIxGhg3DfOHSNHLyVgZhp+uFFEIQ3kio
      UVZGRgfsmJavqbNj4USm2KiUREUbm5g4WdP84Ckwo1ngRq/4WNv199+qtJSxoX6+miHC5/XC
      HuLq9zm7bIZksynDNN2hIamadocC6e2d43yhIYif28qAEEp2/5//V9+/dW+b1EXM4RoK2gtl
      PhQKB/z+saEI7vZTKjQY1EXjw8BpaLrL57Gx9mImN35uRlGgo5zxBwIAoP3j515//dXD5VtF
      1uN2csn9bdPmmxwgnf4ABsD0xUv3c5vjYa8G6EouPzB8Tq82x0OU3TdRiFEc0+VhfsNQLq+h
      17f3U5wvms4U+v2kl2NRg/cPTvkchhyeGnB2vgDh9boAins97kI6IyoN3qQiqNa0bJzLTlhc
      B+95gNvj7YsOLK+sTV++mowfHR9nnW7/zv6xNxAOuzDecHT7fAAAQF3CR8foTDrz2u/9Mbu6
      RlM46hruZ5QEwXJOsmtzt8uVb8qGUHP5wmube7Mvf8etZWMC+ZtQJKrt+tLKZmBwanIo9Ou+
      16l5LEUiNHhBcblOH28UeJ51uU6t+oWWLIioi+3+e58Ez/POMxggiS2CpInPfO56ktaH9CSt
      p+NTQdnXa8eTQK8TTsGnDvSU74Xpuq6qXZbTPb5ML5DY40z0HKjHmeiiSMzt3VuM8wTh+PaL
      cwhOYlBXDUjZbbKssU6mnd15ZzlzfmLQhiLpfBlF4e98+7Xrb/2DRblo3/DssB8lwPL9/eee
      ndVMhGUc39Azh4bUWFxe4RUMs2R3aPS5uYnFmx/inmGTT6DuIRJFZs9PdL7CxsKNLG8Oh925
      mvjiK6+0cgfrO4lovz+eVyYj7OC5WQrr1Dfl5N7yfmZyZi67Nj/93R8H7KCW3tvMK0gzFRg5
      j9rcU0OdzrZCXbx2/RbljY754F7J9tpzU6Yuvf3h7bGwk7dopw2Znp3teH+wt3wn1VAGQ/5Y
      tvzyq68hfGp+/Sga9B4V2l0cSJNbsmpqUvXGh29lZdqHt3XVwEiYzvK/92d/EdKktqzZEXNz
      PwUhRDEAAGgJvA2nRKHy0Vs3eNytCWoutlJqgz//H/4nz5MV33lccAcX5NyD3uDa2tZxPPbs
      3ASCYc16OeB0lwsJQLpaqsWSnb7loihqKtiPx1nGY1owNDjOxY90aGPJdipbILjwSNTf4RdU
      FRlA/SiZYQDQIbC09l4spdt9Htadih97QlG930ec7ALQNGTdKhwfzQ2eb7ckAMDR3q6o6TTN
      VDL5POIICHLARXWyX5YRuf7Ruvj7c75sWQxCyUKxVLbAudzdh7CJuef/8PvP5attxNQAtAzT
      wgj7+LmZgNsBABiavDDc5/3s39so12DYK5QzJQVDEZQiENzuPH/hInP64MXXT7WlBX2c380E
      AqF6o2mnHGJLGJqYpp2c2Tg6zneRtOoWxFHL5eSUdqNQrGVTsbYObM5QkCVJB3Ecj3duznI+
      isD7+vodFAFMpVIXKTtebbTPTQ67aDx2lGopnSStKE6GvK5AIMzQDgBAvVa32UlFqHP9EzTr
      xqTscbrU2QB/IARRx5Vh73qiztg0YHexBOwbvzwcYLsoEi3LBABFEGAYBgDw7vX3W6b9te+8
      ZscQHCcAtCwAUASx/nk3DsUwyzRRFDVNE0KIICiAFoIgFkCIJ1LJ+ks6KxLNBw9lGAiGIQBA
      y4IAwTAUQmiZJorjaMdosmWaJoQYipgmxDD0wQVxHIcQAggtgOAdY8kQWoZh4jgOLQtBUQgh
      giAWhCgAEEFMw8RxrGM4GxqGgaAYhiCmBREEICj64GeCEELLQlAM7biXZlmmaUEcQw3D+oL9
      PUnrQ3qS1tPRW4X1OBM9ReJDcBx/ynvgdHzqQF33hH+76anCT0evy3qciS8pEuu567cWKS7o
      POGkmSHWdpLVoMt+88b1WDwd6BsgO2uZviGcJCiDEKb3VzS7b2/ljoI5OZaChry2fSRW0ofZ
      uljNLK9tBfrHyG5Va9KHmzuJYigUahWT82u7Ttq2srxG2m2r95cpXx9NdlmiKkJ1fnHZ7vQx
      lK1dzSSqmhPXdo5zpcRepiaHAr4u4we0jnbX40UhEvCmDjZ3EuVI2L++vkFCeXFt3xcKd0iy
      +YBsfHfp/orNE0GV6uLSOuMLFQ42AeP+4nM3i8kirw3kY5+8tzkcja4fV/t8lI+1S6qeK9en
      RwcKxaLqGJwd4lLF5hCjXb95u1nInJsayparGHC0mwV3ZFTIHjiHLv3w1StdOvWbALS04+11
      L+Jq4s7Kxs5w+KW9zc14gecsvmGwl37/1bKw9Tj6nIOjpJ0AqeqEkUnmc2VgyRznPIzXnJiU
      KPIBtlMoGQBQycYtwr6ytvmD165sLi+K3lkpk02r1O88O7s0v2TMTNo6OhDU2pv7x4GBcQBA
      OpkstNGBoH1+bd8+E8rnKoJyken2BvSNTGULdb+LAppFGM1cpZrb2OonvpQug3SFJwLIe++8
      r+MOaMiOQP+Yz758VBOKKafbmUnkBsaGH4QMdEUKnn+Z1aua1IrFE30D0UrqsCKjOAJQFCZT
      mW5d+s0AxchI2I/ihCFLKEEYmlqu1SqlggQpD6EWc0lXeORxJo/Dg/0tUbPhSLEpz454m4Im
      SYplKuHxiWoq17U5F+rH1BZJOeRGqSYauXS8yreKhWJ8f3vswhWiqwUIYnO4q/mkaVqSiYVZ
      az+eR9TGXo6fHPDUmt2z9JtKDdp9BGLJYjs8ONiotCJhL04QXxSU6bKwvRcfGhvNJRP9A/1N
      BURceInXObt5lOOnh/37sRQX6u/3OzOFan9fqFZI5sptRC29d2ft/KXfGfcj7ui4XElBOjAU
      6ZJ04omig6CsVSsAJlRN7TqD0XKhNjU5XKlUEF1sGvYoZ7PsHrrz6//g+pVcsQUwVQj1h46S
      pXPjA0dHyeHR4djuwejsBbpb4htTl/cP4kPDwWwRjkXpugx9LFmu14rJNHBwM+fGO29mAQAq
      uYRg0Xq75vfQlTY6ORotl8suCj9MV6anJjrshDzAUltNzabWczjrKmbzY9PntWYZd/t/NYrE
      B6FSrFtA9knm8SStEAJwluXqgyDyWZqDJ8yAX03FQgRBvzwa/hZy5lDHGS9w9lDLr9yAXo7E
      h1iW9ZSnGT0dvSytDzFN8ynvgdPxFIw7PX6ddMlQJgv12NGxgdpYxyOCbLJQEw3cbsMAhG1R
      PGEvCbbbYqvRsDHM57wVwkwylitUHU63DUchhOKJV/hN0DnJZi4VhzbGTqDlXLptoEqzlKu0
      LFXQIKEpst3eJRAkNivFuuRkaYWvHsazNEPEYwnchpWqPAlMSJBYx6kJNLREMu1gXZbc3I8d
      KyZslgsGaqsX8zaGEVuK3d6l36qFtGjitN3WrOQrgooa7XytjRtiQ7KgruCkvfPJaE0SErkq
      53bylVw8mQE4UcxkHQydzhS6TKKLRysVMLj63nvTk4PQ4ber1TKvDw4GcvnGxatXK/v3t5oO
      N4lwbubuwsrLL1xtaYA0GigTVJtFrn9CyB0Bilpe3J47Nxls19K5+nCfN5mp+KIjM6ORxaWV
      i+eGbsw3OExmOffNuzuvPj8hQfqZi+e7Lkp/o0i5jVjOlqi//tL5pfurwOHDxeLI5W/tby2q
      uNsXHLro6nI0dWV5zQTQ5f3e0f0lPTyR3d3IG07CPFg6EoYj3LPPPtO5efZgM9uQmhpxcSxA
      AbFSs/mc+L3bt21W0zrsm778TJfVo9Zc2T5GkOT3Xn9l9f79lkEShMGR2LZhozCLdUeevdzl
      AhtL92VTp3xhP8sph4cpvqKR7P5bbzSQx1AkZpOJyenJbCa7vLK2e5yz2uVPrn9cqlSqvAQA
      aJZSGOWMp4reQGBp4XYpn9uNHXE0linmNu7ejAu2vpDX6w22SpmbS1ujPvST2/cA6Tw4OAQA
      qGLz7tKWlwbZQvYg0wgFHHdvLJZzaeVJm4roKuH0mppk6KqNdSGWNnf12cT28tjcS3ZgFI5X
      YvlW5wuYAKNsiG7CwQuX0MKO6BoOoo0GErw6zhWL5fn7W51DKZpuOt2sqqgoRtRa5oXpEVNs
      zTzz3JXnXyWM2vLCPaFzl5kmSjHQ1AAAJorRJAgHQ7VGc+L8JRdF1Qr7m0eFzvZrJuBYTFYt
      GwE0zH1uekJvNQnf4CsXIl2GMEvXgiOzk/1cuVLjfEG1lik11ctXnwUQHR8fwaGOkmwkEnFQ
      dhozQtEBknZFAh6/z9cUlODQqAsKkmVnCIty+SZHw4miNHd+zMX5HZQ9HPCaAHvumZliuUEQ
      VCjSR0JrYChIOgND0WCXXBO/BjoNYSRTT+xGxqYgRCyZZ3x9plhF6MBInw+1O1FD8fUNMvZO
      33LclASL9TgwRWxURKzf7yhUxYmpSUM3I34GEEzQx3V4Ypq2Hx/nx0ajuokCBLCkubGXICg6
      wKK0t19VtIH+SKf0GjgpVzJsaAiFJgE1aPdwNA4p/8zkgGFYNA4Zb5hjO2miGRIeV+GAz4ED
      w6I4JwlKpeb03GXU+kpJNiHMp4+aGjE5Nth5zP4m0lMkno6epPUhPQc6HT1B2UN6PXA6PnUg
      kvwmn7s5M4qiPOU9cDp6gcQeZ6LnQD3OxBclrV/gePmDN+/sra9tOeyoCWHyOE3aiXQioUBC
      5Uu1ttGu5452Vu5sZQM+j9BsMAz9d3/zN7SfK5dqhf35nSpuCkVAEJlkQlHVXLnOkshRIluM
      r24kCtW6iqh1XkWkZilfqDjsWCyecXk4XWzEjpMQp4RyuqXBaj6jIyRaP/iPP/1kb2vd6+PK
      dRE32sl0DrfZ04mEnXXb+Nj/+c6K02a1JeW9t98MhoKpbBk15Vy5JvGVlobqrWqp3rrz/pvF
      Bk8yXDZxRDqobCrVUi03S4OTJa2fx4pt3Fzcb44Phe589Nb97QRitt55892+qbmugp4HiI3C
      3/7snQuzM+XjrXc+vqnqxs7mWqqsDfd3K/gDAAAAQuOTf/ybtms6YFfffvPNRLFViG8mCs1o
      tO8xAx/F1OY7N7ZnpkY27ly7Nr+BKrWF7VQ4ErYTj3XsU5Oa//j3PwmNX8LamX968+162+om
      54AQAuC0I9fn18cYyz81/pP/7yd0cNgo35F0kXD1EUrpmcszBAI+uf4hRrB/9KPvWRDe+vjj
      IEcpGmratnYLFX+AkxR8LEisbsWjA/6RsRmRFwjWHttcOnKGHOpiVVAGQ/aDmHt7++CP//wv
      6fL6RoHUFz4uNWAwwDUk6y//4l9BCVoQujj37vrK9mHWH/KMuuH95Y2WIky30W8PQ7WeXtgy
      zVYTBXD+gzfrBkB1MPHiK9WDtRQPApQ5O3dR0QysUbzxfmZ87twv/v4foctrSfJ/99/+yWP1
      PQAAIKGB6HG1BQAQgb2PVt3h4ck5zO943EO3dtbjczoAALUmf352vCFQU0Phtu3xM4qi0b6w
      CoGhiI7wkFws5dsluxs1LIg/ngf5+iL2tRoAoCRblyJEgwiQ2k6xJrqij7WJhJNM0OsGEEiN
      0uCV56p75S7vDU5SF6++/KPffcXvDwyNROOxTH80zFeKbLC/LxQaGuj3eH2+QMhCcFs7G5mc
      QxCEYVm3NxgO+D0+P0Bxj8s50N/n83ub9bqTYbx+XzqZIGi31JZcvhBpNBDaFwgEIsEA4+QC
      PpdhmACAajHLRSb6w96+gcGg30+RBIrbzl145se//zrf4F00Q6BmplTn/AGP2xMJegFKOFk2
      GIp4OZeHsTlcXtbbFw0F3AzRbEkMZedoWzJXcTkdmolGB/rSseO+4cFgMOztWDD7SyAEYafs
      ZKVc8VJIxWAIucSFhx6/PYbjtMPRatY5jze2n6SJ5u21JI4+rpAGQVA7zdhQrSED2MjTwb6B
      /iiKfoWoHI7bHA57tVzp99DbNTRI6xDgtsf7/AAAUAynadpQBIMKFDdWvSHqKysS25VUvIHN
      TUQ/+4+GKs7PLz/7yqv2X8X590b2sGBy5wY76Mzhzsq9QlO58sK3OMevJqN0L0fi6egl2XxI
      z4FOR28V1uzJuXAAACAASURBVONMPJxE97YyDMNQFOXrtuKbR+8L9JDeUH46eg7U40x0cSCl
      Wfj44+vXby3euX3rKPWwtu/K/I2G1EX0pQm5f/r5O+98+Iludniztc3NvX/+b3jv5idt3QQA
      qK3y/vGjJU6GzO/sH6Uy+c53//VRzewt7yQAABv3b1+/cUdoNa7fXHz85qYmfnz9pgWBZWrz
      16+3NGvlxkcVpXu1pQdACPeWrqVqGrC0xdvXV3bia/du3Zpf6dTHn0es524vbgIANKl57ca9
      Yurwo/ffiRe7pOj71ABTv3vj45YKTIW/9t7bR+luktaNhXujL/5wyGl782d/lyyW09vLMuYU
      K0cL25mr464PF5N/+W//RzV248PthtNJCqkjxDdgVHLf/ZP/JkK0m23dppT/0//+H6YvXizV
      RLsTS6ymff1eO5QSFanPRXhGJ/c2DrcPjpy4/u0f/biUy2ff+AnUTMzuqEng+htpR99AO1t5
      4Vuz9+4ujUyfa7b1Pi+1f1xmPK61ezc0E8dxw9CNyOx3vjUT7fwgvyIsHeh8RQcAXLjywv27
      dyVZE1rC47dXFEVstyEEhqZJAq+amtgU5K+gwDSUFm8pliEKEunWUscYFCVEtyB4TBGwgeh8
      uQkAUBW11RJCg8+l85V+fxdJ7i/RVEURW7oFWqVj58RUbGW9yxcoHA0e7+2trm3qFoAAqobl
      93AWROwEwBkPZzeKtTaAkHa6dKVlY0PTo/20OzgQ9gAAXN7gH/34Dzku0OdnGDenqwpOOmwY
      FFUwe2GWspEzVy/7XP5+O8/bI/SDABJBnZ8aJh2sk0TtnsjEcB/jDWFyk3E5q9Wa2xt0e7yc
      iwaWZQKMsaEaQpyfHlOl39jkF+XcLgBAu91auvUx6g55OTf+VTQgtNNNYogqi6jN4aAIFLO7
      nZ2kgF8AQQg3xwJoSDrQGhVAUhaGE0Dt+Jn/HC6OQxAgttu0m8NRYIlFk4rYHluCTjpYB0mY
      umIRdDV+RDjIboIyaNVrVZRkcGBYALHjCC/plA3DUMwCoN2WfH5fcW9+X/I+PzNiKAJKMlDX
      WJcTmpqkWozD3uJ5mqUbtTrlRN7+p6XXf/iKgwBtFVI4JGmn0Cxvzi9Errw2EXa1hRZEERuO
      GRaiKAoGDJxiTU2nSJRvSQ6akVotlnNLQguz2wlgyDpC2VAMw0yAObodS+jKYwrKLEtXFAtB
      LLkt6BD1+nyKJDEM/dj3gWJbIggMJWy6LNkcjCG3UTtNPLaGV1dECyMt0zLVNmJjgCHpgHCx
      9GO7sdluqziGkHa7KEq0nVAt1G77CgeUZbGN22wWREWhwXDeniLxIT1F4unorcJ6nIlPFYkE
      8ZsuU/pEgWHYU94Dp+NTB8KwJzoR+K8bFEWf8h44Hb0hrMeZ+ML0G4qN8sZOLDoypkgyaSMG
      B6IAmHs7sYnzU73X8wGGJmYK/EDElcrxLkLeOa4/9/LVryrHNzVpY317YGrWrOcdfSNs9yR1
      n8PS5dXVVRHSw16ch+zM+OBXPVGSjm0fZyuDw8OZdGHu6hUX9dWWsdAydtdXnNGpzzsQBB99
      eO213/tRM59a206EAlxid92g2OT2TiKXoxBNhI4fvP4K9ps/N/oEAfPpneUdza47FreFCFqG
      0ZlTTJ1yid1shXdFapsfX7v8p8Nf1YFQgpo9N752UNnd3ZMQdmp88KvaMDA2nSs0asn9Fuol
      8a+cZ0ytH28l6rNO/hFDGIIgD5LW5fOxQgM7Pz7QrmXzTd2Umrt7MdV6yjcdkf7RERKAcP+g
      w4bNvPQdrxA7qn3l0/yGpPhD3uNkeWgwfDo7kgex4akxi2RZTFH1r/yjqO0axgbG5q7OeLSN
      oy7Ver6MqemeSHT33sdfEJR9dgiTAABAbqgkh+sqaQOmBesSeObi9G/fuWbwVQRlEMqJRGNk
      0HOcqbts6mG+/eyVLgXbvoypievr24NTF2CzSIaHnF/xCwQAyOfyoUg4E9sWgPMUQ5gm1ps6
      5bCaW7H83KWLDttXm6FAy9hZW3b1n+spEh/SUySejt4qrMeZ+DRH4i+Lxj2dWJb1lKcZPR2f
      OpCudyqb+FuPaZpPeQ+cjt4Q1uNMdD2ZatVrVYxkcKi2JM3t8ekyr5qYl3P9Ni7FOgCbtSpG
      OWkSVTVIUbZGtaRaKEORbUkLBH1dX0RVagmy6fO4JEl2OByqJDRbkoNllVaLdntpe5c4jmUa
      9Vqd5byIoSI2CgNGrVqDOGlHLR0QHs7Z7deAbb5hoHYXQ0qyTjvsQrMmKTrDsu2W6PX7OiU4
      AwAAYGhyrSn5/R5VlkiKtjSp2hDsNN0lxV16e2GnpEjN+t7qXQU1l+6tJfNNRJcYj5987OOM
      3wg6Z2kFUvWND29Cgq7Hl/cqyEjUy9eKS8tb5WxSt7Nhv6fr27R8+4NEqe0gzHc+unthZlqT
      23sb94V2a/Og0D8QpboVy6llDq4tbbvczMJbb9gGz3MkKOePNw/zqdg27Q15XGwXA3T5+sfv
      lmUH3jq6vVGaHo+2+friwmK7Ua1pIBzwda76CwDYuj9/mEw7GPrDt94bOn8BM+TE/mquJnZp
      1qw1/dF+H8dapllvKtEgS7oCfaFvUhWVXwkWSvrdVKlcHx0bQSGAEBKINX7xqj/ozWysCI8R
      R/T6vO1G1eYO+5wUANBB0wgTGg5yAVbfOOhercdGszRuVBvq6Gg/AADBCEPTr1y97PN5tlZX
      jW7rH4hgPo+zVCr1D488SKrMUERobMbnc4uZWK4hdTWA83k1oa7h7r6ACwBI2GkFYedGQ12+
      QMGBoVryAGF8QwP952YvDQ+PUHq1KqN9Id9v2X5G5y8QguGtWiUyMuVxOxmGUeQ2QTr8Xo+D
      AKg7NBTgut/AUDXUNT4UYmkasUwLIE6Pz81xjXp79sJU13pvGIbWqs3Jc+ecLpalyVZLsdOs
      n3NamhQYmvS5HJ2bIwiqtnlXaDjoczM0Y6gSThBuX9DtIBSUHh+MdN2ewhGrJqHnJwcZmiEJ
      RNagy+109xSJv6SnSDwdvVVYjzPRE5Q9pCcoOx09SetDepLW09EbwnqciS/mSDQ1OXGchLi9
      w0mrUjYFCapezGKU80GtTUOXGw1e1qx/bmUV0sl8qepgua7FOJ8QHpUjET6ozSM3SoIKUV2s
      8ApLk82mQFF2VRLS2SJFEYl4gqBdj4yKKe1GKldzu51Cs4ETWDaTpRgmn07iFIuayvHxsaAY
      Ml/hFcvJPGIZBS0jkzhG7CzQJdVEGqWcBgitXauLOkNT7Xo5la/SdjRfbrIs86i4LmxUCrWW
      xtJks9lGDClb4V0sLTSbNoqydDmRSFM0nUkcWzjleFQk01DF41SecTploYnYKLXVNBE0n04B
      G2W3YY1yQdTRzzsQhNfe/bkzPFgvFY/2dxRN395Yt2z0wfpSQ0Vyh5vFlhnycT/963+f0+n3
      f/LXmGcwk0igULm/dOcwXrYQLBvbahpkwGN74+cfjvrArb1yMxtvy1JdUHPZVDEZK4tG+nA7
      nsi16mVJFUt18XB70yKdbuYrHND8dfAIB1L59699ogGWwMztjbVMJl8p5FDM/PDW+sWZiXq5
      UCumdnb2sgIyOhwlH7UOX53/JFsVaMr2zjsf0jYjmctnjmJZXiFtrMdFifVCoiDs72xGBkbd
      7CMcSKocv3Nnx+el16+9LzMhpZHbOMwWU4c6JMKhwMK1D1B3MLm/USkW2VA//eXDgZZx9/qb
      FdVFyNlrS8d+F7E8f58Lud7+xbXpy7NKvSTJ9fvza0cVaXRkwEE+woH2N5YPU1mWZT76+ZuR
      89PXf/L/4pFBoLU2tlOjA4Fbdxfy2ewXH7vZVp0kWF+6t3pclNLrruGpOx9fO9jdWlzZjB/s
      LCyvWwAwnmByfZ71RT/56FqtmL52Yz7cFzVUIRnbP05n7i1vAQB0Wbg+v8Vo+a3jQq5YW7r+
      ZjZ9/MHd7dRxbDeeMxvxe0vrqVT81icfbcXzyXSXajFfC5Bg5qaG8qUKQ6LR0RkEx502yxkc
      cjMEAIDzeDRAz125Ou3Tl7cfXeN8amYWkeoy4Q17WUXVfAFPKZ3FCXCcyGO4jW+Kly6fv3rl
      8triovEoUZad65uMuvKFxvjEMILZBgYHTYUX2mopk9BMOH3pcnX3fk4EnN0m6Y+I4UEEvzB7
      rloq+qJDDIkHwn39XlTBQyEvDQBgOH+rqV168fmrY+77a/uPtH94YpoBcl3BB6N+BKXGxwZI
      2m0pyrmZKQghTjowU/682yLglZeu7h4c941O9tvI8enInaWNSy+8UM8cYGwYkx0B0osAMDR5
      KWLpNsKuWZggKi+e9yQy+YHhYcSC1Roe4PwAYNMXr54fca/EqgNWLToyyWFSZPYlGr9pD0Z9
      nMdHGVwUzxVLl64+X8mkQk9maNvU8vmS2zm4vbPPBIdGIr58G/VQ2EA0Uq9Vy+kjXtRcjXqh
      qU9cCj3yArVyUYJ2L0vI/f0Dg33Lq1uv/ugPDrc2+kZHyk2R5HxOAh4WC9GRsUeO84bSKpTq
      U5fGGYxCSHCwfxgdmnAYtabh4OuVVrOGewaeH3Ad54Tzj6y1A61CvuBgIwRB9keDxfSRgPtm
      WKw10K+1GrlsqtCU7c5aqSKMjl14pP18o9KQwSRHO6L9dhS4Q32WWNzPVgdJroa7/Axu+M/3
      FIkP6SkST0dvFdbjTHwqKHvKP0U9Tebp+NSBnvK9MMMwnvIeOB29IazHmeg5UI8z0UUPBKDx
      f/1v/4EaOG/T+cXr7whkWEht3N7K2FHDNI1STSARPVuqUzYklSkwtD2ZSLVriY/uHvo8zIfX
      boS9bK2lsQwlC7VcRRCy+/Pre/kyv7fwcTx7fH9p7Y2P7jv19E9vHz93Yfw3/ORf4CQ9kNrI
      /uTn72N2x/H9m3XMtXLzYxWjA152deHW8vp+ORtPVMVoX6jri7hy693F7VQ5d7Szs+/pH3Xg
      8PYHv2jKxsLtmxoVDnEnxlGTu6sf3VpgOM/tt9909YUWrn9cNZ1B2lyYv7ubqNjE5MKRNNZ/
      chxEafzs5280VFwt7mxmdLG4d+32ytjU5ObNjw4rbS+DvfmLj8dmpjoIIlduv7e4leRc1Dvv
      3/DSyM0bd6jAgFnZ//D2Mt8UuygpW4UDjeLW11Z3WzXOoa/euDZxLtIoJm83GzYxL+rAH/TG
      UtVvXRq+sbD18reej+1t2T0B03J88P41krb94qd/B9nQf/Enf/zBL/6JVwDh9PzBH/6IsxPv
      HK9jCO6w44ghLe+ptHewW/9/beA0F+QclgUCAZ9gWP6gN53OzIwPnL8wp20dO2mYOE6L+pyr
      2z5suC+S269hmA3Xy7maaurHJUERYWLy8qV0Kjc37DmpoTcUpo7SFkJ43AxG+6bHo/EmTzjC
      M9Pj8ZIaClgbzY5zfxvd53fpFgxE/OmUOdgfstzjFI6yfl/xKKXNTLN0Fx+IRCI5oYLZnYwd
      DwyMhVPHoqg4cZvdQVYaSufGcG8nfuXlb6e2lzEbUW+r/kCgXKiSdsrtC7Cs0YBMv58sl5oI
      xQbcdDGfsXAHChC53aTdbhsG6WCA8A7YCczv89sQ5/lhbvHObcrB2Vnfs9/7Azl2X0dIRbUo
      6smtNWkorZas023JR1MiClQLIgCpVIvLt24yfZOmqVkQPM5uX7PZUBWRCIRNm89rkwlHaDCc
      txy+2PrG6DO/06Fhi2/qqiprJuWgjHb5MFMnWTybTS7cXR6fu2ojETuhdmhu6TLfVkwgknav
      jTBz1dbQ+FClWoGWaQEEJ2yUvUvnN5sNVRYtBKfsZCkdq0sWKfMybcMM3e2x9RSJD+mgSFQU
      hSTtZz2FYhmKAb5SOsvPGvAYxfBORNcUBLPjpxY7WYaiA/sJsv+eAz2kJ2k9Hb1VWI8z0Sv7
      /RBVVZ/yHjgdnzrQ12vHk0CvE05BbwjrcSa6lP0GhvTB228V2shg5MRQ1cKdO5GBgQeeWEkf
      LCyvlwT5YGXx8OCg3qwubGfwZvx+Uhx7vMrWXxcnlf3WpfoHH17XMAef3uFN+87KfEWEkYBH
      KCdXD8qtwsFWrBAd7DtxiQOtzaXr6/F6wIUubcRJpXZz9XBoqJ8vHN+6s4xg1v3F+4Qz5KZP
      FBBXs0fXby8w3uDu0jzbNyykNhKCLeCm2rX0+lG5lt6P55uRSPDEg4GG9MnHH5XawKYWY0Ut
      d7CcLLXCkaAu1u4s7eFa4+7CIumJuhwnGnC0tXhvIxYI+hYWVlyEentpmwuGgFi8cXPexLpm
      VzTVQoW/OKz/p//jfzFcQ0gjHg5EHD5vs9lOJY4mzl+s1gSp3X7mhWf+8W//74xID/qw7/3o
      TyhM/cny0mCQ2j+oxQuy4FLx0FyXGz2pQEMXJJWh8FqqYWCNhqSndreuzIwZcqtQE0W9akp8
      ln92+GQpkSoLKNmnKWK5Ulda+ojDSjdNolGrN+qZlIWxzPrK1uAPXjixuaoZFoJCo1GuyHLr
      YGcPDvstQ9ncPGxjNiGXCo8+Wg72EMtoyzJnt6tSrVRDjWrNsKr8+fOYJFfrlde+9d10oRn2
      dDrYqiptBHdoklyvVetuXLc0TTPdrlC/e7cmE12GMNME41Mj89dvWqR7fCBsY3zfef3FxXtb
      /X4m0D/moRCS9ZAYCk2jbeDnJ4eCbuY4Hts5TKIEef7F7z8z6ov6yDbqPmsplK8PiKB+n+cw
      lvD5XDjpCPvcDOMSJcnj9aEIOjAQVRGaO7n/IQAuzl3KJm2MG0cRJ4GmGoYNUZqtVl+fH+Bu
      uylz/k7fZtzucOJKqiq7WLsq8pJulgo5QRBUTckV6oyLqxdS+smxaAsCr89zdHTs83kQAAYG
      +lGctgzF7fHiKKLXU6hnsHOpFwfrMvhiG6FJHGV8wTCDJjOFZqVgsZ5a8rCbIhFapXyOYD1Q
      FlCHC+oKx7nrtaabY4uFojcYbpZLiM0e8HtajaoCSa+TLORLTq/f1FSOcysirxgAAAQChHOx
      nW70dXOSIhFaRjwWCw6MkUAzUJvC13DajQKTsdt4SbMBTVCRoM994nUh5CupmuYc7nMJLZkm
      kVJD9jgpDEUrtYY/4KuUKoFIpMNPaKjSUTI7MjqmSy0b48JMWdIgQHHahoqKCjVJBXYvd3J2
      Dmhlk0c2Lupj0LYCgNbSMYrEEcZB8UKboXANkFTHDJtSs5StG2PDkZYgOOxEqcr7PC6IYPVy
      2eVx9yStD+lJWk9HbxXW40x8qkg0jK+cLfu3iV6OxNPxqQM95TlKe1laT0dvCOtxJr6gSITp
      2AEk8Fyp7nGxAMJ6vU5SjszRNm/aaul9BXeyFAEAMHU1lc20Worrn9dWif2N3cNjgvawX7Hu
      yxPCIxSJ0Dra26jJCOdAcqUWy9jTmSymt/dT1aCf09qNje1DJ+vYXN9yBUIn1q2FMJ88SJbb
      zcLRwXHWEwgVC1nW6axk4+vbuxAn4nv7Tn+4Q9lbtV1fWd9lGPvu9h7r9Wwv39Nx1kUTu+ur
      dRUIheNMTQ74uA6rsP2tlZZJ1LPxlkk47SBXaDqdNF/O7CbKLtLa3Ev4Av4OGcoaxdROvKC2
      Sjt7h4SdOjiIcV4/gaFiLS+YxBcDiZuLH1RhGHfQxcQe6nCt3r37p3/5b3fuf5JFx7TEnfDc
      dxlCj0ZCqVS6rhij0b788bZiC7z2wtzW1sHrP3zhjfdu9/twSNCkndFVica0hm7D1UZLs3wu
      mvGE+LaiCxVHcOSZ8yMnWfykoLW29w8Hz3nT+ysbJafNqH48vzfsc5AQ8BMjjcThcTyr60Lq
      OEeGx2f7T1jBQetgd4UIP//c7Pn68g6Qim99ePu//4s/C/SPVSpVAkMQpbqXaVwd9Z5kRSoe
      qwniwcYy4Q0tXP+w2ER/b8ZhSs3NWPqV10bu3du6+PL3Oz2FUts4TE0BslgXrMQSOuJeSoBo
      n39/ZztR0YHsPk7VwyOjEdeJmtqD3Q2Fip6bnqtUF8ViIhHPuCLDo377wvV3qcFLXxrC2Cir
      5/KFzMZOsiEo4WjUSaEYxanlfYcnsreyWGu3tja2/APDGNRzqeNMqbq3HwMAWKrwxs/eDQXp
      1f0UL+vZg6WGbNxbWOSb9UKB97vR2FG8UCrtbq3vHOXq9XqnZ34ygJj90tzk4eHR0OgIBsDB
      YcyQ+bZqYgBYEDRb7fGRSOIwfW52olI+8XEggszOzeVTx9lk0hMdOtw7IIBcEVRL5QWL9TL2
      0ZnpejrbwYzQ4HjQprYxN18oYLTvB9+7NH9nGRD06995cWXp/iuvfz+2dk85efJm4czl2bHj
      dMlnB4JqRYeGSRwFwGrp6DCHJqrKeD/XFDrVTZ84P2vUc7lSDlCBVlucGI00G+1G5rCuoZVK
      5QuCMngUO/S5mVRZBFLdERw26qnQxJVm9kA3AYpjhoVUao2pscH4UZL2cDYE8LUqQrkuX5pJ
      7O8PjPTtH2QtpUEHx2ijhnBDcmGfhyyDGqyLVHWQyeZ9oX6pmuUGJofDJ75zXwtfFpRBS99Y
      umO6xq6MuY9y0thQMJlKOW0wXlFHoz7U0g6Oc6Mj/UexxNTcM27HozeFIISJnYWs7D0/5LSx
      ftaOp9MphmHsBCZoqJeyVtf3Rmcv+9gTlSStWuHe6u7s3PlMMjs+NX60uxMZGscJvJw6ovwD
      Fp/T7f7p0f6TlATQVO/P33GEJwm5jHP9IyFHPCO4WALKzWRFGYu6Y6nK7NyFDtV6Csdbu1nl
      uQuDIupmrOb2YXpkZIikXTalwiOuniLxIT1F4unorcJ6nIlPBWUo+lQ7E4qiT3kPnI5PHahT
      ov+nAAzDnvIeOB29d67HmejuQGK7ZVoQAKCrsmZCaBqS0mm6bRqarOgAQkmSfrnTr8qiZhii
      KD34h89O2CG0WkJTaMuq1K7VarKi8k3BMvUm33oShAIQWnyjruqmqWuaYcpiS1Z1AICmSEJb
      agvNWq3WtVTFg79v8i3T0BpNAUJomXq9Vlc1vdloGGb354SW2Ww0NMPgGw3dtACELb4pKRoA
      UJY7LcIBgG2+KSkatAxF1eW20GrLEABVFptC2zL1RpO3HqOQsqmr9QZvGFqzyVsQmppSq9Va
      otxF0gqh+h///b8j+2chn/nkvTdkMpjcvLuwk5b5mq7Jh4miHUibBynWjqys7XBuZuX+itzK
      v/3RMuOkb9y8zTlgsiz6va6Ft/7zQkbcXLjP2s1io/32z/9xYGIGUeormwdQKt/bSvK1enxj
      saK27t6+/09//5OAz/4//+f3v/vq87+xihwnSVqVWuKnHyywTmr7xgc87tpaXUrmauOj/fM3
      PqoJGo4aN2/Oj06f71qzdvHG2weZZqOUzZeqXCTKJzYX9/NOlP/kxp0m6hsMOjs3r6b23r+9
      gkmltXihUhH7g8ze/v7q9qGXNN66tXph+uTMAlL1Z+98pCFU83h5K2eZrfzGxkbf8GQuvrex
      uFQWhUKh6vQFHN1OPG4s3to+jJcL2UwmreJuN2ntrc+nRUcXB6rHV1cS9WqrVUjmhwLk8urR
      xNxE6uiobdqTW/dVUSg3motLq7QduX3rjm5YuUw811AZLny0tUaQ2NbysqTrQyMT5dTuXiyj
      qsL+ccnUNQMjXnzmwvU3f1YShFymPHzphefmJrJ7mw1I9AX8Il/ZPKiF+9zPXrr4tTsQRtKt
      SlZHmCG/vW3aDIwwWvzE5PDS/D1JUkYnRlDKNxQ58WT7L2FIJJ4sFioVQm8xkUm3A+cryeNM
      hXS6HJRrINzlCqSDqeVSCO2ButbkW+fPT6OGiFPOtaWllqJcmJ09cS8Cp8x2qSKil6dCmRqc
      GQvIFjUQDTppW1mEWiMniW3KO+Bzdjn56mapZCxG+/rUVlXDudGBUDpXnRtmupyNT+b4P/vX
      /ya2+IkByXyrcWFuPBHLBIIhlyfo8oFEwwoFaHnEohjn+NgYjkGS5mins1WvREYnCMSIuEgZ
      95AE6vZF/uj88/OrMS+hEp6gu12qCOrE1NRqonrl+QuH2yvvHtj8vuj5F15i5ZqsqJKsUeQT
      UQ9Ia9eK9fZYmLTbXW7Sp9czjuhgudKYnBwtCMAUm+GBsce5Ti6XNSF6efZcKlNAVYFXeVnD
      BodHCvm8m+vy+QEAtBvlWkvx9hGCrk3PzOYzyZXVvfDo9L/4k3+5trbWodaPpQq5coP0B1GC
      8riMhbvzTHi0UColt1Ys0j00Nn1wlHYz3Q/EFfI52UAidlzEnaMRtilINOdhfUM9ReJDOigS
      TdNEUeysh8agZVoA61bXrQOmaZ6umodlmgDtWs+pGxCalvVlA05z1v9p41dThAVBz3iZU5tx
      1hs/4IRyPJ8Kyn4F9/iG0+uEU9BLsvkQXddVtVOinR6PpBdI7HEmeg7U40x0S7Kp8T/7/9s7
      86c2zjOOv3tpV9pd3SdCAiEwtjEkdmLsHD2mx3TaZtqZTDOZTqf/WtNjJknbHM7YjhPHXLZj
      MMYOIAECgQBJCIG0ulasVnu8b3+AtGMnCAUyGbvez6/SK+0+evZZve9+3+/z74+KDcJtNakQ
      a0qi1FBIEm8qyl69TphM9VptfGysu69v5MO/qjj1ZTzb6TSrmnLv3nQwFIaqLO7JjXJ2YvJh
      KlvMLs+srCSXV5NXbz30UaUP76y8OBB9Gubq4HCTTaWWv3L9FiTNucXpMmDXYtNrO/XuoE/Z
      K90Ym4JSYfKrld7eyJEXYnx69P78uq7W745POMKn9ErmzuRMo16NL8QqqiXgPnTX5dbqwuid
      Sdbhnhn9wur3jN/8vEE6fQ5LYuZ2RqLSizNLqe2u7tChkyyldv36p0UJh5XUUk4R0rHYSq47
      EgKq/MmnNxm0d//BrMUT5A9vXB+fHrs/n3K5rLdGv7RT6ti9B1ZvJ6jvTt4d3yweZbIJcJLA
      AKZW//7OZ8DeRUnb/d2hioYrsryZTndHepoYK1fKCIC61Lg7+jmyBv8yO07bfYSmD7/62sQn
      7y5tfyhYxwAACVZJREFUyV1h14Uf/z7iYa598A+Cse41JKmQGYlDAj4Dfjw4xdAUTlEEaTLJ
      kDzbH52YywCAFuIJVWtETw8nV76QdcAeNdHhOBYrN0OR3qoo+zgykUjJOqSd4UEblddbDTZz
      HIFhGI5TOBILGeeZodxKaiji5hi6qIJXhi9OziRaXYQ4xZpJgiBZCyNVmhfODWQnHmg62liY
      l1Qt1De0V5dbL1FwPIuVGgCjcKSldwr9EffWVvnlsx28NX32pW9KWh9HV5sWm21tKWl1+gZP
      R82cY/j1y8nlzbN9oY5QpKe7U5Wl/SdlBOM619+JAOZw+4YGB1gG1yEiafb0wMALZ/oWHn45
      cvsBMnE//uUbP73Q19Mbamok9ZQUn5boqqzqYDtfYFkaqfLyWhpqalEosqylVikvxhcABptt
      7KhryHKjJuxkV2lnZK9WMdvcuNZYi92/Ob1m41pZvDZlGaqNYk2hTSRj8+bmH1k9jqIosxYG
      QfnKB1dMfKt1SKgrioa2d3ZY1gwASCSWEIA7hSLDcoooTN2+uVpotG46LsuyLAoyoAgMeHg2
      vrLFWWB1T1JwkpCFoxSJ+7c2HAcIYRiGEMJxHEKI4/j+uhbUdYBhOEEgXcdwDCIAEMQwfP+d
      ACEdIQLHoa4DHMcOTJwO5ssIfQ/rW98XhykSEUJ1UWQ5HgMIYRiCcN+Haj8OAACIENnGQgvU
      5LoMeNaEAIYhBDBM13UcxyBEGI4Th0uREIKiWOd5HiGEYRjUdZwg0P6nIAAhBAAjiMOLCEIN
      ScRNnInEEAIAQQQwDPv6+BGCCOEEgR9ehKDWrMuIZ+n9A9AhJHBs310T388JYEhaDUnrcTFm
      YQYnwlAkHkCS5HMegePxvwR6zi0mDVX48TBCZnAijAQyOBFGAhmcCCOBDE6EkUAGJ8JIIIMT
      YSSQwYkwPBIPgBA+5zajx8NwaT1A1/XnPALHw7iFGZyIJxNIletLi4vlmrizW9jZLQIAAIDb
      ue0jd3+LQj4Wi+2W69/6aq20KzY0AABAUBS//T0AAFEUC/n803wrhVqzVBEBAEI+k8rk9yqF
      1Y3cdxiPkCAU99Us1VJR0dTVREJq0eriG8hiqd7UAQCaIlVq0u7WRjKV/Q7jkS4IZQCAWN5Z
      Xk03pdrK6obWxt74/1ItF1UdAAD2ykJDg49LWhEauXEt2NMnbGcfxZMIaoXMWlao3r99p6Hp
      pXx6NVvs7PAlYw9iS6sIJxdnH4pSY25u0R3o2PxqQrGHpycmmnUhX21up5biiQ0c7cUT616/
      f2V6ZG27srmRKhXzN8amKSiv5yv51EKptpdcWmggPBmfFSrlq9dGaJLQmuXZWBKo4mxsSUKM
      1/FDqCwOk7Q+DlyZvbOwqfR2+4RSObsyP7e6RTd2NWePnW6rlovC1sc3bg8NDihS6fpH13yR
      LiGznK5bwt62GokgpE588p7mOeflwfzdW+uiaXPxkbsz4rRxbT7IzG3MTUxvDJyOFIVSeX2+
      iDt3ludob8hmPqpvOQAAgGa9dO3q1c7+F2lcuvH+v1i/98nTbii6y+UJeBxI1zbTS8m01Omx
      1vKpxFa1tJ2enplVIMqk1uwuy6f/fH8xXUitLFYhbWUogOD6ampo8FRmKzc9eW+jKNV3MuMT
      Y4X8Tq2hAADK2+uc3bGWKThslqnph7lMJpHKOMxoK5edmhgt426f1+X1uIXt9L2vEj0OffT2
      FMPZ44m19iLzw4B39UX3I82aMGtH//m+YFEQmkq7JYB3BwJODgDAsM5Qh4ug2VA02ihutzkc
      w6hobzeGAABkT18EB9iF4UvJ2ANJbbeEdER6WJIAANg5Btq6+4OOUMBWLu+1OZzmnGG/GwCA
      E5ZoTyfUlMcrEAZcvDkWX1QJi83KO50+h0UvNUCwqzfkok2s3en2doWCm8vzpQZ5+Sevk0o9
      GOl12J1+j13X1K4zL3V7LDvFisfrLec2ijX19R8N6xgTjYQxXWF4uy8QpM1mMwE6Aj7O6Q24
      bF6Xo7qndUb6KFnQTVYGKFaX91SXb72gvDgQtbu8ZoYJeBxtnt5JaK8CAQSgDikA5dXlJRUQ
      FjOjUq7BvmD7wkpFUc0mEpEmpGssSycWVrv7z9q5drt6Q1U1sZwsyRaGRAQjlbMk7w91eNs+
      AKQ0AYHrG6kVSVEIHMsJ0qneHuZIe5Gv0ZSmhTU3VUBiOu+PHEeRWNzJsQ5fqx5BCGZSSZng
      e7sCz4pKxFAkHg9D0nqAkUDHwxCUHWBE4HgYfeMPkGX5OY/A8TAWEg1OhJFABifiia3N6Mp7
      75AMh7t6e1ymQHdvMZPCzFbepIs609PpjU+NpkXIMDZQXEzUbeeczRz0KrXKH//0ZlvrUM8q
      +vjHf7NdeOt8l2Vh6tYW7CIqSyLkOKyE2SMcbb708mDr8fduXcvVsd+88dvNubvrBbkr7N1M
      rhCMZbuKDYTs54Yvmw9v9wQAKKRiIw8Why79vN/VfPfDz/3RF0hpu0E6dGHZER6yecKD0VZ9
      nwGAscnPdvDeX1w6lV2+P7Wqhy21VFHxexgZMXaaufjKcMvvB/HJkbnN0q/ffKu+fH98Nnnm
      zKnlxUWfL5AW5G/ujUcYSROy8GgmhcfimK2rmRmvyhpv9Xj//PbSxu7v/vA2TeLCClJrbnvt
      0YYgUqzt+3DAeprBQ6FOEQEA8FC4M7cONIpzwqYzeHY7m65Ipnz1lN/W6v+TBOmgQxUb+mY2
      p+vAFnitc0+y+gLcZiq3K5iSG0OnIy1+wXJZPDvUXywUIyzF8HaKtpzr7p1KFLqjA9n8lqzo
      vWG3uVUHd6wjHBLSCADgD3ZSqUxFI067ceiNwK1UqdlI71Qi/sMbTwMgiPB8lM+XFROEPGeR
      G7KFt3KujgGu/OS3ss7Az371xkCQV3GG5a2V/Lqkk6Gg3xcKMwT28kDP2NjI7ek4TjEWmjKZ
      uYuXXzWhhtqG0/GzDMZYOBpXd4s1ymS2mCkbBSXS0RcNu/whUhYq4hHOVG6OLDYYXSpFIt0Q
      I1OxqdRuleHddt7W4beVyuXWw70B71piw+dmq5JO0yZcqy8kMxaW7wl7/YGgUCorWuvnh5iJ
      NptpcrcgEBTNWpigjV7fYwZORx0uL4/Vy9UjVqJDPn4hq/OghkgTRVGmfcw2n6tl22+o1EbH
      Jnlv+OL5M//3/5WMtt/Hw3BpPcBIoOPxH7JdU614D+ehAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Property' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Page Funnel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Property Funnel' width='192'>
      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
      7jXR/z9isq4Ap/QFMwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CSV Data' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAJJElEQVR4nO3byW8b5xnH8fd9Z7gPh7soyaIVW5Zkx0sWxwja
      IEULBAhSNL30lFtv/Tfy1xRFemkOBQIERZIWSJ04dhxbgqVoo7jNcLiTw2VIzvv2oNapCwFR
      9AB1Avw+NwJ85n0x88UMCZBcKcUAzks87w3ATxsCAhIEBCQICEgQEJAgICBBQECCgIAEAQEJ
      AgISBAQkCAhIEBCQICAgQUBAgoCABAEBic4YU0qNx+PnvRP4SeJPf9KqlJJSapp2nsMoJZUS
      4jz3Myl9KRljStO0k81wzjnnZ1/338fxfa5pyve50JSUmi6U4owpzsWpB/N9XwguJdME/6Gb
      V1LOfakHdCUlZ0wypp15XErfl0oT4pkVlZrOZozzgK4rpU7OgJSSC8GfnZWSCcGf3a3yfV8I
      7ZlBLjhnvpScMSGEkpJxwZhUiislOWeMCc6ZUuzpCtL3JWOa4CdXgDEmpfzPQkrK706RlJIx
      dvJSf7qLTr30yb2d37379tnP41PjYefug91f/eJn55htN+ytrW13OF7b3Gx2vGm3fOeX75jh
      M3Xc71Qf7TbMsHI67qRT3bh2qztl/epOZ2q89mKmrRaq32795t1fnxrjPz76MHlhrVirvVBY
      adpOwky+/PrtwNn2/Pjh/dlsNpTBQdtazGWOrf76au7ixs1ENPi9sw/v3wvH04e7j9Y2b44m
      83RUdYZzIfRus6zHsslYsFqtXb6y2W03m61ePhdf3Xw5Ew+fzD748m4sld/fvrf24u3pXMbF
      pOOJoOZ/+/jJlVdeaewdXnj1hlerlZzepUJ66YUbj7/6+8Dj19cuFPf2zdWNuN+dpTb2v/jb
      pULamSfzkUnXi5rx8KsvXWeMNezqXrm+FJvbnpHPpi7mzY8/u/fOW29+8/CbsBErHhxuvHhr
      2GvOJa/UrKV8SmmxmDb/LqB0/mI+VT7bCfxfEcM0wqHzzbrdVjieGo4myVS62yq68/nEm50x
      IDOd8rvbyTtveLMnq4sbD3dLVy7E0wvL3dogk8lWj3pSyplUIe2UhFLLq9VqzWuVy3rYUIP7
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='CSV Download' width='192'>
      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
      gJfKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CSV' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
