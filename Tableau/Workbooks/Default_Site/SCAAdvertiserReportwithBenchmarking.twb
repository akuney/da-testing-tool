<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='http://production-tableau-server-1.internal.intentmedia.net' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.1015.1338                -->
  <repository-location id='SCAAdvertiserReportwithBenchmarking' path='/t/PreQA/workbooks' revision='1.7' site='PreQA' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column datatype='string' name='[Advertiser]' param-domain-type='list' role='measure' type='nominal' value='&quot;Agoda - Ads&quot;'>
        <calculation class='tableau' formula='&quot;Agoda - Ads&quot;' />
        <members>
          <member value='&quot;Agoda - Ads&quot;' />
          <member value='&quot;Air Canada&quot;' />
          <member value='&quot;Air Canada - CA&quot;' />
          <member value='&quot;Air Canada - UK&quot;' />
          <member value='&quot;Air France-ads&quot;' />
          <member value='&quot;Air New Zealand&quot;' />
          <member value='&quot;Airfarewatchdog&quot;' />
          <member value='&quot;AirFastTickets&quot;' />
          <member value='&quot;AirFastTickets - UK&quot;' />
          <member value='&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis&quot;' />
          <member value='&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis - UK&quot;' />
          <member value='&quot;AirTkt-ads&quot;' />
          <member value='&quot;Alaska Airlines&quot;' />
          <member value='&quot;American Airlines&quot;' />
          <member value='&quot;Apple Vacations&quot;' />
          <member value='&quot;Apple Vacations-ads &quot;' />
          <member value='&quot;ASAP Tickets&quot;' />
          <member value='&quot;Aston Hotels&quot;' />
          <member value='&quot;Booking.com - UK&quot;' />
          <member value='&quot;Booking.com-ads&quot;' />
          <member value='&quot;bookit.com&quot;' />
          <member value='&quot;BudgetAir - UK&quot;' />
          <member value='&quot;BudgetPlaces - UK&quot;' />
          <member value='&quot;Cathay Pacific&quot;' />
          <member value='&quot;Cathay Pacific - Canada&quot;' />
          <member value='&quot;CheapFareGuru&quot;' />
          <member value='&quot;CheapOair&quot;' />
          <member value='&quot;CheapOair- UK ads&quot;' />
          <member value='&quot;CheapOair-Canada&quot;' />
          <member value='&quot;CheapTickets-Ads&quot;' />
          <member value='&quot;Crowne Plaza&quot;' />
          <member value='&quot;DealBase - ads&quot;' />
          <member value='&quot;Delta&quot;' />
          <member value='&quot;DO NOT BILL_Test1&quot;' />
          <member value='&quot;DO NOT BILL_Test2&quot;' />
          <member value='&quot;DO NOT BILL_Test3&quot;' />
          <member value='&quot;DO NOT BILL_Test4&quot;' />
          <member value='&quot;DO NOT BILL_Test5&quot;' />
          <member value='&quot;EasyVoyage - UK&quot;' />
          <member value='&quot;ebookers - UK&quot;' />
          <member value='&quot;Edreams&quot;' />
          <member value='&quot;eDreams - UK&quot;' />
          <member value='&quot;Etihad Airways&quot;' />
          <member value='&quot;Expedia - UK&quot;' />
          <member value='&quot;Expedia-Ads&quot;' />
          <member value='&quot;FareBoom-ads&quot;' />
          <member value='&quot;Faregeek - UK&quot;' />
          <member value='&quot;Faregeek - US&quot;' />
          <member value='&quot;FlightHub&quot;' />
          <member value='&quot;FlightNetwork&quot;' />
          <member value='&quot;Fly.com&quot;' />
          <member value='&quot;Fly.com - CA&quot;' />
          <member value='&quot;Fly.com - UK&quot;' />
          <member value='&quot;FlyFar&quot;' />
          <member value='&quot;Globehunters - UK&quot;' />
          <member value='&quot;goSeek&quot;' />
          <member value='&quot;Groupon-Ads&quot;' />
          <member value='&quot;Hawaiian Airlines&quot;' />
          <member value='&quot;Hilton Hotels&quot;' />
          <member value='&quot;Hipmunk-Ads&quot;' />
          <member value='&quot;Holiday Inn&quot;' />
          <member value='&quot;Holiday Inn Express&quot;' />
          <member value='&quot;Hotels.com-Ads&quot;' />
          <member value='&quot;Hotels.com-Ads - UK&quot;' />
          <member value='&quot;HotelsCombined - UK&quot;' />
          <member value='&quot;HotelsCombined - US&quot;' />
          <member value='&quot;HotelTonight&quot;' />
          <member value='&quot;Hotwire-Ads&quot;' />
          <member value='&quot;Indian Eagle&quot;' />
          <member value='&quot;InsanelyCheapFlights&quot;' />
          <member value='&quot;itravel2000&quot;' />
          <member value='&quot;Jetcost - UK&quot;' />
          <member value='&quot;Jetsetter-ads&quot;' />
          <member value='&quot;Justairticket-ads&quot;' />
          <member value='&quot;JustFly&quot;' />
          <member value='&quot;Kayak Software Corporation - Ads - UK&quot;' />
          <member value='&quot;Kugunda&quot;' />
          <member value='&quot;Kugunda - UK&quot;' />
          <member value='&quot;LAN Airlines&quot;' />
          <member value='&quot;lastminute.com - UK&quot;' />
          <member value='&quot;Laterooms.com - UK&quot;' />
          <member value='&quot;LatinOFare-ads&quot;' />
          <member value='&quot;Momondo&quot;' />
          <member value='&quot;One Travel&quot;' />
          <member value='&quot;OneFineStay&quot;' />
          <member value='&quot;OneTime - ads&quot;' />
          <member value='&quot;Orbitz-ads-on-Network&quot;' />
          <member value='&quot;OWW-ads-on-CTIX&quot;' />
          <member value='&quot;Priceline - UK&quot;' />
          <member value='&quot;Priceline-Ads&quot;' />
          <member value='&quot;Qatar Airways - ads&quot;' />
          <member value='&quot;Red Roof Inn&quot;' />
          <member value='&quot;Room 77&quot;' />
          <member value='&quot;Rovia&quot;' />
          <member value='&quot;San Francisco Travel&quot;' />
          <member value='&quot;ShareTrips - Ads&quot;' />
          <member value='&quot;Skyscanner - UK&quot;' />
          <member value='&quot;Skyscanner - US&quot;' />
          <member value='&quot;SmartFares&quot;' />
          <member value='&quot;South African Airlines&quot;' />
          <member value='&quot;STA Travel-Ads&quot;' />
          <member value='&quot;StudentUniverse&quot;' />
          <member value='&quot;Top10 - UK&quot;' />
          <member value='&quot;Travelbuddy 247&quot;' />
          <member value='&quot;Travelbuddy 247 - UK&quot;' />
          <member value='&quot;Travelocity-Ads&quot;' />
          <member value='&quot;Travelocity.ca&quot;' />
          <member value='&quot;Travelstart&quot;' />
          <member value='&quot;TravelSupermarket - UK&quot;' />
          <member value='&quot;TripAdvisor&quot;' />
          <member value='&quot;TripAdvisor - UK&quot;' />
          <member value='&quot;Trivago&quot;' />
          <member value='&quot;Trivago - UK&quot;' />
          <member value='&quot;United Airlines&quot;' />
          <member value='&quot;Vegas.com-ads&quot;' />
          <member value='&quot;Virgin America&quot;' />
          <member value='&quot;Virgin Atlantic&quot;' />
          <member value='&quot;Virgin Holidays - UK&quot;' />
          <member value='&quot;Webjet&quot;' />
          <member value='&quot;Webjet.ca&quot;' />
          <member value='&quot;XL Airways&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Comparison Segment]' param-domain-type='list' role='measure' type='nominal' value='&quot;Advertiser&apos;s Segment&quot;'>
        <calculation class='tableau' formula='&quot;Advertiser&apos;s Segment&quot;' />
        <members>
          <member value='&quot;Advertiser&apos;s Segment&quot;' />
          <member value='&quot;Total Network&quot;' />
          <member value='&quot;Domestic Airline&quot;' />
          <member value='&quot;Hotel Chain&quot;' />
          <member value='&quot;International Airline&quot;' />
          <member value='&quot;Meta&quot;' />
          <member value='&quot;OTA Budget&quot;' />
          <member value='&quot;Tier 1&quot;' />
          <member value='&quot;Tier 2&quot;' />
          <member value='&quot;Other&quot;' />
        </members>
      </column>
      <column datatype='string' name='[Product Category]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
        <calculation class='tableau' formula='&quot;Total&quot;' />
        <members>
          <member value='&quot;Total&quot;' />
          <member value='&quot;Flights&quot;' />
          <member value='&quot;Hotels&quot;' />
        </members>
      </column>
    </datasource>
    <datasource inline='true' name='aft_advertiser_report_with_benchmarking' version='8.2'>
      <connection class='vertica' dbname='intent_media' expected-driver-version='6.1' odbc-connect-string-extras='ConnectionLoadBalance=1' odbc-native-protocol='yes' one-time-sql='' port='5433' server='production-vertica-cluster-1.internal.intentmedia.net' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='TableauSQL' type='text'>select&#13;&#10;&#9;&apos;Flights&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;e.name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;c.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;c.display_format as &quot;Display Type&quot;,&#13;&#10;&#9;case when e.name like &apos;%UK%&apos; then &apos;UK&apos; else &apos;US&apos; end as Country,&#13;&#10;&#9;(case e.advertiser_category_type&#13;&#10;&#9;&#9;when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;&#9;&#9;when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;&#9;&#9;when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;&#9;&#9;when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;&#9;&#9;when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;&#9;&#9;when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;&#9;&#9;when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;&#9;&#9;when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;&#9;&#9;else e.advertiser_category_type&#13;&#10;&#9;end) as &quot;Advertiser Segment&quot;,&#13;&#10;&#9;revenue_metrics.*,&#13;&#10;&#9;performance.&quot;Pages Served&quot;&#13;&#10;&#13;&#10;--------------Revenue Metrics&#13;&#10;from&#13;&#10;(&#13;&#10;    select&#13;&#10;    dimensions.*,&#13;&#10;    data.Impressions,&#13;&#10;    data.Clicks,&#13;&#10;    data.Spend,&#13;&#10;    data.&quot;Click Conversions&quot;,&#13;&#10;    data.&quot;View Conversions&quot;,&#13;&#10;    data.&quot;Click Revenue&quot;,&#13;&#10;    data.&quot;Exposed Revenue&quot;,&#13;&#10;    data.&quot;Auction Position Sum&quot;&#13;&#10;  &#13;&#10;  from&#13;&#10;  (&#13;&#10;    select *&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select&#13;&#10;        distinct(date_in_et) as Date&#13;&#10;      from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;      where acapra.date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;        and acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos; )&#13;&#10;    ) dates,&#13;&#10;    (&#13;&#10;      select DISTINCT&#13;&#10;        advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;        campaign_id as &quot;Campaign ID&quot;&#13;&#10;      from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;      where acapra.date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;        and acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    ) advertisers&#13;&#10;  ) dimensions&#13;&#10;  left join&#13;&#10;  (&#13;&#10;    select&#13;&#10;      acapra.date_in_et as Date,&#13;&#10;      acapra.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;      acapra.Campaign_id as &quot;Campaign ID&quot;,&#13;&#10;      sum(acapra.impression_count) as Impressions,&#13;&#10;      sum(acapra.click_count) as Clicks,&#13;&#10;      sum(acapra.actual_cpc_sum) as Spend,&#13;&#10;      sum(acapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;      sum(acapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;      sum(acapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;      sum(acapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;      sum(acapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;    from intent_media_production.air_ct_advertiser_performance_report_aggregations acapra&#13;&#10;    left join intent_media_production.ad_units au on au.id = acapra.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.ID = au.site_ID&#13;&#10;    where acapra.date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;      and acapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos; )&#13;&#10;      and acapra.date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;    group by&#13;&#10;      acapra.&quot;date_in_et&quot;,&#13;&#10;      acapra.&quot;advertiser_id&quot;,&#13;&#10;      acapra.&quot;campaign_id&quot;&#13;&#10;  ) data&#13;&#10;  on dimensions.Date = data.Date&#13;&#10;  and dimensions.&quot;Advertiser ID&quot;= data.&quot;Advertiser ID&quot;&#13;&#10;  and dimensions.&quot;Campaign ID&quot;= data.&quot;Campaign ID&quot;&#13;&#10;) revenue_metrics&#13;&#10;------------------------Performance&#13;&#10;left join&#13;&#10;(&#13;&#10;&#9;select&#13;&#10;&#9;&#9;aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;campaign_id as &quot;Campaign ID&quot;,&#13;&#10;&#9;&#9;sum(filtered_ad_count + impression_count) as &quot;Pages Served&quot;&#13;&#10;&#9;from intent_media_production.air_ct_impression_share_report_aggregations&#13;&#10;&#9;where aggregation_level_date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;&#9;&#9;and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos; )&#13;&#10;&#9;group by&#13;&#10;&#9;  aggregation_level_date_in_et,&#13;&#10;&#9;  advertiser_id,&#13;&#10;&#9;  campaign_id&#13;&#10;) performance&#13;&#10;on performance.date = revenue_metrics.Date&#13;&#10;and performance.&quot;Advertiser ID&quot; = revenue_metrics.&quot;Advertiser ID&quot;&#13;&#10;and performance.&quot;Campaign ID&quot; = revenue_metrics.&quot;Campaign ID&quot;&#13;&#10;left join intent_media_production.entities e on revenue_metrics.&quot;Advertiser ID&quot; = e.id&#13;&#10;left join intent_media_production.campaigns c on revenue_metrics.&quot;Campaign ID&quot; = c.id&#13;&#10;&#13;&#10;------------------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;union&#13;&#10;&#13;&#10;select&#13;&#10;&#9;&apos;Hotels&apos; as &quot;Product Category Type&quot;,&#13;&#10;&#9;e.name as &quot;Advertiser Name&quot;,&#13;&#10;&#9;c.precheck_eligibility_type as &quot;Precheck Type&quot;,&#13;&#10;&#9;c.display_format as &quot;Display Type&quot;,&#13;&#10;&#9;case when e.name like &apos;%UK%&apos; then &apos;UK&apos; else &apos;US&apos; end as Country,&#13;&#10;&#9;(case e.advertiser_category_type&#13;&#10;&#9;&#9;when &apos;AIRLINE_DOMESTIC&apos; then &apos;Domestic Airline&apos;&#13;&#10;&#9;&#9;when &apos;AIRLINE_INTERNATIONAL&apos; then &apos;International Airline&apos;&#13;&#10;&#9;&#9;when &apos;HOTEL_CHAIN&apos; then &apos;Hotel Chain&apos;&#13;&#10;&#9;&#9;when &apos;META&apos; then &apos;Meta&apos;&#13;&#10;&#9;&#9;when &apos;TIER_1&apos; then &apos;Tier 1&apos;&#13;&#10;&#9;&#9;when &apos;TIER_2&apos; then &apos;Tier 2&apos;&#13;&#10;&#9;&#9;when &apos;OTA_BUDGET&apos; then &apos;OTA Budget&apos;&#13;&#10;&#9;&#9;when &apos;OTHER&apos; then &apos;Other&apos;&#13;&#10;&#9;&#9;else e.advertiser_category_type&#13;&#10;&#9;end) as &quot;Advertiser Segment&quot;,&#13;&#10;&#9;revenue_metrics.*,&#13;&#10;&#9;performance.&quot;Pages Served&quot;&#13;&#10;from&#13;&#10;&#13;&#10;&#13;&#10;--------------Revenue Metrics&#13;&#10;(&#13;&#10;  select&#13;&#10;    dimensions.*,&#13;&#10;    data.Impressions,&#13;&#10;    data.Clicks,&#13;&#10;    data.Spend,&#13;&#10;    data.&quot;Click Conversions&quot;,&#13;&#10;    data.&quot;View Conversions&quot;,&#13;&#10;    data.&quot;Click Revenue&quot;,&#13;&#10;    data.&quot;Exposed Revenue&quot;,&#13;&#10;    data.&quot;Auction Position Sum&quot;&#13;&#10;  from&#13;&#10;  (&#13;&#10;    select *&#13;&#10;    from&#13;&#10;    (&#13;&#10;      select&#13;&#10;        distinct(date_in_et) as Date&#13;&#10;      from intent_media_production.hotel_ct_advertiser_performance_report_aggregations hcapra&#13;&#10;        where hcapra.date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;          and hcapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos; )&#13;&#10;    ) dates,&#13;&#10;    (&#13;&#10;      select&#13;&#10;        distinct advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;        campaign_id as &quot;Campaign ID&quot;&#13;&#10;      from intent_media_production.hotel_ct_advertiser_performance_report_aggregations hcapra&#13;&#10;        where hcapra.date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;          and hcapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos;)&#13;&#10;    ) advertisers&#13;&#10;  ) dimensions&#13;&#10;  left join&#13;&#10;  (&#13;&#10;    select&#13;&#10;      hcapra.date_in_et as Date,&#13;&#10;      hcapra.advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;      hcapra.campaign_id as &quot;Campaign ID&quot;,&#13;&#10;      sum(hcapra.impression_count) as Impressions,&#13;&#10;      sum(hcapra.click_count) as Clicks,&#13;&#10;      sum(hcapra.actual_cpc_sum) as Spend,&#13;&#10;      sum(hcapra.click_conversion_count) as &quot;Click Conversions&quot;,&#13;&#10;      sum(hcapra.exposed_conversion_count) as &quot;View Conversions&quot;,&#13;&#10;      sum(hcapra.click_conversion_value_sum) as &quot;Click Revenue&quot;,&#13;&#10;      sum(hcapra.exposed_conversion_value_sum) as &quot;Exposed Revenue&quot;,&#13;&#10;      sum(hcapra.auction_position_sum) as &quot;Auction Position Sum&quot;&#13;&#10;    from intent_media_production.hotel_ct_advertiser_performance_report_aggregations hcapra&#13;&#10;    left join intent_media_production.ad_units au on au.id = hcapra.ad_unit_id&#13;&#10;    left join intent_media_production.sites s on s.ID = au.site_ID&#13;&#10;    where hcapra.date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;      and hcapra.date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos; )&#13;&#10;      and hcapra.date_in_et &gt;&gt;= au.reporting_start_date&#13;&#10;    group by&#13;&#10;      hcapra.&quot;date_in_et&quot;,&#13;&#10;      hcapra.&quot;advertiser_id&quot;,&#13;&#10;      hcapra.campaign_id&#13;&#10;  ) data&#13;&#10;  on dimensions.Date = data.Date&#13;&#10;  and dimensions.&quot;Advertiser ID&quot;= data.&quot;Advertiser ID&quot;&#13;&#10;  and dimensions.&quot;Campaign ID&quot;= data.&quot;Campaign ID&quot;&#13;&#10;) revenue_metrics&#13;&#10;-------------------------Performacne&#13;&#10;left join&#13;&#10;(&#13;&#10;&#9;select&#13;&#10;&#9;&#9;aggregation_level_date_in_et as Date,&#13;&#10;&#9;&#9;advertiser_id as &quot;Advertiser ID&quot;,&#13;&#10;&#9;&#9;campaign_id as &quot;Campaign ID&quot;,&#13;&#10;&#9;&#9;sum(filtered_ad_count + impression_count) as &quot;Pages Served&quot;&#13;&#10;&#9;from intent_media_production.hotel_ct_impression_share_report_aggregations&#13;&#10;&#9;where aggregation_level_date_in_et &gt;&gt;= date(current_timestamp at timezone &apos;America/New_York&apos; - interval &apos;371 days&apos;)&#13;&#10;&#9;&#9;and aggregation_level_date_in_et &lt;&lt; date(current_timestamp at timezone &apos;America/New_York&apos; )&#13;&#10;&#9;group by&#13;&#10;&#9;  aggregation_level_date_in_et,&#13;&#10;&#9;  advertiser_id,&#13;&#10;&#9;  campaign_id&#13;&#10;) performance&#13;&#10;on performance.date = revenue_metrics.Date&#13;&#10;and performance.&quot;Advertiser ID&quot; = revenue_metrics.&quot;Advertiser ID&quot;&#13;&#10;and performance.&quot;Campaign ID&quot; = revenue_metrics.&quot;Campaign ID&quot;&#13;&#10;left join intent_media_production.entities e on revenue_metrics.&quot;Advertiser ID&quot; = e.id&#13;&#10;left join intent_media_production.campaigns c on revenue_metrics.&quot;Campaign ID&quot; = c.id&#13;&#10;where revenue_metrics.Date &gt;&gt; &apos;2012-12-10&apos;</relation>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser Segment:qk]&quot;' value='Segment Benchmark' />
          <alias key='&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser:qk]&quot;' value='Advertiser' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Advertiser ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[Auction Position Sum - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))&#13;&#10;                        WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;                        WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))&#13;&#10;                        WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Auction Position Sum - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Auction Position Sum - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' name='[Auction Position Sum - Domestic Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' name='[Auction Position Sum - Hotel Chain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' name='[Auction Position Sum - International Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='real' name='[Auction Position Sum - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))   &#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))   &#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Auction Position Sum - Meta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' name='[Auction Position Sum - Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' name='[Auction Position Sum - Tier 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='integer' name='[Auction Position Sum - Tier 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Auction Position Sum] END' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE  [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum - Advertiser])/sum([Impressions - Advertiser])' />
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International AIrline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Auction Position Sum])/sum([Impressions])' />
      </column>
      <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend - Advertiser])/sum([Clicks - Advertiser])' />
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks - Advertiser])/sum([Impressions - Advertiser])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
      </column>
      <column caption='Spend - OTA Budget' datatype='real' name='[Calculation_1530801162615888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Spend] END' scope-isolation='false' />
      </column>
      <column caption='Auction Position Sum - OTA Budget' datatype='integer' name='[Calculation_4070801160953969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Auction Position Sum] END' scope-isolation='false' />
      </column>
      <column caption='Pages Served - OTA Budget' datatype='integer' name='[Calculation_5910801162545748]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Pages Served] END' scope-isolation='false' />
      </column>
      <column caption='Clicks - OTA Budget' datatype='integer' name='[Calculation_6300801161443969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Clicks] END' scope-isolation='false' />
      </column>
      <column caption='Impressions - OTA Budget' datatype='integer' name='[Calculation_6810801162015860]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; AND [Impressions] &gt; 50  THEN [Impressions] END' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Clicks - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Clicks - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Clicks - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - Domestic Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - Hotel Chain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - International Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Clicks] END' />
      </column>
      <column datatype='real' name='[Clicks - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Clicks - Meta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - Tier 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Clicks] END' />
      </column>
      <column datatype='integer' name='[Clicks - Tier 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Clicks] END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' type='nominal'>
      </column>
      <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
      </column>
      <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;DESKTOP&quot;' value='Desktop' />
          <alias key='&quot;MOBILE&quot;' value='Mobile' />
        </aliases>
      </column>
      <column datatype='date' name='[First Date to Show]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;week&apos;,-52,[Last Date to Show]))+1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions - Advertiser])/sum([Pages Served - Advertiser])' />
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.0%' name='[Impression Share]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Impressions])/sum([Pages Served])' />
      </column>
      <column datatype='real' name='[Impressions - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Impressions - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Impressions - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Impressions - Domestic Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Impressions - Hotel Chain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Impressions] END' />
      </column>
      <column datatype='integer' name='[Impressions - International Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Impressions] END' />
      </column>
      <column datatype='real' name='[Impressions - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Impressions - Meta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Meta&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Impressions - Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Other&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Impressions - Tier 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Impressions - Tier 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' scope-isolation='false' />
      </column>
      <column datatype='date' name='[Last Date to Show]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF DATEPART(&apos;weekday&apos;,TOTAL(MAX([Date]))) = 7 THEN TOTAL(MAX([Date])) ELSE (DATE(DATETRUNC(&apos;week&apos;,TOTAL(MAX([Date]))))-1) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Pages Served - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Pages Served - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Pages Served - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - Domestic Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - Hotel Chain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - International Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='real' name='[Pages Served - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Pages Served - Meta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - Tier 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='integer' name='[Pages Served - Tier 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Pages Served] END' />
      </column>
      <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Advertiser]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Domestic Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Hotel Chain]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - International Airline]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - LCI Advertiser Segment]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END)),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END)),0)&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Meta]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Other]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Tier 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend - Tier 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Spend] END' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
      </column>
      <column caption='Exposed Conversions' datatype='integer' name='[View Conversions]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Clicks - Advertiser]' derivation='Sum' name='[sum:Clicks - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions - Advertiser]' derivation='Sum' name='[sum:Impressions - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spend - Advertiser]' derivation='Sum' name='[sum:Spend - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Position - Advertiser Segment]' derivation='User' name='[usr:Average Position - Advertiser Segment:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Average Position - Advertiser]' derivation='User' name='[usr:Average Position - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPC - Advertiser Segment]' derivation='User' name='[usr:CPC - Advertiser Segment:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CPC - Advertiser]' derivation='User' name='[usr:CPC - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR - Advertiser Segment]' derivation='User' name='[usr:CTR - Advertiser Segment:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CTR - Advertiser]' derivation='User' name='[usr:CTR - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks - Advertiser Segment]' derivation='User' name='[usr:Clicks - Advertiser Segment:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Impression Share - Advertiser Segment]' derivation='User' name='[usr:Impression Share - Advertiser Segment:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Impression Share - Advertiser]' derivation='User' name='[usr:Impression Share - Advertiser:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions - Advertiser Segment]' derivation='User' name='[usr:Impressions - Advertiser Segment:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Spend - Advertiser Segment]' derivation='User' name='[usr:Spend - Advertiser Segment:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='\\psf\Home\Documents\My Tableau Repository\Datasources\aft_advertiser_report_with_benchmarking.tde' schema='Extract' tablename='Extract' update-time='2/23/15 7:53:14 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Auction Position Sum - Domestic Airline]' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Auction Position Sum - Hotel Chain]' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Auction Position Sum - International Airline]' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Auction Position Sum - Meta]' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Auction Position Sum - Other]' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Auction Position Sum - Tier 1]' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Auction Position Sum - Tier 2]' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Blank]' formula='IF 1=0 THEN 1 END' />
            <calculation column='[Calculation_1530801162615888]' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Spend] END' />
            <calculation column='[Calculation_4070801160953969]' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Auction Position Sum] END' />
            <calculation column='[Calculation_5910801162545748]' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Pages Served] END' />
            <calculation column='[Calculation_6300801161443969]' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; THEN [Clicks] END' />
            <calculation column='[Calculation_6810801162015860]' formula='IF [Advertiser Segment] = &quot;OTA Budget&quot; AND [Impressions] &gt; 50  THEN [Impressions] END' />
            <calculation column='[Clicks - Domestic Airline]' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Clicks] END' />
            <calculation column='[Clicks - Hotel Chain]' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Clicks] END' />
            <calculation column='[Clicks - International Airline]' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Clicks] END' />
            <calculation column='[Clicks - Meta]' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Clicks] END' />
            <calculation column='[Clicks - Other]' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Clicks] END' />
            <calculation column='[Clicks - Tier 1]' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Clicks] END' />
            <calculation column='[Clicks - Tier 2]' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Clicks] END' />
            <calculation column='[Date Axis]' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            <calculation column='[Impressions - Domestic Airline]' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Impressions] END' />
            <calculation column='[Impressions - Hotel Chain]' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Impressions] END' />
            <calculation column='[Impressions - International Airline]' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Impressions] END' />
            <calculation column='[Impressions - Meta]' formula='IF [Advertiser Segment] = &quot;Meta&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' />
            <calculation column='[Impressions - Other]' formula='IF [Advertiser Segment] = &quot;Other&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' />
            <calculation column='[Impressions - Tier 1]' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' />
            <calculation column='[Impressions - Tier 2]' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; AND [Impressions] &gt; 50 THEN [Impressions] END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Pages Served - Domestic Airline]' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Pages Served] END' />
            <calculation column='[Pages Served - Hotel Chain]' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Pages Served] END' />
            <calculation column='[Pages Served - International Airline]' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Pages Served] END' />
            <calculation column='[Pages Served - Meta]' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Pages Served] END' />
            <calculation column='[Pages Served - Other]' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Pages Served] END' />
            <calculation column='[Pages Served - Tier 1]' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Pages Served] END' />
            <calculation column='[Pages Served - Tier 2]' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Pages Served] END' />
            <calculation column='[Spend - Domestic Airline]' formula='IF [Advertiser Segment] = &quot;Domestic Airline&quot; THEN [Spend] END' />
            <calculation column='[Spend - Hotel Chain]' formula='IF [Advertiser Segment] = &quot;Hotel Chain&quot; THEN [Spend] END' />
            <calculation column='[Spend - International Airline]' formula='IF [Advertiser Segment] = &quot;International Airline&quot; THEN [Spend] END' />
            <calculation column='[Spend - Meta]' formula='IF [Advertiser Segment] = &quot;Meta&quot; THEN [Spend] END' />
            <calculation column='[Spend - Other]' formula='IF [Advertiser Segment] = &quot;Other&quot; THEN [Spend] END' />
            <calculation column='[Spend - Tier 1]' formula='IF [Advertiser Segment] = &quot;Tier 1&quot; THEN [Spend] END' />
            <calculation column='[Spend - Tier 2]' formula='IF [Advertiser Segment] = &quot;Tier 2&quot; THEN [Spend] END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='144319' timestamp-start='2015-02-23 19:53:14.224000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.3125' measure-ordering='alphabetic' measure-percentage='0.478885' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Clicks - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Impressions - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Average Position - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share - Advertiser:qk]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Average Position - Advertiser Segment:qk]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Clicks - Advertiser Segment:qk]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC - Advertiser Segment:qk]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser Segment:qk]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share - Advertiser Segment:qk:1]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impressions - Advertiser Segment:qk]&quot;</bucket>
            </map>
            <map to='#999999'>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Spend - Advertiser Segment:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Country:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;US&quot;</bucket>
            <bucket>&quot;UK&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column datatype='string' name='[Advertiser]' param-domain-type='list' role='measure' type='nominal' value='&quot;Agoda - Ads&quot;'>
          <calculation class='tableau' formula='&quot;Agoda - Ads&quot;' />
          <members>
            <member value='&quot;Agoda - Ads&quot;' />
            <member value='&quot;Air Canada&quot;' />
            <member value='&quot;Air Canada - CA&quot;' />
            <member value='&quot;Air Canada - UK&quot;' />
            <member value='&quot;Air France-ads&quot;' />
            <member value='&quot;Air New Zealand&quot;' />
            <member value='&quot;Airfarewatchdog&quot;' />
            <member value='&quot;AirFastTickets&quot;' />
            <member value='&quot;AirFastTickets - UK&quot;' />
            <member value='&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis&quot;' />
            <member value='&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis - UK&quot;' />
            <member value='&quot;AirTkt-ads&quot;' />
            <member value='&quot;Alaska Airlines&quot;' />
            <member value='&quot;American Airlines&quot;' />
            <member value='&quot;Apple Vacations&quot;' />
            <member value='&quot;Apple Vacations-ads &quot;' />
            <member value='&quot;ASAP Tickets&quot;' />
            <member value='&quot;Aston Hotels&quot;' />
            <member value='&quot;Booking.com - UK&quot;' />
            <member value='&quot;Booking.com-ads&quot;' />
            <member value='&quot;bookit.com&quot;' />
            <member value='&quot;BudgetAir - UK&quot;' />
            <member value='&quot;BudgetPlaces - UK&quot;' />
            <member value='&quot;Cathay Pacific&quot;' />
            <member value='&quot;Cathay Pacific - Canada&quot;' />
            <member value='&quot;CheapFareGuru&quot;' />
            <member value='&quot;CheapOair&quot;' />
            <member value='&quot;CheapOair- UK ads&quot;' />
            <member value='&quot;CheapOair-Canada&quot;' />
            <member value='&quot;CheapTickets-Ads&quot;' />
            <member value='&quot;Crowne Plaza&quot;' />
            <member value='&quot;DealBase - ads&quot;' />
            <member value='&quot;Delta&quot;' />
            <member value='&quot;DO NOT BILL_Test1&quot;' />
            <member value='&quot;DO NOT BILL_Test2&quot;' />
            <member value='&quot;DO NOT BILL_Test3&quot;' />
            <member value='&quot;DO NOT BILL_Test4&quot;' />
            <member value='&quot;DO NOT BILL_Test5&quot;' />
            <member value='&quot;EasyVoyage - UK&quot;' />
            <member value='&quot;ebookers - UK&quot;' />
            <member value='&quot;Edreams&quot;' />
            <member value='&quot;eDreams - UK&quot;' />
            <member value='&quot;Etihad Airways&quot;' />
            <member value='&quot;Expedia - UK&quot;' />
            <member value='&quot;Expedia-Ads&quot;' />
            <member value='&quot;FareBoom-ads&quot;' />
            <member value='&quot;Faregeek - UK&quot;' />
            <member value='&quot;Faregeek - US&quot;' />
            <member value='&quot;FlightHub&quot;' />
            <member value='&quot;FlightNetwork&quot;' />
            <member value='&quot;Fly.com&quot;' />
            <member value='&quot;Fly.com - CA&quot;' />
            <member value='&quot;Fly.com - UK&quot;' />
            <member value='&quot;FlyFar&quot;' />
            <member value='&quot;Globehunters - UK&quot;' />
            <member value='&quot;goSeek&quot;' />
            <member value='&quot;Groupon-Ads&quot;' />
            <member value='&quot;Hawaiian Airlines&quot;' />
            <member value='&quot;Hilton Hotels&quot;' />
            <member value='&quot;Hipmunk-Ads&quot;' />
            <member value='&quot;Holiday Inn&quot;' />
            <member value='&quot;Holiday Inn Express&quot;' />
            <member value='&quot;Hotels.com-Ads&quot;' />
            <member value='&quot;Hotels.com-Ads - UK&quot;' />
            <member value='&quot;HotelsCombined - UK&quot;' />
            <member value='&quot;HotelsCombined - US&quot;' />
            <member value='&quot;HotelTonight&quot;' />
            <member value='&quot;Hotwire-Ads&quot;' />
            <member value='&quot;Indian Eagle&quot;' />
            <member value='&quot;InsanelyCheapFlights&quot;' />
            <member value='&quot;itravel2000&quot;' />
            <member value='&quot;Jetcost - UK&quot;' />
            <member value='&quot;Jetsetter-ads&quot;' />
            <member value='&quot;Justairticket-ads&quot;' />
            <member value='&quot;JustFly&quot;' />
            <member value='&quot;Kayak Software Corporation - Ads - UK&quot;' />
            <member value='&quot;Kugunda&quot;' />
            <member value='&quot;Kugunda - UK&quot;' />
            <member value='&quot;LAN Airlines&quot;' />
            <member value='&quot;lastminute.com - UK&quot;' />
            <member value='&quot;Laterooms.com - UK&quot;' />
            <member value='&quot;LatinOFare-ads&quot;' />
            <member value='&quot;Momondo&quot;' />
            <member value='&quot;One Travel&quot;' />
            <member value='&quot;OneFineStay&quot;' />
            <member value='&quot;OneTime - ads&quot;' />
            <member value='&quot;Orbitz-ads-on-Network&quot;' />
            <member value='&quot;OWW-ads-on-CTIX&quot;' />
            <member value='&quot;Priceline - UK&quot;' />
            <member value='&quot;Priceline-Ads&quot;' />
            <member value='&quot;Qatar Airways - ads&quot;' />
            <member value='&quot;Red Roof Inn&quot;' />
            <member value='&quot;Room 77&quot;' />
            <member value='&quot;Rovia&quot;' />
            <member value='&quot;San Francisco Travel&quot;' />
            <member value='&quot;ShareTrips - Ads&quot;' />
            <member value='&quot;Skyscanner - UK&quot;' />
            <member value='&quot;Skyscanner - US&quot;' />
            <member value='&quot;SmartFares&quot;' />
            <member value='&quot;South African Airlines&quot;' />
            <member value='&quot;STA Travel-Ads&quot;' />
            <member value='&quot;StudentUniverse&quot;' />
            <member value='&quot;Top10 - UK&quot;' />
            <member value='&quot;Travelbuddy 247&quot;' />
            <member value='&quot;Travelbuddy 247 - UK&quot;' />
            <member value='&quot;Travelocity-Ads&quot;' />
            <member value='&quot;Travelocity.ca&quot;' />
            <member value='&quot;Travelstart&quot;' />
            <member value='&quot;TravelSupermarket - UK&quot;' />
            <member value='&quot;TripAdvisor&quot;' />
            <member value='&quot;TripAdvisor - UK&quot;' />
            <member value='&quot;Trivago&quot;' />
            <member value='&quot;Trivago - UK&quot;' />
            <member value='&quot;United Airlines&quot;' />
            <member value='&quot;Vegas.com-ads&quot;' />
            <member value='&quot;Virgin America&quot;' />
            <member value='&quot;Virgin Atlantic&quot;' />
            <member value='&quot;Virgin Holidays - UK&quot;' />
            <member value='&quot;Webjet&quot;' />
            <member value='&quot;Webjet.ca&quot;' />
            <member value='&quot;XL Airways&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Comparison Segment]' param-domain-type='list' role='measure' type='nominal' value='&quot;Advertiser&apos;s Segment&quot;'>
          <calculation class='tableau' formula='&quot;Advertiser&apos;s Segment&quot;' />
          <members>
            <member value='&quot;Advertiser&apos;s Segment&quot;' />
            <member value='&quot;Total Network&quot;' />
            <member value='&quot;Domestic Airline&quot;' />
            <member value='&quot;Hotel Chain&quot;' />
            <member value='&quot;International Airline&quot;' />
            <member value='&quot;Meta&quot;' />
            <member value='&quot;OTA Budget&quot;' />
            <member value='&quot;Tier 1&quot;' />
            <member value='&quot;Tier 2&quot;' />
            <member value='&quot;Other&quot;' />
          </members>
        </column>
        <column datatype='string' name='[Product Category]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total&quot;'>
          <calculation class='tableau' formula='&quot;Total&quot;' />
          <members>
            <member value='&quot;Total&quot;' />
            <member value='&quot;Flights&quot;' />
            <member value='&quot;Hotels&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='aft_advertiser_report_with_benchmarking'>
      <datasources>
        <datasource name='aft_advertiser_report_with_benchmarking' />
      </datasources>
      <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
        <column datatype='string' name='[Country]' role='dimension' type='nominal'>
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
        </column>
        <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;DESKTOP&quot;' value='Desktop' />
            <alias key='&quot;MOBILE&quot;' value='Mobile' />
          </aliases>
        </column>
        <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
        </column>
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[none:Country:nk]'>
        <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[aft_advertiser_report_with_benchmarking].[none:Date:qk]' included-values='all'>
      </filter>
      <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]'>
        <groupfilter function='member' level='[none:Display Type:nk]' member='&quot;DESKTOP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]'>
        <groupfilter function='member' level='[none:Product Category Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Average Position' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Average Position' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Spend' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Spend' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Advertiser Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Advertiser Segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column datatype='string' name='[Advertiser]' param-domain-type='list' role='measure' type='nominal' value='&quot;Agoda - Ads&quot;'>
              <calculation class='tableau' formula='&quot;Agoda - Ads&quot;' />
              <members>
                <member value='&quot;Agoda - Ads&quot;' />
                <member value='&quot;Air Canada&quot;' />
                <member value='&quot;Air Canada - CA&quot;' />
                <member value='&quot;Air Canada - UK&quot;' />
                <member value='&quot;Air France-ads&quot;' />
                <member value='&quot;Air New Zealand&quot;' />
                <member value='&quot;Airfarewatchdog&quot;' />
                <member value='&quot;AirFastTickets&quot;' />
                <member value='&quot;AirFastTickets - UK&quot;' />
                <member value='&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis&quot;' />
                <member value='&quot;Airtickets Touristikes Ypiresies Etairia Periorismenis Efthynis - UK&quot;' />
                <member value='&quot;AirTkt-ads&quot;' />
                <member value='&quot;Alaska Airlines&quot;' />
                <member value='&quot;American Airlines&quot;' />
                <member value='&quot;Apple Vacations&quot;' />
                <member value='&quot;Apple Vacations-ads &quot;' />
                <member value='&quot;ASAP Tickets&quot;' />
                <member value='&quot;Aston Hotels&quot;' />
                <member value='&quot;Booking.com - UK&quot;' />
                <member value='&quot;Booking.com-ads&quot;' />
                <member value='&quot;bookit.com&quot;' />
                <member value='&quot;BudgetAir - UK&quot;' />
                <member value='&quot;BudgetPlaces - UK&quot;' />
                <member value='&quot;Cathay Pacific&quot;' />
                <member value='&quot;Cathay Pacific - Canada&quot;' />
                <member value='&quot;CheapFareGuru&quot;' />
                <member value='&quot;CheapOair&quot;' />
                <member value='&quot;CheapOair- UK ads&quot;' />
                <member value='&quot;CheapOair-Canada&quot;' />
                <member value='&quot;CheapTickets-Ads&quot;' />
                <member value='&quot;Crowne Plaza&quot;' />
                <member value='&quot;DealBase - ads&quot;' />
                <member value='&quot;Delta&quot;' />
                <member value='&quot;DO NOT BILL_Test1&quot;' />
                <member value='&quot;DO NOT BILL_Test2&quot;' />
                <member value='&quot;DO NOT BILL_Test3&quot;' />
                <member value='&quot;DO NOT BILL_Test4&quot;' />
                <member value='&quot;DO NOT BILL_Test5&quot;' />
                <member value='&quot;EasyVoyage - UK&quot;' />
                <member value='&quot;ebookers - UK&quot;' />
                <member value='&quot;Edreams&quot;' />
                <member value='&quot;eDreams - UK&quot;' />
                <member value='&quot;Etihad Airways&quot;' />
                <member value='&quot;Expedia - UK&quot;' />
                <member value='&quot;Expedia-Ads&quot;' />
                <member value='&quot;FareBoom-ads&quot;' />
                <member value='&quot;Faregeek - UK&quot;' />
                <member value='&quot;Faregeek - US&quot;' />
                <member value='&quot;FlightHub&quot;' />
                <member value='&quot;FlightNetwork&quot;' />
                <member value='&quot;Fly.com&quot;' />
                <member value='&quot;Fly.com - CA&quot;' />
                <member value='&quot;Fly.com - UK&quot;' />
                <member value='&quot;FlyFar&quot;' />
                <member value='&quot;Globehunters - UK&quot;' />
                <member value='&quot;goSeek&quot;' />
                <member value='&quot;Groupon-Ads&quot;' />
                <member value='&quot;Hawaiian Airlines&quot;' />
                <member value='&quot;Hilton Hotels&quot;' />
                <member value='&quot;Hipmunk-Ads&quot;' />
                <member value='&quot;Holiday Inn&quot;' />
                <member value='&quot;Holiday Inn Express&quot;' />
                <member value='&quot;Hotels.com-Ads&quot;' />
                <member value='&quot;Hotels.com-Ads - UK&quot;' />
                <member value='&quot;HotelsCombined - UK&quot;' />
                <member value='&quot;HotelsCombined - US&quot;' />
                <member value='&quot;HotelTonight&quot;' />
                <member value='&quot;Hotwire-Ads&quot;' />
                <member value='&quot;Indian Eagle&quot;' />
                <member value='&quot;InsanelyCheapFlights&quot;' />
                <member value='&quot;itravel2000&quot;' />
                <member value='&quot;Jetcost - UK&quot;' />
                <member value='&quot;Jetsetter-ads&quot;' />
                <member value='&quot;Justairticket-ads&quot;' />
                <member value='&quot;JustFly&quot;' />
                <member value='&quot;Kayak Software Corporation - Ads - UK&quot;' />
                <member value='&quot;Kugunda&quot;' />
                <member value='&quot;Kugunda - UK&quot;' />
                <member value='&quot;LAN Airlines&quot;' />
                <member value='&quot;lastminute.com - UK&quot;' />
                <member value='&quot;Laterooms.com - UK&quot;' />
                <member value='&quot;LatinOFare-ads&quot;' />
                <member value='&quot;Momondo&quot;' />
                <member value='&quot;One Travel&quot;' />
                <member value='&quot;OneFineStay&quot;' />
                <member value='&quot;OneTime - ads&quot;' />
                <member value='&quot;Orbitz-ads-on-Network&quot;' />
                <member value='&quot;OWW-ads-on-CTIX&quot;' />
                <member value='&quot;Priceline - UK&quot;' />
                <member value='&quot;Priceline-Ads&quot;' />
                <member value='&quot;Qatar Airways - ads&quot;' />
                <member value='&quot;Red Roof Inn&quot;' />
                <member value='&quot;Room 77&quot;' />
                <member value='&quot;Rovia&quot;' />
                <member value='&quot;San Francisco Travel&quot;' />
                <member value='&quot;ShareTrips - Ads&quot;' />
                <member value='&quot;Skyscanner - UK&quot;' />
                <member value='&quot;Skyscanner - US&quot;' />
                <member value='&quot;SmartFares&quot;' />
                <member value='&quot;South African Airlines&quot;' />
                <member value='&quot;STA Travel-Ads&quot;' />
                <member value='&quot;StudentUniverse&quot;' />
                <member value='&quot;Top10 - UK&quot;' />
                <member value='&quot;Travelbuddy 247&quot;' />
                <member value='&quot;Travelbuddy 247 - UK&quot;' />
                <member value='&quot;Travelocity-Ads&quot;' />
                <member value='&quot;Travelocity.ca&quot;' />
                <member value='&quot;Travelstart&quot;' />
                <member value='&quot;TravelSupermarket - UK&quot;' />
                <member value='&quot;TripAdvisor&quot;' />
                <member value='&quot;TripAdvisor - UK&quot;' />
                <member value='&quot;Trivago&quot;' />
                <member value='&quot;Trivago - UK&quot;' />
                <member value='&quot;United Airlines&quot;' />
                <member value='&quot;Vegas.com-ads&quot;' />
                <member value='&quot;Virgin America&quot;' />
                <member value='&quot;Virgin Atlantic&quot;' />
                <member value='&quot;Virgin Holidays - UK&quot;' />
                <member value='&quot;Webjet&quot;' />
                <member value='&quot;Webjet.ca&quot;' />
                <member value='&quot;XL Airways&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Blank]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF 1=0 THEN 1 END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Blank]' derivation='Sum' name='[sum:Blank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]'>
            <groupfilter expression='[Advertiser Name] = [Parameters].[Advertiser]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Advertiser Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[aft_advertiser_report_with_benchmarking].[none:Advertiser Segment:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[aft_advertiser_report_with_benchmarking].[sum:Blank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[aft_advertiser_report_with_benchmarking].[none:Advertiser Segment:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Average Position'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE  [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Position Sum - Advertiser])/sum([Impressions - Advertiser])' />
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International AIrline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_4070801160953969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Auction Position Sum - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Impressions - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Spend] END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend - Advertiser]' derivation='Sum' name='[sum:Spend - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:Average Position - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Average Position - Advertiser Segment]' derivation='User' name='[usr:Average Position - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Average Position - Advertiser]' derivation='User' name='[usr:Average Position - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Position - LCI Advertiser Segment]' derivation='User' name='[usr:Average Position - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Impressions - Advertiser Segment]' derivation='User' name='[usr:Impressions - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Average Position - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Average Position - Advertiser Segment:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impressions - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Average Position - LCI Advertiser Segment:qk]' scope='rows' value='Average Position' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Average Position - LCI Advertiser Segment:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Average Position - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Average Position - LCI Advertiser Segment:qk]' field-type='quantitative' max='5.0' min='1.0' range-type='fixed' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:Average Position - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:Average Position - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:Average Position - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Blank'>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='CPC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend - Advertiser])/sum([Clicks - Advertiser])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:CPC - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC - Advertiser Segment]' derivation='User' name='[usr:CPC - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CPC - Advertiser]' derivation='User' name='[usr:CPC - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC - LCI Advertiser Segment]' derivation='User' name='[usr:CPC - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC - Advertiser Segment:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:CPC - LCI Advertiser Segment:qk]' scope='rows' value='CPC' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:CPC - LCI Advertiser Segment:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:CPC - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:CPC - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:CPC - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:CPC - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CTR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks - Advertiser])/sum([Impressions - Advertiser])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Impressions - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Spend] END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend - Advertiser]' derivation='Sum' name='[sum:Spend - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:CTR - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CTR - Advertiser Segment]' derivation='User' name='[usr:CTR - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[CTR - Advertiser]' derivation='User' name='[usr:CTR - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - LCI Advertiser Segment]' derivation='User' name='[usr:CTR - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Impressions - Advertiser Segment]' derivation='User' name='[usr:Impressions - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser Segment:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impressions - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:CTR - LCI Advertiser Segment:qk]' scope='rows' value='CTR' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:CTR - LCI Advertiser Segment:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:CTR - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[aft_advertiser_report_with_benchmarking].[:Measure Names]' value='Color Legend'>
              <formatted-text>
                <run>Color Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:CTR - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:CTR - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:CTR - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Clicks'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' name='[Clicks - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' name='[Clicks - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Clicks - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Clicks] END' />
            </column>
            <column datatype='real' name='[Clicks - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6300801161443969] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Clicks - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks - Advertiser]' derivation='Sum' name='[sum:Clicks - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR - Advertiser Segment]' derivation='User' name='[usr:CTR - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Clicks - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:Clicks - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Clicks - Advertiser Segment]' derivation='User' name='[usr:Clicks - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Clicks - LCI Advertiser Segment]' derivation='User' name='[usr:Clicks - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Clicks - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Clicks - Advertiser Segment:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Clicks - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[aft_advertiser_report_with_benchmarking].[:Measure Names]' value='Color Legend'>
              <formatted-text>
                <run>Color Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:Clicks - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:Clicks - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:Clicks - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Data'>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Advertiser Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Average Position]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Auction Position Sum])/sum([Impressions])' />
            </column>
            <column datatype='real' default-format='C1033%' name='[CPC]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Spend])/sum([Clicks])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[CTR]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
            </column>
            <column datatype='integer' name='[Click Conversions]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Click Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Clicks]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Exposed Revenue]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions])/sum([Pages Served])' />
            </column>
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Pages Served]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend]' role='measure' type='quantitative'>
            </column>
            <column caption='Exposed Conversions' datatype='integer' name='[View Conversions]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Advertiser Segment]' derivation='None' name='[none:Advertiser Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pages Served]' derivation='None' name='[none:Pages Served:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Click Conversions]' derivation='Sum' name='[sum:Click Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Click Revenue]' derivation='Sum' name='[sum:Click Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exposed Revenue]' derivation='Sum' name='[sum:Exposed Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pages Served]' derivation='Sum' name='[sum:Pages Served:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spend]' derivation='Sum' name='[sum:Spend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[View Conversions]' derivation='Sum' name='[sum:View Conversions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Average Position]' derivation='User' name='[usr:Average Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CPC]' derivation='User' name='[usr:CPC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR]' derivation='User' name='[usr:CTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impression Share]' derivation='User' name='[usr:Impression Share:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Pages Served:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Average Position:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Click Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:View Conversions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Click Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Exposed Revenue:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Pages Served:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Average Position:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CTR:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Clicks:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:CPC:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Click Conversions:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:View Conversions:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Click Revenue:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Exposed Revenue:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[aft_advertiser_report_with_benchmarking].[none:Pages Served:qk]' included-values='non-null'>
          </filter>
          <sort class='natural' column='[aft_advertiser_report_with_benchmarking].[tdy:Date:ok]' direction='DESC' />
          <filter class='quantitative' column='[aft_advertiser_report_with_benchmarking].[usr:CTR:qk]' included-values='in-range'>
            <min>0.10000000000000001</min>
            <max>0.58333333333333337</max>
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Pages Served:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:CTR:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[aft_advertiser_report_with_benchmarking].[:Measure Names]' value='74' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[aft_advertiser_report_with_benchmarking].[:Measure Names]' value='52' />
            <format attr='width' field='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' value='220' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[aft_advertiser_report_with_benchmarking].[:Measure Names]' value='center' />
            <format attr='vertical-align' field='[aft_advertiser_report_with_benchmarking].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[aft_advertiser_report_with_benchmarking].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[tdy:Date:ok] / ([aft_advertiser_report_with_benchmarking].[none:Advertiser Segment:nk] / [aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]))</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Impression Share'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Impressions - Advertiser])/sum([Pages Served - Advertiser])' />
            </column>
            <column datatype='real' default-format='p0.0%' name='[Impression Share - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Domestic Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Hotel Chain] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - International Airline] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Meta] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_5910801162545748] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 1] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Tier 2] END)))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))-WINDOW_STDEVP(SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))/SUM((IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Pages Served - Other] END)))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Impression Share - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:Impression Share - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Impression Share - Advertiser Segment]' derivation='User' name='[usr:Impression Share - Advertiser Segment:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Impression Share - Advertiser]' derivation='User' name='[usr:Impression Share - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impression Share - LCI Advertiser Segment]' derivation='User' name='[usr:Impression Share - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share - Advertiser Segment:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impression Share - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' scope='rows' value='Impression Share' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' max='1.0447073829531812' min='0.79220738295318127' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' field-type='quantitative' max='1.01' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]' value='p0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]' value='Display Type'>
              <formatted-text>
                <run>Display Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:Impression Share - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:Impression Share - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Impressions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Impressions - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' name='[Impressions - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='integer' name='[Impressions - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Impressions] END' />
            </column>
            <column datatype='real' name='[Impressions - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END)),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impressions - Advertiser]' derivation='Sum' name='[sum:Impressions - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Impressions - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:Impressions - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Impressions - Advertiser Segment]' derivation='User' name='[usr:Impressions - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Impressions - LCI Advertiser Segment]' derivation='User' name='[usr:Impressions - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Impressions - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Impressions - Advertiser Segment:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Impressions - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impressions - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impressions - LCI Advertiser Segment:qk]' scope='rows' value='Impressions' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impressions - LCI Advertiser Segment:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Impressions - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value=' ' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:Impressions - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:Impressions - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1.0798925161361694' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:Impressions - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Spend'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>Sheet Name</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='aft_advertiser_report_with_benchmarking' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='aft_advertiser_report_with_benchmarking'>
            <column datatype='string' name='[Advertiser Name]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Country]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Date Axis]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;,[Date]))' />
            </column>
            <column datatype='string' name='[Date Filter]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([Date Axis]) &gt;= [First Date to Show] AND ATTR([Date Axis]) &lt;= [Last Date to Show] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Display Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DESKTOP&quot;' value='Desktop' />
                <alias key='&quot;MOBILE&quot;' value='Mobile' />
              </aliases>
            </column>
            <column datatype='real' name='[Impressions - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_6810801162015860] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Impressions - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Product Category Filter]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Product Category]&#13;&#10;WHEN &quot;Total&quot; THEN &quot;Keep&quot;&#13;&#10;ELSE IF [Product Category Type] = [Parameters].[Product Category] THEN &quot;Keep&quot; ELSE &quot;Remove&quot; END&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend - 2 STDEV Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN 2*WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend - Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name])=[Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend - Advertiser]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Advertiser Name] = [Parameters].[Advertiser] THEN [Spend] END' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Spend - LCI Advertiser Segment]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Comparison Segment] = &quot;Advertiser&apos;s Segment&quot; THEN&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE ATTR([Advertiser Segment])&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END)),0)&#13;&#10;&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;ELSE&#13;&#10;&#9;IF ATTR([Advertiser Name]) = [Parameters].[Advertiser] THEN&#13;&#10;&#9;&#9;CASE [Parameters].[Comparison Segment]&#13;&#10;&#9;&#9;&#9;WHEN &quot;Total Network&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Domestic Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Domestic Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Hotel Chain&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Hotel Chain] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;International Airline&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - International Airline] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Meta&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Meta] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;OTA Budget&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Calculation_1530801162615888] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 1&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 1] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Tier 2&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Tier 2] END)),0)&#13;&#10;&#9;&#9;&#9;WHEN &quot;Other&quot; THEN MAX(WINDOW_AVG(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END))-WINDOW_STDEVP(SUM(IF [Advertiser Name] != [Parameters].[Advertiser] THEN [Spend - Other] END)),0)&#9;&#9;END&#13;&#10;&#9;END&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Advertiser Name]' derivation='None' name='[none:Advertiser Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Display Type]' derivation='None' name='[none:Display Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category Filter]' derivation='None' name='[none:Product Category Filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Spend - Advertiser]' derivation='Sum' name='[sum:Spend - Advertiser:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Axis]' derivation='Day-Trunc' name='[tdy:Date Axis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Filter]' derivation='User' name='[usr:Date Filter:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[First Date to Show]' ordering-type='Rows' />
              <table-calc field='[aft_advertiser_report_with_benchmarking].[Last Date to Show]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Impressions - Advertiser Segment]' derivation='User' name='[usr:Impressions - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Spend - 2 STDEV Advertiser Segment]' derivation='User' name='[usr:Spend - 2 STDEV Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Spend - Advertiser Segment]' derivation='User' name='[usr:Spend - Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Spend - LCI Advertiser Segment]' derivation='User' name='[usr:Spend - LCI Advertiser Segment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[aft_advertiser_report_with_benchmarking].[Advertiser Name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend - Advertiser:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[aft_advertiser_report_with_benchmarking].[usr:Spend - Advertiser Segment:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[sum:Spend - Advertiser:qk]&quot;</bucket>
              <bucket>&quot;[aft_advertiser_report_with_benchmarking].[usr:Impressions - Advertiser Segment:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]'>
            <groupfilter function='member' level='[usr:Date Filter:nk]' member='&quot;Keep&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[aft_advertiser_report_with_benchmarking].[:Measure Names]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Date:qk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[usr:Date Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</column>
            <column>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Spend - LCI Advertiser Segment:qk]' scope='rows' value='Cost' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Spend - LCI Advertiser Segment:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[usr:Spend - LCI Advertiser Segment:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value=' ' />
            <format attr='subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[aft_advertiser_report_with_benchmarking].[usr:Spend - LCI Advertiser Segment:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[aft_advertiser_report_with_benchmarking].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[aft_advertiser_report_with_benchmarking].[usr:Spend - LCI Advertiser Segment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[aft_advertiser_report_with_benchmarking].[usr:Spend - 2 STDEV Advertiser Segment:qk]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d7d7d7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[aft_advertiser_report_with_benchmarking].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[aft_advertiser_report_with_benchmarking].[:Measure Names]' />
              <lod column='[aft_advertiser_report_with_benchmarking].[none:Advertiser Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([aft_advertiser_report_with_benchmarking].[usr:Spend - LCI Advertiser Segment:qk] + [aft_advertiser_report_with_benchmarking].[Multiple Values])</rows>
        <cols>[aft_advertiser_report_with_benchmarking].[tdy:Date Axis:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Snapshot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Advertiser]</run>
            <run>&gt;</run>
            <run> Topline Report with Segment Benchmark</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='850' maxwidth='1200' minheight='850' minwidth='1200' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4707' id='18' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95293' id='16' param='horz' type='layout-flow' w='100000' x='0' y='4707'>
              <zone h='95293' id='13' param='vert' type='layout-flow' w='86667' x='0' y='4707'>
                <zone h='95293' id='4' param='horz' type='layout-flow' w='86667' x='0' y='4707'>
                  <zone h='95293' id='2' type='layout-basic' w='86667' x='0' y='4707'>
                    <zone h='47528' id='1' name='Impression Share' show-title='true' w='43346' x='0' y='4707'>
                    </zone>
                    <zone h='47765' id='8' name='CTR' show-title='true' w='43334' x='0' y='52235'>
                    </zone>
                    <zone h='47765' id='10' name='CPC' show-title='true' w='43333' x='43334' y='52235'>
                    </zone>
                    <zone h='47528' id='14' name='Average Position' show-title='true' w='43321' x='43346' y='4707'>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='95293' id='15' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='4707'>
                <zone h='7295' id='17' name='CTR' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' w='13333' x='86667' y='4707'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Topline'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Advertiser]</run>
            <run>&gt;</run>
            <run> Topline Report with Segment Benchmark</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='1700' maxwidth='1400' minheight='1700' minwidth='1400' />
      <zones>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='26' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2352' id='25' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='97648' id='13' param='vert' type='layout-flow' w='100000' x='0' y='2352'>
              <zone h='97648' id='4' param='horz' type='layout-flow' w='100000' x='0' y='2352'>
                <zone h='97648' id='2' type='layout-basic' w='86214' x='0' y='2352'>
                  <zone h='23824' id='1' name='Impression Share' show-title='true' w='43107' x='0' y='2352'>
                  </zone>
                  <zone h='22118' id='7' name='Impressions' show-title='true' w='43071' x='0' y='51000'>
                  </zone>
                  <zone h='24824' id='8' name='CTR' show-title='true' w='43071' x='0' y='26176'>
                  </zone>
                  <zone h='24824' id='10' name='CPC' show-title='true' w='43143' x='43071' y='26176'>
                  </zone>
                  <zone h='23824' id='14' name='Average Position' show-title='true' w='43107' x='43107' y='2352'>
                  </zone>
                  <zone h='22118' id='22' name='Clicks' show-title='true' w='43143' x='43071' y='51000'>
                  </zone>
                  <zone h='26882' id='11' name='Spend' show-title='true' w='43071' x='0' y='73118'>
                  </zone>
                  <zone h='26882' id='23' name='Blank' w='43143' x='43071' y='73118'>
                  </zone>
                </zone>
                <zone fixed-size='193' h='97648' id='3' is-fixed='true' param='vert' type='layout-flow' w='13786' x='86214' y='2352'>
                  <zone h='2999' id='21' name='Impression Share' param='[aft_advertiser_report_with_benchmarking].[none:Country:nk]' type='filter' w='13786' x='86214' y='2352'>
                  </zone>
                  <zone h='2941' id='6' param='[Parameters].[Advertiser]' type='paramctrl' w='13786' x='86214' y='5351'>
                  </zone>
                  <zone h='2941' id='18' param='[Parameters].[Comparison Segment]' type='paramctrl' w='13786' x='86214' y='8292'>
                  </zone>
                  <zone h='1235' id='16' type='text' w='13786' x='86214' y='11233'>
                    <formatted-text>
                      <run bold='true' fontalignment='0'>Advertiser Segment</run>
                    </formatted-text>
                  </zone>
                  <zone h='1705' id='15' name='Advertiser Segment' w='13786' x='86214' y='12468'>
                    <layout-cache fixed-size-h='21' fixed-size-w='1' type-h='fixed' type-w='fixed' />
                  </zone>
                  <zone h='2941' id='20' param='[Parameters].[Product Category]' type='paramctrl' w='13786' x='86214' y='14173'>
                  </zone>
                  <zone h='3823' id='17' name='Impression Share' param='[aft_advertiser_report_with_benchmarking].[none:Date:qk]' type='filter' w='13786' x='86214' y='17114'>
                  </zone>
                  <zone h='3646' id='19' name='CTR' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' w='13786' x='86214' y='20937'>
                  </zone>
                  <zone h='4823' id='24' name='Impression Share' param='[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]' type='filter' w='13786' x='86214' y='24583'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impressions'>
      <cards>
        <edge name='left'>
          <strip size='203'>
            <card size='38' type='pages' />
            <card size='110' type='filters' />
            <card size='217' type='marks' />
            <card size='31' type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' size='40' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
            <card param='[aft_advertiser_report_with_benchmarking].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Product Category]' type='parameter' />
            <card mode='compact' param='[Parameters].[Comparison Segment]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_advertiser_report_with_benchmarking].[none:Product Category Filter:nk]</field>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[none:Date:qk]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:15]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:9]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Impression Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
            <card param='[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]</field>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[none:Date:qk]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:15]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:9]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Average Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
            <card mode='compact' param='[Parameters].[Comparison Segment]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[none:Date:qk]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Clicks'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</field>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[none:Date:qk]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CTR'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_advertiser_report_with_benchmarking].[none:Country:nk]</field>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[none:Date:qk]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPC'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[none:Date:qk]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Spend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[none:Date:ok]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk:4]</field>
          <field>[mysql.41110.406748310183].[usr:Date Filter:nk]</field>
          <field>[mysql.41110.406748310183].[yr:Date Axis:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Advertiser Segment'>
      <cards>
        <edge name='left'>
          <strip size='165'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Advertiser]' type='parameter' />
            <card param='[aft_advertiser_report_with_benchmarking].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Blank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Topline'>
      <active id='6' />
      <zones>
        <zone name='Impression Share'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Impressions'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CTR'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CPC'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Average Position'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Clicks'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Spend'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='checkdropdown' name='Impression Share' param='[aft_advertiser_report_with_benchmarking].[none:Country:nk]' type='filter' />
        <zone mode='compact' name='' param='[Parameters].[Advertiser]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Comparison Segment]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Product Category]' type='paramctrl' />
        <zone name='Impression Share' param='[aft_advertiser_report_with_benchmarking].[none:Date:qk]' show-null-ctrls='false' type='filter' />
        <zone name='CTR' pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Snapshot'>
      <zones>
        <zone name='Impression Share'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CTR'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CPC'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Average Position'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CTR' pane-specification-id='4' param='[aft_advertiser_report_with_benchmarking].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Data'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Product Category]' type='parameter' />
            <card param='[aft_advertiser_report_with_benchmarking].[none:Date:qk]' show-null-ctrls='false' type='filter' />
            <card param='[aft_advertiser_report_with_benchmarking].[none:Display Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[aft_advertiser_report_with_benchmarking].[none:Pages Served:qk]</field>
          <field>[mysql.41110.406748310183].[:Measure Names]</field>
          <field>[mysql.41110.406748310183].[none:Advertiser Name:nk]</field>
          <field>[mysql.41110.406748310183].[none:Advertiser Segment:nk]</field>
          <field>[mysql.41110.406748310183].[none:Dataset:nk]</field>
          <field>[mysql.41110.406748310183].[tdy:Date:ok]</field>
          <field>[mysql.41110.406748310183].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Impressions' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impression Share' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAHWUlEQVR4nO3d3W9bZx3A8ec4dmznxY5fajsvJmvWpFNhtGqm
      BPVFQ0CnooF2M2kSFyAkbhB/DiAu4ApxMU1ColtFt6lZm27a2ibplNpL67QNVebEL/FbHOel
      tuPDxSguSZ5B+Am7R3w/l20unouvznmOf8d+DNM0FfDfsrV7AbA2u1LKNM18Pv9v/9Q0zXK5
      7PV6//ergmUYB93CzFyhUN0odfmOpNI5p63hCx3xebxfdRYMBtuwTDyv7Pv/aXen8vald8dC
      obnrvwueOT9YLWXqzh+9/mNV2zIMo/VLxPPsgD1Qh6v328dfdDvV6fNn3co5ee5cKBDIpDNc
      e7Dfgbewg3ELw348hUGEgCBCQBAhIIgQEEQICCIEBBECgggBQYSAIEJAEDlgGq+UUqZ59a/v
      KvPJVu8xezrefez0q+Pfau3CYA2agJSy2YzYQsro3bgwcWJ6ZsbT6RiK+HmdA3top/HLS4le
      fzi5ujY8GN7ZLHZ6+71dDqbx2IPXOSDCJhoiBAQRAoIIAUGEgCBCQBAhIIgQEEQICCIEBBHt
      NH7u1sfuHs9KoepVFU909KWj0dYuDNagvQKVCuU//eaPKxtpZVanp64+Wk7lcrlWrgyWoBum
      mndnP3O4u5P56vhoJJkr9gUHopEAw1TswTQeImyiIUJAECEgiBAQRAgIIgQEEQKCCAFBhIAg
      QkAQ0X61eeXxg87uvoePV8K+nq+OOmjlsmAV2tc5Pvv0+npxvWtksrA0n+WoA2hob2EBf394
      +Ju27dIERx1Aj2k8RNhEQ4SAIEJAECEgiBAQRAgIIgQEEQKCCAFBhIAgQkAQ0b3OYV774FJl
      Y2e9o89fzXLUAXQ0VyBTFfPFL+bubasnLx4fvXdn5vNYgh9XwH7aaXzyb4vuvlB2rTAYDnLU
      AXR4nQMibKIhQkAQISCIEBBECAgiBAQRAoIIAUGEgCBCQBDRfjc+dudmubK5Zfd7d0scdQAd
      zRXIMFwOm8cXWl1JNjjqAHran3dxeiJBtz1drIyNRbv8Aw6HIxgM5PP5Vi4Ozz+m8RBhEw0R
      AoIIAUGEgCBCQBAhIIgQEEQICCIEBBECgsjXTONvu3zher3htDU46gA6moAMIxzw3Lj+adHb
      PVgtZTjqABraW1imXPvuqyfdyjnJUQfQYxoPETbRECEgiBAQRAgIIgQEEQKCCAFBhIAgQkAQ
      ISCIEBBEtEcd3LwxZVO1tBm2p+McdQAd3ftA6mFicf2Jbbdz9cLEiemZGU+nYyji53UO7KGd
      xqeXHymXZy1XGh4Mc9QBdHidAyJsoiFCQBAhIIgQEEQICCIEBBECgggBQYSAIEJAENFO4xfm
      Z2umkS03vKrCUQfQ0U7j5+fm15Ilz/iYt6dzeuqq47WLHredaTz20P06hzp5+uUnp4xcxTg2
      GnFx1AE0mMZDhE00RAgIIgQEEQKCCAFBhIAgQkAQISCIEBBE/iWgYrlSKlfatRRYUXMW9slM
      LF3YCh8Jnj/do5R6/GDBcHavZophXw9HHUCnGdBKtjAXW/zFWz9USillLtyLOQ1b1h4pLM1n
      OeoAGv+4he3u7g5H/L/8yetjR4eUUspUg/3RbaPHtl2a4KgD6DGNh0hzE524O/eH3/86kdlu
      42pgOc2AutxOX2jkhaCrjauB5TQDMurbH314JVngCoRDaAa02ei+eP5Uw+CjRRxCMxdbvVLv
      GfC7CAiH8DQX04zdT9z55KOd3bYuB1bTvN7UdtbPTEymy9U2rgaW0/wcqNFoNBoNu133VUM+
      B8IBmlegh7HZy+9/mK9wBcIhNAOqVzevvX85U6m3cTWwnGZAoYEXvv/axbCns42rgeU83fGY
      ZiJ+573LV8YmfxDositlTn3wXsDji6c3/dUsRx1A5+kVyDAGoiOvnHzZ3mEopZSpiqtfTt+4
      ncrnQv3h5MNE/P5SG1eJ51bzmcvhcvb0et2ODqWUMow3f/6rf/7XK0oppf7zuT3+fzT3QIVM
      aj7+eX6LTTQO4ZlpfK/v1Pi5b3gdbVwNLKcZkNPltDdqmzXuUziEZ17n2K2vraXj9xbbuBpY
      TjOg9XwmmSsfPzbSxtXAcp55ecPZe/bsGY9bOwsD9mu+zlGuVFStyqM6DoVvZUCE9w8hQkAQ
      ISCIaJ+5sl/GZ2/drx8ZsafjTOOhozvqwJydvZ1YrHcU1i9MnJiemfF0OoYifn5cAXton8JM
      s5ZP51PFjeHB8M5msdPb7+1y8BSGPXiMhwibaIgQEEQICCIEBBECgggBQYSAIEJAECEgiBAQ
      RLTT+J311MKDVH6r7lUVT3T0paPRVi4LVqG5ApnmXy69/c5v/7yykVZmdXrq6qPlVC6Xa+3a
      YAFfM43fuj+XSG7Vx0cjyVyxLzgQjQQYpmIPpvEQYRMNEQKCCAFBhIAgQkAQISCIEBBECAgi
      BAQRAoIIAUFE+934j6+882ApudIx5Ct+Ef3OxTe+d6a1C4M1aK9AnuBQhzfi66i89bOfLt+9
      ee1WjNc5sN/fAUXZ3CP5b+GCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Position' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Clicks' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CTR' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CPC' width='192'>
      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
      bzrq1TG36HfBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Spend' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='64' name='Advertiser Segment' width='117'>
      iVBORw0KGgoAAAANSUhEUgAAAHUAAABACAYAAAAksziiAAAABHNCSVQICAgIfAhkiAAAAAlw
      SFlzAAAOvAAADrwBlbxySQAAA2ZJREFUeJztnT9u4kAUh39e7SFAgiJFCkdcAkdb2O6QcoBg
      K+U2djhEjJstIxwOEImOcRFhLrGKixRbBAnfYrawsR1DIJCJIj29T0Ly3/F78828sWgMMAzD
      MAyjAq15QEopvyMQRh0/vjsARj0slSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAs
      lSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAs
      lSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAslSAs
      lSCnS11FsDUNWv1nRcgUBnccCfzN81cR7JNiSeBrNqJV7dC+turnTn6mej43U80J1lJCFr/1
      1Qzt70ps9Q/pZrvjYC4ctI5tYymQ3upIn2oZfLStU5/5BSgtv63rCBPMMN+M9Dez2UdSXpnP
      qmiUn7OnGZJiWxtVV725vxwsGSKrqg7+sjh240LEbj6omrNm6X+gmmSIghSD3z70x3EVa3M2
      jnz4zTh3XWf58Lfi3JeXOhSvqS2c9QTSF2DT0XpSzOKHFJf1johdpKaElAvowzZEse0FoujQ
      DNHNDIPXqgo40wxYzTFDVSEsJABacO4nsMwJ1luzJYFvpJgU7Sx6bt5Ok9Ucs54Hp9OCfZUi
      3HUNAAQp9FcJeWfs74o4BG6LKpZ4CIPaoNyVl0K+7kWp6Hy/n++2fg1glcIAwIPV37W94Rlp
      LOB28xHdHgqI9BnonEGPXbSLtc/oH+jcpUB468Hp5LvGncT8ertIJn9c6KZRxorH+e4ZZA5g
      dw7k3szpXId1KC+FKJaa4d9fC/r5O6dNHRdHtedhUVuz89lhYCwl5OsAs66q8pVABEBoFCWx
      m5fy8fLwne+yN9ddealDqdRs6sBFMZI7NgaoOiZ7mkH0zo54kbiAboYQxf3JKF97SzoO5nIB
      L06xd5z3LXhBWL7RZlN7az3MpiHSh3XVyZuSGSc7GvwsB/JSwM9P3R27aGtutf9mTcvXObur
      FV808rCQx4zIxv3mBOu7FrKpjfZQlFd5iYQBFGX5Em0LWN/X2zEwTgS0rga3jLEeR4LxUIcn
      G8Ot72MSOIheBkfEfHpeKuEvSBGE/1EiyH9+/Yg3cQzkJgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Blank' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAACvElEQVR4nO3dL2hVYRzH4feIwcXbZjAsuigI7jLLBMHJymwO
      BrJZnFg0iVGbf8rA4lVQ7oLiDY57DYJlshXBoLDmgsEbBA3CBg6Owa9iEg1y9fI84cB54YUf
      nA/vG09V13WBUvYMegD+FVIgpEBIgZACIQVCCoQUCCkQUiCkQEiBkAIhBUIKhBQIKRBSIKRA
      SIGQAiEFQgqEFAgpEFIgpEBIgZACIQVCCoQUCCkQUiCkQEiBkAIhBUIKhBQIKRBSIKRASIGQ
      AiEFQgrE3kEP8Gd6q71BjzC0/rMUSinTM9ODHmE4uSAIKRBSIKRASIGQAiEFQgqEFAgpEFIg
      pEBIgZACIQVCCoQUCCkQUiCkQEiBkAIhBUIKhBQIKRBSIKRASIGQAiEFQgqEFAgpEFIgpEBI
      gZACIQVCCoQUCCkQUiCkQEhhSO1uXNpfNW9t5fXpYjVxY+uXO6QwpJ612jNLY/dXNn97hxSG
      0k7nQXdu/vqpg8utF9/XdjdvHG9UVWP8dGtzt5TyaeNyszFSVY3xxUf9IoXh9Ln3+PX5ucl9
      s+fmep2NLL5svz+zVW+vz20tnr/XLy+uzt4bb72rt5/OPp+/2PlcSv1f6T7pDnqEf9/HOyd+
      7mLf6c523VsoZaH7pa7r+u3NiXK2++358zanwtDpP155dXH9xxdeW3p+u90vpZR269GnsrO5
      8nBj6vChscPN0dVO50PZeXOtWR1r9V0QQ6e/urI+MzXx4/3I1Mm1VrtfSplurB0aGWm2x+4s
      nxktk1d6F94vHKhGjrbH7i4vjJaqruvBjf3Heqs9/476S5wKhBQIKRBSIKRASIGQAiEFQgqE
      FAgpEFIgpEBIgZACIQVCCoQUCCkQUiCkQEiBkAIhBUIKhBQIKRBSIKRASIGQAiEFQgqEFAgp
      EFIgpEBIgZACIQVCCoQUiK9wHGV4jcpbgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Topline' width='192'>
      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
      Hvj4v2zO2fiKQBBEIpEopjsjCAI6xXD9UTga36TmpATyzMZjmtYmGb3NZ+NpmiZJErrVhckO
      3gAACILw+/0FKhZuMfJYIIXO9Ff3fwEA8MChxwAAji/+b/j+pra0eQmFQt///ve/8pWvrHdD
      NgQzMzMkSXLRqSJd+23tAw0ODvb39w8NDfX0rPK8M6xyXNgxguP2ZDJZ2UZWGy5+AftrzrXf
      RgJKJpMMw5TQww4ODj7wwANPP/30E088UX4zNst0Ww6FQ2WQnBg65+TpdLrNLSD4W4F+awm7
      T05O3nffff39/QMDA319fZVu3UYnb+w+L1xAP+dHsvkEBI2NQCCAweJy3LJYLCaTyVAUveuu
      u77zne90dnaKRKus5QCT1MAHk2jQaSi5AVuAmZmZTSYgr9dLkmRF8gyHhoa6u7sBAHq9/vrr
      r3/kkUeam5sPHjxYX1+/6r5rmhvfpMDvWDigSpLkJhNQBRkaGtqzZw/8e//+/TfccMP4+LhA
      UNSDctthnqvI77gpHyyEs0hlhhVGR0fb25eqlSMI4nA4DAZD2a3bXmxKAcGh5koCSqVSZ86c
      KRwDTCaTKIpWe7ZrvUjFw0OjkwAwg0NDHvdUIFLF6ndbsAubnZ3VarXnz5/v6OhYKVF/eHi4
      s7Ozxg2rGSlsWNYAAArOSURBVK6pyTPnpxtRz8t/mHS0qYTM6N7LLq7SRMIGskBwTqDMQFw6
      nY7H401NTR0dHSMjIysd7cSJE7t37y7nRBsZHMdTqSQlVukVGTGKGRrMOp2uSuZ2A1kgmLZX
      5gjL7XabzWYEQaRSqd1uHx8f7+7uRhCEoiin06lUKtVqtUKhmJ6ehkOwLYnJYr/3bjsA4J57
      u6p9rjwCYjOpf/u3n/z1X9216WbjKYqKRqMtLS3wpVKpVCgUHo9Hr9efP3++qamJZdn5+Xmn
      03nzzTcjSM1XoNiK5OnCAu5pMpnyhTbfbPz8/HxDQ0O2MiwWy+Li4tDQkNls1mq1Op2uvb39
      9OnTKpUqHl+fooJbjDwWSNfc9nd/1wY2xmx83uek8sKybCgUMpvN2W8KBAK73Z5MJuvq6uA7
      brcbQZCurq7h4WGbzYbjeJVavk3YQE50XuDjz36/HyqpQPA3FovJ5fLlkUCFQpEtvtOnT99+
      ++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
    </thumbnail>
    <thumbnail height='192' name='Snapshot' width='192'>
      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
      vgxBY9zDXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Data' width='192'>
      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
      asXO4/5/hTXK3mZUgL4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
